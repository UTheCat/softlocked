<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBXDB0C74C9A1B249369E6AFBBFDCD298A0">
		<Properties>
			<bool name="AllowThirdPartySales">false</bool>
			<token name="AnimationWeightedBlendFix">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="ClientAnimatorThrottling">0</token>
			<BinaryString name="CollisionGroupData">AQEABP////8HRGVmYXVsdA==</BinaryString>
			<Ref name="CurrentCamera">RBX9924F438B48C47658B0A3E3895280068</Ref>
			<double name="DistributedGameTime">0</double>
			<bool name="ExplicitAutoJoints">true</bool>
			<float name="FallenPartsDestroyHeight">-500</float>
			<Vector3 name="GlobalWind">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<float name="Gravity">196.199997</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="HumanoidOnlySetCollisionsOnStateChange">0</token>
			<token name="InterpolationThrottling">0</token>
			<token name="LevelOfDetail">0</token>
			<token name="MeshPartHeadsAndAccessories">0</token>
			<CoordinateFrame name="ModelMeshCFrame">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
			<Vector3 name="ModelMeshSize">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<token name="ModelStreamingMode">0</token>
			<string name="Name">Workspace</string>
			<bool name="NeedsPivotMigration">false</bool>
			<token name="PhysicsSteppingMethod">0</token>
			<Ref name="PrimaryPart">null</Ref>
			<token name="RejectCharacterDeletions">0</token>
			<token name="ReplicateInstanceDestroySetting">0</token>
			<token name="Retargeting">0</token>
			<token name="SignalBehavior">0</token>
			<int64 name="SourceAssetId">-1</int64>
			<token name="StreamOutBehavior">0</token>
			<bool name="StreamingEnabled">false</bool>
			<token name="StreamingIntegrityMode">0</token>
			<int name="StreamingMinRadius">64</int>
			<int name="StreamingTargetRadius">1024</int>
			<BinaryString name="Tags"></BinaryString>
			<bool name="TerrainWeldsFixed">true</bool>
			<bool name="TouchesUseCollisionGroups">false</bool>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000017036</UniqueId>
			<OptionalCoordinateFrame name="WorldPivotData">
				<CFrame>
					<X>0</X>
					<Y>74.1130676</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CFrame>
			</OptionalCoordinateFrame>
		</Properties>
		<Item class="Camera" referent="RBX9924F438B48C47658B0A3E3895280068">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<CoordinateFrame name="CFrame">
					<X>-10.0421352</X>
					<Y>27.0463448</Y>
					<Z>977.170471</Z>
					<R00>0.892192483</R00>
					<R01>0.102143273</R01>
					<R02>-0.439953804</R02>
					<R10>-7.45057971e-09</R10>
					<R11>0.974091768</R11>
					<R12>0.226153105</R12>
					<R20>0.451655358</R20>
					<R21>-0.201772094</R21>
					<R22>0.869077384</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">70</float>
				<token name="FieldOfViewMode">0</token>
				<CoordinateFrame name="Focus">
					<X>-9.16225624</X>
					<Y>26.5940533</Y>
					<Z>975.432373</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Camera</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018847</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX7C677B388DE9452884AD05D9EC349977">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">3</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">3</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>-8</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4284177243</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">3</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">3</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Baseplate</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">3</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018fc8</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">0</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>2048</X>
					<Y>16</Y>
					<Z>2048</Z>
				</Vector3>
			</Properties>
			<Item class="Texture" referent="RBX22AE9FD2B5A64746801C6E46CA3996BD">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Color3 name="Color3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="Face">1</token>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Texture</string>
					<float name="OffsetStudsU">0</float>
					<float name="OffsetStudsV">0</float>
					<int64 name="SourceAssetId">-1</int64>
					<float name="StudsPerTileU">8</float>
					<float name="StudsPerTileV">8</float>
					<BinaryString name="Tags"></BinaryString>
					<Content name="Texture"><url>rbxassetid://6372755229</url></Content>
					<float name="Transparency">0.800000012</float>
					<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000019256</UniqueId>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
		<Item class="Terrain" referent="RBX65F3CAE1068640E6A7FB99C37361111B">
			<Properties>
				<token name="AcquisitionMethod">0</token>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="Decoration">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<BinaryString name="MaterialColors"><![CDATA[AAAAAAAAan8/P39rf2Y/ilY+j35fi21PZmxvZbDqw8faiVpHOi4kHh4lZlw76JxKc3trhHta
gcLgc4RKxr21zq2UlJSM]]></BinaryString>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Terrain</string>
				<BinaryString name="PhysicsGrid">AgMAAAAAAAAAAAAAAAA=</BinaryString>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="ShorelinesUpgraded">false</bool>
				<BinaryString name="SmoothGrid">AQU=</BinaryString>
				<bool name="SmoothVoxelsUpgraded">false</bool>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">0ee705e8faf759c20180fd200001924a</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Color3 name="WaterColor">
					<R>0.0470588282</R>
					<G>0.329411775</G>
					<B>0.360784322</B>
				</Color3>
				<float name="WaterReflectance">1</float>
				<float name="WaterTransparency">0.300000012</float>
				<float name="WaterWaveSize">0.150000006</float>
				<float name="WaterWaveSpeed">10</float>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBXDA231240FA384B8CAD16B047F7023B57">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">MainSpawn</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018867</UniqueId>
			</Properties>
			<Item class="SpawnLocation" referent="RBX08CB1EB13F5E468C8550DCF97689AD81">
				<Properties>
					<bool name="AllowTeamChangeOnTouch">false</bool>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>0</X>
						<Y>-100</Y>
						<Z>-28</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<int name="Duration">0</int>
					<bool name="Enabled">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">1584</token>
					<string name="MaterialVariantSerialized"></string>
					<string name="Name">Spawn</string>
					<bool name="Neutral">true</bool>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<int name="TeamColor">194</int>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000019193</UniqueId>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>94</X>
						<Y>1</Y>
						<Z>92</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX923E87E28E594FF89306D6470E19177B">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Decor</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018868</UniqueId>
				</Properties>
				<Item class="Part" referent="RBX9906736D8BB44DF7946B5295E9C83626">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>-100</Y>
							<Z>20</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4279308561</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">288</token>
						<string name="MaterialVariantSerialized"></string>
						<string name="Name">Part</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018fc9</UniqueId>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>100</X>
							<Y>100</Y>
							<Z>4</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Part" referent="RBX1D0D59AE15CD458D8C54832D0D39BD4C">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>48.5</X>
							<Y>-100</Y>
							<Z>-28</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4279308561</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">288</token>
						<string name="MaterialVariantSerialized"></string>
						<string name="Name">Part</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018fca</UniqueId>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>3</X>
							<Y>100</Y>
							<Z>100</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Part" referent="RBXEBCFC8EDE1AC416AB7F6ECB3177E698A">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-48.5</X>
							<Y>-100</Y>
							<Z>-28</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4279308561</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">288</token>
						<string name="MaterialVariantSerialized"></string>
						<string name="Name">Part</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018fcb</UniqueId>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>3</X>
							<Y>100</Y>
							<Z>100</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Part" referent="RBX2202FB5F19514204A1153481F9FD9518">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>-100</Y>
							<Z>-76</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4279308561</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">288</token>
						<string name="MaterialVariantSerialized"></string>
						<string name="Name">Part</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018fcc</UniqueId>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>100</X>
							<Y>100</Y>
							<Z>4</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Part" referent="RBXF4ED0351192F4F43AD7576A0A840B4A7">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>-54.5</Y>
							<Z>-28</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4279308561</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">288</token>
						<string name="MaterialVariantSerialized"></string>
						<string name="Name">Part</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018fcd</UniqueId>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>100</X>
							<Y>9</Y>
							<Z>100</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Part" referent="RBX6973A3D8159343CC9A7C8B77EB3995B1">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>-145.5</Y>
							<Z>-28</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4279308561</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">288</token>
						<string name="MaterialVariantSerialized"></string>
						<string name="Name">Part</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018fce</UniqueId>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>100</X>
							<Y>9</Y>
							<Z>100</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX17FB99BF7D214045A0E7ED6AB14562D4">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Areas</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018869</UniqueId>
			</Properties>
		</Item>
		<Item class="Model" referent="RBXE6165CF8A1C24DB8913FD3FF3F05E712">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">Portals</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">079dd8a1bab63e0a024846cb00234c74</UniqueId>
				<OptionalCoordinateFrame name="WorldPivotData">
					<CFrame>
						<X>13.000248</X>
						<Y>6.5</Y>
						<Z>953.499512</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CFrame>
				</OptionalCoordinateFrame>
			</Properties>
			<Item class="Model" referent="RBX4F832E0476F64E9B9C79897A5D7CDF4C">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<token name="LevelOfDetail">0</token>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">ExampleTower</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb3c</UniqueId>
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>13.0000029</X>
							<Y>7.5</Y>
							<Z>952.499939</Z>
							<R00>0.999999464</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>0.999999285</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX3FCA7BD7DA5F4ACC9A207976784367F1">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">3</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">3</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>15.0004902</X>
							<Y>12</Y>
							<Z>952.499329</Z>
							<R00>0.999999464</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>0.999999285</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4294498669</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">3</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">3</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized"></string>
						<string name="Name">CreatorsBox</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">3</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb3d</UniqueId>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>2</X>
							<Y>2</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SurfaceGui" referent="RBX64E93984DBB34022837B043E1ECF45A7">
						<Properties>
							<bool name="Active">true</bool>
							<Ref name="Adornee">null</Ref>
							<bool name="AlwaysOnTop">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<float name="Brightness">1</float>
							<Vector2 name="CanvasSize">
								<X>200</X>
								<Y>200</Y>
							</Vector2>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Enabled">true</bool>
							<token name="Face">2</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LightInfluence">1</float>
							<string name="Name">SurfaceGui</string>
							<float name="PixelsPerStud">50</float>
							<bool name="ResetOnSpawn">true</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<token name="SizingMode">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="ToolPunchThroughDistance">0</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb3e</UniqueId>
							<token name="ZIndexBehavior">0</token>
							<float name="ZOffset">0</float>
						</Properties>
						<Item class="TextLabel" referent="RBXBC3C43916CFF4D87A0D6E957DA47E64E">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/ComicNeueAngular.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/ComicNeue-Angular-Bold.ttf</url></CachedFaceId>
								</Font>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">TextLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>1</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">By: udev2192</string>
								<Color3 name="TextColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb3f</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Model" referent="RBX6DB8037DCA0F4446B2F92CF16054FD9C">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="ModelStreamingMode">0</token>
						<string name="Name">Decor</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb40</UniqueId>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>13.000247</X>
								<Y>4.00001144</Y>
								<Z>953.499512</Z>
								<R00>0.999999464</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>0.999999285</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="Part" referent="RBX9E050BA4EBDE43BCAD211DD0A4929D26">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>13.0000029</X>
								<Y>7.5</Y>
								<Z>952.499939</Z>
								<R00>0.999999464</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>0.999999285</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.200000003</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb41</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>6</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBXB0EAB312F3EC4895BD7BB988440B0FC5">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>9.000494</X>
								<Y>3.00000191</Y>
								<Z>952.499329</Z>
								<R00>0.999999464</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>0.999999285</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.200000003</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb42</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>2</X>
								<Y>6</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX9F71079A4A684153AE9D19F8373480D6">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>17.0004902</X>
								<Y>3.00000191</Y>
								<Z>952.499695</Z>
								<R00>0.999999464</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>0.999999285</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.200000003</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb43</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>2</X>
								<Y>6</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="WedgePart" referent="RBX59E070C4F3BE4596AED2EBC6F104EED0">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>17.0004902</X>
								<Y>2</Y>
								<Z>953.999573</Z>
								<R00>-0.999999464</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>-0.999999285</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Wedge</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb44</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<Vector3 name="size">
								<X>2</X>
								<Y>4</Y>
								<Z>2</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="WedgePart" referent="RBX3C1FD716B21E4390B2FB4A334FDE18C9">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>17.0004902</X>
								<Y>7.00002289</Y>
								<Z>952.499695</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-0.999999464</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0.999999285</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Wedge</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.200000003</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb45</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<Vector3 name="size">
								<X>1</X>
								<Y>2</Y>
								<Z>2</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="WedgePart" referent="RBXB97D44AE8F834CD6B3F1A31B95AF2583">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>15.0004902</X>
								<Y>6.5</Y>
								<Z>952.499084</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>0.999999464</R02>
								<R10>0</R10>
								<R11>-1</R11>
								<R12>0</R12>
								<R20>0.999999285</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Wedge</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.200000003</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb46</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<Vector3 name="size">
								<X>1</X>
								<Y>1</Y>
								<Z>2</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="WedgePart" referent="RBX6F08413B5A8C407AA5006F5EDC309010">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>9.00000572</X>
								<Y>2</Y>
								<Z>954</Z>
								<R00>-0.999999464</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>-0.999999285</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Wedge</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb47</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<Vector3 name="size">
								<X>2</X>
								<Y>4</Y>
								<Z>2</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="WedgePart" referent="RBX5C132DEDE11A486FB9ACE33EB17F342C">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>11.0000029</X>
								<Y>6.5</Y>
								<Z>952.499023</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-0.999999464</R02>
								<R10>0</R10>
								<R11>-1</R11>
								<R12>0</R12>
								<R20>-0.999999285</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Wedge</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.200000003</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb48</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<Vector3 name="size">
								<X>1</X>
								<Y>1</Y>
								<Z>2</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="WedgePart" referent="RBXF3CF4B67BB4F4F52B301DE489F483AC4">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>9.000494</X>
								<Y>7.00002289</Y>
								<Z>952.499329</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>0.999999464</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>-0.999999285</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Wedge</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.200000003</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb49</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<Vector3 name="size">
								<X>1</X>
								<Y>2</Y>
								<Z>2</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX47792309CC164C7DBFF9E7483FB82323">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">3</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">3</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>13.0004911</X>
							<Y>9.5</Y>
							<Z>952.499329</Z>
							<R00>0.999999464</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>0.999999285</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4279970357</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">3</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">3</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized"></string>
						<string name="Name">NameBox</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">3</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb4a</UniqueId>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>10</X>
							<Y>3</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SurfaceGui" referent="RBXFD2BF2E374604A6CA5EEFCF25F3B0FCC">
						<Properties>
							<bool name="Active">true</bool>
							<Ref name="Adornee">null</Ref>
							<bool name="AlwaysOnTop">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<float name="Brightness">1</float>
							<Vector2 name="CanvasSize">
								<X>700</X>
								<Y>250</Y>
							</Vector2>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Enabled">true</bool>
							<token name="Face">2</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LightInfluence">1</float>
							<string name="Name">SurfaceGui</string>
							<float name="PixelsPerStud">50</float>
							<bool name="ResetOnSpawn">true</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<token name="SizingMode">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="ToolPunchThroughDistance">0</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb4b</UniqueId>
							<token name="ZIndexBehavior">0</token>
							<float name="ZOffset">0</float>
						</Properties>
						<Item class="TextLabel" referent="RBXB9A5BED475D44F30B661E1A9092D9B4C">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/ComicNeueAngular.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/ComicNeue-Angular-Bold.ttf</url></CachedFaceId>
								</Font>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">TextLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>1</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Example Tower</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb4c</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Part" referent="RBXB8F2964AA3944F81AF165E99F2CE3178">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">3</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">3</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>13.0004911</X>
							<Y>3.5</Y>
							<Z>952.249695</Z>
							<R00>-0.999999464</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>-1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>0.999999285</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4294967042</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">3</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">3</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">288</token>
						<string name="MaterialVariantSerialized"></string>
						<string name="Name">Teleport</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">3</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb4d</UniqueId>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>6</X>
							<Y>7</Y>
							<Z>0.400000006</Z>
						</Vector3>
					</Properties>
					<Item class="Decal" referent="RBXCA3CDE0D90804C769E536EA705732BA9">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Color3 name="Color3">
								<R>1</R>
								<G>1</G>
								<B>0.00784313772</B>
							</Color3>
							<token name="Face">2</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Decal</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="Texture"><url>http://www.roblox.com/asset/?id=1555158197</url></Content>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb4e</UniqueId>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBXA49440F970304033846ED4CD5F804B10">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">3</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">3</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>13.0004911</X>
							<Y>3.5</Y>
							<Z>952.249695</Z>
							<R00>-0.999999464</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>-1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>0.999999285</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<bool name="CanQuery">false</bool>
						<bool name="CanTouch">false</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4279308561</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">3</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">3</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">288</token>
						<string name="MaterialVariantSerialized"></string>
						<string name="Name">Particles</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">3</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">1</float>
						<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb4f</UniqueId>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>5</X>
							<Y>6</Y>
							<Z>0.5</Z>
						</Vector3>
					</Properties>
					<Item class="ParticleEmitter" referent="RBX6766BC493EA1405E931D46247608BCFD">
						<Properties>
							<Vector3 name="Acceleration">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="Brightness">30</float>
							<ColorSequence name="Color">0 1 1 0.00784314 0 1 1 1 0.00784314 0 </ColorSequence>
							<float name="Drag">0</float>
							<token name="EmissionDirection">2</token>
							<bool name="Enabled">true</bool>
							<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
							<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
							<token name="FlipbookLayout">0</token>
							<token name="FlipbookMode">0</token>
							<bool name="FlipbookStartRandom">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<NumberRange name="Lifetime">2 10 </NumberRange>
							<float name="LightEmission">0</float>
							<float name="LightInfluence">0</float>
							<bool name="LockedToPart">false</bool>
							<string name="Name">ParticleEmitter</string>
							<token name="Orientation">0</token>
							<float name="Rate">10</float>
							<NumberRange name="RotSpeed">0 0 </NumberRange>
							<NumberRange name="Rotation">0 0 </NumberRange>
							<token name="Shape">0</token>
							<token name="ShapeInOut">0</token>
							<float name="ShapePartial">1</float>
							<token name="ShapeStyle">0</token>
							<NumberSequence name="Size">0 0.05 0 1 0 0 </NumberSequence>
							<int64 name="SourceAssetId">-1</int64>
							<NumberRange name="Speed">1 1 </NumberRange>
							<Vector2 name="SpreadAngle">
								<X>30</X>
								<Y>30</Y>
							</Vector2>
							<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
							<BinaryString name="Tags"></BinaryString>
							<Content name="Texture"><url>rbxasset://textures/particles/sparkles_main.dds</url></Content>
							<float name="TimeScale">1</float>
							<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ecb50</UniqueId>
							<float name="VelocityInheritance">0</float>
							<float name="ZOffset">0</float>
						</Properties>
					</Item>
					<Item class="PointLight" referent="RBX8F6C88E1FB5549ED8EEAC9951C9FD3D0">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="Brightness">1</float>
							<Color3 name="Color">
								<R>1</R>
								<G>1</G>
								<B>0.00784313772</B>
							</Color3>
							<bool name="Enabled">true</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">PointLight</string>
							<float name="Range">8</float>
							<bool name="Shadows">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">06947f31e521cbf303ef51e90000780d</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="Model" referent="RBXC03D890D77344F04B6039E62804BC629">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">Lobby</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">78aa06c01e61697f027658b4000cd4f5</UniqueId>
				<OptionalCoordinateFrame name="WorldPivotData">
					<CFrame>
						<X>12.9999981</X>
						<Y>1</Y>
						<Z>979</Z>
						<R00>0.999999404</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>0.999999404</R22>
					</CFrame>
				</OptionalCoordinateFrame>
			</Properties>
			<Item class="Folder" referent="RBXF97F7634390F45BE8EBDEA721875AB1C">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Interactives</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">079dd8a1bab63e0a024846cb00232742</UniqueId>
				</Properties>
			</Item>
			<Item class="Configuration" referent="RBX19C6C5753098423CB650580AC3762F75">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Lighting</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">079dd8a1bab63e0a024846cb0023273e</UniqueId>
				</Properties>
			</Item>
			<Item class="Configuration" referent="RBXE6BC1EBEC2074A00AAC3BBFC51D00822">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Config</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">079dd8a1bab63e0a024846cb0023273d</UniqueId>
				</Properties>
				<Item class="Sound" referent="RBX1427BB18494D462C8E5863990650CB29">
					<Properties>
						<BinaryString name="AttributesSerialize"><![CDATA[BAAAAAsAAABBdHRyaWJ1dGlvbgINAAAAVGltZSBUbyBSZWxheAgAAABQcmlvcml0eQUAAAAA
CQAAAFN0YXJ0VGltZQUAAAAADAAAAFRhcmdldFZvbHVtZQYAAAAAAADwPw==]]></BinaryString>
						<float name="EmitterSize">10</float>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<NumberRange name="LoopRegion">0 60000 </NumberRange>
						<bool name="Looped">true</bool>
						<string name="Name">MainBGM</string>
						<bool name="PlayOnRemove">false</bool>
						<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
						<bool name="PlaybackRegionsEnabled">false</bool>
						<float name="PlaybackSpeed">1</float>
						<bool name="Playing">false</bool>
						<token name="RollOffMode">0</token>
						<Ref name="SoundGroup">null</Ref>
						<Content name="SoundId"><url>rbxassetid://9044702906</url></Content>
						<int64 name="SourceAssetId">1841025723</int64>
						<BinaryString name="Tags"></BinaryString>
						<double name="TimePosition">0</double>
						<UniqueId name="UniqueId">2d4a59beed30a40302a4b990000be50b</UniqueId>
						<float name="Volume">1</float>
						<float name="xmlRead_MaxDistance_3">10000</float>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBXD3E985F40A5E45BFB45102A7EDDE71E9">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">3</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">3</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>12.9999981</X>
						<Y>1.5</Y>
						<Z>979</Z>
						<R00>0.999999404</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>0.999999404</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4284702562</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">3</token>
					<token name="FrontSurfaceInput">0</token>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">3</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<string name="Name">_Spawn</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">3</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<UniqueId name="UniqueId">079dd8a1bab63e0a024846cb00232c4e</UniqueId>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>10</X>
						<Y>1</Y>
						<Z>10</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX7017150171324436AF5DD7D44D526CAC">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Liquids</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">079dd8a1bab63e0a024846cb00232741</UniqueId>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX3B1E1D88662E477FBBAA6DE0E5BAE79E">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Platforms</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">079dd8a1bab63e0a024846cb00232740</UniqueId>
				</Properties>
				<Item class="Part" referent="RBX0727FF31D52746E195B8AFD1C4F9CD12">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">3</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">3</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>12.9999981</X>
							<Y>0.5</Y>
							<Z>979</Z>
							<R00>0.999999404</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>0.999999404</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4280763949</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">3</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">3</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized"></string>
						<string name="Name">Part</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">3</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<UniqueId name="UniqueId">079dd8a1bab63e0a024846cb002333ea</UniqueId>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>40</X>
							<Y>1</Y>
							<Z>40</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBX9051EF118D324A00A68ED94F086DD3C6">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">DefaultLighting</string>
					<string name="ScriptGuid">{6E86D28D-4F30-480C-AC7E-6D155E98DA8D}</string>
					<ProtectedString name="Source"><![CDATA[return {
	Properties = {
		ClockTime = 14.5
	}
}]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">62078f20895728cd027676dd006913e9</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX16C51ED28FC949C68BC6B6BD3703E5DE">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">MapWorkspace</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f0013ec37</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="SoundService" referent="RBX7A8D8B4227BD44FF860D662F7BF33D2D">
		<Properties>
			<token name="AmbientReverb">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<float name="DistanceFactor">3.32999992</float>
			<float name="DopplerScale">1</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">SoundService</string>
			<bool name="RespectFilteringEnabled">true</bool>
			<float name="RolloffScale">1</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018286</UniqueId>
			<token name="VolumetricAudio">1</token>
		</Properties>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX640459EEEF334A45B84154C6A3B09B48">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018292</UniqueId>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX7A2131787A594F329266B98F285C74EE">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018293</UniqueId>
		</Properties>
	</Item>
	<Item class="Chat" referent="RBXDE4C7F0C72BD40579287337A071E0560">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="BubbleChatEnabled">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LoadDefaultChat">true</bool>
			<string name="Name">Chat</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018297</UniqueId>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX3DB91ED439C24F719D53357832039915">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018298</UniqueId>
		</Properties>
	</Item>
	<Item class="Players" referent="RBXE732F3F1D0B3403BB7C0645062DB67F2">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="CharacterAutoLoads">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxPlayersInternal">30</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">30</int>
			<float name="RespawnTime">2</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd200001829a</UniqueId>
			<bool name="UseStrafingAnimations">false</bool>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBX4304276FA37746EBB066D9872606356E">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedFirst</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd200001829e</UniqueId>
		</Properties>
	</Item>
	<Item class="TweenService" referent="RBXB8CC4DB5DFF546C9B791FA4D3B6E7F4E">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TweenService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182a0</UniqueId>
		</Properties>
	</Item>
	<Item class="MaterialService" referent="RBX051A23F67B0D46B58B6317F7710C713F">
		<Properties>
			<string name="AsphaltName">Asphalt</string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="BasaltName">Basalt</string>
			<string name="BrickName">Brick</string>
			<string name="CobblestoneName">Cobblestone</string>
			<string name="ConcreteName">Concrete</string>
			<string name="CorrodedMetalName">CorrodedMetal</string>
			<string name="CrackedLavaName">CrackedLava</string>
			<string name="DiamondPlateName">DiamondPlate</string>
			<string name="FabricName">Fabric</string>
			<string name="FoilName">Foil</string>
			<string name="GlacierName">Glacier</string>
			<string name="GraniteName">Granite</string>
			<string name="GrassName">Grass</string>
			<string name="GroundName">Ground</string>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="IceName">Ice</string>
			<string name="LeafyGrassName">LeafyGrass</string>
			<string name="LimestoneName">Limestone</string>
			<string name="MarbleName">Marble</string>
			<string name="MetalName">Metal</string>
			<string name="MudName">Mud</string>
			<string name="Name">MaterialService</string>
			<string name="PavementName">Pavement</string>
			<string name="PebbleName">Pebble</string>
			<string name="PlasticName">Plastic</string>
			<string name="RockName">Rock</string>
			<string name="SaltName">Salt</string>
			<string name="SandName">Sand</string>
			<string name="SandstoneName">Sandstone</string>
			<string name="SlateName">Slate</string>
			<string name="SmoothPlasticName">SmoothPlastic</string>
			<string name="SnowName">Snow</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">3cdea1994a3b6b3d02cbcc59001fe8e5</UniqueId>
			<bool name="Use2022MaterialsXml">false</bool>
			<string name="WoodName">Wood</string>
			<string name="WoodPlanksName">WoodPlanks</string>
		</Properties>
	</Item>
	<Item class="PermissionsService" referent="RBXD3FEE03B376F4A5F86EE7C0DA14D7273">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PermissionsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182a4</UniqueId>
		</Properties>
	</Item>
	<Item class="PlayerEmulatorService" referent="RBXE14909DDC0D6409CB9A0A5FD47AADE96">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="CustomPoliciesEnabled">false</bool>
			<string name="EmulatedCountryCode"></string>
			<string name="EmulatedGameLocale"></string>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PlayerEmulatorService</string>
			<bool name="PlayerEmulationEnabled">false</bool>
			<BinaryString name="SerializedEmulatedPolicyInfo"></BinaryString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182a6</UniqueId>
		</Properties>
	</Item>
	<Item class="StudioData" referent="RBXDAD1CCE5522445DBBA3EA53FB5626982">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="EnableScriptCollabByDefaultOnLoad">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StudioData</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182a8</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX31A3506315E04264821765B4B8A77515">
		<Properties>
			<bool name="AllowCustomAnimations">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoJumpEnabled">false</bool>
			<float name="CameraMaxZoomDistance">128</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<float name="CharacterJumpHeight">7.19999981</float>
			<float name="CharacterJumpPower">50</float>
			<float name="CharacterMaxSlopeAngle">89</float>
			<bool name="CharacterUseJumpPower">false</bool>
			<float name="CharacterWalkSpeed">16</float>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<token name="EnableDynamicHeads">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<int64 name="GameSettingsAssetIDFace">0</int64>
			<int64 name="GameSettingsAssetIDHead">0</int64>
			<int64 name="GameSettingsAssetIDLeftArm">0</int64>
			<int64 name="GameSettingsAssetIDLeftLeg">0</int64>
			<int64 name="GameSettingsAssetIDPants">0</int64>
			<int64 name="GameSettingsAssetIDRightArm">0</int64>
			<int64 name="GameSettingsAssetIDRightLeg">0</int64>
			<int64 name="GameSettingsAssetIDShirt">0</int64>
			<int64 name="GameSettingsAssetIDTeeShirt">0</int64>
			<int64 name="GameSettingsAssetIDTorso">0</int64>
			<token name="GameSettingsAvatar">0</token>
			<token name="GameSettingsR15Collision">1</token>
			<NumberRange name="GameSettingsScaleRangeBodyType">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHead">0.95 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHeight">0.9 1.05 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeProportion">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeWidth">0.7 1 </NumberRange>
			<float name="HealthDisplayDistance">100</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="HumanoidStateMachineMode">0</token>
			<bool name="LoadCharacterAppearance">true</bool>
			<token name="LoadCharacterLayeredClothing">0</token>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182a9</UniqueId>
			<bool name="UserEmotesEnabled">true</bool>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBXF5A48336DF464EDBAE5F424BD9C0A468">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterPlayerScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000019199</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBXC27FB65CD356439983152613B2DDB060">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">PlayerModule</string>
					<string name="ScriptGuid">{EA30587F-75AB-47B9-89F9-5D5DF34A59B5}</string>
					<ProtectedString name="Source"><![CDATA[--[[
	PlayerModule - This module requires and instantiates the camera and control modules,
	and provides getters for developers to access methods on these singletons without
	having to modify Roblox-supplied scripts.

	2018 PlayerScripts Update - AllYourBlox
--]]

local PlayerModule = {}
PlayerModule.__index = PlayerModule

function PlayerModule.new()
	local self = setmetatable({},PlayerModule)
	self.cameras = require(script:WaitForChild("CameraModule"))
	self.controls = require(script:WaitForChild("ControlModule"))
	return self
end

function PlayerModule:GetCameras()
	return self.cameras
end

function PlayerModule:GetControls()
	return self.controls
end

function PlayerModule:GetClickToMoveController()
	return self.controls:GetClickToMoveController()
end

return PlayerModule.new()
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0036</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX6C7D9CD227C344BB803D420C61A26CE2">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ControlModule</string>
						<string name="ScriptGuid">{A7B727C1-5C2F-49BB-AE57-4FCB19C075C0}</string>
						<ProtectedString name="Source"><![CDATA[--[[
	ControlModule - This ModuleScript implements a singleton class to manage the
	selection, activation, and deactivation of the current character movement controller.
	This script binds to RenderStepped at Input priority and calls the Update() methods
	on the active controller instances.

	The character controller ModuleScripts implement classes which are instantiated and
	activated as-needed, they are no longer all instantiated up front as they were in
	the previous generation of PlayerScripts.

	2018 PlayerScripts Update - AllYourBlox
--]]
local ControlModule = {}
ControlModule.__index = ControlModule

--[[ Roblox Services ]]--
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local UserGameSettings = UserSettings():GetService("UserGameSettings")

-- Roblox User Input Control Modules - each returns a new() constructor function used to create controllers as needed
local Keyboard = require(script:WaitForChild("Keyboard"))
local Gamepad = require(script:WaitForChild("Gamepad"))
local DynamicThumbstick = require(script:WaitForChild("DynamicThumbstick"))

local FFlagUserTheMovementModeInquisition do
	local success, value = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserTheMovementModeInquisition")
	end)
	FFlagUserTheMovementModeInquisition = success and value
end

local FFlagUserMakeThumbstickDynamic do
	local success, value = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserMakeThumbstickDynamic")
	end)
	FFlagUserMakeThumbstickDynamic = success and value
end

local TouchDPad = FFlagUserTheMovementModeInquisition and DynamicThumbstick or require(script:WaitForChild("TouchDPad"))
local TouchThumbpad = FFlagUserTheMovementModeInquisition and DynamicThumbstick or require(script:WaitForChild("TouchThumbpad"))
local TouchThumbstick = FFlagUserMakeThumbstickDynamic and DynamicThumbstick or require(script:WaitForChild("TouchThumbstick"))

-- These controllers handle only walk/run movement, jumping is handled by the
-- TouchJump controller if any of these are active
local ClickToMove = require(script:WaitForChild("ClickToMoveController"))
local TouchJump = require(script:WaitForChild("TouchJump"))

local VehicleController = require(script:WaitForChild("VehicleController"))

local CONTROL_ACTION_PRIORITY = Enum.ContextActionPriority.Default.Value

local FFlagUserFixMovementCameraStraightDownSuccess, FFlagUserFixMovementCameraStraightDownResult = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserFixMovementCameraStraightDown")
end)
local FFlagUserFixMovementCameraStraightDown = FFlagUserFixMovementCameraStraightDownSuccess and FFlagUserFixMovementCameraStraightDownResult

-- Mapping from movement mode and lastInputType enum values to control modules to avoid huge if elseif switching
local movementEnumToModuleMap = {
	[Enum.TouchMovementMode.DPad] = TouchDPad, -- Map to DT
	[Enum.DevTouchMovementMode.DPad] = TouchDPad, -- Map to DT
	[Enum.TouchMovementMode.Thumbpad] = TouchThumbpad, -- Map to DT
	[Enum.DevTouchMovementMode.Thumbpad] = TouchThumbpad, -- Map to DT
	[Enum.TouchMovementMode.Thumbstick] = TouchThumbstick, -- Map to DT
	[Enum.DevTouchMovementMode.Thumbstick] = TouchThumbstick, -- Map to DT
	[Enum.TouchMovementMode.DynamicThumbstick] = DynamicThumbstick,
	[Enum.DevTouchMovementMode.DynamicThumbstick] = DynamicThumbstick,
	[Enum.TouchMovementMode.ClickToMove] = ClickToMove,
	[Enum.DevTouchMovementMode.ClickToMove] = ClickToMove,

	-- Current default
	[Enum.TouchMovementMode.Default] = DynamicThumbstick,

	[Enum.ComputerMovementMode.Default] = Keyboard,
	[Enum.ComputerMovementMode.KeyboardMouse] = Keyboard,
	[Enum.DevComputerMovementMode.KeyboardMouse] = Keyboard,
	[Enum.DevComputerMovementMode.Scriptable] = nil,
	[Enum.ComputerMovementMode.ClickToMove] = ClickToMove,
	[Enum.DevComputerMovementMode.ClickToMove] = ClickToMove,
}

-- Keyboard controller is really keyboard and mouse controller
local computerInputTypeToModuleMap = {
	[Enum.UserInputType.Keyboard] = Keyboard,
	[Enum.UserInputType.MouseButton1] = Keyboard,
	[Enum.UserInputType.MouseButton2] = Keyboard,
	[Enum.UserInputType.MouseButton3] = Keyboard,
	[Enum.UserInputType.MouseWheel] = Keyboard,
	[Enum.UserInputType.MouseMovement] = Keyboard,
	[Enum.UserInputType.Gamepad1] = Gamepad,
	[Enum.UserInputType.Gamepad2] = Gamepad,
	[Enum.UserInputType.Gamepad3] = Gamepad,
	[Enum.UserInputType.Gamepad4] = Gamepad,
}

function ControlModule.new()
	local self = setmetatable({},ControlModule)

	-- The Modules above are used to construct controller instances as-needed, and this
	-- table is a map from Module to the instance created from it
	self.controllers = {}

	self.activeControlModule = nil	-- Used to prevent unnecessarily expensive checks on each input event
	self.activeController = nil
	self.touchJumpController = nil
	self.moveFunction = Players.LocalPlayer.Move
	self.humanoid = nil
	self.lastInputType = Enum.UserInputType.None

	-- For Roblox self.vehicleController
	self.humanoidSeatedConn = nil
	self.vehicleController = nil

	self.touchControlFrame = nil

	self.vehicleController = VehicleController.new(CONTROL_ACTION_PRIORITY)

	Players.LocalPlayer.CharacterAdded:Connect(function(char) self:OnCharacterAdded(char) end)
	Players.LocalPlayer.CharacterRemoving:Connect(function(char) self:OnCharacterRemoving(char) end)
	if Players.LocalPlayer.Character then
		self:OnCharacterAdded(Players.LocalPlayer.Character)
	end

	RunService:BindToRenderStep("ControlScriptRenderstep", Enum.RenderPriority.Input.Value, function(dt) self:OnRenderStepped(dt) end)

	UserInputService.LastInputTypeChanged:Connect(function(newLastInputType) self:OnLastInputTypeChanged(newLastInputType) end)

	local propertyChangeListeners = {
		UserGameSettings:GetPropertyChangedSignal("TouchMovementMode"):Connect(function() self:OnTouchMovementModeChange() end),
		Players.LocalPlayer:GetPropertyChangedSignal("DevTouchMovementMode"):Connect(function() self:OnTouchMovementModeChange() end),

		UserGameSettings:GetPropertyChangedSignal("ComputerMovementMode"):Connect(function() self:OnComputerMovementModeChange() end),
		Players.LocalPlayer:GetPropertyChangedSignal("DevComputerMovementMode"):Connect(function() self:OnComputerMovementModeChange() end),
	}

	--[[ Touch Device UI ]]--
	self.playerGui = nil
	self.touchGui = nil
	self.playerGuiAddedConn = nil

	if UserInputService.TouchEnabled then
		self.playerGui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
		if self.playerGui then
			self:CreateTouchGuiContainer()
			self:OnLastInputTypeChanged(UserInputService:GetLastInputType())
		else
			self.playerGuiAddedConn = Players.LocalPlayer.ChildAdded:Connect(function(child)
				if child:IsA("PlayerGui") then
					self.playerGui = child
					self:CreateTouchGuiContainer()
					self.playerGuiAddedConn:Disconnect()
					self.playerGuiAddedConn = nil
					self:OnLastInputTypeChanged(UserInputService:GetLastInputType())
				end
			end)
		end
	else
		self:OnLastInputTypeChanged(UserInputService:GetLastInputType())
	end

	return self
end

-- Convenience function so that calling code does not have to first get the activeController
-- and then call GetMoveVector on it. When there is no active controller, this function returns
-- nil so that this case can be distinguished from no current movement (which returns zero vector).
function ControlModule:GetMoveVector()
	if self.activeController then
		return self.activeController:GetMoveVector()
	end
	return Vector3.new(0,0,0)
end

function ControlModule:GetActiveController()
	return self.activeController
end

function ControlModule:EnableActiveControlModule()
	if self.activeControlModule == ClickToMove then
		-- For ClickToMove, when it is the player's choice, we also enable the full keyboard controls.
		-- When the developer is forcing click to move, the most keyboard controls (WASD) are not available, only jump.
		self.activeController:Enable(
			true,
			Players.LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.UserChoice,
			self.touchJumpController
		)
	elseif self.touchControlFrame then
		self.activeController:Enable(true, self.touchControlFrame)
	else
		self.activeController:Enable(true)
	end
end

function ControlModule:Enable(enable)
	if not self.activeController then
		return
	end

	if enable == nil then
		enable = true
	end
	if enable then
		self:EnableActiveControlModule()
	else
		self:Disable()
	end
end

-- For those who prefer distinct functions
function ControlModule:Disable()
	if self.activeController then
		self.activeController:Enable(false)

		if self.moveFunction then
			self.moveFunction(Players.LocalPlayer, Vector3.new(0,0,0), true)
		end
	end
end


-- Returns module (possibly nil) and success code to differentiate returning nil due to error vs Scriptable
function ControlModule:SelectComputerMovementModule()
	if not (UserInputService.KeyboardEnabled or UserInputService.GamepadEnabled) then
		return nil, false
	end

	local computerModule = nil
	local DevMovementMode = Players.LocalPlayer.DevComputerMovementMode

	if DevMovementMode == Enum.DevComputerMovementMode.UserChoice then
		computerModule = computerInputTypeToModuleMap[lastInputType]
		if UserGameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove and computerModule == Keyboard then
			-- User has ClickToMove set in Settings, prefer ClickToMove controller for keyboard and mouse lastInputTypes
			computerModule = ClickToMove
		end
	else
		-- Developer has selected a mode that must be used.
		computerModule = movementEnumToModuleMap[DevMovementMode]

		-- computerModule is expected to be nil here only when developer has selected Scriptable
		if (not computerModule) and DevMovementMode ~= Enum.DevComputerMovementMode.Scriptable then
			warn("No character control module is associated with DevComputerMovementMode ", DevMovementMode)
		end
	end

	if computerModule then
		return computerModule, true
	elseif DevMovementMode == Enum.DevComputerMovementMode.Scriptable then
		-- Special case where nil is returned and we actually want to set self.activeController to nil for Scriptable
		return nil, true
	else
		-- This case is for when computerModule is nil because of an error and no suitable control module could
		-- be found.
		return nil, false
	end
end

-- Choose current Touch control module based on settings (user, dev)
-- Returns module (possibly nil) and success code to differentiate returning nil due to error vs Scriptable
function ControlModule:SelectTouchModule()
	if not UserInputService.TouchEnabled then
		return nil, false
	end
	local touchModule = nil
	local DevMovementMode = Players.LocalPlayer.DevTouchMovementMode
	if DevMovementMode == Enum.DevTouchMovementMode.UserChoice then
		touchModule = movementEnumToModuleMap[UserGameSettings.TouchMovementMode]
	elseif DevMovementMode == Enum.DevTouchMovementMode.Scriptable then
		return nil, true
	else
		touchModule = movementEnumToModuleMap[DevMovementMode]
	end
	return touchModule, true
end

local function calculateRawMoveVector(humanoid, cameraRelativeMoveVector)
	local camera = Workspace.CurrentCamera
	if not camera then
		return cameraRelativeMoveVector
	end

	if humanoid:GetState() == Enum.HumanoidStateType.Swimming then
		return camera.CFrame:VectorToWorldSpace(cameraRelativeMoveVector)
	end

	local c, s
	local _, _, _, R00, R01, R02, _, _, R12, _, _, R22 = camera.CFrame:GetComponents()
	if R12 < 1 and R12 > -1 then
		-- X and Z components from back vector.
		c = R22
		s = R02
	else
		-- In this case the camera is looking straight up or straight down.
		-- Use X components from right and up vectors.
		c = R00
		s = -R01*math.sign(R12)
	end
	local norm = math.sqrt(c*c + s*s)
	return Vector3.new(
		(c*cameraRelativeMoveVector.x + s*cameraRelativeMoveVector.z)/norm,
		0,
		(c*cameraRelativeMoveVector.z - s*cameraRelativeMoveVector.x)/norm
	)
end

function ControlModule:OnRenderStepped(dt)
	if self.activeController and self.activeController.enabled and self.humanoid then
		-- Give the controller a chance to adjust its state
		self.activeController:OnRenderStepped(dt)

		-- Now retrieve info from the controller
		local moveVector = self.activeController:GetMoveVector()
		local cameraRelative = self.activeController:IsMoveVectorCameraRelative()

		local clickToMoveController = self:GetClickToMoveController()
		if self.activeController ~= clickToMoveController then
			if moveVector.magnitude > 0 then
				-- Clean up any developer started MoveTo path
				clickToMoveController:CleanupPath()
			else
				-- Get move vector for developer started MoveTo
				clickToMoveController:OnRenderStepped(dt)
				moveVector = clickToMoveController:GetMoveVector()
				cameraRelative = clickToMoveController:IsMoveVectorCameraRelative()
			end
		end

		-- Are we driving a vehicle ?
		local vehicleConsumedInput = false
		if self.vehicleController then
			moveVector, vehicleConsumedInput = self.vehicleController:Update(moveVector, cameraRelative, self.activeControlModule==Gamepad)
		end

		-- If not, move the player
		-- Verification of vehicleConsumedInput is commented out to preserve legacy behavior, in case some game relies on Humanoid.MoveDirection still being set while in a VehicleSeat
		--if not vehicleConsumedInput then
			if FFlagUserFixMovementCameraStraightDown then
				if cameraRelative then
					moveVector = calculateRawMoveVector(self.humanoid, moveVector)
				end
				self.moveFunction(Players.LocalPlayer, moveVector, false)
			else
				self.moveFunction(Players.LocalPlayer, moveVector, cameraRelative)
			end
		--end

		-- And make them jump if needed
		self.humanoid.Jump = self.activeController:GetIsJumping() or (self.touchJumpController and self.touchJumpController:GetIsJumping())
	end
end

function ControlModule:OnHumanoidSeated(active, currentSeatPart)
	if active then
		if currentSeatPart and currentSeatPart:IsA("VehicleSeat") then
			if not self.vehicleController then
				self.vehicleController = self.vehicleController.new(CONTROL_ACTION_PRIORITY)
			end
			self.vehicleController:Enable(true, currentSeatPart)
		end
	else
		if self.vehicleController then
			self.vehicleController:Enable(false, currentSeatPart)
		end
	end
end

function ControlModule:OnCharacterAdded(char)
	self.humanoid = char:FindFirstChildOfClass("Humanoid")
	while not self.humanoid do
		char.ChildAdded:wait()
		self.humanoid = char:FindFirstChildOfClass("Humanoid")
	end

	if self.touchGui then
		self.touchGui.Enabled = true
	end

	if self.humanoidSeatedConn then
		self.humanoidSeatedConn:Disconnect()
		self.humanoidSeatedConn = nil
	end
	self.humanoidSeatedConn = self.humanoid.Seated:Connect(function(active, currentSeatPart) self:OnHumanoidSeated(active, currentSeatPart) end)
end

function ControlModule:OnCharacterRemoving(char)
	self.humanoid = nil

	if self.touchGui then
		self.touchGui.Enabled = false
	end
end

-- Helper function to lazily instantiate a controller if it does not yet exist,
-- disable the active controller if it is different from the on being switched to,
-- and then enable the requested controller. The argument to this function must be
-- a reference to one of the control modules, i.e. Keyboard, Gamepad, etc.
function ControlModule:SwitchToController(controlModule)
	if not controlModule then
		if self.activeController then
			self.activeController:Enable(false)
		end
		self.activeController = nil
		self.activeControlModule = nil
	else
		if not self.controllers[controlModule] then
			self.controllers[controlModule] = controlModule.new(CONTROL_ACTION_PRIORITY)
		end

		if self.activeController ~= self.controllers[controlModule] then
			if self.activeController then
				self.activeController:Enable(false)
			end
			self.activeController = self.controllers[controlModule]
			self.activeControlModule = controlModule -- Only used to check if controller switch is necessary

			if self.touchControlFrame and (self.activeControlModule == TouchThumbpad
						or self.activeControlModule == TouchThumbstick
						or self.activeControlModule == ClickToMove
						or self.activeControlModule == DynamicThumbstick) then
				if not self.controllers[TouchJump] then
					self.controllers[TouchJump] = TouchJump.new()
				end
				self.touchJumpController = self.controllers[TouchJump]
				self.touchJumpController:Enable(true, self.touchControlFrame)
			else
				if self.touchJumpController then
					self.touchJumpController:Enable(false)
				end
			end

			self:EnableActiveControlModule()
		end
	end
end

function ControlModule:OnLastInputTypeChanged(newLastInputType)
	if lastInputType == newLastInputType then
		warn("LastInputType Change listener called with current type.")
	end
	lastInputType = newLastInputType

	if lastInputType == Enum.UserInputType.Touch then
		-- TODO: Check if touch module already active
		local touchModule, success = self:SelectTouchModule()
		if success then
			while not self.touchControlFrame do
				wait()
			end
			self:SwitchToController(touchModule)
		end
	elseif computerInputTypeToModuleMap[lastInputType] ~= nil then
		local computerModule = self:SelectComputerMovementModule()
		if computerModule then
			self:SwitchToController(computerModule)
		end
	end
end

-- Called when any relevant values of GameSettings or LocalPlayer change, forcing re-evalulation of
-- current control scheme
function ControlModule:OnComputerMovementModeChange()
	local controlModule, success =  self:SelectComputerMovementModule()
	if success then
		self:SwitchToController(controlModule)
	end
end

function ControlModule:OnTouchMovementModeChange()
	local touchModule, success = self:SelectTouchModule()
	if success then
		while not self.touchControlFrame do
			wait()
		end
		self:SwitchToController(touchModule)
	end
end

function ControlModule:CreateTouchGuiContainer()
	if self.touchGui then self.touchGui:Destroy() end

	-- Container for all touch device guis
	self.touchGui = Instance.new('ScreenGui')
	self.touchGui.Name = "TouchGui"
	self.touchGui.ResetOnSpawn = false
	self.touchGui.Enabled = self.humanoid ~= nil

	self.touchControlFrame = Instance.new("Frame")
	self.touchControlFrame.Name = "TouchControlFrame"
	self.touchControlFrame.Size = UDim2.new(1, 0, 1, 0)
	self.touchControlFrame.BackgroundTransparency = 1
	self.touchControlFrame.Parent = self.touchGui

	self.touchGui.Parent = self.playerGui
end

function ControlModule:GetClickToMoveController()
	if not self.controllers[ClickToMove] then
		self.controllers[ClickToMove] = ClickToMove.new(CONTROL_ACTION_PRIORITY)
	end
	return self.controllers[ClickToMove]
end

return ControlModule.new()
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0037</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX177862531EBD4F538F00570DB99D1D17">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">VRNavigation</string>
							<string name="ScriptGuid">{FBE41BFE-4E0E-4827-BD60-B18D18DE84FD}</string>
							<ProtectedString name="Source"><![CDATA[
--[[
		VRNavigation
--]]

local VRService = game:GetService("VRService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local PathfindingService = game:GetService("PathfindingService")
local ContextActionService = game:GetService("ContextActionService")
local StarterGui = game:GetService("StarterGui")

--local MasterControl = require(script.Parent)
local PathDisplay = nil
local LocalPlayer = Players.LocalPlayer

--[[ Constants ]]--
local RECALCULATE_PATH_THRESHOLD = 4
local NO_PATH_THRESHOLD = 12
local MAX_PATHING_DISTANCE = 200
local POINT_REACHED_THRESHOLD = 1
local OFFTRACK_TIME_THRESHOLD = 2
local THUMBSTICK_DEADZONE = 0.22

local ZERO_VECTOR3 = Vector3.new(0,0,0)
local XZ_VECTOR3 = Vector3.new(1,0,1)

--[[ Utility Functions ]]--
local function IsFinite(num)
	return num == num and num ~= 1/0 and num ~= -1/0
end

local function IsFiniteVector3(vec3)
	return IsFinite(vec3.x) and IsFinite(vec3.y) and IsFinite(vec3.z)
end

local movementUpdateEvent = Instance.new("BindableEvent")
movementUpdateEvent.Name = "MovementUpdate"
movementUpdateEvent.Parent = script

coroutine.wrap(function()
	local PathDisplayModule = script.Parent:WaitForChild("PathDisplay")
	if PathDisplayModule then
		PathDisplay = require(PathDisplayModule)
	end
end)()


--[[ The Class ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local VRNavigation = setmetatable({}, BaseCharacterController)
VRNavigation.__index = VRNavigation

function VRNavigation.new(CONTROL_ACTION_PRIORITY)
	local self = setmetatable(BaseCharacterController.new(), VRNavigation)

	self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY

	self.navigationRequestedConn = nil
	self.heartbeatConn = nil

	self.currentDestination = nil
	self.currentPath = nil
	self.currentPoints = nil
	self.currentPointIdx = 0

	self.expectedTimeToNextPoint = 0
	self.timeReachedLastPoint = tick()
	self.moving = false

	self.isJumpBound = false
	self.moveLatch = false

	self.userCFrameEnabledConn = nil

	return self
end

function VRNavigation:SetLaserPointerMode(mode)
	pcall(function()
		StarterGui:SetCore("VRLaserPointerMode", mode)
	end)
end

function VRNavigation:GetLocalHumanoid()
	local character = LocalPlayer.Character
	if not character then
		return
	end

	for _, child in pairs(character:GetChildren()) do
		if child:IsA("Humanoid") then
			return child
		end
	end
	return nil
end

function VRNavigation:HasBothHandControllers()
	return VRService:GetUserCFrameEnabled(Enum.UserCFrame.RightHand) and VRService:GetUserCFrameEnabled(Enum.UserCFrame.LeftHand)
end

function VRNavigation:HasAnyHandControllers()
	return VRService:GetUserCFrameEnabled(Enum.UserCFrame.RightHand) or VRService:GetUserCFrameEnabled(Enum.UserCFrame.LeftHand)
end

function VRNavigation:IsMobileVR()
	return UserInputService.TouchEnabled
end

function VRNavigation:HasGamepad()
	return UserInputService.GamepadEnabled
end

function VRNavigation:ShouldUseNavigationLaser()
	--Places where we use the navigation laser:
	-- mobile VR with any number of hands tracked
	-- desktop VR with only one hand tracked
	-- desktop VR with no hands and no gamepad (i.e. with Oculus remote?)
	--using an Xbox controller with a desktop VR headset means no laser since the user has a thumbstick.
	--in the future, we should query thumbstick presence with a features API
	if self:IsMobileVR() then
		return true
	else
		if self:HasBothHandControllers() then
			return false
		end
		if not self:HasAnyHandControllers() then
			return not self:HasGamepad()
		end
		return true
	end
end



function VRNavigation:StartFollowingPath(newPath)
	currentPath = newPath
	currentPoints = currentPath:GetPointCoordinates()
	currentPointIdx = 1
	moving = true

	timeReachedLastPoint = tick()

	local humanoid = self:GetLocalHumanoid()
	if humanoid and humanoid.Torso and #currentPoints >= 1 then
		local dist = (currentPoints[1] - humanoid.Torso.Position).magnitude
		expectedTimeToNextPoint = dist / humanoid.WalkSpeed
	end

	movementUpdateEvent:Fire("targetPoint", self.currentDestination)
end

function VRNavigation:GoToPoint(point)
	currentPath = true
	currentPoints = { point }
	currentPointIdx = 1
	moving = true

	local humanoid = self:GetLocalHumanoid()
	local distance = (humanoid.Torso.Position - point).magnitude
	local estimatedTimeRemaining = distance / humanoid.WalkSpeed

	timeReachedLastPoint = tick()
	expectedTimeToNextPoint = estimatedTimeRemaining

	movementUpdateEvent:Fire("targetPoint", point)
end

function VRNavigation:StopFollowingPath()
	currentPath = nil
	currentPoints = nil
	currentPointIdx = 0
	moving = false
	self.moveVector = ZERO_VECTOR3
end

function VRNavigation:TryComputePath(startPos, destination)
	local numAttempts = 0
	local newPath = nil

	while not newPath and numAttempts < 5 do
		newPath = PathfindingService:ComputeSmoothPathAsync(startPos, destination, MAX_PATHING_DISTANCE)
		numAttempts = numAttempts + 1

		if newPath.Status == Enum.PathStatus.ClosestNoPath or newPath.Status == Enum.PathStatus.ClosestOutOfRange then
			newPath = nil
			break
		end

		if newPath and newPath.Status == Enum.PathStatus.FailStartNotEmpty then
			startPos = startPos + (destination - startPos).unit
			newPath = nil
		end

		if newPath and newPath.Status == Enum.PathStatus.FailFinishNotEmpty then
			destination = destination + Vector3.new(0, 1, 0)
			newPath = nil
		end
	end

	return newPath
end

function VRNavigation:OnNavigationRequest(destinationCFrame, inputUserCFrame )
	local destinationPosition = destinationCFrame.p
	local lastDestination = self.currentDestination

	if not IsFiniteVector3(destinationPosition) then
		return
	end

	self.currentDestination = destinationPosition

	local humanoid = self:GetLocalHumanoid()
	if not humanoid or not humanoid.Torso then
		return
	end

	local currentPosition = humanoid.Torso.Position
	local distanceToDestination = (self.currentDestination - currentPosition).magnitude

	if distanceToDestination < NO_PATH_THRESHOLD then
		self:GoToPoint(self.currentDestination)
		return
	end

	if not lastDestination or (self.currentDestination - lastDestination).magnitude > RECALCULATE_PATH_THRESHOLD then
		local newPath = self:TryComputePath(currentPosition, self.currentDestination)
		if newPath then
			self:StartFollowingPath(newPath)
			if PathDisplay then
				PathDisplay.setCurrentPoints(self.currentPoints)
				PathDisplay.renderPath()
			end
		else
			self:StopFollowingPath()
			if PathDisplay then
				PathDisplay.clearRenderedPath()
			end
		end
	else
		if moving then
			self.currentPoints[#currentPoints] = self.currentDestination
		else
			self:GoToPoint(self.currentDestination)
		end
	end
end

function VRNavigation:OnJumpAction(actionName, inputState, inputObj)
	if inputState == Enum.UserInputState.Begin then
		self.isJumping = true
	end
	return Enum.ContextActionResult.Sink
end
function VRNavigation:BindJumpAction(active)
	if active then
		if not self.isJumpBound then
			self.isJumpBound = true
			ContextActionService:BindActionAtPriority("VRJumpAction", (function() return self:OnJumpAction() end), false,
				self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonA)
		end
	else
		if self.isJumpBound then
			self.isJumpBound = false
			ContextActionService:UnbindAction("VRJumpAction")
		end
	end
end

function VRNavigation:ControlCharacterGamepad(actionName, inputState, inputObject)
	if inputObject.KeyCode ~= Enum.KeyCode.Thumbstick1 then return end

	if inputState == Enum.UserInputState.Cancel then
		self.moveVector =  ZERO_VECTOR3
		return
	end

	if inputState ~= Enum.UserInputState.End then
		self:StopFollowingPath()
		if PathDisplay then
			PathDisplay.clearRenderedPath()
		end

		if self:ShouldUseNavigationLaser() then
			self:BindJumpAction(true)
			self:SetLaserPointerMode("Hidden")
		end

		if inputObject.Position.magnitude > THUMBSTICK_DEADZONE then
			self.moveVector = Vector3.new(inputObject.Position.X, 0, -inputObject.Position.Y)
			if self.moveVector.magnitude > 0 then
				self.moveVector = self.moveVector.unit * math.min(1, inputObject.Position.magnitude)
			end

			self.moveLatch = true
		end
	else
		self.moveVector =  ZERO_VECTOR3

		if self:ShouldUseNavigationLaser() then
			self:BindJumpAction(false)
			self:SetLaserPointerMode("Navigation")
		end

		if self.moveLatch then
			self.moveLatch = false
			movementUpdateEvent:Fire("offtrack")
		end
	end
	return Enum.ContextActionResult.Sink
end

function VRNavigation:OnHeartbeat(dt)
	local newMoveVector = self.moveVector
	local humanoid = self:GetLocalHumanoid()
	if not humanoid or not humanoid.Torso then
		return
	end

	if self.moving and self.currentPoints then
		local currentPosition = humanoid.Torso.Position
		local goalPosition = currentPoints[1]
		local vectorToGoal = (goalPosition - currentPosition) * XZ_VECTOR3
		local moveDist = vectorToGoal.magnitude
		local moveDir = vectorToGoal / moveDist

		if moveDist < POINT_REACHED_THRESHOLD then
			local estimatedTimeRemaining = 0
			local prevPoint = currentPoints[1]
			for i, point in pairs(currentPoints) do
				if i ~= 1 then
					local dist = (point - prevPoint).magnitude
					prevPoint = point
					estimatedTimeRemaining = estimatedTimeRemaining + (dist / humanoid.WalkSpeed)
				end
			end

			table.remove(currentPoints, 1)
			currentPointIdx = currentPointIdx + 1

			if #currentPoints == 0 then
				self:StopFollowingPath()
				if PathDisplay then
					PathDisplay.clearRenderedPath()
				end
				return
			else
				if PathDisplay then
					PathDisplay.setCurrentPoints(currentPoints)
					PathDisplay.renderPath()
				end

				local newGoal = currentPoints[1]
				local distanceToGoal = (newGoal - currentPosition).magnitude
				expectedTimeToNextPoint = distanceToGoal / humanoid.WalkSpeed
				timeReachedLastPoint = tick()
			end
		else
			local ignoreTable = {
				game.Players.LocalPlayer.Character,
				workspace.CurrentCamera
			}
			local obstructRay = Ray.new(currentPosition - Vector3.new(0, 1, 0), moveDir * 3)
			local obstructPart, obstructPoint, obstructNormal = workspace:FindPartOnRayWithIgnoreList(obstructRay, ignoreTable)

			if obstructPart then
				local heightOffset = Vector3.new(0, 100, 0)
				local jumpCheckRay = Ray.new(obstructPoint + moveDir * 0.5 + heightOffset, -heightOffset)
				local jumpCheckPart, jumpCheckPoint, jumpCheckNormal = workspace:FindPartOnRayWithIgnoreList(jumpCheckRay, ignoreTable)

				local heightDifference = jumpCheckPoint.Y - currentPosition.Y
				if heightDifference < 6 and heightDifference > -2 then
					humanoid.Jump = true
				end
			end

			local timeSinceLastPoint = tick() - timeReachedLastPoint
			if timeSinceLastPoint > expectedTimeToNextPoint + OFFTRACK_TIME_THRESHOLD then
				self:StopFollowingPath()
				if PathDisplay then
					PathDisplay.clearRenderedPath()
				end

				movementUpdateEvent:Fire("offtrack")
			end

			newMoveVector = self.moveVector:Lerp(moveDir, dt * 10)
		end
	end

	if IsFiniteVector3(newMoveVector) then
		self.moveVector = newMoveVector
	end
end


function VRNavigation:OnUserCFrameEnabled()
	if self:ShouldUseNavigationLaser() then
		self:BindJumpAction(false)
		self:SetLaserPointerMode("Navigation")
	else
		self:BindJumpAction(true)
		self:SetLaserPointerMode("Hidden")
	end
end

function VRNavigation:Enable(enable)

	self.moveVector = ZERO_VECTOR3
	self.isJumping = false

	if enable then
		self.navigationRequestedConn = VRService.NavigationRequested:Connect(function(destinationCFrame, inputUserCFrame) self:OnNavigationRequest(destinationCFrame, inputUserCFrame) end)
		self.heartbeatConn = RunService.Heartbeat:Connect(function(dt) self:OnHeartbeat(dt) end)

		ContextActionService:BindAction("MoveThumbstick", (function(actionName, inputState, inputObject) return self:ControlCharacterGamepad(actionName, inputState, inputObject) end),
			false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Thumbstick1)
		ContextActionService:BindActivate(Enum.UserInputType.Gamepad1, Enum.KeyCode.ButtonR2)

		self.userCFrameEnabledConn = VRService.UserCFrameEnabled:Connect(function() self:OnUserCFrameEnabled() end)
		self:OnUserCFrameEnabled()

		VRService:SetTouchpadMode(Enum.VRTouchpad.Left, Enum.VRTouchpadMode.VirtualThumbstick)
		VRService:SetTouchpadMode(Enum.VRTouchpad.Right, Enum.VRTouchpadMode.ABXY)

		self.enabled = true
	else
		-- Disable
		self:StopFollowingPath()

		ContextActionService:UnbindAction("MoveThumbstick")
		ContextActionService:UnbindActivate(Enum.UserInputType.Gamepad1, Enum.KeyCode.ButtonR2)

		self:BindJumpAction(false)
		self:SetLaserPointerMode("Disabled")

		if self.navigationRequestedConn then
			self.navigationRequestedConn:Disconnect()
			self.navigationRequestedConn = nil
		end
		if self.heartbeatConn then
			self.heartbeatConn:Disconnect()
			self.heartbeatConn = nil
		end
		if self.userCFrameEnabledConn then
			self.userCFrameEnabledConn:Disconnect()
			self.userCFrameEnabledConn = nil
		end
		self.enabled = false
	end
end

return VRNavigation
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0038</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX4DF7D0D3A96844FB806F2C2BD54566FB">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">TouchThumbstick</string>
							<string name="ScriptGuid">{47C8C8FA-640D-4A55-AE22-FA438272C8FC}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	
	TouchThumbstick
	
--]]

local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")
local UserInputService = game:GetService("UserInputService")

--[[ Constants ]]--
local ZERO_VECTOR3 = Vector3.new(0,0,0)
local TOUCH_CONTROL_SHEET = "rbxasset://textures/ui/TouchControlsSheet.png"

--[[ The Module ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local TouchThumbstick = setmetatable({}, BaseCharacterController)
TouchThumbstick.__index = TouchThumbstick

function TouchThumbstick.new()
	local self = setmetatable(BaseCharacterController.new(), TouchThumbstick)
	
	self.isFollowStick = false
	
	self.thumbstickFrame = nil
	self.moveTouchObject = nil
	self.onTouchMovedConn = nil
	self.onTouchEndedConn = nil
	self.screenPos = nil
	self.stickImage = nil
	self.thumbstickSize = nil -- Float
	
	return self
end

function TouchThumbstick:Enable(enable, uiParentFrame)
	if enable == nil then return false end			-- If nil, return false (invalid argument)
	enable = enable and true or false				-- Force anything non-nil to boolean before comparison
	if self.enabled == enable then return true end	-- If no state change, return true indicating already in requested state
	
	self.moveVector = ZERO_VECTOR3
	self.isJumping = false
	
	if enable then
		-- Enable
		if not self.thumbstickFrame then
			self:Create(uiParentFrame)
		end
		self.thumbstickFrame.Visible = true
	else 
		-- Disable
		self.thumbstickFrame.Visible = false
		self:OnInputEnded()
	end
	self.enabled = enable
end

function TouchThumbstick:OnInputEnded()
	self.thumbstickFrame.Position = self.screenPos
	self.stickImage.Position = UDim2.new(0, self.thumbstickFrame.Size.X.Offset/2 - self.thumbstickSize/4, 0, self.thumbstickFrame.Size.Y.Offset/2 - self.thumbstickSize/4)
	
	self.moveVector = ZERO_VECTOR3
	self.isJumping = false

	self.thumbstickFrame.Position = self.screenPos
	self.moveTouchObject = nil
end

function TouchThumbstick:Create(parentFrame)
	
	if self.thumbstickFrame then
		self.thumbstickFrame:Destroy()
		self.thumbstickFrame = nil
		if self.onTouchMovedConn then
			self.onTouchMovedConn:Disconnect()
			self.onTouchMovedConn = nil
		end
		if self.onTouchEndedConn then
			self.onTouchEndedConn:Disconnect()
			self.onTouchEndedConn = nil
		end
	end
	
	local minAxis = math.min(parentFrame.AbsoluteSize.x, parentFrame.AbsoluteSize.y)
	local isSmallScreen = minAxis <= 500
	self.thumbstickSize = isSmallScreen and 70 or 120
	self.screenPos = isSmallScreen and UDim2.new(0, (self.thumbstickSize/2) - 10, 1, -self.thumbstickSize - 20) or
		UDim2.new(0, self.thumbstickSize/2, 1, -self.thumbstickSize * 1.75)
		
	self.thumbstickFrame = Instance.new("Frame")
	self.thumbstickFrame.Name = "ThumbstickFrame"
	self.thumbstickFrame.Active = true
	self.thumbstickFrame.Visible = false
	self.thumbstickFrame.Size = UDim2.new(0, self.thumbstickSize, 0, self.thumbstickSize)
	self.thumbstickFrame.Position = self.screenPos
	self.thumbstickFrame.BackgroundTransparency = 1
	
	local outerImage = Instance.new("ImageLabel")
	outerImage.Name = "OuterImage"
	outerImage.Image = TOUCH_CONTROL_SHEET
	outerImage.ImageRectOffset = Vector2.new()
	outerImage.ImageRectSize = Vector2.new(220, 220)
	outerImage.BackgroundTransparency = 1
	outerImage.Size = UDim2.new(0, self.thumbstickSize, 0, self.thumbstickSize)
	outerImage.Position = UDim2.new(0, 0, 0, 0)
	outerImage.Parent = self.thumbstickFrame
	
	self.stickImage = Instance.new("ImageLabel")
	self.stickImage.Name = "StickImage"
	self.stickImage.Image = TOUCH_CONTROL_SHEET
	self.stickImage.ImageRectOffset = Vector2.new(220, 0)
	self.stickImage.ImageRectSize = Vector2.new(111, 111)
	self.stickImage.BackgroundTransparency = 1
	self.stickImage.Size = UDim2.new(0, self.thumbstickSize/2, 0, self.thumbstickSize/2)
	self.stickImage.Position = UDim2.new(0, self.thumbstickSize/2 - self.thumbstickSize/4, 0, self.thumbstickSize/2 - self.thumbstickSize/4)
	self.stickImage.ZIndex = 2
	self.stickImage.Parent = self.thumbstickFrame
	
	local centerPosition = nil
	local deadZone = 0.05
	
	local function DoMove(direction)
		
		local currentMoveVector = direction / (self.thumbstickSize/2)
		
		-- Scaled Radial Dead Zone
		local inputAxisMagnitude = currentMoveVector.magnitude
		if inputAxisMagnitude < deadZone then
			currentMoveVector = Vector3.new()
		else
			currentMoveVector = currentMoveVector.unit * ((inputAxisMagnitude - deadZone) / (1 - deadZone))
			-- NOTE: Making currentMoveVector a unit vector will cause the player to instantly go max speed
			-- must check for zero length vector is using unit
			currentMoveVector = Vector3.new(currentMoveVector.x, 0, currentMoveVector.y)
		end
		
		self.moveVector = currentMoveVector
	end
	
	local function MoveStick(pos)
		local relativePosition = Vector2.new(pos.x - centerPosition.x, pos.y - centerPosition.y)
		local length = relativePosition.magnitude
		local maxLength = self.thumbstickFrame.AbsoluteSize.x/2
		if self.isFollowStick and length > maxLength then
			local offset = relativePosition.unit * maxLength
			self.thumbstickFrame.Position = UDim2.new(
				0, pos.x - self.thumbstickFrame.AbsoluteSize.x/2 - offset.x,
				0, pos.y - self.thumbstickFrame.AbsoluteSize.y/2 - offset.y)
		else
			length = math.min(length, maxLength)
			relativePosition = relativePosition.unit * length
		end
		self.stickImage.Position = UDim2.new(0, relativePosition.x + self.stickImage.AbsoluteSize.x/2, 0, relativePosition.y + self.stickImage.AbsoluteSize.y/2)
	end
	
	-- input connections
	self.thumbstickFrame.InputBegan:Connect(function(inputObject)
		--A touch that starts elsewhere on the screen will be sent to a frame's InputBegan event
		--if it moves over the frame. So we check that this is actually a new touch (inputObject.UserInputState ~= Enum.UserInputState.Begin)
		if self.moveTouchObject or inputObject.UserInputType ~= Enum.UserInputType.Touch
			or inputObject.UserInputState ~= Enum.UserInputState.Begin then
			return
		end
		
		self.moveTouchObject = inputObject
		self.thumbstickFrame.Position = UDim2.new(0, inputObject.Position.x - self.thumbstickFrame.Size.X.Offset/2, 0, inputObject.Position.y - self.thumbstickFrame.Size.Y.Offset/2)
		centerPosition = Vector2.new(self.thumbstickFrame.AbsolutePosition.x + self.thumbstickFrame.AbsoluteSize.x/2,
			self.thumbstickFrame.AbsolutePosition.y + self.thumbstickFrame.AbsoluteSize.y/2)
		local direction = Vector2.new(inputObject.Position.x - centerPosition.x, inputObject.Position.y - centerPosition.y)
	end)
	
	self.onTouchMovedConn = UserInputService.TouchMoved:Connect(function(inputObject, isProcessed)
		if inputObject == self.moveTouchObject then
			centerPosition = Vector2.new(self.thumbstickFrame.AbsolutePosition.x + self.thumbstickFrame.AbsoluteSize.x/2,
				self.thumbstickFrame.AbsolutePosition.y + self.thumbstickFrame.AbsoluteSize.y/2)
			local direction = Vector2.new(inputObject.Position.x - centerPosition.x, inputObject.Position.y - centerPosition.y)
			DoMove(direction)
			MoveStick(inputObject.Position)
		end
	end)
	
	self.onTouchEndedConn = UserInputService.TouchEnded:Connect(function(inputObject, isProcessed)
		if inputObject == self.moveTouchObject then
			self:OnInputEnded()
		end
	end)
	
	GuiService.MenuOpened:Connect(function()
		if self.moveTouchObject then
			self:OnInputEnded()
		end
	end)	
	
	self.thumbstickFrame.Parent = parentFrame
end

return TouchThumbstick
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0039</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX05853E3B337942188DB5ABE0D3C0B75D">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">TouchDPad</string>
							<string name="ScriptGuid">{34E48B5E-282F-4FF3-800F-308762AD5A1C}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	
	
	
--]]

local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")

--[[ Constants ]]--
local DPAD_SHEET = "rbxasset://textures/ui/DPadSheet.png"
local ZERO_VECTOR3 = Vector3.new(0,0,0)
local COMPASS_DIR = {
	Vector3.new(1, 0, 0),			-- E
	Vector3.new(1, 0, 1).unit,		-- SE
	Vector3.new(0, 0, 1),			-- S
	Vector3.new(-1, 0, 1).unit,		-- SW
	Vector3.new(-1, 0, 0),			-- W
	Vector3.new(-1, 0, -1).unit,	-- NW
	Vector3.new(0, 0, -1),			-- N
	Vector3.new(1, 0, -1).unit,		-- NE
}


--[[ The Module ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local TouchDPad = setmetatable({}, BaseCharacterController)
TouchDPad.__index = TouchDPad

function TouchDPad.new()
	local self = setmetatable(BaseCharacterController.new(), TouchDPad)
	
	self.DPadFrame = nil
	self.touchObject = nil
	self.flBtn = nil
	self.frBtn = nil
	
	return self
end

--[[ Local Functions ]]--
local function CreateArrowLabel(name, position, size, rectOffset, rectSize, parent)
	local image = Instance.new("ImageLabel")
	image.Name = name
	image.Image = DPAD_SHEET
	image.ImageRectOffset = rectOffset
	image.ImageRectSize = rectSize
	image.BackgroundTransparency = 1
	image.Size = size
	image.Position = position
	image.Parent = parent
	return image
end

function TouchDPad:GetCenterPosition()
	return Vector2.new(self.DPadFrame.AbsolutePosition.x + self.DPadFrame.AbsoluteSize.x * 0.5, self.DPadFrame.AbsolutePosition.y + self.DPadFrame.AbsoluteSize.y * 0.5)
end

function TouchDPad:Enable(enable, uiParentFrame)
	if enable == nil then return false end			-- If nil, return false (invalid argument)
	enable = enable and true or false				-- Force anything non-nil to boolean before comparison
	if self.enabled == enable then return true end	-- If no state change, return true indicating already in requested state
	
	self.moveVector = ZERO_VECTOR3
	self.isJumping = false
	
	if enable then
		-- Enable
		if not self.DPadFrame then
			self:Create(uiParentFrame)
		end
		self.DPadFrame.Visible = true
	else 
		-- Disable
		self.DPadFrame.Visible = false
		self:OnInputEnded()
	end
	self.enabled = enable
end

-- Note: Overrides base class GetIsJumping with get-and-clear behavior to do a single jump
-- rather than sustained jumping. This is only to preserve the current behavior through the refactor.
function TouchDPad:GetIsJumping()
	local wasJumping = self.isJumping
	self.isJumping = false
	return wasJumping
end

function TouchDPad:OnInputEnded()
	self.touchObject =nil
	if self.flBtn then self.flBtn.Visible = false end
	if self.frBtn then self.frBtn.Visible = false end
	self.moveVector = ZERO_VECTOR3
end

function TouchDPad:Create(parentFrame)
	if self.DPadFrame then
		self.DPadFrame:Destroy()
		self.DPadFrame = nil
	end
	
	local position = UDim2.new(0, 10, 1, -230)
	self.DPadFrame = Instance.new("Frame")
	self.DPadFrame.Name = "DPadFrame"
	self.DPadFrame.Active = true
	self.DPadFrame.Visible = false
	self.DPadFrame.Size = UDim2.new(0, 192, 0, 192)
	self.DPadFrame.Position = position
	self.DPadFrame.BackgroundTransparency = 1
	
	local smArrowSize = UDim2.new(0, 23, 0, 23)
	local lgArrowSize = UDim2.new(0, 64, 0, 64)
	local smImgOffset = Vector2.new(46, 46)
	local lgImgOffset = Vector2.new(128, 128)
	
	local bBtn = CreateArrowLabel("BackButton", UDim2.new(0.5, -32, 1, -64), lgArrowSize, Vector2.new(0, 0), lgImgOffset, self.DPadFrame)
	local fBtn = CreateArrowLabel("ForwardButton", UDim2.new(0.5, -32, 0, 0), lgArrowSize, Vector2.new(0, 258), lgImgOffset, self.DPadFrame)
	local lBtn = CreateArrowLabel("LeftButton", UDim2.new(0, 0, 0.5, -32), lgArrowSize, Vector2.new(129, 129), lgImgOffset, self.DPadFrame)
	local rBtn = CreateArrowLabel("RightButton", UDim2.new(1, -64, 0.5, -32), lgArrowSize, Vector2.new(0, 129), lgImgOffset, self.DPadFrame)
	local jumpBtn = CreateArrowLabel("JumpButton", UDim2.new(0.5, -32, 0.5, -32), lgArrowSize, Vector2.new(129, 0), lgImgOffset, self.DPadFrame)
	self.flBtn = CreateArrowLabel("ForwardLeftButton", UDim2.new(0, 35, 0, 35), smArrowSize, Vector2.new(129, 258), smImgOffset, self.DPadFrame)
	self.frBtn = CreateArrowLabel("ForwardRightButton", UDim2.new(1, -55, 0, 35), smArrowSize, Vector2.new(176, 258), smImgOffset, self.DPadFrame)
	self.flBtn.Visible = false
	self.frBtn.Visible = false
	
	-- input connections
	jumpBtn.InputBegan:Connect(function(inputObject)
		self.isJumping = true
	end)
	
	local function normalizeDirection(inputPosition)
		local jumpRadius = jumpBtn.AbsoluteSize.x*0.5
		local centerPosition = self:GetCenterPosition()
		local direction = Vector2.new(inputPosition.x - centerPosition.x, inputPosition.y - centerPosition.y)
		
		if direction.magnitude > jumpRadius then
			local angle = math.atan2(direction.y, direction.x)
			local octant = (math.floor(8 * angle / (2 * math.pi) + 8.5)%8) + 1
			self.moveVector = COMPASS_DIR[octant]
		end
		
		if not self.flBtn.Visible and self.moveVector == COMPASS_DIR[7] then
			self.flBtn.Visible = true
			self.frBtn.Visible = true
		end
	end
	
	self.DPadFrame.InputBegan:Connect(function(inputObject)
		if self.touchObject or inputObject.UserInputType ~= Enum.UserInputType.Touch then
			return
		end
		
		self.touchObject = inputObject
		normalizeDirection(self.touchObject.Position)
	end)
	
	self.DPadFrame.InputChanged:Connect(function(inputObject)
		if inputObject == self.touchObject then
			normalizeDirection(self.touchObject.Position)
			self.isJumping = false
		end
	end)
	
	self.DPadFrame.InputEnded:connect(function(inputObject)
		if inputObject == self.touchObject then
			self:OnInputEnded()
		end
	end)
	
	GuiService.MenuOpened:Connect(function()
		if self.touchObject then
			self:OnInputEnded()
		end
	end)
	
	self.DPadFrame.Parent = parentFrame
end

return TouchDPad
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c003a</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXBD562ACA177B4C99AB8288B11DC420A0">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Keyboard</string>
							<string name="ScriptGuid">{178BCEFF-9D3A-43BB-B9F3-EAF9DF8B4180}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	Keyboard Character Control - This module handles controlling your avatar from a keyboard

	2018 PlayerScripts Update - AllYourBlox
--]]

--[[ Roblox Services ]]--
local UserInputService = game:GetService("UserInputService")
local ContextActionService = game:GetService("ContextActionService")

--[[ Constants ]]--
local ZERO_VECTOR3 = Vector3.new(0,0,0)

--[[ The Module ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local Keyboard = setmetatable({}, BaseCharacterController)
Keyboard.__index = Keyboard

function Keyboard.new(CONTROL_ACTION_PRIORITY)
	local self = setmetatable(BaseCharacterController.new(), Keyboard)

	self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY

	self.textFocusReleasedConn = nil
	self.textFocusGainedConn = nil
	self.windowFocusReleasedConn = nil

	self.forwardValue  = 0
	self.backwardValue = 0
	self.leftValue = 0
	self.rightValue = 0

	self.jumpEnabled = true

	return self
end

function Keyboard:Enable(enable)
	if not UserInputService.KeyboardEnabled then
		return false
	end

	if enable == self.enabled then
		-- Module is already in the state being requested. True is returned here since the module will be in the state
		-- expected by the code that follows the Enable() call. This makes more sense than returning false to indicate
		-- no action was necessary. False indicates failure to be in requested/expected state.
		return true
	end

	self.forwardValue  = 0
	self.backwardValue = 0
	self.leftValue = 0
	self.rightValue = 0
	self.moveVector = ZERO_VECTOR3
	self.jumpRequested = false
	self:UpdateJump()

	if enable then
		self:BindContextActions()
		self:ConnectFocusEventListeners()
	else
		self:UnbindContextActions()
		self:DisconnectFocusEventListeners()
	end

	self.enabled = enable
	return true
end

function Keyboard:UpdateMovement(inputState)
	if inputState == Enum.UserInputState.Cancel then
		self.moveVector = ZERO_VECTOR3
	else
		self.moveVector = Vector3.new(self.leftValue + self.rightValue, 0, self.forwardValue + self.backwardValue)
	end
end

function Keyboard:UpdateJump()
	self.isJumping = self.jumpRequested
end

function Keyboard:BindContextActions()

	-- Note: In the previous version of this code, the movement values were not zeroed-out on UserInputState. Cancel, now they are,
	-- which fixes them from getting stuck on.
	-- We return ContextActionResult.Pass here for legacy reasons.
	-- Many games rely on gameProcessedEvent being false on UserInputService.InputBegan for these control actions.
	local handleMoveForward = function(actionName, inputState, inputObject)
		self.forwardValue = (inputState == Enum.UserInputState.Begin) and -1 or 0
		self:UpdateMovement(inputState)
		return Enum.ContextActionResult.Pass
	end

	local handleMoveBackward = function(actionName, inputState, inputObject)
		self.backwardValue = (inputState == Enum.UserInputState.Begin) and 1 or 0
		self:UpdateMovement(inputState)
		return Enum.ContextActionResult.Pass
	end

	local handleMoveLeft = function(actionName, inputState, inputObject)
		self.leftValue = (inputState == Enum.UserInputState.Begin) and -1 or 0
		self:UpdateMovement(inputState)
		return Enum.ContextActionResult.Pass
	end

	local handleMoveRight = function(actionName, inputState, inputObject)
		self.rightValue = (inputState == Enum.UserInputState.Begin) and 1 or 0
		self:UpdateMovement(inputState)
		return Enum.ContextActionResult.Pass
	end

	local handleJumpAction = function(actionName, inputState, inputObject)
		self.jumpRequested = self.jumpEnabled and (inputState == Enum.UserInputState.Begin)
		self:UpdateJump()
		return Enum.ContextActionResult.Pass
	end

	-- TODO: Revert to KeyCode bindings so that in the future the abstraction layer from actual keys to
	-- movement direction is done in Lua
	ContextActionService:BindActionAtPriority("moveForwardAction", handleMoveForward, false,
		self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterForward)
	ContextActionService:BindActionAtPriority("moveBackwardAction", handleMoveBackward, false,
		self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterBackward)
	ContextActionService:BindActionAtPriority("moveLeftAction", handleMoveLeft, false,
		self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterLeft)
	ContextActionService:BindActionAtPriority("moveRightAction", handleMoveRight, false,
		self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterRight)
	ContextActionService:BindActionAtPriority("jumpAction", handleJumpAction, false,
		self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterJump)
end

function Keyboard:UnbindContextActions()
	ContextActionService:UnbindAction("moveForwardAction")
	ContextActionService:UnbindAction("moveBackwardAction")
	ContextActionService:UnbindAction("moveLeftAction")
	ContextActionService:UnbindAction("moveRightAction")
	ContextActionService:UnbindAction("jumpAction")
end

function Keyboard:ConnectFocusEventListeners()
	local function onFocusReleased()
		self.moveVector = ZERO_VECTOR3
		self.forwardValue  = 0
		self.backwardValue = 0
		self.leftValue = 0
		self.rightValue = 0
		self.jumpRequested = false
		self:UpdateJump()
	end

	local function onTextFocusGained(textboxFocused)
		self.jumpRequested = false
		self:UpdateJump()
	end

	self.textFocusReleasedConn = UserInputService.TextBoxFocusReleased:Connect(onFocusReleased)
	self.textFocusGainedConn = UserInputService.TextBoxFocused:Connect(onTextFocusGained)
	self.windowFocusReleasedConn = UserInputService.WindowFocused:Connect(onFocusReleased)
end

function Keyboard:DisconnectFocusEventListeners()
	if self.textFocusReleasedCon then
		self.textFocusReleasedCon:Disconnect()
		self.textFocusReleasedCon = nil
	end
	if self.textFocusGainedConn then
		self.textFocusGainedConn:Disconnect()
		self.textFocusGainedConn = nil
	end
	if self.windowFocusReleasedConn then
		self.windowFocusReleasedConn:Disconnect()
		self.windowFocusReleasedConn = nil
	end
end

return Keyboard
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c003b</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX14B166B9405242C1BE2F86EB9E0010D4">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BaseCharacterController</string>
							<string name="ScriptGuid">{61625246-078F-4204-9E81-B6C7406B05AA}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	BaseCharacterController - Abstract base class for character controllers, not intended to be
	directly instantiated.
	
	2018 PlayerScripts Update - AllYourBlox		
--]]

local ZERO_VECTOR3 = Vector3.new(0,0,0)

--[[ Roblox Services ]]--
local Players = game:GetService("Players")

--[[ The Module ]]--
local BaseCharacterController = {}
BaseCharacterController.__index = BaseCharacterController

function BaseCharacterController.new()
	local self = setmetatable({}, BaseCharacterController)
	self.enabled = false
	self.moveVector = ZERO_VECTOR3
	self.moveVectorIsCameraRelative = true
	self.isJumping = false
	return self
end

function BaseCharacterController:OnRenderStepped(dt)
	-- By default, nothing to do
end

function BaseCharacterController:GetMoveVector()
	return self.moveVector
end

function BaseCharacterController:IsMoveVectorCameraRelative()
	return self.moveVectorIsCameraRelative
end

function BaseCharacterController:GetIsJumping()
	return self.isJumping
end

-- Override in derived classes to set self.enabled and return boolean indicating
-- whether Enable/Disable was successful. Return true if controller is already in the requested state.
function BaseCharacterController:Enable(enable)
	error("BaseCharacterController:Enable must be overridden in derived classes and should not be called.")
	return false
end

return BaseCharacterController]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c003c</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX2CD960E7D26B4908B6C0A76B1A3B529C">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">TouchJump</string>
							<string name="ScriptGuid">{1823CD84-7A2E-4666-B51D-2E38C66AA18D}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	// FileName: TouchJump
	// Version 1.0
	// Written by: jmargh
	// Description: Implements jump controls for touch devices. Use with Thumbstick and Thumbpad
--]]

local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")

--[[ Constants ]]--
local TOUCH_CONTROL_SHEET = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png"

--[[ The Module ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local TouchJump = setmetatable({}, BaseCharacterController)
TouchJump.__index = TouchJump

function TouchJump.new()
	local self = setmetatable(BaseCharacterController.new(), TouchJump)

	self.parentUIFrame = nil
	self.jumpButton = nil
	self.characterAddedConn = nil
	self.humanoidStateEnabledChangedConn = nil
	self.humanoidJumpPowerConn = nil
	self.humanoidParentConn = nil
	self.externallyEnabled = false
	self.jumpPower = 0
	self.jumpStateEnabled = true
	self.isJumping = false
	self.humanoid = nil -- saved reference because property change connections are made using it

	return self
end

function TouchJump:EnableButton(enable)
	if enable then
		if not self.jumpButton then
			self:Create()
		end
		local humanoid = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		if humanoid and self.externallyEnabled then
			if self.externallyEnabled then
				if humanoid.JumpPower > 0 then
					self.jumpButton.Visible = true
				end
			end
		end
	else
		self.jumpButton.Visible = false
		self.isJumping = false
		self.jumpButton.ImageRectOffset = Vector2.new(1, 146)
	end
end

function TouchJump:UpdateEnabled()
	if self.jumpPower > 0 and self.jumpStateEnabled then
		self:EnableButton(true)
	else
		self:EnableButton(false)
	end
end

function TouchJump:HumanoidChanged(prop)
	local humanoid = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		if prop == "JumpPower" then
			self.jumpPower =  humanoid.JumpPower
			self:UpdateEnabled()
		elseif prop == "Parent" then
			if not humanoid.Parent then
				self.humanoidChangeConn:Disconnect()
			end
		end
	end
end

function TouchJump:HumanoidStateEnabledChanged(state, isEnabled)
	if state == Enum.HumanoidStateType.Jumping then
		self.jumpStateEnabled = isEnabled
		self:UpdateEnabled()
	end
end

function TouchJump:CharacterAdded(char)
	if self.humanoidChangeConn then
		self.humanoidChangeConn:Disconnect()
		self.humanoidChangeConn = nil
	end

	self.humanoid = char:FindFirstChildOfClass("Humanoid")
	while not self.humanoid do
		char.ChildAdded:wait()
		self.humanoid = char:FindFirstChildOfClass("Humanoid")
	end

	self.humanoidJumpPowerConn = self.humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
		self.jumpPower =  self.humanoid.JumpPower
		self:UpdateEnabled()
	end)

	self.humanoidParentConn = self.humanoid:GetPropertyChangedSignal("Parent"):Connect(function()
		if not self.humanoid.Parent then
			self.humanoidJumpPowerConn:Disconnect()
			self.humanoidJumpPowerConn = nil
			self.humanoidParentConn:Disconnect()
			self.humanoidParentConn = nil
		end
	end)

	self.humanoidStateEnabledChangedConn = self.humanoid.StateEnabledChanged:Connect(function(state, enabled)
		self:HumanoidStateEnabledChanged(state, enabled)
	end)

	self.jumpPower = self.humanoid.JumpPower
	self.jumpStateEnabled = self.humanoid:GetStateEnabled(Enum.HumanoidStateType.Jumping)
	self:UpdateEnabled()
end

function TouchJump:SetupCharacterAddedFunction()
	self.characterAddedConn = Players.LocalPlayer.CharacterAdded:Connect(function(char)
		self:CharacterAdded(char)
	end)
	if Players.LocalPlayer.Character then
		self:CharacterAdded(Players.LocalPlayer.Character)
	end
end

function TouchJump:Enable(enable, parentFrame)
	if parentFrame then
		self.parentUIFrame = parentFrame
	end
	self.externallyEnabled = enable
	self:EnableButton(enable)
end

function TouchJump:Create()
	if not self.parentUIFrame then
		return
	end

	if self.jumpButton then
		self.jumpButton:Destroy()
		self.jumpButton = nil
	end

	local minAxis = math.min(self.parentUIFrame.AbsoluteSize.x, self.parentUIFrame.AbsoluteSize.y)
	local isSmallScreen = minAxis <= 500
	local jumpButtonSize = isSmallScreen and 70 or 120

	self.jumpButton = Instance.new("ImageButton")
	self.jumpButton.Name = "JumpButton"
	self.jumpButton.Visible = false
	self.jumpButton.BackgroundTransparency = 1
	self.jumpButton.Image = TOUCH_CONTROL_SHEET
	self.jumpButton.ImageRectOffset = Vector2.new(1, 146)
	self.jumpButton.ImageRectSize = Vector2.new(144, 144)
	self.jumpButton.Size = UDim2.new(0, jumpButtonSize, 0, jumpButtonSize)

    self.jumpButton.Position = isSmallScreen and UDim2.new(1, -(jumpButtonSize*1.5-10), 1, -jumpButtonSize - 20) or
        UDim2.new(1, -(jumpButtonSize*1.5-10), 1, -jumpButtonSize * 1.75)

	local touchObject = nil
	self.jumpButton.InputBegan:connect(function(inputObject)
		--A touch that starts elsewhere on the screen will be sent to a frame's InputBegan event
		--if it moves over the frame. So we check that this is actually a new touch (inputObject.UserInputState ~= Enum.UserInputState.Begin)
		if touchObject or inputObject.UserInputType ~= Enum.UserInputType.Touch
			or inputObject.UserInputState ~= Enum.UserInputState.Begin then
			return
		end

		touchObject = inputObject
		self.jumpButton.ImageRectOffset = Vector2.new(146, 146)
		self.isJumping = true
	end)

	local OnInputEnded = function()
		touchObject = nil
		self.isJumping = false
		self.jumpButton.ImageRectOffset = Vector2.new(1, 146)
	end

	self.jumpButton.InputEnded:connect(function(inputObject)
		if inputObject == touchObject then
			OnInputEnded()
		end
	end)

	GuiService.MenuOpened:connect(function()
		if touchObject then
			OnInputEnded()
		end
	end)

	if not self.characterAddedConn then
		self:SetupCharacterAddedFunction()
	end

	self.jumpButton.Parent = self.parentUIFrame
end

return TouchJump
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c003d</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXA7892A7E02E2479D845AD9032BA32A50">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PathDisplay</string>
							<string name="ScriptGuid">{947688BC-CAF5-4D4E-BD39-E5D4C9048046}</string>
							<ProtectedString name="Source"><![CDATA[

local PathDisplay = {}
PathDisplay.spacing = 8
PathDisplay.image = "rbxasset://textures/Cursors/Gamepad/Pointer.png"
PathDisplay.imageSize = Vector2.new(2, 2)

local currentPoints = {}
local renderedPoints = {}

local pointModel = Instance.new("Model")
pointModel.Name = "PathDisplayPoints"

local adorneePart = Instance.new("Part")
adorneePart.Anchored = true
adorneePart.CanCollide = false
adorneePart.Transparency = 1
adorneePart.Name = "PathDisplayAdornee"
adorneePart.CFrame = CFrame.new(0, 0, 0)
adorneePart.Parent = pointModel

local pointPool = {}
local poolTop = 30
for i = 1, poolTop do
	local point = Instance.new("ImageHandleAdornment")
	point.Archivable = false
	point.Adornee = adorneePart
	point.Image = PathDisplay.image
	point.Size = PathDisplay.imageSize
	pointPool[i] = point
end

local function retrieveFromPool()
	local point = pointPool[1]
	if not point then
		return
	end
	
	pointPool[1], pointPool[poolTop] = pointPool[poolTop], nil
	poolTop = poolTop - 1
	return point
end

local function returnToPool(point)
	poolTop = poolTop + 1
	pointPool[poolTop] = point
end

local function renderPoint(point, isLast)
	if poolTop == 0 then
		return
	end

	local rayDown = Ray.new(point + Vector3.new(0, 2, 0), Vector3.new(0, -8, 0))
	local hitPart, hitPoint, hitNormal = workspace:FindPartOnRayWithIgnoreList(rayDown, { game.Players.LocalPlayer.Character, workspace.CurrentCamera  }) 	
	if not hitPart then
		return
	end

	local pointCFrame = CFrame.new(hitPoint, hitPoint + hitNormal)
	
	local point = retrieveFromPool()
	point.CFrame = pointCFrame
	point.Parent = pointModel
	return point
end

function PathDisplay.setCurrentPoints(points)
	if typeof(points) == 'table' then
		currentPoints = points
	else
		currentPoints = {}
	end
end

function PathDisplay.clearRenderedPath()
	for _, oldPoint in ipairs(renderedPoints) do
		oldPoint.Parent = nil
		returnToPool(oldPoint)
	end
	renderedPoints = {}
	pointModel.Parent = nil
end

function PathDisplay.renderPath()
	PathDisplay.clearRenderedPath()
	if not currentPoints or #currentPoints == 0 then
		return
	end

	local currentIdx = #currentPoints
	local lastPos = currentPoints[currentIdx]	
	local distanceBudget = 0
	
	renderedPoints[1] = renderPoint(lastPos, true)
	if not renderedPoints[1] then
		return
	end
	
	while true do
		local currentPoint = currentPoints[currentIdx]
		local nextPoint = currentPoints[currentIdx - 1]
		
		if currentIdx < 2 then
			break
		else
			
			local toNextPoint = nextPoint - currentPoint
			local distToNextPoint = toNextPoint.magnitude	
			
			if distanceBudget > distToNextPoint then
				distanceBudget = distanceBudget - distToNextPoint
				currentIdx = currentIdx - 1
			else
				local dirToNextPoint = toNextPoint.unit
				local pointPos = currentPoint + (dirToNextPoint * distanceBudget)
				local point = renderPoint(pointPos, false)
				
				if point then
					renderedPoints[#renderedPoints + 1] = point
				end
				
				distanceBudget = distanceBudget + PathDisplay.spacing
			end
		end
	end
	
	pointModel.Parent = workspace.CurrentCamera
end

return PathDisplay
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c003e</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX4E0438986C9A4E5BB0CBEFDC3AF3EFCF">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">DynamicThumbstick</string>
							<string name="ScriptGuid">{A93B36C3-B64A-4C8B-8E84-03210A14CC58}</string>
							<ProtectedString name="Source"><![CDATA[local FFlagUserDTDoesNotForceAutoJump do
	local success, result = pcall(function()
		return UserSettings:GetUserFeatureEnabled("UserDTDoesNotForceAutoJump")
	end)
	FFlagUserDTDoesNotForceAutoJump = success and result
end

local FFlagUserDTDoesNotTrackTools do
	local success, result = pcall(function()
		return UserSettings:GetUserFeatureEnabled("UserDTDoesNotTrackTools")
	end)
	FFlagUserDTDoesNotTrackTools = success and result
end

local FFlagUserDTFastInit do
	local success, result = pcall(function()
		return UserSettings:GetUserFeatureEnabled("UserDTFastInit")
	end)
	FFlagUserDTFastInit = success and result
end

--[[ Constants ]]--
local ZERO_VECTOR3 = Vector3.new(0,0,0)
local TOUCH_CONTROLS_SHEET = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png"

local DYNAMIC_THUMBSTICK_ACTION_NAME = "DynamicThumbstickAction"
local DYNAMIC_THUMBSTICK_ACTION_PRIORITY = Enum.ContextActionPriority.High.Value

local MIDDLE_TRANSPARENCIES = {
	1 - 0.89,
	1 - 0.70,
	1 - 0.60,
	1 - 0.50,
	1 - 0.40,
	1 - 0.30,
	1 - 0.25
}
local NUM_MIDDLE_IMAGES = #MIDDLE_TRANSPARENCIES

local FADE_IN_OUT_BACKGROUND = true
local FADE_IN_OUT_MAX_ALPHA = 0.35

local FADE_IN_OUT_HALF_DURATION_DEFAULT = 0.3
local FADE_IN_OUT_BALANCE_DEFAULT = 0.5
local ThumbstickFadeTweenInfo = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)

local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")
local UserInputService = game:GetService("UserInputService")
local ContextActionService = game:GetService("ContextActionService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
if not LocalPlayer then
	Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
	LocalPlayer = Players.LocalPlayer
end

--[[ The Module ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local DynamicThumbstick = setmetatable({}, BaseCharacterController)
DynamicThumbstick.__index = DynamicThumbstick

function DynamicThumbstick.new()
	local self = setmetatable(BaseCharacterController.new(), DynamicThumbstick)

	self.humanoid = nil -- Remove on FFlagUserDTDoesNotTrackTools

	self.tools = {} -- Remove on FFlagUserDTDoesNotTrackTools
	self.toolEquipped = nil -- Remove on FFlagUserDTDoesNotTrackTools

	self.moveTouchObject = nil
	self.moveTouchLockedIn = false
	self.moveTouchFirstChanged = false
	self.moveTouchStartPosition = nil

	self.startImage = nil
	self.endImage = nil
	self.middleImages = {}

	self.startImageFadeTween = nil
	self.endImageFadeTween = nil
	self.middleImageFadeTweens = {}

	self.isFirstTouch = true

	self.thumbstickFrame = nil

	self.onRenderSteppedConn = nil

	self.fadeInAndOutBalance = FADE_IN_OUT_BALANCE_DEFAULT
	self.fadeInAndOutHalfDuration = FADE_IN_OUT_HALF_DURATION_DEFAULT
	self.hasFadedBackgroundInPortrait = false
	self.hasFadedBackgroundInLandscape = false

	self.tweenInAlphaStart = nil
	self.tweenOutAlphaStart = nil

	-- If this module changes a player's humanoid's AutoJumpEnabled, it saves
	-- the previous state in this variable to revert to
	self.shouldRevertAutoJumpOnDisable = false -- Remove on FFlagUserDTDoesNotForceAutoJump

	return self
end

-- Note: Overrides base class GetIsJumping with get-and-clear behavior to do a single jump
-- rather than sustained jumping. This is only to preserve the current behavior through the refactor.
function DynamicThumbstick:GetIsJumping()
	local wasJumping = self.isJumping
	self.isJumping = false
	return wasJumping
end

function DynamicThumbstick:EnableAutoJump(enable) -- Remove on FFlagUserDTDoesNotForceAutoJump
	if FFlagUserDTDoesNotForceAutoJump then
		return
	end
	local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		humanoid.AutoJumpEnabled = false --autojump bad
	end
end

function DynamicThumbstick:Enable(enable, uiParentFrame)
	if enable == nil then return false end			-- If nil, return false (invalid argument)
	enable = enable and true or false				-- Force anything non-nil to boolean before comparison
	if self.enabled == enable then return true end	-- If no state change, return true indicating already in requested state

	if enable then
		-- Enable
		if not self.thumbstickFrame then
			self:Create(uiParentFrame)
		end

		self:BindContextActions()

		if not FFlagUserDTDoesNotTrackTools then
			if LocalPlayer.Character then
				self:OnCharacterAdded(LocalPlayer.Character)
			else
				LocalPlayer.CharacterAdded:Connect(function(char)
					self:OnCharacterAdded(char)
				end)
			end
		end
	else
		ContextActionService:UnbindAction(DYNAMIC_THUMBSTICK_ACTION_NAME)
		-- Disable
		self:OnInputEnded() -- Cleanup
	end

	self.enabled = enable
	self.thumbstickFrame.Visible = enable
end

function DynamicThumbstick:OnCharacterAdded(char) -- Remove on FFlagUserDTDoesNotTrackTools
	assert(not FFlagUserDTDoesNotTrackTools)

	for _, child in ipairs(char:GetChildren()) do
		if child:IsA("Tool") then
			self.toolEquipped = child
		end
	end

	char.ChildAdded:Connect(function(child)
		if child:IsA("Tool") then
			self.toolEquipped = child
		elseif child:IsA("Humanoid") then
			self:EnableAutoJump(true) -- Remove on FFlagUserDTDoesNotForceAutoJump
		end
	end)
	char.ChildRemoved:Connect(function(child)
		if child == self.toolEquipped then
			self.toolEquipped = nil
		end
	end)

	self.humanoid = char:FindFirstChildOfClass("Humanoid")
	if self.humanoid then
		self:EnableAutoJump(true) -- Remove on FFlagUserDTDoesNotForceAutoJump
	end
end

-- Was called OnMoveTouchEnded in previous version
function DynamicThumbstick:OnInputEnded()
	self.moveTouchObject = nil
	self.moveVector = ZERO_VECTOR3
	self:FadeThumbstick(false)
end

function DynamicThumbstick:FadeThumbstick(visible)
	if not visible and self.moveTouchObject then
		return
	end
	if self.isFirstTouch then return end

	if self.startImageFadeTween then
		self.startImageFadeTween:Cancel()
	end
	if self.endImageFadeTween then
		self.endImageFadeTween:Cancel()
	end
	for i = 1, #self.middleImages do
		if self.middleImageFadeTweens[i] then
			self.middleImageFadeTweens[i]:Cancel()
		end
	end

	if visible then
		self.startImageFadeTween = TweenService:Create(self.startImage, ThumbstickFadeTweenInfo, { ImageTransparency = 0 })
		self.startImageFadeTween:Play()

		self.endImageFadeTween = TweenService:Create(self.endImage, ThumbstickFadeTweenInfo, { ImageTransparency = 0.2 })
		self.endImageFadeTween:Play()

		for i = 1, #self.middleImages do
			self.middleImageFadeTweens[i] = TweenService:Create(self.middleImages[i], ThumbstickFadeTweenInfo, { ImageTransparency = MIDDLE_TRANSPARENCIES[i] })
			self.middleImageFadeTweens[i]:Play()
		end
	else
		self.startImageFadeTween = TweenService:Create(self.startImage, ThumbstickFadeTweenInfo, { ImageTransparency = 1 })
		self.startImageFadeTween:Play()

		self.endImageFadeTween = TweenService:Create(self.endImage, ThumbstickFadeTweenInfo, { ImageTransparency = 1 })
		self.endImageFadeTween:Play()

		for i = 1, #self.middleImages do
			self.middleImageFadeTweens[i] = TweenService:Create(self.middleImages[i], ThumbstickFadeTweenInfo, { ImageTransparency = 1 })
			self.middleImageFadeTweens[i]:Play()
		end
	end
end

function DynamicThumbstick:FadeThumbstickFrame(fadeDuration, fadeRatio)
	self.fadeInAndOutHalfDuration = fadeDuration * 0.5
	self.fadeInAndOutBalance = fadeRatio
	self.tweenInAlphaStart = tick()
end

function DynamicThumbstick:InputInFrame(inputObject)
	local frameCornerTopLeft = self.thumbstickFrame.AbsolutePosition
	local frameCornerBottomRight = frameCornerTopLeft + self.thumbstickFrame.AbsoluteSize
	local inputPosition = inputObject.Position
	if inputPosition.X >= frameCornerTopLeft.X and inputPosition.Y >= frameCornerTopLeft.Y then
		if inputPosition.X <= frameCornerBottomRight.X and inputPosition.Y <= frameCornerBottomRight.Y then
			return true
		end
	end
	return false
end

function DynamicThumbstick:DoFadeInBackground()
	local playerGui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
	local hasFadedBackgroundInOrientation = false

	-- only fade in/out the background once per orientation
	if playerGui then
		if playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeLeft or
			playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeRight then
				hasFadedBackgroundInOrientation = self.hasFadedBackgroundInLandscape
				self.hasFadedBackgroundInLandscape = true
		elseif playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.Portrait then
				hasFadedBackgroundInOrientation = self.hasFadedBackgroundInPortrait
				self.hasFadedBackgroundInPortrait = true
		end
	end

	if not hasFadedBackgroundInOrientation then
		self.fadeInAndOutHalfDuration = FADE_IN_OUT_HALF_DURATION_DEFAULT
		self.fadeInAndOutBalance = FADE_IN_OUT_BALANCE_DEFAULT
		self.tweenInAlphaStart = tick()
	end
end

function DynamicThumbstick:DoMove(direction)
	local currentMoveVector = direction

	-- Scaled Radial Dead Zone
	local inputAxisMagnitude = currentMoveVector.magnitude
	if inputAxisMagnitude < self.radiusOfDeadZone then
		currentMoveVector = ZERO_VECTOR3
	else
		currentMoveVector = currentMoveVector.unit*(
			1 - math.max(0, (self.radiusOfMaxSpeed - currentMoveVector.magnitude)/self.radiusOfMaxSpeed)
		)
		currentMoveVector = Vector3.new(currentMoveVector.x, 0, currentMoveVector.y)
	end

	self.moveVector = currentMoveVector
end


function DynamicThumbstick:LayoutMiddleImages(startPos, endPos)
	local startDist = (self.thumbstickSize / 2) + self.middleSize
	local vector = endPos - startPos
	local distAvailable = vector.magnitude - (self.thumbstickRingSize / 2) - self.middleSize
	local direction = vector.unit

	local distNeeded = self.middleSpacing * NUM_MIDDLE_IMAGES
	local spacing = self.middleSpacing

	if distNeeded < distAvailable then
		spacing = distAvailable / NUM_MIDDLE_IMAGES
	end

	for i = 1, NUM_MIDDLE_IMAGES do
		local image = self.middleImages[i]
		local distWithout = startDist + (spacing * (i - 2))
		local currentDist = startDist + (spacing * (i - 1))

		if distWithout < distAvailable then
			local pos = endPos - direction * currentDist
			local exposedFraction = math.clamp(1 - ((currentDist - distAvailable) / spacing), 0, 1)

			image.Visible = true
			image.Position = UDim2.new(0, pos.X, 0, pos.Y)
			image.Size = UDim2.new(0, self.middleSize * exposedFraction, 0, self.middleSize * exposedFraction)
		else
			image.Visible = false
		end
	end
end

function DynamicThumbstick:MoveStick(pos)
	local vector2StartPosition = Vector2.new(self.moveTouchStartPosition.X, self.moveTouchStartPosition.Y)
	local startPos = vector2StartPosition - self.thumbstickFrame.AbsolutePosition
	local endPos = Vector2.new(pos.X, pos.Y) - self.thumbstickFrame.AbsolutePosition
	self.endImage.Position = UDim2.new(0, endPos.X, 0, endPos.Y)
	self:LayoutMiddleImages(startPos, endPos)
end

function DynamicThumbstick:BindContextActions()
	local function inputBegan(inputObject)
		if self.moveTouchObject then
			return Enum.ContextActionResult.Pass
		end

		if not self:InputInFrame(inputObject) then
			return Enum.ContextActionResult.Pass
		end

		if self.isFirstTouch then
			self.isFirstTouch = false
			local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0,false,0)
			TweenService:Create(self.startImage, tweenInfo, {Size = UDim2.new(0, 0, 0, 0)}):Play()
			TweenService:Create(
				self.endImage,
				tweenInfo,
				{Size = UDim2.new(0, self.thumbstickSize, 0, self.thumbstickSize), ImageColor3 = Color3.new(0,0,0)}
			):Play()
		end

		self.moveTouchLockedIn = false
		self.moveTouchObject = inputObject
		self.moveTouchStartPosition = inputObject.Position
		self.moveTouchFirstChanged = true

		if FADE_IN_OUT_BACKGROUND then
			self:DoFadeInBackground()
		end

		return Enum.ContextActionResult.Pass
	end

	local function inputChanged(inputObject)
		if inputObject == self.moveTouchObject then
			if self.moveTouchFirstChanged then
				self.moveTouchFirstChanged = false

				local startPosVec2 = Vector2.new(
					inputObject.Position.X - self.thumbstickFrame.AbsolutePosition.X,
					inputObject.Position.Y - self.thumbstickFrame.AbsolutePosition.Y
				)
				self.startImage.Visible = true
				self.startImage.Position = UDim2.new(0, startPosVec2.X, 0, startPosVec2.Y)
				self.endImage.Visible = true
				self.endImage.Position = self.startImage.Position

				self:FadeThumbstick(true)
				self:MoveStick(inputObject.Position)
			end

			self.moveTouchLockedIn = true

			local direction = Vector2.new(
				inputObject.Position.x - self.moveTouchStartPosition.x,
				inputObject.Position.y - self.moveTouchStartPosition.y
			)
			if math.abs(direction.x) > 0 or math.abs(direction.y) > 0 then
				self:DoMove(direction)
				self:MoveStick(inputObject.Position)
			end
			return Enum.ContextActionResult.Sink
		end
		return Enum.ContextActionResult.Pass
	end

	local function inputEnded(inputObject)
		if inputObject == self.moveTouchObject then
			self:OnInputEnded()
			if self.moveTouchLockedIn then
				return Enum.ContextActionResult.Sink
			end
		end
		return Enum.ContextActionResult.Pass
	end

	local function handleInput(actionName, inputState, inputObject)
		if inputState == Enum.UserInputState.Begin then
			return inputBegan(inputObject)
		elseif inputState == Enum.UserInputState.Change then
			return inputChanged(inputObject)
		elseif inputState == Enum.UserInputState.End then
			return inputEnded(inputObject)
		elseif inputState == Enum.UserInputState.Cancel then
			self:OnInputEnded()
		end
	end

	ContextActionService:BindActionAtPriority(
		DYNAMIC_THUMBSTICK_ACTION_NAME,
		handleInput,
		false,
		DYNAMIC_THUMBSTICK_ACTION_PRIORITY,
		Enum.UserInputType.Touch)
end

function DynamicThumbstick:Create(parentFrame)
	if self.thumbstickFrame then
		self.thumbstickFrame:Destroy()
		self.thumbstickFrame = nil
		if self.onRenderSteppedConn then
			self.onRenderSteppedConn:Disconnect()
			self.onRenderSteppedConn = nil
		end
	end

	self.thumbstickSize = 45
	self.thumbstickRingSize = 20
	self.middleSize = 10
	self.middleSpacing = self.middleSize + 4
	self.radiusOfDeadZone = 2
	self.radiusOfMaxSpeed = 20

	local screenSize = parentFrame.AbsoluteSize
	local isBigScreen = math.min(screenSize.x, screenSize.y) > 500
	if isBigScreen then
		self.thumbstickSize = self.thumbstickSize * 2
		self.thumbstickRingSize = self.thumbstickRingSize * 2
		self.middleSize = self.middleSize * 2
		self.middleSpacing = self.middleSpacing * 2
		self.radiusOfDeadZone = self.radiusOfDeadZone * 2
		self.radiusOfMaxSpeed = self.radiusOfMaxSpeed * 2
	end

	local function layoutThumbstickFrame(portraitMode)
		if portraitMode then
			self.thumbstickFrame.Size = UDim2.new(1, 0, 0.4, 0)
			self.thumbstickFrame.Position = UDim2.new(0, 0, 0.6, 0)
		else
			self.thumbstickFrame.Size = UDim2.new(0.4, 0, 2/3, 0)
			self.thumbstickFrame.Position = UDim2.new(0, 0, 1/3, 0)
		end
	end

	self.thumbstickFrame = Instance.new("Frame")
	self.thumbstickFrame.BorderSizePixel = 0
	self.thumbstickFrame.Name = "DynamicThumbstickFrame"
	self.thumbstickFrame.Visible = false
	self.thumbstickFrame.BackgroundTransparency = 1.0
	self.thumbstickFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	self.thumbstickFrame.Active = false
	layoutThumbstickFrame(false)

	self.startImage = Instance.new("ImageLabel")
	self.startImage.Name = "ThumbstickStart"
	self.startImage.Visible = true
	self.startImage.BackgroundTransparency = 1
	self.startImage.Image = TOUCH_CONTROLS_SHEET
	self.startImage.ImageRectOffset = Vector2.new(1,1)
	self.startImage.ImageRectSize = Vector2.new(144, 144)
	self.startImage.ImageColor3 = Color3.new(0, 0, 0)
	self.startImage.AnchorPoint = Vector2.new(0.5, 0.5)
	self.startImage.Position = UDim2.new(0, self.thumbstickRingSize * 3.3, 1, -self.thumbstickRingSize  * 2.8)
	self.startImage.Size = UDim2.new(0, self.thumbstickRingSize  * 3.7, 0, self.thumbstickRingSize  * 3.7)
	self.startImage.ZIndex = 10
	self.startImage.Parent = self.thumbstickFrame

	self.endImage = Instance.new("ImageLabel")
	self.endImage.Name = "ThumbstickEnd"
	self.endImage.Visible = true
	self.endImage.BackgroundTransparency = 1
	self.endImage.Image = TOUCH_CONTROLS_SHEET
	self.endImage.ImageRectOffset = Vector2.new(1,1)
	self.endImage.ImageRectSize =  Vector2.new(144, 144)
	self.endImage.AnchorPoint = Vector2.new(0.5, 0.5)
	self.endImage.Position = self.startImage.Position
	self.endImage.Size = UDim2.new(0, self.thumbstickSize * 0.8, 0, self.thumbstickSize * 0.8)
	self.endImage.ZIndex = 10
	self.endImage.Parent = self.thumbstickFrame

	for i = 1, NUM_MIDDLE_IMAGES do
		self.middleImages[i] = Instance.new("ImageLabel")
		self.middleImages[i].Name = "ThumbstickMiddle"
		self.middleImages[i].Visible = false
		self.middleImages[i].BackgroundTransparency = 1
		self.middleImages[i].Image = TOUCH_CONTROLS_SHEET
		self.middleImages[i].ImageRectOffset = Vector2.new(1,1)
		self.middleImages[i].ImageRectSize = Vector2.new(144, 144)
		self.middleImages[i].ImageTransparency = MIDDLE_TRANSPARENCIES[i]
		self.middleImages[i].AnchorPoint = Vector2.new(0.5, 0.5)
		self.middleImages[i].ZIndex = 9
		self.middleImages[i].Parent = self.thumbstickFrame
	end

	local CameraChangedConn = nil
	local function onCurrentCameraChanged()
		if CameraChangedConn then
			CameraChangedConn:Disconnect()
			CameraChangedConn = nil
		end
		local newCamera = workspace.CurrentCamera
		if newCamera then
			local function onViewportSizeChanged()
				local size = newCamera.ViewportSize
				local portraitMode = size.X < size.Y
				layoutThumbstickFrame(portraitMode)
			end
			CameraChangedConn = newCamera:GetPropertyChangedSignal("ViewportSize"):Connect(onViewportSizeChanged)
			onViewportSizeChanged()
		end
	end
	workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(onCurrentCameraChanged)
	if workspace.CurrentCamera then
		onCurrentCameraChanged()
	end

	self.moveTouchStartPosition = nil

	self.startImageFadeTween = nil
	self.endImageFadeTween = nil
	self.middleImageFadeTweens = {}

	self.onRenderSteppedConn = RunService.RenderStepped:Connect(function()
		if self.tweenInAlphaStart ~= nil then
			local delta = tick() - self.tweenInAlphaStart
			local fadeInTime = (self.fadeInAndOutHalfDuration * 2 * self.fadeInAndOutBalance)
			self.thumbstickFrame.BackgroundTransparency = 1 - FADE_IN_OUT_MAX_ALPHA*math.min(delta/fadeInTime, 1)
			if delta > fadeInTime then
				self.tweenOutAlphaStart = tick()
				self.tweenInAlphaStart = nil
			end
		elseif self.tweenOutAlphaStart ~= nil then
			local delta = tick() - self.tweenOutAlphaStart
			local fadeOutTime = (self.fadeInAndOutHalfDuration * 2) - (self.fadeInAndOutHalfDuration * 2 * self.fadeInAndOutBalance)
			self.thumbstickFrame.BackgroundTransparency = 1 - FADE_IN_OUT_MAX_ALPHA + FADE_IN_OUT_MAX_ALPHA*math.min(delta/fadeOutTime, 1)
			if delta > fadeOutTime  then
				self.tweenOutAlphaStart = nil
			end
		end
	end)

	self.onTouchEndedConn = UserInputService.TouchEnded:connect(function(inputObject)
		if inputObject == self.moveTouchObject then
			self:OnInputEnded()
		end
	end)

	GuiService.MenuOpened:connect(function()
		if self.moveTouchObject then
			self:OnInputEnded()
		end
	end)

	local playerGui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
	while not playerGui do
		LocalPlayer.ChildAdded:wait()
		playerGui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
	end

	local playerGuiChangedConn = nil
	local originalScreenOrientationWasLandscape =	playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeLeft or
													playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeRight

	local function longShowBackground()
		self.fadeInAndOutHalfDuration = 2.5
		self.fadeInAndOutBalance = 0.05
		self.tweenInAlphaStart = tick()
	end

	playerGuiChangedConn = playerGui:GetPropertyChangedSignal("CurrentScreenOrientation"):Connect(function()
		if (originalScreenOrientationWasLandscape and playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.Portrait) or
			(not originalScreenOrientationWasLandscape and playerGui.CurrentScreenOrientation ~= Enum.ScreenOrientation.Portrait) then

			playerGuiChangedConn:disconnect()
			longShowBackground()

			if originalScreenOrientationWasLandscape then
				self.hasFadedBackgroundInPortrait = true
			else
				self.hasFadedBackgroundInLandscape = true
			end
		end
	end)

	self.thumbstickFrame.Parent = parentFrame

	if FFlagUserDTFastInit then
		if game:IsLoaded() then
			longShowBackground()
		else
			coroutine.wrap(function()
				game.Loaded:Wait()
				longShowBackground()
			end)()
		end
	else
		spawn(function()
			if game:IsLoaded() then
				longShowBackground()
			else
				game.Loaded:wait()
				longShowBackground()
			end
		end)
	end
end

return DynamicThumbstick
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c003f</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX3319210A553B440C8D87016BF7ADC66C">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">ClickToMoveController</string>
							<string name="ScriptGuid">{DBD8AB2D-18FD-4F40-B297-75F656FFDAAF}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	-- Original By Kip Turner, Copyright Roblox 2014
	-- Updated by Garnold to utilize the new PathfindingService API, 2017
	-- 2018 PlayerScripts Update - AllYourBlox
--]]

--[[ Roblox Services ]]--
local UserInputService = game:GetService("UserInputService")
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")
local DebrisService = game:GetService('Debris')
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")
local CollectionService = game:GetService("CollectionService")
local GuiService = game:GetService("GuiService")

--[[ Configuration ]]
local ShowPath = true
local PlayFailureAnimation = true
local UseDirectPath = false
local UseDirectPathForVehicle = true
local AgentSizeIncreaseFactor = 1.0
local UnreachableWaypointTimeout = 8

--[[ Constants ]]--
local movementKeys = {
	[Enum.KeyCode.W] = true;
	[Enum.KeyCode.A] = true;
	[Enum.KeyCode.S] = true;
	[Enum.KeyCode.D] = true;
	[Enum.KeyCode.Up] = true;
	[Enum.KeyCode.Down] = true;
}

local FFlagUserNavigationClickToMoveSkipPassedWaypointsSuccess, FFlagUserNavigationClickToMoveSkipPassedWaypointsResult = pcall(function() return UserSettings():IsUserFeatureEnabled("UserNavigationClickToMoveSkipPassedWaypoints") end)
local FFlagUserNavigationClickToMoveSkipPassedWaypoints = FFlagUserNavigationClickToMoveSkipPassedWaypointsSuccess and FFlagUserNavigationClickToMoveSkipPassedWaypointsResult
local FFlagUserClickToMoveFollowPathRefactorSuccess, FFlagUserClickToMoveFollowPathRefactorResult = pcall(function() return UserSettings():IsUserFeatureEnabled("UserClickToMoveFollowPathRefactor") end)
local FFlagUserClickToMoveFollowPathRefactor = FFlagUserClickToMoveFollowPathRefactorSuccess and FFlagUserClickToMoveFollowPathRefactorResult

local Player = Players.LocalPlayer

local ClickToMoveDisplay = require(script.Parent:WaitForChild("ClickToMoveDisplay"))

local ZERO_VECTOR3 = Vector3.new(0,0,0)
local ALMOST_ZERO = 0.000001


--------------------------UTIL LIBRARY-------------------------------
local Utility = {}
do
	local function FindCharacterAncestor(part)
		if part then
			local humanoid = part:FindFirstChildOfClass("Humanoid")
			if humanoid then
				return part, humanoid
			else
				return FindCharacterAncestor(part.Parent)
			end
		end
	end
	Utility.FindCharacterAncestor = FindCharacterAncestor

	local function Raycast(ray, ignoreNonCollidable, ignoreList)
		ignoreList = ignoreList or {}
		local hitPart, hitPos, hitNorm, hitMat = Workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
		if hitPart then
			if ignoreNonCollidable and hitPart.CanCollide == false then
				-- We always include character parts so a user can click on another character
				-- to walk to them.
				local _, humanoid = FindCharacterAncestor(hitPart)
				if humanoid == nil then
					table.insert(ignoreList, hitPart)
					return Raycast(ray, ignoreNonCollidable, ignoreList)
				end
			end
			return hitPart, hitPos, hitNorm, hitMat
		end
		return nil, nil
	end
	Utility.Raycast = Raycast
end

local humanoidCache = {}
local function findPlayerHumanoid(player)
	local character = player and player.Character
	if character then
		local resultHumanoid = humanoidCache[player]
		if resultHumanoid and resultHumanoid.Parent == character then
			return resultHumanoid
		else
			humanoidCache[player] = nil -- Bust Old Cache
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if humanoid then
				humanoidCache[player] = humanoid
			end
			return humanoid
		end
	end
end

--------------------------CHARACTER CONTROL-------------------------------
local CurrentIgnoreList
local CurrentIgnoreTag = nil

local TaggedInstanceAddedConnection = nil
local TaggedInstanceRemovedConnection = nil

local function GetCharacter()
	return Player and Player.Character
end

local function UpdateIgnoreTag(newIgnoreTag)
	if newIgnoreTag == CurrentIgnoreTag then
		return
	end
	if TaggedInstanceAddedConnection then
		TaggedInstanceAddedConnection:Disconnect()
		TaggedInstanceAddedConnection = nil
	end
	if TaggedInstanceRemovedConnection then
		TaggedInstanceRemovedConnection:Disconnect()
		TaggedInstanceRemovedConnection = nil
	end
	CurrentIgnoreTag = newIgnoreTag
	CurrentIgnoreList = {GetCharacter()}
	if CurrentIgnoreTag ~= nil then
		local ignoreParts = CollectionService:GetTagged(CurrentIgnoreTag)
		for _, ignorePart in ipairs(ignoreParts) do
			table.insert(CurrentIgnoreList, ignorePart)
		end
		TaggedInstanceAddedConnection = CollectionService:GetInstanceAddedSignal(
			CurrentIgnoreTag):Connect(function(ignorePart)
			table.insert(CurrentIgnoreList, ignorePart)
		end)
		TaggedInstanceRemovedConnection = CollectionService:GetInstanceRemovedSignal(
			CurrentIgnoreTag):Connect(function(ignorePart)
			for i = 1, #CurrentIgnoreList do
				if CurrentIgnoreList[i] == ignorePart then
					CurrentIgnoreList[i] = CurrentIgnoreList[#CurrentIgnoreList]
					table.remove(CurrentIgnoreList)
					break
				end
			end
		end)
	end
end

local function getIgnoreList()
	if CurrentIgnoreList then
		return CurrentIgnoreList
	end
	CurrentIgnoreList = {}
	table.insert(CurrentIgnoreList, GetCharacter())
	return CurrentIgnoreList
end

-----------------------------------PATHER--------------------------------------

local function Pather(endPoint, surfaceNormal, overrideUseDirectPath)
	local this = {}

	local directPathForHumanoid
	local directPathForVehicle
	if overrideUseDirectPath ~= nil then
		directPathForHumanoid = overrideUseDirectPath
		directPathForVehicle = overrideUseDirectPath
	else
		directPathForHumanoid = UseDirectPath
		directPathForVehicle = UseDirectPathForVehicle
	end

	this.Cancelled = false
	this.Started = false

	this.Finished = Instance.new("BindableEvent")
	this.PathFailed = Instance.new("BindableEvent")

	this.PathComputing = false
	this.PathComputed = false

	this.OriginalTargetPoint = endPoint
	this.TargetPoint = endPoint
	this.TargetSurfaceNormal = surfaceNormal

	this.DiedConn = nil
	this.SeatedConn = nil
	this.MoveToConn = nil	-- To be removd with FFlagUserClickToMoveFollowPathRefactor
	this.BlockedConn = nil
	this.TeleportedConn = nil

	this.CurrentPoint = 0

	this.HumanoidOffsetFromPath = ZERO_VECTOR3

	this.CurrentWaypointPosition = nil
	this.CurrentWaypointPlaneNormal = ZERO_VECTOR3
	this.CurrentWaypointPlaneDistance = 0
	this.CurrentWaypointNeedsJump = false;

	this.CurrentHumanoidPosition = ZERO_VECTOR3
	this.CurrentHumanoidVelocity = 0

	this.NextActionMoveDirection = ZERO_VECTOR3
	this.NextActionJump = false

	this.Timeout = 0

	this.Humanoid = findPlayerHumanoid(Player)
	this.OriginPoint = nil
	this.AgentCanFollowPath = false
	this.DirectPath = false
	this.DirectPathRiseFirst = false

	if FFlagUserClickToMoveFollowPathRefactor then
		local rootPart = this.Humanoid and this.Humanoid.RootPart
		if rootPart then
			-- Setup origin
			this.OriginPoint = rootPart.CFrame.p

			-- Setup agent
			local agentRadius = 2
			local agentHeight = 5
			local agentCanJump = true

			local seat = this.Humanoid.SeatPart
			if seat and seat:IsA("VehicleSeat") then
				-- Humanoid is seated on a vehicle
				local vehicle = seat:FindFirstAncestorOfClass("Model")
				if vehicle then
					-- Make sure the PrimaryPart is set to the vehicle seat while we compute the extends.
					local tempPrimaryPart = vehicle.PrimaryPart
					vehicle.PrimaryPart = seat

					-- For now, only direct path
					if directPathForVehicle then
						local extents = vehicle:GetExtentsSize()
						agentRadius = AgentSizeIncreaseFactor * 0.5 * math.sqrt(extents.X * extents.X + extents.Z * extents.Z)
						agentHeight = AgentSizeIncreaseFactor * extents.Y
						agentCanJump = false
						this.AgentCanFollowPath = true
						this.DirectPath = directPathForVehicle
					end

					-- Reset PrimaryPart
					vehicle.PrimaryPart = tempPrimaryPart
				end
			else
				local extents = GetCharacter():GetExtentsSize()
				agentRadius = AgentSizeIncreaseFactor * 0.5 * math.sqrt(extents.X * extents.X + extents.Z * extents.Z)
				agentHeight = AgentSizeIncreaseFactor * extents.Y
				agentCanJump = (this.Humanoid.JumpPower > 0)
				this.AgentCanFollowPath = true
				this.DirectPath = directPathForHumanoid
				this.DirectPathRiseFirst = this.Humanoid.Sit
			end

			-- Build path object
			this.pathResult = PathfindingService:CreatePath({AgentRadius = agentRadius, AgentHeight = agentHeight, AgentCanJump = agentCanJump})
		end
	else
		if this.Humanoid then
			local torso = this.Humanoid.Torso
			if torso then
				this.OriginPoint = torso.CFrame.p
				this.AgentCanFollowPath = true
				this.DirectPath = directPathForHumanoid
			end
		end
	end

	function this:Cleanup()
		if this.stopTraverseFunc then
			this.stopTraverseFunc()
			this.stopTraverseFunc = nil
		end

		if this.MoveToConn then
			this.MoveToConn:Disconnect()
			this.MoveToConn = nil
		end

		if this.BlockedConn then
			this.BlockedConn:Disconnect()
			this.BlockedConn = nil
		end

		if this.DiedConn then
			this.DiedConn:Disconnect()
			this.DiedConn = nil
		end

		if this.SeatedConn then
			this.SeatedConn:Disconnect()
			this.SeatedConn = nil
		end

		if this.TeleportedConn then
			this.TeleportedConn:Disconnect()
			this.TeleportedConn = nil
		end

		this.Started = false
	end

	function this:Cancel()
		this.Cancelled = true
		this:Cleanup()
	end

	function this:IsActive()
		return this.AgentCanFollowPath and this.Started and not this.Cancelled
	end

	function this:OnPathInterrupted()
		-- Stop moving
		this.Cancelled = true
		this:OnPointReached(false)
	end

	function this:ComputePath()
		if this.OriginPoint then
			if this.PathComputed or this.PathComputing then return end
			this.PathComputing = true
			if FFlagUserClickToMoveFollowPathRefactor then
				if this.AgentCanFollowPath then
					if this.DirectPath then
						this.pointList = {
							PathWaypoint.new(this.OriginPoint, Enum.PathWaypointAction.Walk),
							PathWaypoint.new(this.TargetPoint, this.DirectPathRiseFirst and Enum.PathWaypointAction.Jump or Enum.PathWaypointAction.Walk)
						}
						this.PathComputed = true
					else
						this.pathResult:ComputeAsync(this.OriginPoint, this.TargetPoint)
						this.pointList = this.pathResult:GetWaypoints()
						this.BlockedConn = this.pathResult.Blocked:Connect(function(blockedIdx) this:OnPathBlocked(blockedIdx) end)
						this.PathComputed = this.pathResult.Status == Enum.PathStatus.Success
					end
				end
			else
				pcall(function()
					this.pathResult = PathfindingService:FindPathAsync(this.OriginPoint, this.TargetPoint)
				end)
				this.pointList = this.pathResult and this.pathResult:GetWaypoints()
				if this.pathResult then
					this.BlockedConn = this.pathResult.Blocked:Connect(function(blockedIdx) this:OnPathBlocked(blockedIdx) end)
				end
				this.PathComputed = this.pathResult and this.pathResult.Status == Enum.PathStatus.Success or false
			end
			this.PathComputing = false
		end
	end

	function this:IsValidPath()
		if FFlagUserClickToMoveFollowPathRefactor then
			this:ComputePath()
			return this.PathComputed and this.AgentCanFollowPath
		else
			if not this.pathResult then
				this:ComputePath()
			end
			return this.pathResult.Status == Enum.PathStatus.Success
		end
	end

	this.Recomputing = false
	function this:OnPathBlocked(blockedWaypointIdx)
		local pathBlocked = blockedWaypointIdx >= this.CurrentPoint
		if not pathBlocked or this.Recomputing then
			return
		end

		this.Recomputing = true

		if this.stopTraverseFunc then
			this.stopTraverseFunc()
			this.stopTraverseFunc = nil
		end

		if FFlagUserClickToMoveFollowPathRefactor then
			this.OriginPoint = this.Humanoid.RootPart.CFrame.p
		else
			this.OriginPoint = this.Humanoid.Torso.CFrame.p
		end

		this.pathResult:ComputeAsync(this.OriginPoint, this.TargetPoint)
		this.pointList = this.pathResult:GetWaypoints()
		if #this.pointList > 0 then
			if FFlagUserClickToMoveFollowPathRefactor then
				this.HumanoidOffsetFromPath = this.pointList[1].Position - this.OriginPoint
			else
				-- Nothing to do : offset did not change
			end
		end
		this.PathComputed = this.pathResult.Status == Enum.PathStatus.Success

		if ShowPath then
			this.stopTraverseFunc, this.setPointFunc = ClickToMoveDisplay.CreatePathDisplay(this.pointList)
		end
		if this.PathComputed then
			this.CurrentPoint = 1 -- The first waypoint is always the start location. Skip it.
			this:OnPointReached(true) -- Move to first point
		else
			this.PathFailed:Fire()
			this:Cleanup()
		end

		this.Recomputing = false
	end

	function this:OnRenderStepped(dt)
		if this.Started and not this.Cancelled then
			-- Check for Timeout (if a waypoint is not reached within the delay, we fail)
			this.Timeout = this.Timeout + dt
			if this.Timeout > UnreachableWaypointTimeout then
				this:OnPointReached(false)
				return
			end

			-- Get Humanoid position and velocity
			this.CurrentHumanoidPosition = this.Humanoid.RootPart.Position + this.HumanoidOffsetFromPath
			this.CurrentHumanoidVelocity = this.Humanoid.RootPart.Velocity

			-- Check if it has reached some waypoints
			while this.Started and this:IsCurrentWaypointReached() do
				this:OnPointReached(true)
			end

			-- If still started, update actions
			if this.Started then
				-- Move action
				this.NextActionMoveDirection = this.CurrentWaypointPosition - this.CurrentHumanoidPosition
				if this.NextActionMoveDirection.Magnitude > ALMOST_ZERO then
					this.NextActionMoveDirection = this.NextActionMoveDirection.Unit
				else
					this.NextActionMoveDirection = ZERO_VECTOR3
				end
				-- Jump action
				if this.CurrentWaypointNeedsJump then
					this.NextActionJump = true
					this.CurrentWaypointNeedsJump = false	-- Request jump only once
				else
					this.NextActionJump = false
				end
			end
		end
	end

	function this:IsCurrentWaypointReached()
		local reached = false

		-- Check we do have a plane, if not, we consider the waypoint reached
		if this.CurrentWaypointPlaneNormal ~= ZERO_VECTOR3 then
			-- Compute distance of Humanoid from destination plane
			local dist = this.CurrentWaypointPlaneNormal:Dot(this.CurrentHumanoidPosition) - this.CurrentWaypointPlaneDistance
			-- Compute the component of the Humanoid velocity that is towards the plane
			local velocity = -this.CurrentWaypointPlaneNormal:Dot(this.CurrentHumanoidVelocity)
			-- Compute the threshold from the destination plane based on Humanoid velocity
			local threshold = math.max(1.0, 0.0625 * velocity)
			-- If we are less then threshold in front of the plane (between 0 and threshold) or if we are behing the plane (less then 0), we consider we reached it
			reached = dist < threshold
		else
			reached = true
		end

		if reached then
			this.CurrentWaypointPosition = nil
			this.CurrentWaypointPlaneNormal	= ZERO_VECTOR3
			this.CurrentWaypointPlaneDistance = 0
		end

		return reached
	end

	function this:OnPointReached(reached)

		if reached and not this.Cancelled then

			if FFlagUserClickToMoveFollowPathRefactor then
				-- First, destroyed the current displayed waypoint
				if this.setPointFunc then
					this.setPointFunc(this.CurrentPoint)
				end
			end

			local nextWaypointIdx = this.CurrentPoint + 1

			if nextWaypointIdx > #this.pointList then
				-- End of path reached
				if this.stopTraverseFunc then
					this.stopTraverseFunc()
				end
				this.Finished:Fire()
				this:Cleanup()
			else
				local currentWaypoint = this.pointList[this.CurrentPoint]
				local nextWaypoint = this.pointList[nextWaypointIdx]

				-- If airborne, only allow to keep moving
				-- if nextWaypoint.Action ~= Jump, or path mantains a direction
				-- Otherwise, wait until the humanoid gets to the ground
				local currentState = this.Humanoid:GetState()
				local isInAir = currentState == Enum.HumanoidStateType.FallingDown
					or currentState == Enum.HumanoidStateType.Freefall
					or currentState == Enum.HumanoidStateType.Jumping

				if isInAir then
					local shouldWaitForGround = nextWaypoint.Action == Enum.PathWaypointAction.Jump
					if not shouldWaitForGround and this.CurrentPoint > 1 then
						local prevWaypoint = this.pointList[this.CurrentPoint - 1]

						local prevDir = currentWaypoint.Position - prevWaypoint.Position
						local currDir = nextWaypoint.Position - currentWaypoint.Position

						local prevDirXZ = Vector2.new(prevDir.x, prevDir.z).Unit
						local currDirXZ = Vector2.new(currDir.x, currDir.z).Unit

						local THRESHOLD_COS = 0.996 -- ~cos(5 degrees)
						shouldWaitForGround = prevDirXZ:Dot(currDirXZ) < THRESHOLD_COS
					end

					if shouldWaitForGround then
						this.Humanoid.FreeFalling:Wait()

						-- Give time to the humanoid's state to change
						-- Otherwise, the jump flag in Humanoid
						-- will be reset by the state change
						wait(0.1)
					end
				end

				-- Move to the next point
				if FFlagUserNavigationClickToMoveSkipPassedWaypoints then
					if FFlagUserClickToMoveFollowPathRefactor then
						this:MoveToNextWayPoint(currentWaypoint, nextWaypoint, nextWaypointIdx)
					else
						-- First, check if we already passed the next point
						local nextWaypointAlreadyReached
						-- 1) Build plane (normal is from next waypoint towards current one
						-- (provided the two waypoints are not at the same location); location is at next waypoint)
						local planeNormal = currentWaypoint.Position - nextWaypoint.Position
						if planeNormal.Magnitude > ALMOST_ZERO then
							planeNormal	= planeNormal.Unit
							local planeDistance	= planeNormal:Dot(nextWaypoint.Position)
							-- 2) Find current Humanoid position
							local humanoidPosition = this.Humanoid.RootPart.Position - Vector3.new(
								0, 0.5 * this.Humanoid.RootPart.Size.y + this.Humanoid.HipHeight, 0)
							-- 3) Compute distance from plane
							local dist = planeNormal:Dot(humanoidPosition) - planeDistance
							-- 4) If we are less then a stud in front of the plane or if we are behing the plane, we consider we reached it
							nextWaypointAlreadyReached = dist < 1.0
						else
							-- Next waypoint is the same as current waypoint so we reached it as well
							nextWaypointAlreadyReached = true
						end

						-- Prepare for next point
						if not FFlagUserClickToMoveFollowPathRefactor then
							if this.setPointFunc then
								this.setPointFunc(nextWaypointIdx)
							end
						end
						this.CurrentPoint = nextWaypointIdx

						-- Either callback here right away if next waypoint is already passed
						-- Otherwise, ask the Humanoid to MoveTo
						if nextWaypointAlreadyReached then
							this:OnPointReached(true)
						else
							if nextWaypoint.Action == Enum.PathWaypointAction.Jump then
								this.Humanoid.Jump = true
							end
							this.Humanoid:MoveTo(nextWaypoint.Position)
						end
					end
				else
					if this.setPointFunc then
						this.setPointFunc(nextWaypointIdx)
					end
					if nextWaypoint.Action == Enum.PathWaypointAction.Jump then
						this.Humanoid.Jump = true
					end
					this.Humanoid:MoveTo(nextWaypoint.Position)

					this.CurrentPoint = nextWaypointIdx
				end
			end
		else
			this.PathFailed:Fire()
			this:Cleanup()
		end
	end

	function this:MoveToNextWayPoint(currentWaypoint, nextWaypoint, nextWaypointIdx)
		-- Build next destination plane
		-- (plane normal is perpendicular to the y plane and is from next waypoint towards current one (provided the two waypoints are not at the same location))
		-- (plane location is at next waypoint)
		this.CurrentWaypointPlaneNormal = currentWaypoint.Position - nextWaypoint.Position
		this.CurrentWaypointPlaneNormal = Vector3.new(this.CurrentWaypointPlaneNormal.X, 0, this.CurrentWaypointPlaneNormal.Z)
		if this.CurrentWaypointPlaneNormal.Magnitude > ALMOST_ZERO then
			this.CurrentWaypointPlaneNormal	= this.CurrentWaypointPlaneNormal.Unit
			this.CurrentWaypointPlaneDistance = this.CurrentWaypointPlaneNormal:Dot(nextWaypoint.Position)
		else
			-- Next waypoint is the same as current waypoint so no plane
			this.CurrentWaypointPlaneNormal	= ZERO_VECTOR3
			this.CurrentWaypointPlaneDistance = 0
		end

		-- Should we jump
		this.CurrentWaypointNeedsJump = nextWaypoint.Action == Enum.PathWaypointAction.Jump;

		-- Remember next waypoint position
		this.CurrentWaypointPosition = nextWaypoint.Position

		-- Move to next point
		this.CurrentPoint = nextWaypointIdx

		-- Finally reset Timeout
		this.Timeout = 0
	end

	function this:Start(overrideShowPath)
		if not this.AgentCanFollowPath then
			this.PathFailed:Fire()
			return
		end

		if this.Started then return end
		this.Started = true

		ClickToMoveDisplay.CancelFailureAnimation()

		if ShowPath then
			if overrideShowPath == nil or overrideShowPath then
				this.stopTraverseFunc, this.setPointFunc = ClickToMoveDisplay.CreatePathDisplay(this.pointList, this.OriginalTargetPoint)
			end
		end

		if #this.pointList > 0 then
			-- Determine the humanoid offset from the path's first point
			if FFlagUserClickToMoveFollowPathRefactor then
				-- Offset of the first waypoint from the path's origin point
				this.HumanoidOffsetFromPath = Vector3.new(0, this.pointList[1].Position.Y - this.OriginPoint.Y, 0)
			else
				-- Humanoid height above ground
				this.HumanoidOffsetFromPath = Vector3.new(0, -(0.5 * this.Humanoid.RootPart.Size.y + this.Humanoid.HipHeight), 0)
			end

			-- As well as its current position and velocity
			this.CurrentHumanoidPosition = this.Humanoid.RootPart.Position + this.HumanoidOffsetFromPath
			this.CurrentHumanoidVelocity = this.Humanoid.RootPart.Velocity

			-- Connect to events
			this.SeatedConn = this.Humanoid.Seated:Connect(function(isSeated, seat) this:OnPathInterrupted() end)
			this.DiedConn = this.Humanoid.Died:Connect(function() this:OnPathInterrupted() end)
			if not FFlagUserClickToMoveFollowPathRefactor then
				this.MoveToConn = this.Humanoid.MoveToFinished:Connect(function(reached) this:OnPointReached(reached) end)
			end
			if FFlagUserClickToMoveFollowPathRefactor then
				this.TeleportedConn = this.Humanoid.RootPart:GetPropertyChangedSignal("CFrame"):Connect(function() this:OnPathInterrupted() end)
			end

			-- Actually start
			this.CurrentPoint = 1 -- The first waypoint is always the start location. Skip it.
			this:OnPointReached(true) -- Move to first point
		else
			this.PathFailed:Fire()
			if this.stopTraverseFunc then
				this.stopTraverseFunc()
			end
		end
	end

	--We always raycast to the ground in the case that the user clicked a wall.
	local offsetPoint = this.TargetPoint + this.TargetSurfaceNormal*1.5
	local ray = Ray.new(offsetPoint, Vector3.new(0,-1,0)*50)
	local newHitPart, newHitPos = Workspace:FindPartOnRayWithIgnoreList(ray, getIgnoreList())
	if newHitPart then
		this.TargetPoint = newHitPos
	end
	this:ComputePath()

	return this
end

-------------------------------------------------------------------------

local function CheckAlive()
	local humanoid = findPlayerHumanoid(Player)
	return humanoid ~= nil and humanoid.Health > 0
end

local function GetEquippedTool(character)
	if character ~= nil then
		for _, child in pairs(character:GetChildren()) do
			if child:IsA('Tool') then
				return child
			end
		end
	end
end

local ExistingPather = nil
local ExistingIndicator = nil
local PathCompleteListener = nil
local PathFailedListener = nil

local function CleanupPath()
	if ExistingPather then
		ExistingPather:Cancel()
		ExistingPather = nil
	end
	if PathCompleteListener then
		PathCompleteListener:Disconnect()
		PathCompleteListener = nil
	end
	if PathFailedListener then
		PathFailedListener:Disconnect()
		PathFailedListener = nil
	end
	if ExistingIndicator then
		ExistingIndicator:Destroy()
	end
end

-- Remove with FFlagUserClickToMoveFollowPathRefactor
local function HandleDirectMoveTo(hitPt, myHumanoid)
	if myHumanoid then
		if myHumanoid.Sit then
			myHumanoid.Jump = true
		end
		myHumanoid:MoveTo(hitPt)
	end

	local endWaypoint = ClickToMoveDisplay.CreateEndWaypoint(hitPt)
	ExistingIndicator = endWaypoint
	coroutine.wrap(function()
		myHumanoid.MoveToFinished:wait()
		endWaypoint:Destroy()
	end)()
end

local function HandleMoveTo(thisPather, hitPt, hitChar, character, overrideShowPath)
	if FFlagUserClickToMoveFollowPathRefactor then
		ExistingPather = thisPather
	end

	thisPather:Start(overrideShowPath)

	if not FFlagUserClickToMoveFollowPathRefactor then
		CleanupPath()
	end

	if not FFlagUserClickToMoveFollowPathRefactor then
		ExistingPather = thisPather
	end

	PathCompleteListener = thisPather.Finished.Event:Connect(function()
		if FFlagUserClickToMoveFollowPathRefactor then
			CleanupPath()
		end
		if hitChar then
			local currentWeapon = GetEquippedTool(character)
			if currentWeapon then
				currentWeapon:Activate()
			end
		end
	end)
	PathFailedListener = thisPather.PathFailed.Event:Connect(function()
		CleanupPath()
		if overrideShowPath == nil or overrideShowPath then
			local shouldPlayFailureAnim = PlayFailureAnimation and not (ExistingPather and ExistingPather:IsActive())
			if shouldPlayFailureAnim then
				ClickToMoveDisplay.PlayFailureAnimation()
			end
			ClickToMoveDisplay.DisplayFailureWaypoint(hitPt)
		end
	end)
end

local function ShowPathFailedFeedback(hitPt)
	if ExistingPather and ExistingPather:IsActive() then
		ExistingPather:Cancel()
	end
	if PlayFailureAnimation then
		ClickToMoveDisplay.PlayFailureAnimation()
	end
	ClickToMoveDisplay.DisplayFailureWaypoint(hitPt)
end

function OnTap(tapPositions, goToPoint, wasTouchTap)
	-- Good to remember if this is the latest tap event
	local camera = Workspace.CurrentCamera
	local character = Player.Character

	if not CheckAlive() then return end

	-- This is a path tap position
	if #tapPositions == 1 or goToPoint then
		if camera then
			local unitRay = camera:ScreenPointToRay(tapPositions[1].x, tapPositions[1].y)
			local ray = Ray.new(unitRay.Origin, unitRay.Direction*1000)

			local myHumanoid = findPlayerHumanoid(Player)
			local hitPart, hitPt, hitNormal = Utility.Raycast(ray, true, getIgnoreList())

			local hitChar, hitHumanoid = Utility.FindCharacterAncestor(hitPart)
			if wasTouchTap and hitHumanoid and StarterGui:GetCore("AvatarContextMenuEnabled") then
				local clickedPlayer = Players:GetPlayerFromCharacter(hitHumanoid.Parent)
				if clickedPlayer then
					CleanupPath()
					return
				end
			end
			if goToPoint then
				hitPt = goToPoint
				hitChar = nil
			end
			if FFlagUserClickToMoveFollowPathRefactor then
				if hitPt and character then
					-- Clean up current path
					CleanupPath()
					local thisPather = Pather(hitPt, hitNormal)
					if thisPather:IsValidPath() then
						HandleMoveTo(thisPather, hitPt, hitChar, character)
					else
						-- Clean up
						thisPather:Cleanup()
						-- Feedback here for when we don't have a good path
						ShowPathFailedFeedback(hitPt)
					end
				end
			else
				if UseDirectPath and hitPt and character then
					HandleDirectMoveTo(hitPt, myHumanoid)
				elseif hitPt and character then
					local thisPather = Pather(hitPt, hitNormal)
					if thisPather:IsValidPath() then
						HandleMoveTo(thisPather, hitPt, hitChar, character)
					else
						if hitPt then
							-- Feedback here for when we don't have a good path
							ShowPathFailedFeedback(hitPt)
						end
					end
				end
			end
		end
	elseif #tapPositions >= 2 then
		if camera then
			-- Do shoot
			local currentWeapon = GetEquippedTool(character)
			if currentWeapon then
				currentWeapon:Activate()
			end
		end
	end
end

local function DisconnectEvent(event)
	if event then
		event:Disconnect()
	end
end

--[[ The ClickToMove Controller Class ]]--
local KeyboardController = require(script.Parent:WaitForChild("Keyboard"))
local ClickToMove = setmetatable({}, KeyboardController)
ClickToMove.__index = ClickToMove

function ClickToMove.new(CONTROL_ACTION_PRIORITY)
	local self = setmetatable(KeyboardController.new(CONTROL_ACTION_PRIORITY), ClickToMove)

	self.fingerTouches = {}
	self.numUnsunkTouches = 0
	-- PC simulation
	self.mouse1Down = tick()
	self.mouse1DownPos = Vector2.new()
	self.mouse2DownTime = tick()
	self.mouse2DownPos = Vector2.new()
	self.mouse2UpTime = tick()

	self.keyboardMoveVector = ZERO_VECTOR3

	self.tapConn = nil
	self.inputBeganConn = nil
	self.inputChangedConn = nil
	self.inputEndedConn = nil
	self.humanoidDiedConn = nil
	self.characterChildAddedConn = nil
	self.onCharacterAddedConn = nil
	self.characterChildRemovedConn = nil
	self.renderSteppedConn = nil
	self.menuOpenedConnection = nil

	self.running = false

	self.wasdEnabled = false

	return self
end

function ClickToMove:DisconnectEvents()
	DisconnectEvent(self.tapConn)
	DisconnectEvent(self.inputBeganConn)
	DisconnectEvent(self.inputChangedConn)
	DisconnectEvent(self.inputEndedConn)
	DisconnectEvent(self.humanoidDiedConn)
	DisconnectEvent(self.characterChildAddedConn)
	DisconnectEvent(self.onCharacterAddedConn)
	DisconnectEvent(self.renderSteppedConn)
	DisconnectEvent(self.characterChildRemovedConn)
	DisconnectEvent(self.menuOpenedConnection)
end

function ClickToMove:OnTouchBegan(input, processed)
	if self.fingerTouches[input] == nil and not processed then
		self.numUnsunkTouches = self.numUnsunkTouches + 1
	end
	self.fingerTouches[input] = processed
end

function ClickToMove:OnTouchChanged(input, processed)
	if self.fingerTouches[input] == nil then
		self.fingerTouches[input] = processed
		if not processed then
			self.numUnsunkTouches = self.numUnsunkTouches + 1
		end
	end
end

function ClickToMove:OnTouchEnded(input, processed)
	if self.fingerTouches[input] ~= nil and self.fingerTouches[input] == false then
		self.numUnsunkTouches = self.numUnsunkTouches - 1
	end
	self.fingerTouches[input] = nil
end


function ClickToMove:OnCharacterAdded(character)
	self:DisconnectEvents()

	self.inputBeganConn = UserInputService.InputBegan:Connect(function(input, processed)
		if input.UserInputType == Enum.UserInputType.Touch then
			self:OnTouchBegan(input, processed)
		end

		-- Cancel path when you use the keyboard controls if wasd is enabled.
		if self.wasdEnabled and processed == false and input.UserInputType == Enum.UserInputType.Keyboard
			and movementKeys[input.KeyCode] then
			CleanupPath()
			if FFlagUserClickToMoveFollowPathRefactor then
				ClickToMoveDisplay.CancelFailureAnimation()
			end
		end
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			self.mouse1DownTime = tick()
			self.mouse1DownPos = input.Position
		end
		if input.UserInputType == Enum.UserInputType.MouseButton2 then
			self.mouse2DownTime = tick()
			self.mouse2DownPos = input.Position
		end
	end)

	self.inputChangedConn = UserInputService.InputChanged:Connect(function(input, processed)
		if input.UserInputType == Enum.UserInputType.Touch then
			self:OnTouchChanged(input, processed)
		end
	end)

	self.inputEndedConn = UserInputService.InputEnded:Connect(function(input, processed)
		if input.UserInputType == Enum.UserInputType.Touch then
			self:OnTouchEnded(input, processed)
		end

		if input.UserInputType == Enum.UserInputType.MouseButton2 then
			self.mouse2UpTime = tick()
			local currPos = input.Position
			-- We allow click to move during path following or if there is no keyboard movement
			local allowed
			if FFlagUserClickToMoveFollowPathRefactor then
				allowed = ExistingPather or self.keyboardMoveVector.Magnitude <= 0
			else
				allowed = self.moveVector.Magnitude <= 0
			end
			if self.mouse2UpTime - self.mouse2DownTime < 0.25 and (currPos - self.mouse2DownPos).magnitude < 5 and allowed then
				local positions = {currPos}
				OnTap(positions)
			end
		end
	end)

	self.tapConn = UserInputService.TouchTap:Connect(function(touchPositions, processed)
		if not processed then
			OnTap(touchPositions, nil, true)
		end
	end)

	self.menuOpenedConnection = GuiService.MenuOpened:Connect(function()
		CleanupPath()
	end)

	local function OnCharacterChildAdded(child)
		if UserInputService.TouchEnabled then
			if child:IsA('Tool') then
				child.ManualActivationOnly = true
			end
		end
		if child:IsA('Humanoid') then
			DisconnectEvent(self.humanoidDiedConn)
			self.humanoidDiedConn = child.Died:Connect(function()
				if ExistingIndicator then
					DebrisService:AddItem(ExistingIndicator.Model, 1)
				end
			end)
		end
	end

	self.characterChildAddedConn = character.ChildAdded:Connect(function(child)
		OnCharacterChildAdded(child)
	end)
	self.characterChildRemovedConn = character.ChildRemoved:Connect(function(child)
		if UserInputService.TouchEnabled then
			if child:IsA('Tool') then
				child.ManualActivationOnly = false
			end
		end
	end)
	for _, child in pairs(character:GetChildren()) do
		OnCharacterChildAdded(child)
	end
end

function ClickToMove:Start()
	self:Enable(true)
end

function ClickToMove:Stop()
	self:Enable(false)
end

function ClickToMove:CleanupPath()
	CleanupPath()
end

function ClickToMove:Enable(enable, enableWASD, touchJumpController)
	if enable then
		if not self.running then
			if Player.Character then -- retro-listen
				self:OnCharacterAdded(Player.Character)
			end
			self.onCharacterAddedConn = Player.CharacterAdded:Connect(function(char)
				self:OnCharacterAdded(char)
			end)
			self.running = true
		end
		self.touchJumpController = touchJumpController
		if self.touchJumpController then
			self.touchJumpController:Enable(self.jumpEnabled)
		end
	else
		if self.running then
			self:DisconnectEvents()
			CleanupPath()
			-- Restore tool activation on shutdown
			if UserInputService.TouchEnabled then
				local character = Player.Character
				if character then
					for _, child in pairs(character:GetChildren()) do
						if child:IsA('Tool') then
							child.ManualActivationOnly = false
						end
					end
				end
			end
			self.running = false
		end
		if self.touchJumpController and not self.jumpEnabled then
			self.touchJumpController:Enable(true)
		end
		self.touchJumpController = nil
	end

	-- Extension for initializing Keyboard input as this class now derives from Keyboard
	if UserInputService.KeyboardEnabled and enable ~= self.enabled then

		self.forwardValue  = 0
		self.backwardValue = 0
		self.leftValue = 0
		self.rightValue = 0

		self.moveVector = ZERO_VECTOR3

		if enable then
			self:BindContextActions()
			self:ConnectFocusEventListeners()
		else
			self:UnbindContextActions()
			self:DisconnectFocusEventListeners()
		end
	end

	self.wasdEnabled = enable and enableWASD or false
	self.enabled = enable
end

function ClickToMove:OnRenderStepped(dt)
	if not FFlagUserClickToMoveFollowPathRefactor then
		return
	end

	-- Reset jump
	self.isJumping = false

	-- Handle Pather
	if ExistingPather then
		-- Let the Pather update
		ExistingPather:OnRenderStepped(dt)

		-- If we still have a Pather, set the resulting actions
		if ExistingPather then
			-- Setup move (NOT relative to camera)
			self.moveVector = ExistingPather.NextActionMoveDirection
			self.moveVectorIsCameraRelative = false

			-- Setup jump (but do NOT prevent the base Keayboard class from requesting jumps as well)
			if ExistingPather.NextActionJump then
				self.isJumping = true
			end
		else
			self.moveVector = self.keyboardMoveVector
			self.moveVectorIsCameraRelative = true
		end
	else
		self.moveVector = self.keyboardMoveVector
		self.moveVectorIsCameraRelative = true
	end

	-- Handle Keyboard's jump
	if self.jumpRequested then
		self.isJumping = true
	end
end

-- Overrides Keyboard:UpdateMovement(inputState) to conditionally consider self.wasdEnabled and let OnRenderStepped handle the movement
function ClickToMove:UpdateMovement(inputState)
	if FFlagUserClickToMoveFollowPathRefactor then
		if inputState == Enum.UserInputState.Cancel then
			self.keyboardMoveVector = ZERO_VECTOR3
		elseif self.wasdEnabled then
			self.keyboardMoveVector = Vector3.new(self.leftValue + self.rightValue, 0, self.forwardValue + self.backwardValue)
		end
	else
		if inputState == Enum.UserInputState.Cancel then
			self.moveVector = ZERO_VECTOR3
		elseif self.wasdEnabled then
			self.moveVector = Vector3.new(self.leftValue + self.rightValue, 0, self.forwardValue + self.backwardValue)
			if self.moveVector.magnitude > 0 then
				CleanupPath()
				ClickToMoveDisplay.CancelFailureAnimation()
			end
		end
	end
end

-- Overrides Keyboard:UpdateJump() because jump is handled in OnRenderStepped
function ClickToMove:UpdateJump()
	if FFlagUserClickToMoveFollowPathRefactor then
		-- Nothing to do (handled in OnRenderStepped)
	else
		self.isJumping = self.jumpRequested
	end
end

--Public developer facing functions
function ClickToMove:SetShowPath(value)
	ShowPath = value
end

function ClickToMove:GetShowPath()
	return ShowPath
end

function ClickToMove:SetWaypointTexture(texture)
	ClickToMoveDisplay.SetWaypointTexture(texture)
end

function ClickToMove:GetWaypointTexture()
	return ClickToMoveDisplay.GetWaypointTexture()
end

function ClickToMove:SetWaypointRadius(radius)
	ClickToMoveDisplay.SetWaypointRadius(radius)
end

function ClickToMove:GetWaypointRadius()
	return ClickToMoveDisplay.GetWaypointRadius()
end

function ClickToMove:SetEndWaypointTexture(texture)
	ClickToMoveDisplay.SetEndWaypointTexture(texture)
end

function ClickToMove:GetEndWaypointTexture()
	return ClickToMoveDisplay.GetEndWaypointTexture()
end

function ClickToMove:SetWaypointsAlwaysOnTop(alwaysOnTop)
	ClickToMoveDisplay.SetWaypointsAlwaysOnTop(alwaysOnTop)
end

function ClickToMove:GetWaypointsAlwaysOnTop()
	return ClickToMoveDisplay.GetWaypointsAlwaysOnTop()
end

function ClickToMove:SetFailureAnimationEnabled(enabled)
	PlayFailureAnimation = enabled
end

function ClickToMove:GetFailureAnimationEnabled()
	return PlayFailureAnimation
end

function ClickToMove:SetIgnoredPartsTag(tag)
	UpdateIgnoreTag(tag)
end

function ClickToMove:GetIgnoredPartsTag()
	return CurrentIgnoreTag
end

function ClickToMove:SetUseDirectPath(directPath)
	UseDirectPath = directPath
end

function ClickToMove:GetUseDirectPath()
	return UseDirectPath
end

function ClickToMove:SetAgentSizeIncreaseFactor(increaseFactorPercent)
	AgentSizeIncreaseFactor = 1.0 + (increaseFactorPercent / 100.0)
end

function ClickToMove:GetAgentSizeIncreaseFactor()
	return (AgentSizeIncreaseFactor - 1.0) * 100.0
end

function ClickToMove:SetUnreachableWaypointTimeout(timeoutInSec)
	UnreachableWaypointTimeout = timeoutInSec
end

function ClickToMove:GetUnreachableWaypointTimeout()
	return UnreachableWaypointTimeout
end

function ClickToMove:SetUserJumpEnabled(jumpEnabled)
	self.jumpEnabled = jumpEnabled
	if self.touchJumpController then
		self.touchJumpController:Enable(jumpEnabled)
	end
end

function ClickToMove:GetUserJumpEnabled()
	return self.jumpEnabled
end

function ClickToMove:MoveTo(position, showPath, useDirectPath)
	local character = Player.Character
	if character == nil then
		return false
	end
	local thisPather = Pather(position, Vector3.new(0, 1, 0), useDirectPath)
	if thisPather and thisPather:IsValidPath() then
		if FFlagUserClickToMoveFollowPathRefactor then
			-- Clean up previous path
			CleanupPath()
		end
		HandleMoveTo(thisPather, position, nil, character, showPath)
		return true
	end
	return false
end

return ClickToMove
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0040</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXAB3E765732794E76B1F1D684910CE567">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">VehicleController</string>
							<string name="ScriptGuid">{AA0D990B-9226-4AD1-AD1D-E4D6B0AD9C77}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	// FileName: VehicleControl
	// Version 1.0
	// Written by: jmargh
	// Description: Implements in-game vehicle controls for all input devices

	// NOTE: This works for basic vehicles (single vehicle seat). If you use custom VehicleSeat code,
	// multiple VehicleSeats or your own implementation of a VehicleSeat this will not work.
--]]
local ContextActionService = game:GetService("ContextActionService")

--[[ Constants ]]--
-- Set this to true if you want to instead use the triggers for the throttle
local useTriggersForThrottle = true
-- Also set this to true if you want the thumbstick to not affect throttle, only triggers when a gamepad is conected
local onlyTriggersForThrottle = false
local ZERO_VECTOR3 = Vector3.new(0,0,0)

local betterHandlingInputStatesFlagExists, betterHandlingInputStatesFlagEnabled = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserBetterHandlingVehicleInputStates")
end)
local FFlagBetterHandlingVehicleInputStates = betterHandlingInputStatesFlagExists and betterHandlingInputStatesFlagEnabled

local FFlagUserClickToMoveFollowPathRefactorSuccess, FFlagUserClickToMoveFollowPathRefactorResult = pcall(function() return UserSettings():IsUserFeatureEnabled("UserClickToMoveFollowPathRefactor") end)
local FFlagUserClickToMoveFollowPathRefactor = FFlagUserClickToMoveFollowPathRefactorSuccess and FFlagUserClickToMoveFollowPathRefactorResult

local AUTO_PILOT_DEFAULT_MAX_STEERING_ANGLE = 35


-- Note that VehicleController does not derive from BaseCharacterController, it is a special case
local VehicleController = {}
VehicleController.__index = VehicleController

function VehicleController.new(CONTROL_ACTION_PRIORITY)
	local self = setmetatable({}, VehicleController)

	self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY

	self.enabled = false
	self.vehicleSeat = nil
	self.throttle = 0
	self.steer = 0

	self.acceleration = 0
	self.decceleration = 0
	self.turningRight = 0
	self.turningLeft = 0

	self.vehicleMoveVector = ZERO_VECTOR3

	self.autoPilot = {}
	self.autoPilot.MaxSpeed = 0
	self.autoPilot.MaxSteeringAngle = 0

	return self
end

function VehicleController:BindContextActions()
	if useTriggersForThrottle then
		ContextActionService:BindActionAtPriority("throttleAccel", (function(actionName, inputState, inputObject)
			self:OnThrottleAccel(actionName, inputState, inputObject)
			return Enum.ContextActionResult.Pass
		end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonR2)
		ContextActionService:BindActionAtPriority("throttleDeccel", (function(actionName, inputState, inputObject)
			self:OnThrottleDeccel(actionName, inputState, inputObject)
			return Enum.ContextActionResult.Pass
		end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonL2)
	end
	ContextActionService:BindActionAtPriority("arrowSteerRight", (function(actionName, inputState, inputObject)
		self:OnSteerRight(actionName, inputState, inputObject)
		return Enum.ContextActionResult.Pass
	end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Right)
	ContextActionService:BindActionAtPriority("arrowSteerLeft", (function(actionName, inputState, inputObject)
		self:OnSteerLeft(actionName, inputState, inputObject)
		return Enum.ContextActionResult.Pass
	end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Left)
end

function VehicleController:Enable(enable, vehicleSeat)
	if enable == self.enabled and vehicleSeat == self.vehicleSeat then
		return
	end

	self.enabled = enable
	self.vehicleMoveVector = ZERO_VECTOR3

	if enable then
		if vehicleSeat then
			self.vehicleSeat = vehicleSeat

			if FFlagUserClickToMoveFollowPathRefactor then
				self:SetupAutoPilot()
			end

			self:BindContextActions()
		end
	else
		if useTriggersForThrottle then
			ContextActionService:UnbindAction("throttleAccel")
			ContextActionService:UnbindAction("throttleDeccel")
		end
		ContextActionService:UnbindAction("arrowSteerRight")
		ContextActionService:UnbindAction("arrowSteerLeft")
		self.vehicleSeat = nil
	end
end

function VehicleController:OnThrottleAccel(actionName, inputState, inputObject)
	if FFlagBetterHandlingVehicleInputStates then
		if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
			self.acceleration = 0
		else
			self.acceleration = -1
		end
	else
		self.acceleration = (inputState ~= Enum.UserInputState.End) and -1 or 0
	end
	self.throttle = self.acceleration + self.decceleration
end

function VehicleController:OnThrottleDeccel(actionName, inputState, inputObject)
	if FFlagBetterHandlingVehicleInputStates then
		if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
			self.decceleration = 0
		else
			self.decceleration = 1
		end
	else
		self.decceleration = (inputState ~= Enum.UserInputState.End) and 1 or 0
	end
	self.throttle = self.acceleration + self.decceleration
end

function VehicleController:OnSteerRight(actionName, inputState, inputObject)
	if FFlagBetterHandlingVehicleInputStates then
		if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
			self.turningRight = 0
		else
			self.turningRight = 1
		end
	else
		self.turningRight = (inputState ~= Enum.UserInputState.End) and 1 or 0
	end
	self.steer = self.turningRight + self.turningLeft
end

function VehicleController:OnSteerLeft(actionName, inputState, inputObject)
	if FFlagBetterHandlingVehicleInputStates then
		if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
			self.turningLeft = 0
		else
			self.turningLeft = -1
		end
	else
		self.turningLeft = (inputState ~= Enum.UserInputState.End) and -1 or 0
	end
	self.steer = self.turningRight + self.turningLeft
end

-- Call this from a function bound to Renderstep with Input Priority
function VehicleController:Update(moveVector, cameraRelative, usingGamepad)
	if self.vehicleSeat then
		if cameraRelative then
			-- This is the default steering mode
			moveVector = moveVector + Vector3.new(self.steer, 0, self.throttle)
			if usingGamepad and onlyTriggersForThrottle and useTriggersForThrottle then
				self.vehicleSeat.ThrottleFloat = -self.throttle
			else
				self.vehicleSeat.ThrottleFloat = -moveVector.Z
			end
			self.vehicleSeat.SteerFloat = moveVector.X

			return moveVector, true
		else
			-- This is the path following mode
			local localMoveVector = self.vehicleSeat.Occupant.RootPart.CFrame:VectorToObjectSpace(moveVector)

			self.vehicleSeat.ThrottleFloat = self:ComputeThrottle(localMoveVector)
			self.vehicleSeat.SteerFloat = self:ComputeSteer(localMoveVector)

			return ZERO_VECTOR3, true
		end
	end
	return moveVector, false
end

function VehicleController:ComputeThrottle(localMoveVector)
	if localMoveVector ~= ZERO_VECTOR3 then
		local throttle = -localMoveVector.Z
		return throttle
	else
		return 0.0
	end
end

function VehicleController:ComputeSteer(localMoveVector)
	if localMoveVector ~= ZERO_VECTOR3 then
		local steerAngle = -math.atan2(-localMoveVector.x, -localMoveVector.z) * (180 / math.pi)
		return steerAngle / self.autoPilot.MaxSteeringAngle
	else
		return 0.0
	end
end

function VehicleController:SetupAutoPilot()
	-- Setup default
	self.autoPilot.MaxSpeed = self.vehicleSeat.MaxSpeed
	self.autoPilot.MaxSteeringAngle = AUTO_PILOT_DEFAULT_MAX_STEERING_ANGLE

	-- VehicleSeat should have a MaxSteeringAngle as well.
	-- Or we could look for a child "AutoPilotConfigModule" to find these values
	-- Or allow developer to set them through the API as like the CLickToMove customization API
end

return VehicleController
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0041</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX5FA383148E3646F6B83E872F7C549038">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">ClickToMoveDisplay</string>
							<string name="ScriptGuid">{A5A42492-784E-42CD-BAC9-E45961D24AC1}</string>
							<ProtectedString name="Source"><![CDATA[local ClickToMoveDisplay = {}

local FAILURE_ANIMATION_ID = "rbxassetid://2874840706"

local TrailDotIcon = "rbxasset://textures/ui/traildot.png"
local EndWaypointIcon = "rbxasset://textures/ui/waypoint.png"

local WaypointsAlwaysOnTop = false

local WAYPOINT_INCLUDE_FACTOR = 2
local LAST_DOT_DISTANCE = 3

local WAYPOINT_BILLBOARD_SIZE = UDim2.new(0, 1.68 * 25, 0, 2 * 25)

local ENDWAYPOINT_SIZE_OFFSET_MIN = Vector2.new(0, 0.5)
local ENDWAYPOINT_SIZE_OFFSET_MAX = Vector2.new(0, 1)

local FAIL_WAYPOINT_SIZE_OFFSET_CENTER = Vector2.new(0, 0.5)
local FAIL_WAYPOINT_SIZE_OFFSET_LEFT = Vector2.new(0.1, 0.5)
local FAIL_WAYPOINT_SIZE_OFFSET_RIGHT = Vector2.new(-0.1, 0.5)

local FAILURE_TWEEN_LENGTH = 0.125
local FAILURE_TWEEN_COUNT = 4

local TWEEN_WAYPOINT_THRESHOLD = 5

local TRAIL_DOT_PARENT_NAME = "ClickToMoveDisplay"

local TrailDotSize = Vector2.new(1.5, 1.5)

local TRAIL_DOT_MIN_SCALE = 1
local TRAIL_DOT_MIN_DISTANCE = 10
local TRAIL_DOT_MAX_SCALE = 2.5
local TRAIL_DOT_MAX_DISTANCE = 100

local PlayersService = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = PlayersService.LocalPlayer

local function CreateWaypointTemplates()
	local TrailDotTemplate = Instance.new("Part")
	TrailDotTemplate.Size = Vector3.new(1, 1, 1)
	TrailDotTemplate.Anchored = true
	TrailDotTemplate.CanCollide = false
	TrailDotTemplate.Name = "TrailDot"
	TrailDotTemplate.Transparency = 1
	local TrailDotImage = Instance.new("ImageHandleAdornment")
	TrailDotImage.Name = "TrailDotImage"
	TrailDotImage.Size = TrailDotSize
	TrailDotImage.SizeRelativeOffset = Vector3.new(0, 0, -0.1)
	TrailDotImage.AlwaysOnTop = WaypointsAlwaysOnTop
	TrailDotImage.Image = TrailDotIcon
	TrailDotImage.Adornee = TrailDotTemplate
	TrailDotImage.Parent = TrailDotTemplate

	local EndWaypointTemplate = Instance.new("Part")
	EndWaypointTemplate.Size = Vector3.new(2, 2, 2)
	EndWaypointTemplate.Anchored = true
	EndWaypointTemplate.CanCollide = false
	EndWaypointTemplate.Name = "EndWaypoint"
	EndWaypointTemplate.Transparency = 1
	local EndWaypointImage = Instance.new("ImageHandleAdornment")
	EndWaypointImage.Name = "TrailDotImage"
	EndWaypointImage.Size = TrailDotSize
	EndWaypointImage.SizeRelativeOffset = Vector3.new(0, 0, -0.1)
	EndWaypointImage.AlwaysOnTop = WaypointsAlwaysOnTop
	EndWaypointImage.Image = TrailDotIcon
	EndWaypointImage.Adornee = EndWaypointTemplate
	EndWaypointImage.Parent = EndWaypointTemplate
	local EndWaypointBillboard = Instance.new("BillboardGui")
	EndWaypointBillboard.Name = "EndWaypointBillboard"
	EndWaypointBillboard.Size = WAYPOINT_BILLBOARD_SIZE
	EndWaypointBillboard.LightInfluence = 0
	EndWaypointBillboard.SizeOffset = ENDWAYPOINT_SIZE_OFFSET_MIN
	EndWaypointBillboard.AlwaysOnTop = true
	EndWaypointBillboard.Adornee = EndWaypointTemplate
	EndWaypointBillboard.Parent = EndWaypointTemplate
	local EndWaypointImageLabel = Instance.new("ImageLabel")
	EndWaypointImageLabel.Image = EndWaypointIcon
	EndWaypointImageLabel.BackgroundTransparency = 1
	EndWaypointImageLabel.Size = UDim2.new(1, 0, 1, 0)
	EndWaypointImageLabel.Parent = EndWaypointBillboard


	local FailureWaypointTemplate = Instance.new("Part")
	FailureWaypointTemplate.Size = Vector3.new(2, 2, 2)
	FailureWaypointTemplate.Anchored = true
	FailureWaypointTemplate.CanCollide = false
	FailureWaypointTemplate.Name = "FailureWaypoint"
	FailureWaypointTemplate.Transparency = 1
	local FailureWaypointImage = Instance.new("ImageHandleAdornment")
	FailureWaypointImage.Name = "TrailDotImage"
	FailureWaypointImage.Size = TrailDotSize
	FailureWaypointImage.SizeRelativeOffset = Vector3.new(0, 0, -0.1)
	FailureWaypointImage.AlwaysOnTop = WaypointsAlwaysOnTop
	FailureWaypointImage.Image = TrailDotIcon
	FailureWaypointImage.Adornee = FailureWaypointTemplate
	FailureWaypointImage.Parent = FailureWaypointTemplate
	local FailureWaypointBillboard = Instance.new("BillboardGui")
	FailureWaypointBillboard.Name = "FailureWaypointBillboard"
	FailureWaypointBillboard.Size = WAYPOINT_BILLBOARD_SIZE
	FailureWaypointBillboard.LightInfluence = 0
	FailureWaypointBillboard.SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_CENTER
	FailureWaypointBillboard.AlwaysOnTop = true
	FailureWaypointBillboard.Adornee = FailureWaypointTemplate
	FailureWaypointBillboard.Parent = FailureWaypointTemplate
	local FailureWaypointFrame = Instance.new("Frame")
	FailureWaypointFrame.BackgroundTransparency = 1
	FailureWaypointFrame.Size = UDim2.new(0, 0, 0, 0)
	FailureWaypointFrame.Position = UDim2.new(0.5, 0, 1, 0)
	FailureWaypointFrame.Parent = FailureWaypointBillboard
	local FailureWaypointImageLabel = Instance.new("ImageLabel")
	FailureWaypointImageLabel.Image = EndWaypointIcon
	FailureWaypointImageLabel.BackgroundTransparency = 1
	FailureWaypointImageLabel.Position = UDim2.new(
		0, -WAYPOINT_BILLBOARD_SIZE.X.Offset/2, 0, -WAYPOINT_BILLBOARD_SIZE.Y.Offset
	)
	FailureWaypointImageLabel.Size = WAYPOINT_BILLBOARD_SIZE
	FailureWaypointImageLabel.Parent = FailureWaypointFrame

	return TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate
end

local TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()

local function getTrailDotParent()
	local camera = Workspace.CurrentCamera
	local trailParent = camera:FindFirstChild(TRAIL_DOT_PARENT_NAME)
	if not trailParent then
		trailParent = Instance.new("Model")
		trailParent.Name = TRAIL_DOT_PARENT_NAME
		trailParent.Parent = camera
	end
	return trailParent
end

local function placePathWaypoint(waypointModel, position)
	local ray = Ray.new(position + Vector3.new(0, 2.5, 0), Vector3.new(0, -10, 0))
	local hitPart, hitPoint, hitNormal = Workspace:FindPartOnRayWithIgnoreList(
		ray,
		{ Workspace.CurrentCamera, LocalPlayer.Character }
	)
	if hitPart then
		waypointModel.CFrame = CFrame.new(hitPoint, hitPoint + hitNormal)
		waypointModel.Parent = getTrailDotParent()
	end
end

local TrailDot = {}
TrailDot.__index = TrailDot

function TrailDot:Destroy()
	self.DisplayModel:Destroy()
end

function TrailDot:NewDisplayModel(position)
	local newDisplayModel = TrailDotTemplate:Clone()
	placePathWaypoint(newDisplayModel, position)
	return newDisplayModel
end

function TrailDot.new(position, closestWaypoint)
	local self = setmetatable({}, TrailDot)

	self.DisplayModel = self:NewDisplayModel(position)
	self.ClosestWayPoint = closestWaypoint

	return self
end

local EndWaypoint = {}
EndWaypoint.__index = EndWaypoint

function EndWaypoint:Destroy()
	self.Destroyed = true
	self.Tween:Cancel()
	self.DisplayModel:Destroy()
end

function EndWaypoint:NewDisplayModel(position)
	local newDisplayModel = EndWaypointTemplate:Clone()
	placePathWaypoint(newDisplayModel, position)
	return newDisplayModel
end

function EndWaypoint:CreateTween()
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, -1, true)
	local tween = TweenService:Create(
		self.DisplayModel.EndWaypointBillboard,
		tweenInfo,
		{ SizeOffset = ENDWAYPOINT_SIZE_OFFSET_MAX }
	)
	tween:Play()
	return tween
end

function EndWaypoint:TweenInFrom(originalPosition)
	local currentPositon = self.DisplayModel.Position
	local studsOffset = originalPosition - currentPositon
	self.DisplayModel.EndWaypointBillboard.StudsOffset = Vector3.new(0, studsOffset.Y, 0)
	local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
	local tween = TweenService:Create(
		self.DisplayModel.EndWaypointBillboard,
		tweenInfo,
		{ StudsOffset = Vector3.new(0, 0, 0) }
	)
	tween:Play()
	return tween
end

function EndWaypoint.new(position, closestWaypoint, originalPosition)
	local self = setmetatable({}, EndWaypoint)

	self.DisplayModel = self:NewDisplayModel(position)
	self.Destroyed = false
	if originalPosition and (originalPosition - position).magnitude > TWEEN_WAYPOINT_THRESHOLD then
		self.Tween = self:TweenInFrom(originalPosition)
		coroutine.wrap(function()
			self.Tween.Completed:Wait()
			if not self.Destroyed then
				self.Tween = self:CreateTween()
			end
		end)()
	else
		self.Tween = self:CreateTween()
	end
	self.ClosestWayPoint = closestWaypoint

	return self
end

local FailureWaypoint = {}
FailureWaypoint.__index = FailureWaypoint

function FailureWaypoint:Hide()
	self.DisplayModel.Parent = nil
end

function FailureWaypoint:Destroy()
	self.DisplayModel:Destroy()
end

function FailureWaypoint:NewDisplayModel(position)
	local newDisplayModel = FailureWaypointTemplate:Clone()
	placePathWaypoint(newDisplayModel, position)
	local ray = Ray.new(position + Vector3.new(0, 2.5, 0), Vector3.new(0, -10, 0))
	local hitPart, hitPoint, hitNormal = Workspace:FindPartOnRayWithIgnoreList(
		ray, { Workspace.CurrentCamera, LocalPlayer.Character }
	)
	if hitPart then
		newDisplayModel.CFrame = CFrame.new(hitPoint, hitPoint + hitNormal)
		newDisplayModel.Parent = getTrailDotParent()
	end
	return newDisplayModel
end

function FailureWaypoint:RunFailureTween()
	wait(FAILURE_TWEEN_LENGTH) -- Delay one tween length betfore starting tweening
	-- Tween out from center
	local tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH/2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
	local tweenLeft = TweenService:Create(self.DisplayModel.FailureWaypointBillboard, tweenInfo,
		{ SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_LEFT })
	tweenLeft:Play()

	local tweenLeftRoation = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame, tweenInfo,
		{ Rotation = 10 })
	tweenLeftRoation:Play()

	tweenLeft.Completed:wait()

	-- Tween back and forth
	tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH, Enum.EasingStyle.Sine, Enum.EasingDirection.Out,
		FAILURE_TWEEN_COUNT - 1, true)
	local tweenSideToSide = TweenService:Create(self.DisplayModel.FailureWaypointBillboard, tweenInfo,
		{ SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_RIGHT})
	tweenSideToSide:Play()

	-- Tween flash dark and roate left and right
	tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH, Enum.EasingStyle.Sine, Enum.EasingDirection.Out,
		FAILURE_TWEEN_COUNT - 1, true)
	local tweenFlash = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame.ImageLabel, tweenInfo,
		{ ImageColor3 = Color3.new(0.75, 0.75, 0.75)})
	tweenFlash:Play()

	local tweenRotate = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame, tweenInfo,
		{ Rotation = -10 })
	tweenRotate:Play()

	tweenSideToSide.Completed:wait()

	-- Tween back to center
	tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH/2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
	local tweenCenter = TweenService:Create(self.DisplayModel.FailureWaypointBillboard, tweenInfo,
		{ SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_CENTER })
	tweenCenter:Play()

	local tweenRoation = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame, tweenInfo,
		{ Rotation = 0 })
	tweenRoation:Play()

	tweenCenter.Completed:wait()

	wait(FAILURE_TWEEN_LENGTH) -- Delay one tween length betfore removing
end

function FailureWaypoint.new(position)
	local self = setmetatable({}, FailureWaypoint)

	self.DisplayModel = self:NewDisplayModel(position)

	return self
end

local failureAnimation = Instance.new("Animation")
failureAnimation.AnimationId = FAILURE_ANIMATION_ID

local lastHumanoid = nil
local lastFailureAnimationTrack = nil

local function getFailureAnimationTrack(myHumanoid)
	if myHumanoid == lastHumanoid then
		return lastFailureAnimationTrack
	end
	lastFailureAnimationTrack = myHumanoid:LoadAnimation(failureAnimation)
	lastFailureAnimationTrack.Priority = Enum.AnimationPriority.Action
	lastFailureAnimationTrack.Looped = false
	return lastFailureAnimationTrack
end

local function findPlayerHumanoid()
	local character = LocalPlayer.Character
	if character then
		return character:FindFirstChildOfClass("Humanoid")
	end
end

local function createTrailDots(wayPoints, originalEndWaypoint)
	local newTrailDots = {}
	local count = 1
	for i = 1, #wayPoints - 1 do
		local closeToEnd = (wayPoints[i].Position - wayPoints[#wayPoints].Position).magnitude < LAST_DOT_DISTANCE
		local includeWaypoint = i % WAYPOINT_INCLUDE_FACTOR == 0 and not closeToEnd
		if includeWaypoint then
			local trailDot = TrailDot.new(wayPoints[i].Position, i)
			newTrailDots[count] = trailDot
			count = count + 1
		end
	end

	local newEndWaypoint = EndWaypoint.new(wayPoints[#wayPoints].Position, #wayPoints, originalEndWaypoint)
	table.insert(newTrailDots, newEndWaypoint)

	local reversedTrailDots = {}
	count = 1
	for i = #newTrailDots, 1, -1 do
		reversedTrailDots[count] = newTrailDots[i]
		count = count + 1
	end
	return reversedTrailDots
end

local function getTrailDotScale(distanceToCamera, defaultSize)
	local rangeLength = TRAIL_DOT_MAX_DISTANCE - TRAIL_DOT_MIN_DISTANCE
	local inRangePoint = math.clamp(distanceToCamera - TRAIL_DOT_MIN_DISTANCE, 0, rangeLength)/rangeLength
	local scale = TRAIL_DOT_MIN_SCALE + (TRAIL_DOT_MAX_SCALE - TRAIL_DOT_MIN_SCALE)*inRangePoint
	return defaultSize * scale
end

local createPathCount = 0
-- originalEndWaypoint is optional, causes the waypoint to tween from that position.
function ClickToMoveDisplay.CreatePathDisplay(wayPoints, originalEndWaypoint)
	createPathCount = createPathCount + 1
	local trailDots = createTrailDots(wayPoints, originalEndWaypoint)

	local function removePathBeforePoint(wayPointNumber)
		-- kill all trailDots before and at wayPointNumber
		for i = #trailDots, 1, -1 do
			local trailDot = trailDots[i]
			if trailDot.ClosestWayPoint <= wayPointNumber then
				trailDot:Destroy()
				trailDots[i] = nil
			else
				break
			end
		end
	end

	local reiszeTrailDotsUpdateName = "ClickToMoveResizeTrail" ..createPathCount
	local function resizeTrailDots()
		if #trailDots == 0 then
			RunService:UnbindFromRenderStep(reiszeTrailDotsUpdateName)
			return
		end
		local cameraPos = Workspace.CurrentCamera.CFrame.p
		for i = 1, #trailDots do
			local trailDotImage = trailDots[i].DisplayModel:FindFirstChild("TrailDotImage")
			if trailDotImage then
				local distanceToCamera = (trailDots[i].DisplayModel.Position - cameraPos).magnitude
				trailDotImage.Size = getTrailDotScale(distanceToCamera, TrailDotSize)
			end
		end
	end
	RunService:BindToRenderStep(reiszeTrailDotsUpdateName, Enum.RenderPriority.Camera.Value - 1, resizeTrailDots)

	local function removePath()
		removePathBeforePoint(#wayPoints)
	end

	return removePath, removePathBeforePoint
end

local lastFailureWaypoint = nil
function ClickToMoveDisplay.DisplayFailureWaypoint(position)
	if lastFailureWaypoint then
		lastFailureWaypoint:Hide()
	end
	local failureWaypoint = FailureWaypoint.new(position)
	lastFailureWaypoint = failureWaypoint
	coroutine.wrap(function()
		failureWaypoint:RunFailureTween()
		failureWaypoint:Destroy()
		failureWaypoint = nil
	end)()
end

function ClickToMoveDisplay.CreateEndWaypoint(position)
	return EndWaypoint.new(position)
end

function ClickToMoveDisplay.PlayFailureAnimation()
	local myHumanoid = findPlayerHumanoid()
	if myHumanoid then
		local animationTrack = getFailureAnimationTrack(myHumanoid)
		animationTrack:Play()
	end
end

function ClickToMoveDisplay.CancelFailureAnimation()
	if lastFailureAnimationTrack ~= nil and lastFailureAnimationTrack.IsPlaying then
		lastFailureAnimationTrack:Stop()
	end
end

function ClickToMoveDisplay.SetWaypointTexture(texture)
	TrailDotIcon = texture
	TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
end

function ClickToMoveDisplay.GetWaypointTexture()
	return TrailDotIcon
end

function ClickToMoveDisplay.SetWaypointRadius(radius)
	TrailDotSize = Vector2.new(radius, radius)
	TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
end

function ClickToMoveDisplay.GetWaypointRadius()
	return TrailDotSize.X
end

function ClickToMoveDisplay.SetEndWaypointTexture(texture)
	EndWaypointIcon = texture
	TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
end

function ClickToMoveDisplay.GetEndWaypointTexture()
	return EndWaypointIcon
end

function ClickToMoveDisplay.SetWaypointsAlwaysOnTop(alwaysOnTop)
	WaypointsAlwaysOnTop = alwaysOnTop
	TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
end

function ClickToMoveDisplay.GetWaypointsAlwaysOnTop()
	return WaypointsAlwaysOnTop
end

return ClickToMoveDisplay
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0042</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX6E22730403B940BB8FBCDBFAB9CA9A85">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Gamepad</string>
							<string name="ScriptGuid">{E5079D39-4AC2-4246-83FB-0B02BDE4E04F}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	Gamepad Character Control - This module handles controlling your avatar using a game console-style controller

	2018 PlayerScripts Update - AllYourBlox
--]]

local UserInputService = game:GetService("UserInputService")
local ContextActionService = game:GetService("ContextActionService")

--[[ Constants ]]--
local ZERO_VECTOR3 = Vector3.new(0,0,0)
local NONE = Enum.UserInputType.None
local thumbstickDeadzone = 0.2

--[[ The Module ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local Gamepad = setmetatable({}, BaseCharacterController)
Gamepad.__index = Gamepad

function Gamepad.new(CONTROL_ACTION_PRIORITY)
	local self = setmetatable(BaseCharacterController.new(), Gamepad)

	self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY

	self.forwardValue  = 0
	self.backwardValue = 0
	self.leftValue = 0
	self.rightValue = 0

	self.activeGamepad = NONE	-- Enum.UserInputType.Gamepad1, 2, 3...
	self.gamepadConnectedConn = nil
	self.gamepadDisconnectedConn = nil
	return self
end

function Gamepad:Enable(enable)
	if not UserInputService.GamepadEnabled then
		return false
	end

	if enable == self.enabled then
		-- Module is already in the state being requested. True is returned here since the module will be in the state
		-- expected by the code that follows the Enable() call. This makes more sense than returning false to indicate
		-- no action was necessary. False indicates failure to be in requested/expected state.
		return true
	end

	self.forwardValue  = 0
	self.backwardValue = 0
	self.leftValue = 0
	self.rightValue = 0
	self.moveVector = ZERO_VECTOR3
	self.isJumping = false

	if enable then
		self.activeGamepad = self:GetHighestPriorityGamepad()
		if self.activeGamepad ~= NONE then
			self:BindContextActions()
			self:ConnectGamepadConnectionListeners()
		else
			-- No connected gamepads, failure to enable
			return false
		end
	else
		self:UnbindContextActions()
		self:DisconnectGamepadConnectionListeners()
		self.activeGamepad = NONE
	end

	self.enabled = enable
	return true
end

-- This function selects the lowest number gamepad from the currently-connected gamepad
-- and sets it as the active gamepad
function Gamepad:GetHighestPriorityGamepad()
	local connectedGamepads = UserInputService:GetConnectedGamepads()
	local bestGamepad = NONE -- Note that this value is higher than all valid gamepad values
	for _, gamepad in pairs(connectedGamepads) do
		if gamepad.Value < bestGamepad.Value then
			bestGamepad = gamepad
		end
	end
	return bestGamepad
end

function Gamepad:BindContextActions()

	if self.activeGamepad == NONE then
		-- There must be an active gamepad to set up bindings
		return false
	end

	local handleJumpAction = function(actionName, inputState, inputObject)
		self.isJumping = (inputState == Enum.UserInputState.Begin)
		return Enum.ContextActionResult.Sink
	end

	local handleThumbstickInput = function(actionName, inputState, inputObject)

		if inputState == Enum.UserInputState.Cancel then
			self.moveVector = ZERO_VECTOR3
			return Enum.ContextActionResult.Sink
		end

		if self.activeGamepad ~= inputObject.UserInputType then
			return Enum.ContextActionResult.Pass
		end
		if inputObject.KeyCode ~= Enum.KeyCode.Thumbstick1 then return end

		if inputObject.Position.magnitude > thumbstickDeadzone then
			self.moveVector  =  Vector3.new(inputObject.Position.X, 0, -inputObject.Position.Y)
		else
			self.moveVector = ZERO_VECTOR3
		end
		return Enum.ContextActionResult.Sink
	end

	ContextActionService:BindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
	ContextActionService:BindActionAtPriority("jumpAction", handleJumpAction, false,
		self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonA)
	ContextActionService:BindActionAtPriority("moveThumbstick", handleThumbstickInput, false,
		self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Thumbstick1)

	return true
end

function Gamepad:UnbindContextActions()
	if self.activeGamepad ~= NONE then
		ContextActionService:UnbindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
	end
	ContextActionService:UnbindAction("moveThumbstick")
	ContextActionService:UnbindAction("jumpAction")
end

function Gamepad:OnNewGamepadConnected()
	-- A new gamepad has been connected.
	local bestGamepad = self:GetHighestPriorityGamepad()

	if bestGamepad == self.activeGamepad then
		-- A new gamepad was connected, but our active gamepad is not changing
		return
	end

	if bestGamepad == NONE then
		-- There should be an active gamepad when GamepadConnected fires, so this should not
		-- normally be hit. If there is no active gamepad, unbind actions but leave
		-- the module enabled and continue to listen for a new gamepad connection.
		warn("Gamepad:OnNewGamepadConnected found no connected gamepads")
		self:UnbindContextActions()
		return
	end

	if self.activeGamepad ~= NONE then
		-- Switching from one active gamepad to another
		self:UnbindContextActions()
	end

	self.activeGamepad = bestGamepad
	self:BindContextActions()
end

function Gamepad:OnCurrentGamepadDisconnected()
	if self.activeGamepad ~= NONE then
		ContextActionService:UnbindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
	end

	local bestGamepad = self:GetHighestPriorityGamepad()

	if self.activeGamepad ~= NONE and bestGamepad == self.activeGamepad then
		warn("Gamepad:OnCurrentGamepadDisconnected found the supposedly disconnected gamepad in connectedGamepads.")
		self:UnbindContextActions()
		self.activeGamepad = NONE
		return
	end

	if bestGamepad == NONE then
		-- No active gamepad, unbinding actions but leaving gamepad connection listener active
		self:UnbindContextActions()
		self.activeGamepad = NONE
	else
		-- Set new gamepad as active and bind to tool activation
		self.activeGamepad = bestGamepad
		ContextActionService:BindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
	end
end

function Gamepad:ConnectGamepadConnectionListeners()
	self.gamepadConnectedConn = UserInputService.GamepadConnected:Connect(function(gamepadEnum)
		self:OnNewGamepadConnected()
	end)

	self.gamepadDisconnectedConn = UserInputService.GamepadDisconnected:Connect(function(gamepadEnum)
		if self.activeGamepad == gamepadEnum then
			self:OnCurrentGamepadDisconnected()
		end
	end)

end

function Gamepad:DisconnectGamepadConnectionListeners()
	if self.gamepadConnectedConn then
		self.gamepadConnectedConn:Disconnect()
		self.gamepadConnectedConn = nil
	end

	if self.gamepadDisconnectedConn then
		self.gamepadDisconnectedConn:Disconnect()
		self.gamepadDisconnectedConn = nil
	end
end

return Gamepad
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0043</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX65CF656E4E03425983A305D33847D32C">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">TouchThumbpad</string>
							<string name="ScriptGuid">{6CDC6AC1-CFD2-4C0F-AF96-9DB42494C63B}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	
	TouchThumbpad
	
--]]

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local GuiService = game:GetService("GuiService")

--[[ Constants ]]--
local DPAD_SHEET = "rbxasset://textures/ui/DPadSheet.png"
local TOUCH_CONTROL_SHEET = "rbxasset://textures/ui/TouchControlsSheet.png"
local ZERO_VECTOR3 = Vector3.new(0,0,0)
local UNIT_Z = Vector3.new(0,0,1)
local UNIT_X = Vector3.new(1,0,0)

--[[ The Module ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local TouchThumbpad = setmetatable({}, BaseCharacterController)
TouchThumbpad.__index = TouchThumbpad

function TouchThumbpad.new()
	local self = setmetatable(BaseCharacterController.new(), TouchThumbpad)
	
	self.thumbpadFrame = nil
	self.touchChangedConn = nil
	self.touchEndedConn = nil
	self.menuOpenedConn = nil
	self.screenPos = nil
	self.isRight, self.isLeft, self.isUp, self.isDown = false, false, false, false
	self.smArrowSize = nil
	self.lgArrowSize = nil
	self.smImgOffset = nil
	self.lgImgOffset = nil
	return self
end

--[[ Local Helper Functions ]]--
local function doTween(guiObject, endSize, endPosition)
	guiObject:TweenSizeAndPosition(endSize, endPosition, Enum.EasingDirection.InOut, Enum.EasingStyle.Linear, 0.15, true)
end

local function CreateArrowLabel(name, position, size, rectOffset, rectSize, parent)
	local image = Instance.new("ImageLabel")
	image.Name = name
	image.Image = DPAD_SHEET
	image.ImageRectOffset = rectOffset
	image.ImageRectSize = rectSize
	image.BackgroundTransparency = 1
	image.ImageColor3 = Color3.fromRGB(190, 190, 190)
	image.Size = size
	image.Position = position
	image.Parent = parent
	return image
end

function TouchThumbpad:Enable(enable, uiParentFrame)
	if enable == nil then return false end			-- If nil, return false (invalid argument)
	enable = enable and true or false				-- Force anything non-nil to boolean before comparison
	if self.enabled == enable then return true end	-- If no state change, return true indicating already in requested state
	
	self.moveVector = ZERO_VECTOR3
	self.isJumping = false
	
	if enable then
		-- Enable
		if not self.thumbpadFrame then
			self:Create(uiParentFrame)
		end
		self.thumbpadFrame.Visible = true
	else 
		-- Disable
		self.thumbpadFrame.Visible = false
		self:OnInputEnded()
	end
	self.enabled = enable
end
	
function TouchThumbpad:OnInputEnded()
	self.moveVector = ZERO_VECTOR3
	self.isJumping = false

	self.thumbpadFrame.Position = self.screenPos
	self.touchObject = nil
	self.isUp, self.isDown, self.isLeft, self.isRight = false, false, false, false
	doTween(self.dArrow, self.smArrowSize, UDim2.new(0.5, -0.5*self.smArrowSize.X.Offset, 1, self.lgImgOffset))
	doTween(self.uArrow, self.smArrowSize, UDim2.new(0.5, -0.5*self.smArrowSize.X.Offset, 0, self.smImgOffset))
	doTween(self.lArrow, self.smArrowSize, UDim2.new(0, self.smImgOffset, 0.5, -0.5*self.smArrowSize.Y.Offset))
	doTween(self.rArrow, self.smArrowSize, UDim2.new(1, self.lgImgOffset, 0.5, -0.5*self.smArrowSize.Y.Offset))
end

function TouchThumbpad:Create(parentFrame)
	if self.thumbpadFrame then
		self.thumbpadFrame:Destroy()
		self.thumbpadFrame = nil
	end
	if self.touchChangedConn then
		self.touchChangedConn:Disconnect()
		self.touchChangedConn = nil
	end
	if self.touchEndedConn then
		self.touchEndedConn:Disconnect()
		self.touchEndedConn = nil
	end
	if self.menuOpenedConn then
		self.menuOpenedConn:Disconnect()
		self.menuOpenedConn = nil
	end
	
	local minAxis = math.min(parentFrame.AbsoluteSize.x, parentFrame.AbsoluteSize.y)
	local isSmallScreen = minAxis <= 500
	local thumbpadSize = isSmallScreen and 70 or 120
	self.screenPos = isSmallScreen and UDim2.new(0, thumbpadSize * 1.25, 1, -thumbpadSize - 20) or
		UDim2.new(0, thumbpadSize * 0.5 - 10, 1, -thumbpadSize * 1.75 - 10)
	
	self.thumbpadFrame = Instance.new("Frame")
	self.thumbpadFrame.Name = "ThumbpadFrame"
	self.thumbpadFrame.Visible = false
	self.thumbpadFrame.Active = true
	self.thumbpadFrame.Size = UDim2.new(0, thumbpadSize + 20, 0, thumbpadSize + 20)
	self.thumbpadFrame.Position = self.screenPos
	self.thumbpadFrame.BackgroundTransparency = 1
	
	local outerImage = Instance.new("ImageLabel")
	outerImage.Name = "OuterImage"
	outerImage.Image = TOUCH_CONTROL_SHEET
	outerImage.ImageRectOffset = Vector2.new(0, 0)
	outerImage.ImageRectSize = Vector2.new(220, 220)
	outerImage.BackgroundTransparency = 1
	outerImage.Size = UDim2.new(0, thumbpadSize, 0, thumbpadSize)
	outerImage.Position = UDim2.new(0, 10, 0, 10)
	outerImage.Parent = self.thumbpadFrame
	
	self.smArrowSize = isSmallScreen and UDim2.new(0, 32, 0, 32) or UDim2.new(0, 64, 0, 64)
	self.lgArrowSize = UDim2.new(0, self.smArrowSize.X.Offset * 2, 0, self.smArrowSize.Y.Offset * 2)
	local imgRectSize = Vector2.new(110, 110)
	self.smImgOffset = isSmallScreen and -4 or -9
	self.lgImgOffset = isSmallScreen and -28 or -55
	
	self.dArrow = CreateArrowLabel("DownArrow", UDim2.new(0.5, -0.5*self.smArrowSize.X.Offset, 1, self.lgImgOffset), self.smArrowSize, Vector2.new(8, 8), imgRectSize, outerImage)
	self.uArrow = CreateArrowLabel("UpArrow", UDim2.new(0.5, -0.5*self.smArrowSize.X.Offset, 0, self.smImgOffset), self.smArrowSize, Vector2.new(8, 266), imgRectSize, outerImage)
	self.lArrow = CreateArrowLabel("LeftArrow", UDim2.new(0, self.smImgOffset, 0.5, -0.5*self.smArrowSize.Y.Offset), self.smArrowSize, Vector2.new(137, 137), imgRectSize, outerImage)
	self.rArrow = CreateArrowLabel("RightArrow", UDim2.new(1, self.lgImgOffset, 0.5, -0.5*self.smArrowSize.Y.Offset), self.smArrowSize, Vector2.new(8, 137), imgRectSize, outerImage)
	
	local function doTween(guiObject, endSize, endPosition)
		guiObject:TweenSizeAndPosition(endSize, endPosition, Enum.EasingDirection.InOut, Enum.EasingStyle.Linear, 0.15, true)
	end
	
	local padOrigin = nil
	local deadZone = 0.1
	self.isRight, self.isLeft, self.isUp, self.isDown = false, false, false, false
	
	local function doMove(pos)
		
		local moveDelta = pos - padOrigin
		local moveVector2 = 2 * moveDelta / thumbpadSize
		
		-- Scaled Radial Dead Zone
		if moveVector2.Magnitude < deadZone then
			self.moveVector = ZERO_VECTOR3
		else
			moveVector2 = moveVector2.unit * ((moveVector2.Magnitude - deadZone) / (1 - deadZone))
			
			-- prevent NAN Vector from trying to do zerovector.Unit
			if moveVector2.Magnitude == 0 then
				self.moveVector = ZERO_VECTOR3
			else
				self.moveVector = Vector3.new(moveVector2.x, 0, moveVector2.y).Unit
			end
		end
		
		local forwardDot = self.moveVector:Dot(-UNIT_Z)
		local rightDot = self.moveVector:Dot(UNIT_X)
		
		if forwardDot > 0.5 then		-- UP
			if not self.isUp then
				self.isUp, self.isDown = true, false
				doTween(self.uArrow, self.lgArrowSize, UDim2.new(0.5, -self.smArrowSize.X.Offset, 0, self.smImgOffset - 1.5*self.smArrowSize.Y.Offset))
				doTween(self.dArrow, self.smArrowSize, UDim2.new(0.5, -0.5*self.smArrowSize.X.Offset, 1, self.lgImgOffset))
			end
		elseif forwardDot < -0.5 then	-- DOWN
			if not self.isDown then
				self.isDown, self.isUp = true, false
				doTween(self.dArrow, self.lgArrowSize, UDim2.new(0.5, -self.smArrowSize.X.Offset, 1, self.lgImgOffset + 0.5*self.smArrowSize.Y.Offset))
				doTween(self.uArrow, self.smArrowSize, UDim2.new(0.5, -0.5*self.smArrowSize.X.Offset, 0, self.smImgOffset))
			end
		else
			self.isUp, self.isDown = false, false
			doTween(self.dArrow, self.smArrowSize, UDim2.new(0.5, -0.5*self.smArrowSize.X.Offset, 1, self.lgImgOffset))
			doTween(self.uArrow, self.smArrowSize, UDim2.new(0.5, -0.5*self.smArrowSize.X.Offset, 0, self.smImgOffset))
		end
		
		if rightDot > 0.5 then
			if not self.isRight then
				self.isRight, self.isLeft = true, false
				doTween(self.rArrow, self.lgArrowSize, UDim2.new(1, self.lgImgOffset + 0.5*self.smArrowSize.X.Offset, 0.5, -self.smArrowSize.Y.Offset))
				doTween(self.lArrow, self.smArrowSize, UDim2.new(0, self.smImgOffset, 0.5, -0.5*self.smArrowSize.Y.Offset))
			end
		elseif rightDot < -0.5 then
			if not self.isLeft then
				self.isLeft, self.isRight = true, false
				doTween(self.lArrow, self.lgArrowSize, UDim2.new(0, self.smImgOffset - 1.5*self.smArrowSize.X.Offset, 0.5, -self.smArrowSize.Y.Offset))
				doTween(self.rArrow, self.smArrowSize, UDim2.new(1, self.lgImgOffset, 0.5, -0.5*self.smArrowSize.Y.Offset))
			end
		else
			self.isRight, self.isLeft = false, false
			doTween(self.lArrow, self.smArrowSize, UDim2.new(0, self.smImgOffset, 0.5, -0.5*self.smArrowSize.Y.Offset))
			doTween(self.rArrow, self.smArrowSize, UDim2.new(1, self.lgImgOffset, 0.5, -0.5*self.smArrowSize.Y.Offset))
		end
	end
	
	--input connections
	self.thumbpadFrame.InputBegan:connect(function(inputObject)
		--A touch that starts elsewhere on the screen will be sent to a frame's InputBegan event
		--if it moves over the frame. So we check that this is actually a new touch (inputObject.UserInputState ~= Enum.UserInputState.Begin)
		if self.touchObject or inputObject.UserInputType ~= Enum.UserInputType.Touch
			or inputObject.UserInputState ~= Enum.UserInputState.Begin then
			return
		end
		
		self.thumbpadFrame.Position = UDim2.new(0, inputObject.Position.x - 0.5*self.thumbpadFrame.AbsoluteSize.x, 0, inputObject.Position.y - 0.5*self.thumbpadFrame.Size.Y.Offset)
		padOrigin = Vector3.new(self.thumbpadFrame.AbsolutePosition.x +0.5* self.thumbpadFrame.AbsoluteSize.x,
			self.thumbpadFrame.AbsolutePosition.y + 0.5*self.thumbpadFrame.AbsoluteSize.y, 0)
		doMove(inputObject.Position)
		self.touchObject = inputObject
	end)
	
	self.touchChangedConn = UserInputService.TouchMoved:connect(function(inputObject, isProcessed)
		if inputObject == self.touchObject then
			doMove(self.touchObject.Position)
		end
	end)
	
	self.touchEndedConn = UserInputService.TouchEnded:Connect(function(inputObject)
		if inputObject == self.touchObject then
			self:OnInputEnded()
		end
	end)
	
	self.menuOpenedConn = GuiService.MenuOpened:Connect(function()
		if self.touchObject then
			self:OnInputEnded()
		end
	end)	
	
	self.thumbpadFrame.Parent = parentFrame
end

return TouchThumbpad
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0044</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX3ACF08887D984BAE893DE3D14C593C76">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">CameraModule</string>
						<string name="ScriptGuid">{7326EC94-9B5D-46B3-AD05-1CB3BE6E65BC}</string>
						<ProtectedString name="Source"><![CDATA[--[[
	CameraModule - This ModuleScript implements a singleton class to manage the
	selection, activation, and deactivation of the current camera controller,
	character occlusion controller, and transparency controller. This script binds to
	RenderStepped at Camera priority and calls the Update() methods on the active
	controller instances.
	
	The camera controller ModuleScripts implement classes which are instantiated and
	activated as-needed, they are no longer all instantiated up front as they were in
	the previous generation of PlayerScripts.
	
	2018 PlayerScripts Update - AllYourBlox		
--]]

local CameraModule = {}
CameraModule.__index = CameraModule

-- NOTICE: Player property names do not all match their StarterPlayer equivalents,
-- with the differences noted in the comments on the right
local PLAYER_CAMERA_PROPERTIES =
{
	"CameraMinZoomDistance",
	"CameraMaxZoomDistance",
	"CameraMode",
	"DevCameraOcclusionMode",
	"DevComputerCameraMode",			-- Corresponds to StarterPlayer.DevComputerCameraMovementMode
	"DevTouchCameraMode",				-- Corresponds to StarterPlayer.DevTouchCameraMovementMode
	
	-- Character movement mode
	"DevComputerMovementMode",
	"DevTouchMovementMode",
	"DevEnableMouseLock",				-- Corresponds to StarterPlayer.EnableMouseLockOption
}

local USER_GAME_SETTINGS_PROPERTIES =
{
	"ComputerCameraMovementMode",
	"ComputerMovementMode",
	"ControlMode",
	"GamepadCameraSensitivity",
	"MouseSensitivity",
	"RotationType",
	"TouchCameraMovementMode",
	"TouchMovementMode",
}

--[[ Roblox Services ]]--
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local StarterPlayer = game:GetService("StarterPlayer")
local UserGameSettings = UserSettings():GetService("UserGameSettings")

-- Camera math utility library
local CameraUtils = require(script:WaitForChild("CameraUtils"))

-- Load Roblox Camera Controller Modules
local ClassicCamera = require(script:WaitForChild("ClassicCamera"))
local OrbitalCamera = require(script:WaitForChild("OrbitalCamera"))
local LegacyCamera = require(script:WaitForChild("LegacyCamera"))

-- Load Roblox Occlusion Modules
local Invisicam = require(script:WaitForChild("Invisicam"))
local Poppercam do
	local success, useNewPoppercam = pcall(UserSettings().IsUserFeatureEnabled, UserSettings(), "UserNewPoppercam4")
	if success and useNewPoppercam then
		Poppercam = require(script:WaitForChild("Poppercam"))
	else
		Poppercam = require(script:WaitForChild("Poppercam_Classic"))
	end
end

-- Load the near-field character transparency controller and the mouse lock "shift lock" controller
local TransparencyController = require(script:WaitForChild("TransparencyController"))
local MouseLockController = require(script:WaitForChild("MouseLockController"))

-- Table of camera controllers that have been instantiated. They are instantiated as they are used.
local instantiatedCameraControllers = {}
local instantiatedOcclusionModules = {}

-- Management of which options appear on the Roblox User Settings screen
do
	local PlayerScripts = Players.LocalPlayer:WaitForChild("PlayerScripts")

	PlayerScripts:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Default)
	PlayerScripts:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Follow)
	PlayerScripts:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Classic)

	PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Default)
	PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Follow)
	PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Classic)
end


function CameraModule.new()
	local self = setmetatable({},CameraModule)
	
	-- Current active controller instances
	self.activeCameraController = nil
	self.activeOcclusionModule = nil
	self.activeTransparencyController = nil
	self.activeMouseLockController = nil
	
	self.currentComputerCameraMovementMode = nil
	
	-- Connections to events
	self.cameraSubjectChangedConn = nil
	self.cameraTypeChangedConn = nil
	
	-- Adds CharacterAdded and CharacterRemoving event handlers for all current players
	for _,player in pairs(Players:GetPlayers()) do
		self:OnPlayerAdded(player)
	end
	
	-- Adds CharacterAdded and CharacterRemoving event handlers for all players who join in the future
	Players.PlayerAdded:Connect(function(player)
		self:OnPlayerAdded(player)
	end)

	self.activeTransparencyController = TransparencyController.new()
	self.activeTransparencyController:Enable(true)
	
		self.activeMouseLockController = MouseLockController.new()
		local toggleEvent = self.activeMouseLockController:GetBindableToggleEvent()
		if toggleEvent then
			toggleEvent:Connect(function()
				self:OnMouseLockToggled()
			end)
		end
	
	self:ActivateCameraController(self:GetCameraControlChoice())
	self:ActivateOcclusionModule(Players.LocalPlayer.DevCameraOcclusionMode)
	self:OnCurrentCameraChanged() -- Does initializations and makes first camera controller
	RunService:BindToRenderStep("cameraRenderUpdate", Enum.RenderPriority.Camera.Value, function(dt) self:Update(dt) end)
	
	-- Connect listeners to camera-related properties
	for _, propertyName in pairs(PLAYER_CAMERA_PROPERTIES) do
		Players.LocalPlayer:GetPropertyChangedSignal(propertyName):Connect(function()
			self:OnLocalPlayerCameraPropertyChanged(propertyName)
		end)
	end
	
	for _, propertyName in pairs(USER_GAME_SETTINGS_PROPERTIES) do
		UserGameSettings:GetPropertyChangedSignal(propertyName):Connect(function()
			self:OnUserGameSettingsPropertyChanged(propertyName)
		end)
	end
	game.Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		self:OnCurrentCameraChanged()
	end)

	self.lastInputType = UserInputService:GetLastInputType()
	UserInputService.LastInputTypeChanged:Connect(function(newLastInputType)
		self.lastInputType = newLastInputType
	end)

	return self
end





function CameraModule:GetCameraMovementModeFromSettings()
	local cameraMode = Players.LocalPlayer.CameraMode

	-- Lock First Person trumps all other settings and forces ClassicCamera
	if cameraMode == Enum.CameraMode.LockFirstPerson then
		return CameraUtils.ConvertCameraModeEnumToStandard(Enum.ComputerCameraMovementMode.Classic)
	end

	local devMode, userMode
	if UserInputService.TouchEnabled then
		devMode = CameraUtils.ConvertCameraModeEnumToStandard(Players.LocalPlayer.DevTouchCameraMode)
		userMode = CameraUtils.ConvertCameraModeEnumToStandard(UserGameSettings.TouchCameraMovementMode)
	else
		devMode = CameraUtils.ConvertCameraModeEnumToStandard(Players.LocalPlayer.DevComputerCameraMode)
		userMode = CameraUtils.ConvertCameraModeEnumToStandard(UserGameSettings.ComputerCameraMovementMode)
	end	
	
	if devMode == Enum.DevComputerCameraMovementMode.UserChoice then
		-- Developer is allowing user choice, so user setting is respected
		return userMode
	end

	return devMode
end

function CameraModule:ActivateOcclusionModule( occlusionMode )
	local newModuleCreator = nil
	if occlusionMode == Enum.DevCameraOcclusionMode.Zoom then
		newModuleCreator = Poppercam
	elseif occlusionMode == Enum.DevCameraOcclusionMode.Invisicam then
		newModuleCreator = Invisicam
	else
		warn("CameraScript ActivateOcclusionModule called with unsupported mode")
		return
	end
	
	-- First check to see if there is actually a change. If the module being requested is already
	-- the currently-active solution then just make sure it's enabled and exit early
	if self.activeOcclusionModule and self.activeOcclusionModule:GetOcclusionMode() == occlusionMode then
		if not self.activeOcclusionModule:GetEnabled() then
			self.activeOcclusionModule:Enable(true)
		end
		return
	end
	
	-- Save a reference to the current active module (may be nil) so that we can disable it if
	-- we are successful in activating its replacement
	local prevOcclusionModule = self.activeOcclusionModule
	
	-- If there is no active module, see if the one we need has already been instantiated
	self.activeOcclusionModule = instantiatedOcclusionModules[newModuleCreator]
	
	-- If the module was not already instantiated and selected above, instantiate it
	if not self.activeOcclusionModule then
		self.activeOcclusionModule = newModuleCreator.new()
		if self.activeOcclusionModule then
			instantiatedOcclusionModules[newModuleCreator] = self.activeOcclusionModule
		end
	end
	
	-- If we were successful in either selecting or instantiating the module,
	-- enable it if it's not already the currently-active enabled module
	if self.activeOcclusionModule then
		local newModuleOcclusionMode = self.activeOcclusionModule:GetOcclusionMode()
		-- Sanity check that the module we selected or instantiated actually supports the desired occlusionMode
		if newModuleOcclusionMode ~= occlusionMode then
			warn("CameraScript ActivateOcclusionModule mismatch: ",self.activeOcclusionModule:GetOcclusionMode(),"~=",occlusionMode)
		end		
		
		-- Deactivate current module if there is one
		if prevOcclusionModule then
			-- Sanity check that current module is not being replaced by itself (that should have been handled above)
			if prevOcclusionModule ~= self.activeOcclusionModule then
				prevOcclusionModule:Enable(false)
			else
				warn("CameraScript ActivateOcclusionModule failure to detect already running correct module")
			end
		end
		
		-- Occlusion modules need to be initialized with information about characters and cameraSubject
		-- Invisicam needs the LocalPlayer's character
		-- Poppercam needs all player characters and the camera subject
		if occlusionMode == Enum.DevCameraOcclusionMode.Invisicam then
			-- Optimization to only send Invisicam what we know it needs
			if Players.LocalPlayer.Character then
				self.activeOcclusionModule:CharacterAdded(Players.LocalPlayer.Character, Players.LocalPlayer )
			end
		else
			-- When Poppercam is enabled, we send it all existing player characters for its raycast ignore list
			for _, player in pairs(Players:GetPlayers()) do
				if player and player.Character then
					self.activeOcclusionModule:CharacterAdded(player.Character, player)
				end
			end
			self.activeOcclusionModule:OnCameraSubjectChanged(game.Workspace.CurrentCamera.CameraSubject)
		end
		
		-- Activate new choice
		self.activeOcclusionModule:Enable(true)
	end
end

-- When supplied, legacyCameraType is used and cameraMovementMode is ignored (should be nil anyways)
-- Next, if userCameraCreator is passed in, that is used as the cameraCreator
function CameraModule:ActivateCameraController( cameraMovementMode, legacyCameraType )
	local newCameraCreator = nil
	
	if legacyCameraType~=nil then
		--[[ 
			This function has been passed a CameraType enum value. Some of these map to the use of
			the LegacyCamera module, the value "Custom" will be translated to a movementMode enum
			value based on Dev and User settings, and "Scriptable" will disable the camera controller.
		--]]
		
		if legacyCameraType == Enum.CameraType.Scriptable then
			if self.activeCameraController then
				self.activeCameraController:Enable(false)
				self.activeCameraController = nil				
				return
			end
		elseif legacyCameraType == Enum.CameraType.Custom then
			cameraMovementMode = self:GetCameraMovementModeFromSettings()
			
		elseif legacyCameraType == Enum.CameraType.Track then
			-- Note: The TrackCamera module was basically an older, less fully-featured
			-- version of ClassicCamera, no longer actively maintained, but it is re-implemented in
			-- case a game was dependent on its lack of ClassicCamera's extra functionality.
			cameraMovementMode = Enum.ComputerCameraMovementMode.Classic
			
		elseif legacyCameraType == Enum.CameraType.Follow then
			cameraMovementMode = Enum.ComputerCameraMovementMode.Follow
			
		elseif legacyCameraType == Enum.CameraType.Orbital then
			cameraMovementMode = Enum.ComputerCameraMovementMode.Orbital
			
		elseif legacyCameraType == Enum.CameraType.Attach or
			   legacyCameraType == Enum.CameraType.Watch or
			   legacyCameraType == Enum.CameraType.Fixed then
			newCameraCreator = LegacyCamera
		else
			warn("CameraScript encountered an unhandled Camera.CameraType value: ",legacyCameraType)			
		end		
	end
	
	if not newCameraCreator then		
		if cameraMovementMode == Enum.ComputerCameraMovementMode.Classic or
			cameraMovementMode == Enum.ComputerCameraMovementMode.Follow or
			cameraMovementMode == Enum.ComputerCameraMovementMode.Default then
			newCameraCreator = ClassicCamera
		elseif cameraMovementMode == Enum.ComputerCameraMovementMode.Orbital then
			newCameraCreator = OrbitalCamera
		else
			warn("ActivateCameraController did not select a module.")
			return
		end
	end
	
	-- Create the camera control module we need if it does not already exist in instantiatedCameraControllers
	local newCameraController = nil
	if not instantiatedCameraControllers[newCameraCreator] then
		newCameraController = newCameraCreator.new()
		instantiatedCameraControllers[newCameraCreator] = newCameraController
	else
		newCameraController = instantiatedCameraControllers[newCameraCreator]
	end
	
	-- If there is a controller active and it's not the one we need, disable it,
	-- if it is the one we need, make sure it's enabled
	if self.activeCameraController then
		if self.activeCameraController ~= newCameraController then
			self.activeCameraController:Enable(false)
			self.activeCameraController = newCameraController
			self.activeCameraController:Enable(true)		
		elseif not self.activeCameraController:GetEnabled() then
			self.activeCameraController:Enable(true)
		end		
	elseif newCameraController ~= nil then
		self.activeCameraController = newCameraController
		self.activeCameraController:Enable(true)		
	end
	
	if self.activeCameraController then
		if cameraMovementMode~=nil then
			self.activeCameraController:SetCameraMovementMode(cameraMovementMode)
		elseif legacyCameraType~=nil then
			-- Note that this is only called when legacyCameraType is not a type that
			-- was convertible to a ComputerCameraMovementMode value, i.e. really only applies to LegacyCamera
			self.activeCameraController:SetCameraType(legacyCameraType)
		end
	end
end

-- Note: The active transparency controller could be made to listen for this event itself.
function CameraModule:OnCameraSubjectChanged()
	if self.activeTransparencyController then
		self.activeTransparencyController:SetSubject(game.Workspace.CurrentCamera.CameraSubject)
	end
	
	if self.activeOcclusionModule then
		self.activeOcclusionModule:OnCameraSubjectChanged(game.Workspace.CurrentCamera.CameraSubject)
	end
end

function CameraModule:OnCameraTypeChanged(newCameraType)
	if newCameraType == Enum.CameraType.Scriptable then
		if UserInputService.MouseBehavior == Enum.MouseBehavior.LockCenter then
			UserInputService.MouseBehavior = Enum.MouseBehavior.Default
		end
	end
	
	-- Forward the change to ActivateCameraController to handle
	self:ActivateCameraController(nil, newCameraType)	
end

-- Note: Called whenever workspace.CurrentCamera changes, but also on initialization of this script
function CameraModule:OnCurrentCameraChanged()
	local currentCamera = game.Workspace.CurrentCamera
	if not currentCamera then return end
	
	if self.cameraSubjectChangedConn then
		self.cameraSubjectChangedConn:Disconnect()
	end

	if self.cameraTypeChangedConn then
		self.cameraTypeChangedConn:Disconnect()
	end

	self.cameraSubjectChangedConn = currentCamera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
		self:OnCameraSubjectChanged(currentCamera.CameraSubject)
	end)

	self.cameraTypeChangedConn = currentCamera:GetPropertyChangedSignal("CameraType"):Connect(function()
		self:OnCameraTypeChanged(currentCamera.CameraType)
	end)

	self:OnCameraSubjectChanged(currentCamera.CameraSubject)
	self:OnCameraTypeChanged(currentCamera.CameraType)
end

function CameraModule:OnLocalPlayerCameraPropertyChanged(propertyName)
	if propertyName == "CameraMode" then
		-- CameraMode is only used to turn on/off forcing the player into first person view. The
		-- Note: The case "Classic" is used for all other views and does not correspond only to the ClassicCamera module
		if Players.LocalPlayer.CameraMode == Enum.CameraMode.LockFirstPerson then
			-- Locked in first person, use ClassicCamera which supports this
			if not self.activeCameraController or self.activeCameraController:GetModuleName() ~= "ClassicCamera" then
				self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(Enum.DevComputerCameraMovementMode.Classic))
			end
			
			if self.activeCameraController then
				self.activeCameraController:UpdateForDistancePropertyChange()
			end
		elseif Players.LocalPlayer.CameraMode == Enum.CameraMode.Classic then
			-- Not locked in first person view
			local cameraMovementMode =self: GetCameraMovementModeFromSettings()
			self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(cameraMovementMode))
		else
			warn("Unhandled value for property player.CameraMode: ",Players.LocalPlayer.CameraMode)
		end
	
	elseif propertyName == "DevComputerCameraMode" or 
		   propertyName == "DevTouchCameraMode" then
		local cameraMovementMode = self:GetCameraMovementModeFromSettings()
		self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(cameraMovementMode))
		
	elseif propertyName == "DevCameraOcclusionMode" then
		self:ActivateOcclusionModule(Players.LocalPlayer.DevCameraOcclusionMode)
		
	elseif propertyName == "CameraMinZoomDistance" or propertyName == "CameraMaxZoomDistance" then
		if self.activeCameraController then
			self.activeCameraController:UpdateForDistancePropertyChange()
		end
	elseif propertyName == "DevTouchMovementMode" then
		
	elseif propertyName == "DevComputerMovementMode" then
		
	elseif propertyName == "DevEnableMouseLock" then
		-- This is the enabling/disabling of "Shift Lock" mode, not LockFirstPerson (which is a CameraMode)
		
		-- Note: Enabling and disabling of MouseLock mode is normally only a publish-time choice made via
		-- the corresponding EnableMouseLockOption checkbox of StarterPlayer, and this script does not have
		-- support for changing the availability of MouseLock at runtime (this would require listening to
		-- Player.DevEnableMouseLock changes)
	end
end

function CameraModule:OnUserGameSettingsPropertyChanged(propertyName)
	
	if propertyName == 	"ComputerCameraMovementMode" then
		local cameraMovementMode = self:GetCameraMovementModeFromSettings()
		self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(cameraMovementMode))
	end
end



--[[	
	Main RenderStep Update. The camera controller and occlusion module both have opportunities
	to set and modify (respectively) the CFrame and Focus before it is set once on CurrentCamera.
	The camera and occlusion modules should only return CFrames, not set the CFrame property of
	CurrentCamera directly.	
--]]
function CameraModule:Update(dt)
	if self.activeCameraController then
		local newCameraCFrame, newCameraFocus = self.activeCameraController:Update(dt)
		self.activeCameraController:ApplyVRTransform()
		if self.activeOcclusionModule then
			newCameraCFrame, newCameraFocus = self.activeOcclusionModule:Update(dt, newCameraCFrame, newCameraFocus)
		end
		
		-- Here is where the new CFrame and Focus are set for this render frame
		game.Workspace.CurrentCamera.CFrame = newCameraCFrame
		game.Workspace.CurrentCamera.Focus = newCameraFocus
		
		-- Update to character local transparency as needed based on camera-to-subject distance
		if self.activeTransparencyController then
			self.activeTransparencyController:Update()
		end
	end
end

-- Formerly getCurrentCameraMode, this function resolves developer and user camera control settings to
-- decide which camera control module should be instantiated. The old method of converting redundant enum types
function CameraModule:GetCameraControlChoice()
	local player = Players.LocalPlayer
	
	if player then
		if self.lastInputType == Enum.UserInputType.Touch or UserInputService.TouchEnabled then
			-- Touch			
			if player.DevTouchCameraMode == Enum.DevTouchCameraMovementMode.UserChoice then
				return CameraUtils.ConvertCameraModeEnumToStandard( UserGameSettings.TouchCameraMovementMode )
			else
				return CameraUtils.ConvertCameraModeEnumToStandard( player.DevTouchCameraMode )
			end
		else
			-- Computer
			if player.DevComputerCameraMode == Enum.DevComputerCameraMovementMode.UserChoice then
				local computerMovementMode = CameraUtils.ConvertCameraModeEnumToStandard(UserGameSettings.ComputerCameraMovementMode)
				return CameraUtils.ConvertCameraModeEnumToStandard(computerMovementMode)
			else
				return CameraUtils.ConvertCameraModeEnumToStandard(player.DevComputerCameraMode)
			end
		end
	end
end


function CameraModule:OnCharacterAdded(char, player)
	if self.activeOcclusionModule then
		self.activeOcclusionModule:CharacterAdded(char, player)
	end
end

function CameraModule:OnCharacterRemoving(char, player)
	if self.activeOcclusionModule then
		self.activeOcclusionModule:CharacterRemoving(char, player)
	end
end

function CameraModule:OnPlayerAdded(player)
	player.CharacterAdded:Connect(function(char)
		self:OnCharacterAdded(char, player)
	end)
	player.CharacterRemoving:Connect(function(char)
		self:OnCharacterRemoving(char, player)
	end)
end

function CameraModule:OnMouseLockToggled()
	if self.activeMouseLockController then
		local mouseLocked = self.activeMouseLockController:GetIsMouseLocked()
		local mouseLockOffset = self.activeMouseLockController:GetMouseLockOffset()
		if self.activeCameraController then
			self.activeCameraController:SetIsMouseLocked(mouseLocked)
			self.activeCameraController:SetMouseLockOffset(mouseLockOffset)
		end
	end
end



return CameraModule.new()
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0045</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXD1A041B4D106413DA565C887268D9F4E">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">TransparencyController</string>
							<string name="ScriptGuid">{E512F1D2-0B85-43DC-A58F-3382355C2E7C}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	TransparencyController - Manages transparency of player character at close camera-to-subject distances
	2018 Camera Update - AllYourBlox		
--]]

local MAX_TWEEN_RATE = 2.8 -- per second

local Util = require(script.Parent:WaitForChild("CameraUtils"))

--[[ The Module ]]--
local TransparencyController = {}
TransparencyController.__index = TransparencyController

function TransparencyController.new()
	local self = setmetatable({}, TransparencyController)
	
	self.lastUpdate = tick()
	self.transparencyDirty = false
	self.enabled = false
	self.lastTransparency = nil

	self.descendantAddedConn, self.descendantRemovingConn = nil, nil
	self.toolDescendantAddedConns = {}
	self.toolDescendantRemovingConns = {}
	self.cachedParts = {}
	
	return self
end


function TransparencyController:HasToolAncestor(object)
	if object.Parent == nil then return false end
	return object.Parent:IsA('Tool') or self:HasToolAncestor(object.Parent)
end

function TransparencyController:IsValidPartToModify(part)
	if part:IsA('BasePart') or part:IsA('Decal') then
		return not self:HasToolAncestor(part)
	end
	return false
end

function TransparencyController:CachePartsRecursive(object)
	if object then
		if self:IsValidPartToModify(object) then
			self.cachedParts[object] = true
			self.transparencyDirty = true
		end
		for _, child in pairs(object:GetChildren()) do
			self:CachePartsRecursive(child)
		end
	end
end

function TransparencyController:TeardownTransparency()
	for child, _ in pairs(self.cachedParts) do
		child.LocalTransparencyModifier = 0
	end
	self.cachedParts = {}
	self.transparencyDirty = true
	self.lastTransparency = nil

	if self.descendantAddedConn then
		self.descendantAddedConn:disconnect()
		self.descendantAddedConn = nil
	end
	if self.descendantRemovingConn then
		self.descendantRemovingConn:disconnect()
		self.descendantRemovingConn = nil
	end
	for object, conn in pairs(self.toolDescendantAddedConns) do
		conn:Disconnect()
		self.toolDescendantAddedConns[object] = nil
	end
	for object, conn in pairs(self.toolDescendantRemovingConns) do
		conn:Disconnect()
		self.toolDescendantRemovingConns[object] = nil
	end
end

function TransparencyController:SetupTransparency(character)
	self:TeardownTransparency()

	if self.descendantAddedConn then self.descendantAddedConn:disconnect() end
	self.descendantAddedConn = character.DescendantAdded:Connect(function(object)
		-- This is a part we want to invisify
		if self:IsValidPartToModify(object) then
			self.cachedParts[object] = true
			self.transparencyDirty = true
		-- There is now a tool under the character
		elseif object:IsA('Tool') then
			if self.toolDescendantAddedConns[object] then self.toolDescendantAddedConns[object]:Disconnect() end
			self.toolDescendantAddedConns[object] = object.DescendantAdded:Connect(function(toolChild)
				self.cachedParts[toolChild] = nil
				if toolChild:IsA('BasePart') or toolChild:IsA('Decal') then
					-- Reset the transparency
					toolChild.LocalTransparencyModifier = 0
				end
			end)
			if self.toolDescendantRemovingConns[object] then self.toolDescendantRemovingConns[object]:disconnect() end
			self.toolDescendantRemovingConns[object] = object.DescendantRemoving:Connect(function(formerToolChild)
				wait() -- wait for new parent
				if character and formerToolChild and formerToolChild:IsDescendantOf(character) then
					if self:IsValidPartToModify(formerToolChild) then
						self.cachedParts[formerToolChild] = true
						self.transparencyDirty = true
					end
				end
			end)
		end
	end)
	if self.descendantRemovingConn then self.descendantRemovingConn:disconnect() end
	self.descendantRemovingConn = character.DescendantRemoving:connect(function(object)
		if self.cachedParts[object] then
			self.cachedParts[object] = nil
			-- Reset the transparency
			object.LocalTransparencyModifier = 0
		end
	end)
	self:CachePartsRecursive(character)
end


function TransparencyController:Enable(enable)
	if self.enabled ~= enable then
		self.enabled = enable
		self:Update()
	end
end

function TransparencyController:SetSubject(subject)
	local character = nil
	if subject and subject:IsA("Humanoid") then
		character = subject.Parent
	end
	if subject and subject:IsA("VehicleSeat") and subject.Occupant then
		character = subject.Occupant.Parent
	end
	if character then
		self:SetupTransparency(character)
	else
		self:TeardownTransparency()
	end
end

function TransparencyController:Update()
	local instant = false
	local now = tick()
	local currentCamera = workspace.CurrentCamera

	if currentCamera then
		local transparency = 0
		if not self.enabled then
			instant = true
		else
			local distance = (currentCamera.Focus.p - currentCamera.CoordinateFrame.p).magnitude
			transparency = (distance<2) and (1.0-(distance-0.5)/1.5) or 0 --(7 - distance) / 5
			if transparency < 0.5 then
				transparency = 0
			end

			if self.lastTransparency then
				local deltaTransparency = transparency - self.lastTransparency
				
				-- Don't tween transparency if it is instant or your character was fully invisible last frame
				if not instant and transparency < 1 and self.lastTransparency < 0.95 then
					local maxDelta = MAX_TWEEN_RATE * (now - self.lastUpdate)
					deltaTransparency = Util.Clamp(-maxDelta, maxDelta, deltaTransparency)
				end
				transparency = self.lastTransparency + deltaTransparency
			else
				self.transparencyDirty = true
			end

			transparency = Util.Clamp(0, 1, Util.Round(transparency, 2))
		end

		if self.transparencyDirty or self.lastTransparency ~= transparency then
			for child, _ in pairs(self.cachedParts) do
				child.LocalTransparencyModifier = transparency
			end
			self.transparencyDirty = false
			self.lastTransparency = transparency
		end
	end
	self.lastUpdate = now
end

return TransparencyController
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0046</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXE8E70B4E3B634CEB96118386FCFDEDB5">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Poppercam_Classic</string>
							<string name="ScriptGuid">{CBAA6289-5231-439D-981F-E686582BCA03}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	Poppercam - Occlusion module that brings the camera closer to the subject when objects are blocking the view
	Refactored for 2018 Camera Update but functionality is unchanged - AllYourBlox		
--]]

--[[ Camera Maths Utilities Library ]]--
local Util = require(script.Parent:WaitForChild("CameraUtils"))

local PlayersService = game:GetService("Players")
local POP_RESTORE_RATE = 0.3
local MIN_CAMERA_ZOOM = 0.5
local VALID_SUBJECTS = {
	'Humanoid',
	'VehicleSeat',
	'SkateboardPlatform',
}

local portraitPopperFixFlagExists, portraitPopperFixFlagEnabled = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserPortraitPopperFix")
end)
local FFlagUserPortraitPopperFix = portraitPopperFixFlagExists and portraitPopperFixFlagEnabled


--[[ The Module ]]--
local BaseOcclusion = require(script.Parent:WaitForChild("BaseOcclusion"))
local Poppercam = setmetatable({}, BaseOcclusion)
Poppercam.__index = Poppercam

function Poppercam.new()
	local self = setmetatable(BaseOcclusion.new(), Poppercam)
	
	self.camera = nil
	self.cameraSubjectChangeConn = nil
	
	self.subjectPart = nil
	
	self.playerCharacters = {} 	-- For ignoring in raycasts
	self.vehicleParts = {} 		-- Also just for ignoring
	
	self.lastPopAmount = 0
	self.lastZoomLevel = 0
	self.popperEnabled = false
	
	return self
end

function Poppercam:GetOcclusionMode()
	return Enum.DevCameraOcclusionMode.Zoom
end

function Poppercam:Enable(enable)
	
end

-- Called when character is added
function Poppercam:CharacterAdded(char, player)
	self.playerCharacters[player] = char
end

-- Called when character is about to be removed
function Poppercam:CharacterRemoving(char, player)
	self.playerCharacters[player] = nil
end

function Poppercam:Update(dt, desiredCameraCFrame, desiredCameraFocus)
	if self.popperEnabled then
		self.camera = game.Workspace.CurrentCamera
		local newCameraCFrame = desiredCameraCFrame
		local focusPoint = desiredCameraFocus.p

		if FFlagUserPortraitPopperFix and self.subjectPart then
			focusPoint = self.subjectPart.CFrame.p
		end

		local ignoreList = {}
		for _, character in pairs(self.playerCharacters) do
			ignoreList[#ignoreList + 1] = character
		end
		for i = 1, #self.vehicleParts do
			ignoreList[#ignoreList + 1] = self.vehicleParts[i]
		end
		
		-- Get largest cutoff distance
		-- Note that the camera CFrame must be set here, because the current implementation of GetLargestCutoffDistance
		-- uses the current camera CFrame directly (it cannot yet be passed the desiredCameraCFrame).
		local prevCameraCFrame = self.camera.CFrame
		self.camera.CFrame = desiredCameraCFrame
		self.camera.Focus = desiredCameraFocus
		local largest = self.camera:GetLargestCutoffDistance(ignoreList)

		-- Then check if the player zoomed since the last frame,
		-- and if so, reset our pop history so we stop tweening
		local zoomLevel = (desiredCameraCFrame.p - focusPoint).Magnitude
		if math.abs(zoomLevel - self.lastZoomLevel) > 0.001 then
			self.lastPopAmount = 0
		end
		
		-- Finally, zoom the camera in (pop) by that most-cut-off amount, or the last pop amount if that's more
		local popAmount = largest
		if self.lastPopAmount > popAmount then
			popAmount = self.lastPopAmount
		end

		if popAmount > 0 then
			newCameraCFrame = desiredCameraCFrame + (desiredCameraCFrame.lookVector * popAmount)
			self.lastPopAmount = popAmount - POP_RESTORE_RATE -- Shrink it for the next frame
			if self.lastPopAmount < 0 then
				self.lastPopAmount = 0
			end
		end

		self.lastZoomLevel = zoomLevel
		
		-- Stop shift lock being able to see through walls by manipulating Camera focus inside the wall
--		if EnabledCamera and EnabledCamera:GetShiftLock() and not EnabledCamera:IsInFirstPerson() then
--			if EnabledCamera:GetCameraActualZoom() < 1 then
--				local subjectPosition = EnabledCamera.lastSubjectPosition 
--				if subjectPosition then
--					Camera.Focus = CFrame_new(subjectPosition)
--					Camera.CFrame = CFrame_new(subjectPosition - MIN_CAMERA_ZOOM*EnabledCamera:GetCameraLook(), subjectPosition)
--				end
--			end
--		end
		return newCameraCFrame, desiredCameraFocus
	end
	
	-- Return unchanged values
	return desiredCameraCFrame, desiredCameraFocus
end

function Poppercam:OnCameraSubjectChanged(newSubject)
	self.vehicleParts = {}

	self.lastPopAmount = 0

	if newSubject then
		-- Determine if we should be popping at all
		self.popperEnabled = false
		for _, subjectType in pairs(VALID_SUBJECTS) do
			if newSubject:IsA(subjectType) then
				self.popperEnabled = true
				break
			end
		end

		-- Get all parts of the vehicle the player is controlling
		if newSubject:IsA('VehicleSeat') then
			self.vehicleParts = newSubject:GetConnectedParts(true)
		end
	
		if FFlagUserPortraitPopperFix then
			if newSubject:IsA("BasePart") then
				self.subjectPart = newSubject
			elseif newSubject:IsA("Model") then
				if newSubject.PrimaryPart then
					self.subjectPart = newSubject.PrimaryPart
				else
					-- Model has no PrimaryPart set, just use first BasePart
					-- we can find as better-than-nothing solution (can still fail)
					for _, child in pairs(newSubject:GetChildren()) do
						if child:IsA("BasePart") then
							self.subjectPart = child
							break
						end
					end	
				end
			elseif newSubject:IsA("Humanoid") then
				self.subjectPart = newSubject.RootPart
  			end
  		end
  	end
end

return Poppercam]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0047</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX98C03892A44E423DBEF50EF77DCEFAA8">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Poppercam</string>
							<string name="ScriptGuid">{1196C19C-729E-43E6-80A3-9E57DCEF0C74}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	Poppercam - Occlusion module that brings the camera closer to the subject when objects are blocking the view.
--]]

local ZoomController =  require(script.Parent:WaitForChild("ZoomController"))

local TransformExtrapolator = {} do
	TransformExtrapolator.__index = TransformExtrapolator

	local CF_IDENTITY = CFrame.new()

	local function cframeToAxis(cframe)
		local axis, angle = cframe:toAxisAngle()
		return axis*angle
	end

	local function axisToCFrame(axis)
		local angle = axis.magnitude
		if angle > 1e-5 then
			return CFrame.fromAxisAngle(axis, angle)
		end
		return CF_IDENTITY
	end

	local function extractRotation(cf)
		local _, _, _, xx, yx, zx, xy, yy, zy, xz, yz, zz = cf:components()
		return CFrame.new(0, 0, 0, xx, yx, zx, xy, yy, zy, xz, yz, zz)
	end

	function TransformExtrapolator.new()
		return setmetatable({
			lastCFrame = nil,
		}, TransformExtrapolator)
	end

	function TransformExtrapolator:Step(dt, currentCFrame)
		local lastCFrame = self.lastCFrame or currentCFrame
		self.lastCFrame = currentCFrame

		local currentPos = currentCFrame.p
		local currentRot = extractRotation(currentCFrame)

		local lastPos = lastCFrame.p
		local lastRot = extractRotation(lastCFrame)

		-- Estimate velocities from the delta between now and the last frame
		-- This estimation can be a little noisy.
		local dp = (currentPos - lastPos)/dt
		local dr = cframeToAxis(currentRot*lastRot:inverse())/dt

		local function extrapolate(t)
			local p = dp*t + currentPos
			local r = axisToCFrame(dr*t)*currentRot
			return r + p
		end

		return {
			extrapolate = extrapolate,
			posVelocity = dp,
			rotVelocity = dr,
		}
	end

	function TransformExtrapolator:Reset()
		self.lastCFrame = nil
	end
end

--[[ The Module ]]--
local BaseOcclusion = require(script.Parent:WaitForChild("BaseOcclusion"))
local Poppercam = setmetatable({}, BaseOcclusion)
Poppercam.__index = Poppercam

function Poppercam.new()
	local self = setmetatable(BaseOcclusion.new(), Poppercam)
	self.focusExtrapolator = TransformExtrapolator.new()
	return self
end

function Poppercam:GetOcclusionMode()
	return Enum.DevCameraOcclusionMode.Zoom
end

function Poppercam:Enable(enable)
	self.focusExtrapolator:Reset()
end

function Poppercam:Update(renderDt, desiredCameraCFrame, desiredCameraFocus, cameraController)
	local rotatedFocus = CFrame.new(desiredCameraFocus.p, desiredCameraCFrame.p)*CFrame.new(
		0, 0, 0,
		-1, 0, 0,
		0, 1, 0,
		0, 0, -1
	)
	local extrapolation = self.focusExtrapolator:Step(renderDt, rotatedFocus)
	local zoom = ZoomController.Update(renderDt, rotatedFocus, extrapolation)
	return rotatedFocus*CFrame.new(0, 0, zoom), desiredCameraFocus
end

-- Called when character is added
function Poppercam:CharacterAdded(character, player)
end

-- Called when character is about to be removed
function Poppercam:CharacterRemoving(character, player)
end

function Poppercam:OnCameraSubjectChanged(newSubject)
end

return Poppercam]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0048</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX1075CA2EF6854CFC98AAD70EEDAAC5D1">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">OrbitalCamera</string>
							<string name="ScriptGuid">{2B540596-54A6-42EA-9C62-C81EE157230A}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	OrbitalCamera - Spherical coordinates control camera for top-down games
	2018 Camera Update - AllYourBlox
--]]

-- Local private variables and constants
local UNIT_X = Vector3.new(1,0,0)
local UNIT_Y = Vector3.new(0,1,0)
local UNIT_Z = Vector3.new(0,0,1)
local X1_Y0_Z1 = Vector3.new(1,0,1)	--Note: not a unit vector, used for projecting onto XZ plane
local ZERO_VECTOR3 = Vector3.new(0,0,0)
local ZERO_VECTOR2 = Vector2.new(0,0)
local TAU = 2 * math.pi

local VR_PITCH_FRACTION = 0.25
local tweenAcceleration = math.rad(220)		--Radians/Second^2
local tweenSpeed = math.rad(0)				--Radians/Second
local tweenMaxSpeed = math.rad(250)			--Radians/Second
local TIME_BEFORE_AUTO_ROTATE = 2.0 		--Seconds, used when auto-aligning camera with vehicles
local PORTRAIT_OFFSET = Vector3.new(0,-3,0)

--[[ Gamepad Support ]]--
local THUMBSTICK_DEADZONE = 0.2

-- Do not edit these values, they are not the developer-set limits, they are limits
-- to the values the camera system equations can correctly handle
local MIN_ALLOWED_ELEVATION_DEG = -80
local MAX_ALLOWED_ELEVATION_DEG = 80

local externalProperties = {}
externalProperties["InitialDistance"] 	= 25
externalProperties["MinDistance"] 		= 10
externalProperties["MaxDistance"] 		= 100
externalProperties["InitialElevation"] 	= 35
externalProperties["MinElevation"] 		= 35
externalProperties["MaxElevation"] 		= 35
externalProperties["ReferenceAzimuth"] 	= -45	-- Angle around the Y axis where the camera starts. -45 offsets the camera in the -X and +Z directions equally
externalProperties["CWAzimuthTravel"] 	= 90	-- How many degrees the camera is allowed to rotate from the reference position, CW as seen from above
externalProperties["CCWAzimuthTravel"] 	= 90	-- How many degrees the camera is allowed to rotate from the reference position, CCW as seen from above
externalProperties["UseAzimuthLimits"] 	= false -- Full rotation around Y axis available by default

local Util = require(script.Parent:WaitForChild("CameraUtils"))

--[[ Services ]]--
local PlayersService = game:GetService('Players')
local VRService = game:GetService("VRService")

--[[ Utility functions specific to OrbitalCamera ]]--
local function GetValueObject(name, defaultValue)
	local valueObj = script:FindFirstChild(name)
	if valueObj then
		return valueObj.Value
	end
	return defaultValue
end

--[[ The Module ]]--
local BaseCamera = require(script.Parent:WaitForChild("BaseCamera"))
local OrbitalCamera = setmetatable({}, BaseCamera)
OrbitalCamera.__index = OrbitalCamera


function OrbitalCamera.new()
	local self = setmetatable(BaseCamera.new(), OrbitalCamera)

	self.lastUpdate = tick()

	-- OrbitalCamera-specific members
	self.changedSignalConnections = {}
	self.refAzimuthRad = nil
	self.curAzimuthRad = nil
	self.minAzimuthAbsoluteRad = nil
	self.maxAzimuthAbsoluteRad = nil
	self.useAzimuthLimits = nil
	self.curElevationRad = nil
	self.minElevationRad = nil
	self.maxElevationRad = nil
	self.curDistance = nil
	self.minDistance = nil
	self.maxDistance = nil

	-- Gamepad
	self.r3ButtonDown = false
	self.l3ButtonDown = false
	self.gamepadDollySpeedMultiplier = 1

	self.lastUserPanCamera = tick()

	self.externalProperties = {}
	self.externalProperties["InitialDistance"] 	= 25
	self.externalProperties["MinDistance"] 		= 10
	self.externalProperties["MaxDistance"] 		= 100
	self.externalProperties["InitialElevation"] 	= 35
	self.externalProperties["MinElevation"] 		= 35
	self.externalProperties["MaxElevation"] 		= 35
	self.externalProperties["ReferenceAzimuth"] 	= -45	-- Angle around the Y axis where the camera starts. -45 offsets the camera in the -X and +Z directions equally
	self.externalProperties["CWAzimuthTravel"] 	= 90	-- How many degrees the camera is allowed to rotate from the reference position, CW as seen from above
	self.externalProperties["CCWAzimuthTravel"] 	= 90	-- How many degrees the camera is allowed to rotate from the reference position, CCW as seen from above
	self.externalProperties["UseAzimuthLimits"] 	= false -- Full rotation around Y axis available by default
	self:LoadNumberValueParameters()

	return self
end

function OrbitalCamera:LoadOrCreateNumberValueParameter(name, valueType, updateFunction)
	local valueObj = script:FindFirstChild(name)

	if valueObj and valueObj:isA(valueType) then
		-- Value object exists and is the correct type, use its value
		self.externalProperties[name] = valueObj.Value
	elseif self.externalProperties[name] ~= nil then
		-- Create missing (or replace incorrectly-typed) valueObject with default value
		valueObj = Instance.new(valueType)
		valueObj.Name = name
		valueObj.Parent = script
		valueObj.Value = self.externalProperties[name]
	else
		print("externalProperties table has no entry for ",name)
		return
	end

	if updateFunction then
		if self.changedSignalConnections[name] then
			self.changedSignalConnections[name]:Disconnect()
		end
		self.changedSignalConnections[name] = valueObj.Changed:Connect(function(newValue)
			self.externalProperties[name] = newValue
			updateFunction(self)
		end)
	end
end

function OrbitalCamera:SetAndBoundsCheckAzimuthValues()
	self.minAzimuthAbsoluteRad = math.rad(self.externalProperties["ReferenceAzimuth"]) - math.abs(math.rad(self.externalProperties["CWAzimuthTravel"]))
	self.maxAzimuthAbsoluteRad = math.rad(self.externalProperties["ReferenceAzimuth"]) + math.abs(math.rad(self.externalProperties["CCWAzimuthTravel"]))
	self.useAzimuthLimits = self.externalProperties["UseAzimuthLimits"]
	if self.useAzimuthLimits then
		self.curAzimuthRad = math.max(self.curAzimuthRad, self.minAzimuthAbsoluteRad)
		self.curAzimuthRad = math.min(self.curAzimuthRad, self.maxAzimuthAbsoluteRad)
	end
end

function OrbitalCamera:SetAndBoundsCheckElevationValues()
	-- These degree values are the direct user input values. It is deliberate that they are
	-- ranged checked only against the extremes, and not against each other. Any time one
	-- is changed, both of the internal values in radians are recalculated. This allows for
	-- A developer to change the values in any order and for the end results to be that the
	-- internal values adjust to match intent as best as possible.
	local minElevationDeg = math.max(self.externalProperties["MinElevation"], MIN_ALLOWED_ELEVATION_DEG)
	local maxElevationDeg = math.min(self.externalProperties["MaxElevation"], MAX_ALLOWED_ELEVATION_DEG)

	-- Set internal values in radians
	self.minElevationRad = math.rad(math.min(minElevationDeg, maxElevationDeg))
	self.maxElevationRad = math.rad(math.max(minElevationDeg, maxElevationDeg))
	self.curElevationRad = math.max(self.curElevationRad, self.minElevationRad)
	self.curElevationRad = math.min(self.curElevationRad, self.maxElevationRad)
end

function OrbitalCamera:SetAndBoundsCheckDistanceValues()
	self.minDistance = self.externalProperties["MinDistance"]
	self.maxDistance = self.externalProperties["MaxDistance"]
	self.curDistance = math.max(self.curDistance, self.minDistance)
	self.curDistance = math.min(self.curDistance, self.maxDistance)
end

-- This loads from, or lazily creates, NumberValue objects for exposed parameters
function OrbitalCamera:LoadNumberValueParameters()
	-- These initial values do not require change listeners since they are read only once
	self:LoadOrCreateNumberValueParameter("InitialElevation", "NumberValue", nil)
	self:LoadOrCreateNumberValueParameter("InitialDistance", "NumberValue", nil)

	-- Note: ReferenceAzimuth is also used as an initial value, but needs a change listener because it is used in the calculation of the limits
	self:LoadOrCreateNumberValueParameter("ReferenceAzimuth", "NumberValue", self.SetAndBoundsCheckAzimuthValue)
	self:LoadOrCreateNumberValueParameter("CWAzimuthTravel", "NumberValue", self.SetAndBoundsCheckAzimuthValues)
	self:LoadOrCreateNumberValueParameter("CCWAzimuthTravel", "NumberValue", self.SetAndBoundsCheckAzimuthValues)
	self:LoadOrCreateNumberValueParameter("MinElevation", "NumberValue", self.SetAndBoundsCheckElevationValues)
	self:LoadOrCreateNumberValueParameter("MaxElevation", "NumberValue", self.SetAndBoundsCheckElevationValues)
	self:LoadOrCreateNumberValueParameter("MinDistance", "NumberValue", self.SetAndBoundsCheckDistanceValues)
	self:LoadOrCreateNumberValueParameter("MaxDistance", "NumberValue", self.SetAndBoundsCheckDistanceValues)
	self:LoadOrCreateNumberValueParameter("UseAzimuthLimits", "BoolValue", self.SetAndBoundsCheckAzimuthValues)

	-- Internal values set (in radians, from degrees), plus sanitization
	self.curAzimuthRad = math.rad(self.externalProperties["ReferenceAzimuth"])
	self.curElevationRad = math.rad(self.externalProperties["InitialElevation"])
	self.curDistance = self.externalProperties["InitialDistance"]

	self:SetAndBoundsCheckAzimuthValues()
	self:SetAndBoundsCheckElevationValues()
	self:SetAndBoundsCheckDistanceValues()
end

function OrbitalCamera:GetModuleName()
	return "OrbitalCamera"
end

function OrbitalCamera:SetInitialOrientation(humanoid)
	if not humanoid or not humanoid.RootPart then
		warn("OrbitalCamera could not set initial orientation due to missing humanoid")
		return
	end
	local newDesiredLook = (humanoid.RootPart.CFrame.lookVector - Vector3.new(0,0.23,0)).unit
	local horizontalShift = Util.GetAngleBetweenXZVectors(newDesiredLook, self:GetCameraLookVector())
	local vertShift = math.asin(self:GetCameraLookVector().y) - math.asin(newDesiredLook.y)
	if not Util.IsFinite(horizontalShift) then
		horizontalShift = 0
	end
	if not Util.IsFinite(vertShift) then
		vertShift = 0
	end
	self.rotateInput = Vector2.new(horizontalShift, vertShift)
end

--[[ Functions of BaseCamera that are overridden by OrbitalCamera ]]--
function OrbitalCamera:GetCameraToSubjectDistance()
	return self.curDistance
end

function OrbitalCamera:SetCameraToSubjectDistance(desiredSubjectDistance)
	print("OrbitalCamera SetCameraToSubjectDistance ",desiredSubjectDistance)
	local player = PlayersService.LocalPlayer
	if player then
		self.currentSubjectDistance = Util.Clamp(self.minDistance, self.maxDistance, desiredSubjectDistance)

		-- OrbitalCamera is not allowed to go into the first-person range
		self.currentSubjectDistance = math.max(self.currentSubjectDistance, self.FIRST_PERSON_DISTANCE_THRESHOLD)
	end
	self.inFirstPerson = false
	self:UpdateMouseBehavior()
	return self.currentSubjectDistance
end

function OrbitalCamera:CalculateNewLookVector(suppliedLookVector, xyRotateVector)
	local currLookVector = suppliedLookVector or self:GetCameraLookVector()
	local currPitchAngle = math.asin(currLookVector.y)
	local yTheta = Util.Clamp(currPitchAngle - math.rad(MAX_ALLOWED_ELEVATION_DEG), currPitchAngle - math.rad(MIN_ALLOWED_ELEVATION_DEG), xyRotateVector.y)
	local constrainedRotateInput = Vector2.new(xyRotateVector.x, yTheta)
	local startCFrame = CFrame.new(ZERO_VECTOR3, currLookVector)
	local newLookVector = (CFrame.Angles(0, -constrainedRotateInput.x, 0) * startCFrame * CFrame.Angles(-constrainedRotateInput.y,0,0)).lookVector
	return newLookVector
end

function OrbitalCamera:GetGamepadPan(name, state, input)
	if input.UserInputType == self.activeGamepad and input.KeyCode == Enum.KeyCode.Thumbstick2 then
		if self.r3ButtonDown or self.l3ButtonDown then
		-- R3 or L3 Thumbstick is depressed, right stick controls dolly in/out
			if (input.Position.Y > THUMBSTICK_DEADZONE) then
				self.gamepadDollySpeedMultiplier = 0.96
			elseif (input.Position.Y < -THUMBSTICK_DEADZONE) then
				self.gamepadDollySpeedMultiplier = 1.04
			else
				self.gamepadDollySpeedMultiplier = 1.00
			end
		else
			if state == Enum.UserInputState.Cancel then
				self.gamepadPanningCamera = ZERO_VECTOR2
				return
			end

			local inputVector = Vector2.new(input.Position.X, -input.Position.Y)
			if inputVector.magnitude > THUMBSTICK_DEADZONE then
				self.gamepadPanningCamera = Vector2.new(input.Position.X, -input.Position.Y)
			else
				self.gamepadPanningCamera = ZERO_VECTOR2
			end
		end
		return Enum.ContextActionResult.Sink
	end
	return Enum.ContextActionResult.Pass
end

function OrbitalCamera:DoGamepadZoom(name, state, input)
	if input.UserInputType == self.activeGamepad and (input.KeyCode == Enum.KeyCode.ButtonR3 or input.KeyCode == Enum.KeyCode.ButtonL3) then
		if (state == Enum.UserInputState.Begin) then
			self.r3ButtonDown = input.KeyCode == Enum.KeyCode.ButtonR3
			self.l3ButtonDown = input.KeyCode == Enum.KeyCode.ButtonL3
		elseif (state == Enum.UserInputState.End) then
			if (input.KeyCode == Enum.KeyCode.ButtonR3) then
				self.r3ButtonDown = false
			elseif (input.KeyCode == Enum.KeyCode.ButtonL3) then
				self.l3ButtonDown = false
			end
			if (not self.r3ButtonDown) and (not self.l3ButtonDown) then
				self.gamepadDollySpeedMultiplier = 1.00
			end
		end
		return Enum.ContextActionResult.Sink
	end
	return Enum.ContextActionResult.Pass
end

function OrbitalCamera:BindGamepadInputActions()
	self:BindAction("OrbitalCamGamepadPan", function(name, state, input) return self:GetGamepadPan(name, state, input) end,
		false, Enum.KeyCode.Thumbstick2)
	self:BindAction("OrbitalCamGamepadZoom", function(name, state, input) return self:DoGamepadZoom(name, state, input) end,
		false, Enum.KeyCode.ButtonR3, Enum.KeyCode.ButtonL3)
end


-- [[ Update ]]--
function OrbitalCamera:Update(dt)
	local now = tick()
	local timeDelta = (now - self.lastUpdate)
	local userPanningTheCamera = (self.UserPanningTheCamera == true)
	local camera = 	workspace.CurrentCamera
	local newCameraCFrame = camera.CFrame
	local newCameraFocus = camera.Focus
	local player = PlayersService.LocalPlayer
	local humanoid = self:GetHumanoid()
	local cameraSubject = camera and camera.CameraSubject
	local isInVehicle = cameraSubject and cameraSubject:IsA('VehicleSeat')
	local isOnASkateboard = cameraSubject and cameraSubject:IsA('SkateboardPlatform')

	if self.lastUpdate == nil or timeDelta > 1 then
		self.lastCameraTransform = nil
	end

	if self.lastUpdate then
		local gamepadRotation = self:UpdateGamepad()

		if self:ShouldUseVRRotation() then
			self.RotateInput = self.RotateInput + self:GetVRRotationInput()
		else
			-- Cap out the delta to 0.1 so we don't get some crazy things when we re-resume from
			local delta = math.min(0.1, timeDelta)

			if gamepadRotation ~= ZERO_VECTOR2 then
				userPanningTheCamera = true
				self.rotateInput = self.rotateInput + (gamepadRotation * delta)
			end

			local angle = 0
			if not (isInVehicle or isOnASkateboard) then
				angle = angle + (self.TurningLeft and -120 or 0)
				angle = angle + (self.TurningRight and 120 or 0)
			end

			if angle ~= 0 then
				self.rotateInput = self.rotateInput +  Vector2.new(math.rad(angle * delta), 0)
				userPanningTheCamera = true
			end
		end
	end

	-- Reset tween speed if user is panning
	if userPanningTheCamera then
		tweenSpeed = 0
		self.lastUserPanCamera = tick()
	end

	local userRecentlyPannedCamera = now - self.lastUserPanCamera < TIME_BEFORE_AUTO_ROTATE
	local subjectPosition = self:GetSubjectPosition()

	if subjectPosition and player and camera then

		-- Process any dollying being done by gamepad
		-- TODO: Move this
		if self.gamepadDollySpeedMultiplier ~= 1 then
			self:SetCameraToSubjectDistance(self.currentSubjectDistance * self.gamepadDollySpeedMultiplier)
		end

		local VREnabled = VRService.VREnabled
		newCameraFocus = VREnabled and self:GetVRFocus(subjectPosition, timeDelta) or CFrame.new(subjectPosition)

		local cameraFocusP = newCameraFocus.p
		if VREnabled and not self:IsInFirstPerson() then
			local cameraHeight = self:GetCameraHeight()
			local vecToSubject = (subjectPosition - camera.CFrame.p)
			local distToSubject = vecToSubject.magnitude

			-- Only move the camera if it exceeded a maximum distance to the subject in VR
			if distToSubject > self.currentSubjectDistance or self.rotateInput.x ~= 0 then
				local desiredDist = math.min(distToSubject, self.currentSubjectDistance)

				-- Note that CalculateNewLookVector is overridden from BaseCamera
				vecToSubject = self:CalculateNewLookVector(vecToSubject.unit * X1_Y0_Z1, Vector2.new(self.rotateInput.x, 0)) * desiredDist

				local newPos = cameraFocusP - vecToSubject
				local desiredLookDir = camera.CFrame.lookVector
				if self.rotateInput.x ~= 0 then
					desiredLookDir = vecToSubject
				end
				local lookAt = Vector3.new(newPos.x + desiredLookDir.x, newPos.y, newPos.z + desiredLookDir.z)
				self.RotateInput = ZERO_VECTOR2

				newCameraCFrame = CFrame.new(newPos, lookAt) + Vector3.new(0, cameraHeight, 0)
			end
		else
			-- self.RotateInput is a Vector2 of mouse movement deltas since last update
			self.curAzimuthRad = self.curAzimuthRad - self.rotateInput.x

			if self.useAzimuthLimits then
				self.curAzimuthRad = Util.Clamp(self.minAzimuthAbsoluteRad, self.maxAzimuthAbsoluteRad, self.curAzimuthRad)
			else
				self.curAzimuthRad = (self.curAzimuthRad ~= 0) and (math.sign(self.curAzimuthRad) * (math.abs(self.curAzimuthRad) % TAU)) or 0
			end

			self.curElevationRad = Util.Clamp(self.minElevationRad, self.maxElevationRad, self.curElevationRad + self.rotateInput.y)

			local cameraPosVector = self.currentSubjectDistance * ( CFrame.fromEulerAnglesYXZ( -self.curElevationRad, self.curAzimuthRad, 0 ) * UNIT_Z )
			local camPos = subjectPosition + cameraPosVector

			newCameraCFrame = CFrame.new(camPos, subjectPosition)

			self.rotateInput = ZERO_VECTOR2
		end

		self.lastCameraTransform = newCameraCFrame
		self.lastCameraFocus = newCameraFocus
		if (isInVehicle or isOnASkateboard) and cameraSubject:IsA('BasePart') then
			self.lastSubjectCFrame = cameraSubject.CFrame
		else
			self.lastSubjectCFrame = nil
		end
	end

	self.lastUpdate = now
	return newCameraCFrame, newCameraFocus
end

return OrbitalCamera
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0049</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXFFE56B34337A4282A70042DB0D6385B5">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">ClassicCamera</string>
							<string name="ScriptGuid">{7BD0E329-94DA-45EB-B4A3-138360CFA1AB}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	ClassicCamera - Classic Roblox camera control module
	2018 Camera Update - AllYourBlox

	Note: This module also handles camera control types Follow and Track, the
	latter of which is currently not distinguished from Classic
--]]

-- Local private variables and constants
local ZERO_VECTOR2 = Vector2.new(0,0)

local tweenAcceleration = math.rad(220)		--Radians/Second^2
local tweenSpeed = math.rad(0)				--Radians/Second
local tweenMaxSpeed = math.rad(250)			--Radians/Second
local TIME_BEFORE_AUTO_ROTATE = 2.0 		--Seconds, used when auto-aligning camera with vehicles

local INITIAL_CAMERA_ANGLE = CFrame.fromOrientation(math.rad(-15), 0, 0)

--[[ Services ]]--
local PlayersService = game:GetService('Players')
local VRService = game:GetService("VRService")

local Util = require(script.Parent:WaitForChild("CameraUtils"))

--[[ The Module ]]--
local BaseCamera = require(script.Parent:WaitForChild("BaseCamera"))
local ClassicCamera = setmetatable({}, BaseCamera)
ClassicCamera.__index = ClassicCamera

function ClassicCamera.new()
	local self = setmetatable(BaseCamera.new(), ClassicCamera)

	self.isFollowCamera = false
	self.lastUpdate = tick()

	return self
end

function ClassicCamera:GetModuleName()
	return "ClassicCamera"
end

-- Movement mode standardized to Enum.ComputerCameraMovementMode values
function ClassicCamera:SetCameraMovementMode( cameraMovementMode )
	BaseCamera.SetCameraMovementMode(self,cameraMovementMode)
	self.isFollowCamera = cameraMovementMode == Enum.ComputerCameraMovementMode.Follow
end

function ClassicCamera:Test()
	print("ClassicCamera:Test()")
end

function ClassicCamera:Update()
	local now = tick()
	local timeDelta = (now - self.lastUpdate)

	local camera = 	workspace.CurrentCamera
	local newCameraCFrame = camera.CFrame
	local newCameraFocus = camera.Focus
	local overrideCameraLookVector = nil
	if self.resetCameraAngle then
		local rootPart = self:GetHumanoidRootPart()
		if rootPart then
			overrideCameraLookVector = (rootPart.CFrame * INITIAL_CAMERA_ANGLE).lookVector
		else
			overrideCameraLookVector = INITIAL_CAMERA_ANGLE.lookVector
		end
		self.resetCameraAngle = false
	end

	local player = PlayersService.LocalPlayer
	local humanoid = self:GetHumanoid()
	local cameraSubject = camera.CameraSubject
	local isInVehicle = cameraSubject and cameraSubject:IsA('VehicleSeat')
	local isOnASkateboard = cameraSubject and cameraSubject:IsA('SkateboardPlatform')
	local isClimbing = humanoid and humanoid:GetState() == Enum.HumanoidStateType.Climbing

	if self.lastUpdate == nil or timeDelta > 1 then
		self.lastCameraTransform = nil
	end

	if self.lastUpdate then
		local gamepadRotation = self:UpdateGamepad()

		if self:ShouldUseVRRotation() then
			self.rotateInput = self.rotateInput + self:GetVRRotationInput()
		else
			-- Cap out the delta to 0.1 so we don't get some crazy things when we re-resume from
			local delta = math.min(0.1, timeDelta)

			if gamepadRotation ~= ZERO_VECTOR2 then
				self.rotateInput = self.rotateInput + (gamepadRotation * delta)
			end

			local angle = 0
			if not (isInVehicle or isOnASkateboard) then
				angle = angle + (self.turningLeft and -120 or 0)
				angle = angle + (self.turningRight and 120 or 0)
			end

			if angle ~= 0 then
				self.rotateInput = self.rotateInput +  Vector2.new(math.rad(angle * delta), 0)
			end
		end
	end

	-- Reset tween speed if user is panning
	if self.userPanningTheCamera then
		tweenSpeed = 0
		self.lastUserPanCamera = tick()
	end

	local userRecentlyPannedCamera = now - self.lastUserPanCamera < TIME_BEFORE_AUTO_ROTATE
	local subjectPosition = self:GetSubjectPosition()

	if subjectPosition and player and camera then
		local zoom = self:GetCameraToSubjectDistance()
		if zoom < 0.5 then
			zoom = 0.5
		end

		if self:GetIsMouseLocked() and not self:IsInFirstPerson() then
			-- We need to use the right vector of the camera after rotation, not before
			local newLookCFrame = self:CalculateNewLookCFrame(overrideCameraLookVector)

			local offset = self:GetMouseLockOffset()
			local cameraRelativeOffset = offset.X * newLookCFrame.rightVector + offset.Y * newLookCFrame.upVector + offset.Z * newLookCFrame.lookVector

			--offset can be NAN, NAN, NAN if newLookVector has only y component
			if Util.IsFiniteVector3(cameraRelativeOffset) then
				subjectPosition = subjectPosition + cameraRelativeOffset
			end
		else
			if not self.userPanningTheCamera and self.lastCameraTransform then

				local isInFirstPerson = self:IsInFirstPerson()

				if (isInVehicle or isOnASkateboard or (self.isFollowCamera and isClimbing)) and self.lastUpdate and humanoid and humanoid.Torso then
					if isInFirstPerson then
						if self.lastSubjectCFrame and (isInVehicle or isOnASkateboard) and cameraSubject:IsA('BasePart') then
							local y = -Util.GetAngleBetweenXZVectors(self.lastSubjectCFrame.lookVector, cameraSubject.CFrame.lookVector)
							if Util.IsFinite(y) then
								self.rotateInput = self.rotateInput + Vector2.new(y, 0)
							end
							tweenSpeed = 0
						end
					elseif not userRecentlyPannedCamera then
						local forwardVector = humanoid.Torso.CFrame.lookVector
						if isOnASkateboard then
							forwardVector = cameraSubject.CFrame.lookVector
						end

						tweenSpeed = Util.Clamp(0, tweenMaxSpeed, tweenSpeed + tweenAcceleration * timeDelta)

						local percent = Util.Clamp(0, 1, tweenSpeed * timeDelta)
						if self:IsInFirstPerson() and not (self.isFollowCamera and self.isClimbing) then
							percent = 1
						end

						local y = Util.GetAngleBetweenXZVectors(forwardVector, self:GetCameraLookVector())
						if Util.IsFinite(y) and math.abs(y) > 0.0001 then
							self.rotateInput = self.rotateInput + Vector2.new(y * percent, 0)
						end
					end

				elseif self.isFollowCamera and (not (isInFirstPerson or userRecentlyPannedCamera) and not VRService.VREnabled) then
					-- Logic that was unique to the old FollowCamera module
					local lastVec = -(self.lastCameraTransform.p - subjectPosition)

					local y = Util.GetAngleBetweenXZVectors(lastVec, self:GetCameraLookVector())

					-- This cutoff is to decide if the humanoid's angle of movement,
					-- relative to the camera's look vector, is enough that
					-- we want the camera to be following them. The point is to provide
					-- a sizable dead zone to allow more precise forward movements.
					local thetaCutoff = 0.4

					-- Check for NaNs
					if Util.IsFinite(y) and math.abs(y) > 0.0001 and math.abs(y) > thetaCutoff * timeDelta then
						self.rotateInput = self.rotateInput + Vector2.new(y, 0)
					end
				end
			end
		end

		if not self.isFollowCamera then
			local VREnabled = VRService.VREnabled

			if VREnabled then
				newCameraFocus = self:GetVRFocus(subjectPosition, timeDelta)
			else
				newCameraFocus = CFrame.new(subjectPosition)
			end

			local cameraFocusP = newCameraFocus.p
			if VREnabled and not self:IsInFirstPerson() then
				local cameraHeight = self:GetCameraHeight()
				local vecToSubject = (subjectPosition - camera.CFrame.p)
				local distToSubject = vecToSubject.magnitude

				-- Only move the camera if it exceeded a maximum distance to the subject in VR
				if distToSubject > zoom or self.rotateInput.x ~= 0 then
					local desiredDist = math.min(distToSubject, zoom)
					vecToSubject = self:CalculateNewLookVectorVR() * desiredDist
					local newPos = cameraFocusP - vecToSubject
					local desiredLookDir = camera.CFrame.lookVector
					if self.rotateInput.x ~= 0 then
						desiredLookDir = vecToSubject
					end
					local lookAt = Vector3.new(newPos.x + desiredLookDir.x, newPos.y, newPos.z + desiredLookDir.z)
					self.rotateInput = ZERO_VECTOR2

					newCameraCFrame = CFrame.new(newPos, lookAt) + Vector3.new(0, cameraHeight, 0)
				end
			else
				local newLookVector = self:CalculateNewLookVector(overrideCameraLookVector)
				self.rotateInput = ZERO_VECTOR2
				newCameraCFrame = CFrame.new(cameraFocusP - (zoom * newLookVector), cameraFocusP)
			end
		else -- is FollowCamera
			local newLookVector = self:CalculateNewLookVector(overrideCameraLookVector)
			self.rotateInput = ZERO_VECTOR2

			if VRService.VREnabled then
				newCameraFocus = self:GetVRFocus(subjectPosition, timeDelta)
			else
				newCameraFocus = CFrame.new(subjectPosition)
			end
			newCameraCFrame = CFrame.new(newCameraFocus.p - (zoom * newLookVector), newCameraFocus.p) + Vector3.new(0, self:GetCameraHeight(), 0)
		end

		self.lastCameraTransform = newCameraCFrame
		self.lastCameraFocus = newCameraFocus
		if (isInVehicle or isOnASkateboard) and cameraSubject:IsA('BasePart') then
			self.lastSubjectCFrame = cameraSubject.CFrame
		else
			self.lastSubjectCFrame = nil
		end
	end

	self.lastUpdate = now
	return newCameraCFrame, newCameraFocus
end

function ClassicCamera:EnterFirstPerson()
	self.inFirstPerson = true
	self:UpdateMouseBehavior()
end

function ClassicCamera:LeaveFirstPerson()
	self.inFirstPerson = false
	self:UpdateMouseBehavior()
end

return ClassicCamera
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c004a</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX24F93BB88835473AA9A10C2C7698718D">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">CameraUtils</string>
							<string name="ScriptGuid">{BC81693B-3C76-4953-B4A4-8E45935EC4A0}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	CameraUtils - Math utility functions shared by multiple camera scripts
	2018 Camera Update - AllYourBlox		
--]]

local CameraUtils = {}

local function round(num)
	return math.floor(num + 0.5)
end

-- Note, arguments do not match the new math.clamp
-- Eventually we will replace these calls with math.clamp, but right now
-- this is safer as math.clamp is not tolerant of min>max
function CameraUtils.Clamp(low, high, val)
	return math.min(math.max(val, low), high)
end

-- From TransparencyController
function CameraUtils.Round(num, places)
	local decimalPivot = 10^places
	return math.floor(num * decimalPivot + 0.5) / decimalPivot
end

function CameraUtils.IsFinite(val)
	return val == val and val ~= math.huge and val ~= -math.huge
end

function CameraUtils.IsFiniteVector3(vec3)
	return CameraUtils.IsFinite(vec3.X) and CameraUtils.IsFinite(vec3.Y) and CameraUtils.IsFinite(vec3.Z)
end

-- Legacy implementation renamed
function CameraUtils.GetAngleBetweenXZVectors(v1, v2)
	return math.atan2(v2.X*v1.Z-v2.Z*v1.X, v2.X*v1.X+v2.Z*v1.Z)
end

function  CameraUtils.RotateVectorByAngleAndRound(camLook, rotateAngle, roundAmount)
	if camLook.Magnitude > 0 then
		camLook = camLook.unit
		local currAngle = math.atan2(camLook.z, camLook.x)
		local newAngle = round((math.atan2(camLook.z, camLook.x) + rotateAngle) / roundAmount) * roundAmount
		return newAngle - currAngle
	end
	return 0
end

-- K is a tunable parameter that changes the shape of the S-curve
-- the larger K is the more straight/linear the curve gets
local k = 0.35
local lowerK = 0.8
local function SCurveTranform(t)
	t = CameraUtils.Clamp(-1,1,t)
	if t >= 0 then
		return (k*t) / (k - t + 1)
	end
	return -((lowerK*-t) / (lowerK + t + 1))
end

local DEADZONE = 0.1
local function toSCurveSpace(t)
	return (1 + DEADZONE) * (2*math.abs(t) - 1) - DEADZONE
end

local function fromSCurveSpace(t)
	return t/2 + 0.5
end
	
function CameraUtils.GamepadLinearToCurve(thumbstickPosition)
	local function onAxis(axisValue)
		local sign = 1
		if axisValue < 0 then
			sign = -1
		end
		local point = fromSCurveSpace(SCurveTranform(toSCurveSpace(math.abs(axisValue))))
		point = point * sign
		return CameraUtils.Clamp(-1, 1, point)
	end
	return Vector2.new(onAxis(thumbstickPosition.x), onAxis(thumbstickPosition.y))
end

-- This function converts 4 different, redundant enumeration types to one standard so the values can be compared
function CameraUtils.ConvertCameraModeEnumToStandard( enumValue )
	
	if enumValue == Enum.TouchCameraMovementMode.Default then
		return Enum.ComputerCameraMovementMode.Follow
	end
	
	if enumValue == Enum.ComputerCameraMovementMode.Default then
		return Enum.ComputerCameraMovementMode.Classic
	end
	
	if enumValue == Enum.TouchCameraMovementMode.Classic or
		enumValue == Enum.DevTouchCameraMovementMode.Classic or
		enumValue == Enum.DevComputerCameraMovementMode.Classic or
		enumValue == Enum.ComputerCameraMovementMode.Classic then
		return Enum.ComputerCameraMovementMode.Classic
	end
	
	if enumValue == Enum.TouchCameraMovementMode.Follow or
		enumValue == Enum.DevTouchCameraMovementMode.Follow or
		enumValue == Enum.DevComputerCameraMovementMode.Follow or
		enumValue == Enum.ComputerCameraMovementMode.Follow then
		return Enum.ComputerCameraMovementMode.Follow
	end
	
	if enumValue == Enum.TouchCameraMovementMode.Orbital or
		enumValue == Enum.DevTouchCameraMovementMode.Orbital or
		enumValue == Enum.DevComputerCameraMovementMode.Orbital or
		enumValue == Enum.ComputerCameraMovementMode.Orbital then
		return Enum.ComputerCameraMovementMode.Orbital
	end
	
	-- Note: Only the Dev versions of the Enums have UserChoice as an option
	if enumValue == Enum.DevTouchCameraMovementMode.UserChoice or
		enumValue == Enum.DevComputerCameraMovementMode.UserChoice then
		return Enum.DevComputerCameraMovementMode.UserChoice
	end
	
	-- For any unmapped options return Classic camera
	return Enum.ComputerCameraMovementMode.Classic
end

return CameraUtils

]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c004b</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXB47DFA6ACAF54065A2D494BEDDD3DA9A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BaseOcclusion</string>
							<string name="ScriptGuid">{F3E01662-2998-44F4-82E3-2D5C713014B1}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	BaseOcclusion - Abstract base class for character occlusion control modules
	2018 Camera Update - AllYourBlox		
--]]

--[[ The Module ]]--
local BaseOcclusion = {}
BaseOcclusion.__index = BaseOcclusion
setmetatable(BaseOcclusion, { __call = function(_, ...) return BaseOcclusion.new(...) end})

function BaseOcclusion.new()
	local self = setmetatable({}, BaseOcclusion)
	return self
end

-- Called when character is added
function BaseOcclusion:CharacterAdded(char, player)
	
end

-- Called when character is about to be removed
function BaseOcclusion:CharacterRemoving(char, player)
	
end

function BaseOcclusion:OnCameraSubjectChanged(newSubject)
	
end

--[[ Derived classes are required to override and implement all of the following functions ]]--
function GetOcclusionMode()
	-- Must be overridden in derived classes to return an Enum.DevCameraOcclusionMode value
	warn("BaseOcclusion GetOcclusionMode must be overridden by derived classes")
	return nil
end

function BaseOcclusion:Enable(enabled)
	warn("BaseOcclusion Enable must be overridden by derived classes")
end

function BaseOcclusion:Update(dt, desiredCameraCFrame, desiredCameraFocus)
	warn("BaseOcclusion Update must be overridden by derived classes")
	return desiredCameraCFrame, desiredCameraFocus
end

return BaseOcclusion
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c004c</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX67A17098937A442E92BD5C4DF5BD87B6">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BaseCamera</string>
							<string name="ScriptGuid">{694AA9AD-A514-4714-BA52-E518FCA7A559}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	BaseCamera - Abstract base class for camera control modules
	2018 Camera Update - AllYourBlox
--]]

--[[ Local Constants ]]--
local UNIT_Z = Vector3.new(0,0,1)
local X1_Y0_Z1 = Vector3.new(1,0,1)	--Note: not a unit vector, used for projecting onto XZ plane

local THUMBSTICK_DEADZONE = 0.2
local DEFAULT_DISTANCE = 12.5	-- Studs
local PORTRAIT_DEFAULT_DISTANCE = 25		-- Studs
local FIRST_PERSON_DISTANCE_THRESHOLD = 1.0 -- Below this value, snap into first person

local CAMERA_ACTION_PRIORITY = Enum.ContextActionPriority.Default.Value

-- Note: DotProduct check in CoordinateFrame::lookAt() prevents using values within about
-- 8.11 degrees of the +/- Y axis, that's why these limits are currently 80 degrees
local MIN_Y = math.rad(-80)
local MAX_Y = math.rad(80)

local TOUCH_ADJUST_AREA_UP = math.rad(30)
local TOUCH_ADJUST_AREA_DOWN = math.rad(-15)

local TOUCH_SENSITIVTY_ADJUST_MAX_Y = 2.1
local TOUCH_SENSITIVTY_ADJUST_MIN_Y = 0.5

local VR_ANGLE = math.rad(15)
local VR_LOW_INTENSITY_ROTATION = Vector2.new(math.rad(15), 0)
local VR_HIGH_INTENSITY_ROTATION = Vector2.new(math.rad(45), 0)
local VR_LOW_INTENSITY_REPEAT = 0.1
local VR_HIGH_INTENSITY_REPEAT = 0.4

local ZERO_VECTOR2 = Vector2.new(0,0)
local ZERO_VECTOR3 = Vector3.new(0,0,0)

local touchSensitivityFlagExists, touchSensitivityFlagEnabled = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserTouchSensitivityAdjust")
end)
local FFlagUserTouchSensitivityAdjust = touchSensitivityFlagExists and touchSensitivityFlagEnabled

local TOUCH_SENSITIVTY = Vector2.new(0.0045 * math.pi, 0.003375 * math.pi)
if FFlagUserTouchSensitivityAdjust then
	TOUCH_SENSITIVTY = Vector2.new(0.00945 * math.pi, 0.003375 * math.pi)
end
local MOUSE_SENSITIVITY = Vector2.new( 0.002 * math.pi, 0.0015 * math.pi )

local SEAT_OFFSET = Vector3.new(0,5,0)
local VR_SEAT_OFFSET = Vector3.new(0,4,0)
local HEAD_OFFSET = Vector3.new(0,1.5,0)
local R15_HEAD_OFFSET = Vector3.new(0, 1.5, 0)
local R15_HEAD_OFFSET_NO_SCALING = Vector3.new(0, 2, 0)
local HUMANOID_ROOT_PART_SIZE = Vector3.new(2, 2, 1)

local GAMEPAD_ZOOM_STEP_1 = 0
local GAMEPAD_ZOOM_STEP_2 = 10
local GAMEPAD_ZOOM_STEP_3 = 20

local PAN_SENSITIVITY = 20
local ZOOM_SENSITIVITY_CURVATURE = 0.5

local abs = math.abs
local sign = math.sign

local thirdGamepadZoomStepFlagExists, thirdGamepadZoomStepFlagEnabled = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserThirdGamepadZoomStep")
end)
local FFlagUserThirdGamepadZoomStep = thirdGamepadZoomStepFlagExists and thirdGamepadZoomStepFlagEnabled

local FFlagUserPointerActionsInPlayerScripts do
	local success, result = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserPointerActionsInPlayerScripts")
	end)
	FFlagUserPointerActionsInPlayerScripts = success and result
end

local FFlagUserNoMoreKeyboardPan do
	local success, result = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserNoMoreKeyboardPan")
	end)
	FFlagUserNoMoreKeyboardPan = success and result
end

local fixZoomIssuesFlagExists, fixZoomIssuesFlagEnabled = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserFixZoomClampingIssues")
end)
local FFlagUserFixZoomClampingIssues = fixZoomIssuesFlagExists and fixZoomIssuesFlagEnabled

local Util = require(script.Parent:WaitForChild("CameraUtils"))
local ZoomController = require(script.Parent:WaitForChild("ZoomController"))

--[[ Roblox Services ]]--
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local GuiService = game:GetService("GuiService")
local ContextActionService = game:GetService("ContextActionService")
local VRService = game:GetService("VRService")
local UserGameSettings = UserSettings():GetService("UserGameSettings")

--[[ The Module ]]--
local BaseCamera = {}
BaseCamera.__index = BaseCamera

function BaseCamera.new()
	local self = setmetatable({}, BaseCamera)

	-- So that derived classes have access to this
	self.FIRST_PERSON_DISTANCE_THRESHOLD = FIRST_PERSON_DISTANCE_THRESHOLD

	self.cameraType = nil
	self.cameraMovementMode = nil

	local player = Players.LocalPlayer
	self.lastCameraTransform = nil
	self.rotateInput = ZERO_VECTOR2
	self.userPanningCamera = false
	self.lastUserPanCamera = tick()

	self.humanoidRootPart = nil
	self.humanoidCache = {}

	-- Subject and position on last update call
	self.lastSubject = nil
	self.lastSubjectPosition = Vector3.new(0,5,0)

	-- These subject distance members refer to the nominal camera-to-subject follow distance that the camera
	-- is trying to maintain, not the actual measured value.
	-- The default is updated when screen orientation or the min/max distances change,
	-- to be sure the default is always in range and appropriate for the orientation.
	self.defaultSubjectDistance = Util.Clamp(player.CameraMinZoomDistance, player.CameraMaxZoomDistance, DEFAULT_DISTANCE)
	self.currentSubjectDistance = Util.Clamp(player.CameraMinZoomDistance, player.CameraMaxZoomDistance, DEFAULT_DISTANCE)

	self.inFirstPerson = false
	self.inMouseLockedMode = false
	self.portraitMode = false
	self.isSmallTouchScreen = false

	-- Used by modules which want to reset the camera angle on respawn.
	self.resetCameraAngle = true

	self.enabled = false

	-- Input Event Connections
	self.inputBeganConn = nil
	self.inputChangedConn = nil
	self.inputEndedConn = nil

	self.startPos = nil
	self.lastPos = nil
	self.panBeginLook = nil

	self.panEnabled = true
	self.keyPanEnabled = true
	self.distanceChangeEnabled = true

	self.PlayerGui = nil

	self.cameraChangedConn = nil
	self.viewportSizeChangedConn = nil

	self.boundContextActions = {}

	-- VR Support
	self.shouldUseVRRotation = false
	self.VRRotationIntensityAvailable = false
	self.lastVRRotationIntensityCheckTime = 0
	self.lastVRRotationTime = 0
	self.vrRotateKeyCooldown = {}
	self.cameraTranslationConstraints = Vector3.new(1, 1, 1)
	self.humanoidJumpOrigin = nil
	self.trackingHumanoid = nil
	self.cameraFrozen = false
	self.subjectStateChangedConn = nil

	-- Gamepad support
	self.activeGamepad = nil
	self.gamepadPanningCamera = false
	self.lastThumbstickRotate = nil
	self.numOfSeconds = 0.7
	self.currentSpeed = 0
	self.maxSpeed = 6
	self.vrMaxSpeed = 4
	self.lastThumbstickPos = Vector2.new(0,0)
	self.ySensitivity = 0.65
	self.lastVelocity = nil
	self.gamepadConnectedConn = nil
	self.gamepadDisconnectedConn = nil
	self.currentZoomSpeed = 1.0
	self.L3ButtonDown = false
	self.dpadLeftDown = false
	self.dpadRightDown = false

	-- Touch input support
	self.isDynamicThumbstickEnabled = false
	self.fingerTouches = {}
	self.dynamicTouchInput = nil
	self.numUnsunkTouches = 0
	self.inputStartPositions = {}
	self.inputStartTimes = {}
	self.startingDiff = nil
	self.pinchBeginZoom = nil
	self.userPanningTheCamera = false
	self.touchActivateConn = nil

	-- Mouse locked formerly known as shift lock mode
	self.mouseLockOffset = ZERO_VECTOR3

	-- [[ NOTICE ]] --
	-- Initialization things used to always execute at game load time, but now these camera modules are instantiated
	-- when needed, so the code here may run well after the start of the game

	if player.Character then
		self:OnCharacterAdded(player.Character)
	end

	player.CharacterAdded:Connect(function(char)
		self:OnCharacterAdded(char)
	end)

	if self.cameraChangedConn then self.cameraChangedConn:Disconnect() end
	self.cameraChangedConn = workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		self:OnCurrentCameraChanged()
	end)
	self:OnCurrentCameraChanged()

	if self.playerCameraModeChangeConn then self.playerCameraModeChangeConn:Disconnect() end
	self.playerCameraModeChangeConn = player:GetPropertyChangedSignal("CameraMode"):Connect(function()
		self:OnPlayerCameraPropertyChange()
	end)

	if self.minDistanceChangeConn then self.minDistanceChangeConn:Disconnect() end
	self.minDistanceChangeConn = player:GetPropertyChangedSignal("CameraMinZoomDistance"):Connect(function()
		self:OnPlayerCameraPropertyChange()
	end)

	if self.maxDistanceChangeConn then self.maxDistanceChangeConn:Disconnect() end
	self.maxDistanceChangeConn = player:GetPropertyChangedSignal("CameraMaxZoomDistance"):Connect(function()
		self:OnPlayerCameraPropertyChange()
	end)

	if self.playerDevTouchMoveModeChangeConn then self.playerDevTouchMoveModeChangeConn:Disconnect() end
	self.playerDevTouchMoveModeChangeConn = player:GetPropertyChangedSignal("DevTouchMovementMode"):Connect(function()
		self:OnDevTouchMovementModeChanged()
	end)
	self:OnDevTouchMovementModeChanged() -- Init

	if self.gameSettingsTouchMoveMoveChangeConn then self.gameSettingsTouchMoveMoveChangeConn:Disconnect() end
	self.gameSettingsTouchMoveMoveChangeConn = UserGameSettings:GetPropertyChangedSignal("TouchMovementMode"):Connect(function()
		self:OnGameSettingsTouchMovementModeChanged()
	end)
	self:OnGameSettingsTouchMovementModeChanged() -- Init

	UserGameSettings:SetCameraYInvertVisible()
	UserGameSettings:SetGamepadCameraSensitivityVisible()

	self.hasGameLoaded = game:IsLoaded()
	if not self.hasGameLoaded then
		self.gameLoadedConn = game.Loaded:Connect(function()
			self.hasGameLoaded = true
			self.gameLoadedConn:Disconnect()
			self.gameLoadedConn = nil
		end)
	end

	if FFlagUserFixZoomClampingIssues then
		self:OnPlayerCameraPropertyChange()
	end

	return self
end

function BaseCamera:GetModuleName()
	return "BaseCamera"
end

function BaseCamera:OnCharacterAdded(char)
	self.resetCameraAngle = self.resetCameraAngle or self:GetEnabled()
	self.humanoidRootPart = nil
	if UserInputService.TouchEnabled then
		self.PlayerGui = Players.LocalPlayer:WaitForChild("PlayerGui")
		for _, child in ipairs(char:GetChildren()) do
			if child:IsA("Tool") then
				self.isAToolEquipped = true
			end
		end
		char.ChildAdded:Connect(function(child)
			if child:IsA("Tool") then
				self.isAToolEquipped = true
			end
		end)
		char.ChildRemoved:Connect(function(child)
			if child:IsA("Tool") then
				self.isAToolEquipped = false
			end
		end)
	end
end

function BaseCamera:GetHumanoidRootPart()
	if not self.humanoidRootPart then
		local player = Players.LocalPlayer
		if player.Character then
			local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
			if humanoid then
				self.humanoidRootPart = humanoid.RootPart
			end
		end
	end
	return self.humanoidRootPart
end

function BaseCamera:GetBodyPartToFollow(humanoid, isDead)
	-- If the humanoid is dead, prefer the head part if one still exists as a sibling of the humanoid
	if humanoid:GetState() == Enum.HumanoidStateType.Dead then
		local character = humanoid.Parent
		if character and character:IsA("Model") then
			return character:FindFirstChild("Head") or humanoid.RootPart
		end
	end

	return humanoid.RootPart
end

function BaseCamera:GetSubjectPosition()
	local result = self.lastSubjectPosition
	local camera = game.Workspace.CurrentCamera
	local cameraSubject = camera and camera.CameraSubject

	if cameraSubject then
		if cameraSubject:IsA("Humanoid") then
			local humanoid = cameraSubject
			local humanoidIsDead = humanoid:GetState() == Enum.HumanoidStateType.Dead

			if VRService.VREnabled and humanoidIsDead and humanoid == self.lastSubject then
				result = self.lastSubjectPosition
			else
				local bodyPartToFollow = humanoid.RootPart

				-- If the humanoid is dead, prefer their head part as a follow target, if it exists
				if humanoidIsDead then
					if humanoid.Parent and humanoid.Parent:IsA("Model") then
						bodyPartToFollow = humanoid.Parent:FindFirstChild("Head") or bodyPartToFollow
					end
				end

				if bodyPartToFollow and bodyPartToFollow:IsA("BasePart") then
					local heightOffset
					if humanoid.RigType == Enum.HumanoidRigType.R15 then
						if humanoid.AutomaticScalingEnabled then
							heightOffset = R15_HEAD_OFFSET
							if bodyPartToFollow == humanoid.RootPart then
								local rootPartSizeOffset = (humanoid.RootPart.Size.Y/2) - (HUMANOID_ROOT_PART_SIZE.Y/2)
								heightOffset = heightOffset + Vector3.new(0, rootPartSizeOffset, 0)
							end
						else
							heightOffset = R15_HEAD_OFFSET_NO_SCALING
						end
					else
						heightOffset = HEAD_OFFSET
					end

					if humanoidIsDead then
						heightOffset = ZERO_VECTOR3
					end

					result = bodyPartToFollow.CFrame.p + bodyPartToFollow.CFrame:vectorToWorldSpace(heightOffset + humanoid.CameraOffset)
				end
			end

		elseif cameraSubject:IsA("VehicleSeat") then
			local offset = SEAT_OFFSET
			if VRService.VREnabled then
				offset = VR_SEAT_OFFSET
			end
			result = cameraSubject.CFrame.p + cameraSubject.CFrame:vectorToWorldSpace(offset)
		elseif cameraSubject:IsA("SkateboardPlatform") then
			result = cameraSubject.CFrame.p + SEAT_OFFSET
		elseif cameraSubject:IsA("BasePart") then
			result = cameraSubject.CFrame.p
		elseif cameraSubject:IsA("Model") then
			if cameraSubject.PrimaryPart then
				result = cameraSubject:GetPrimaryPartCFrame().p
			else
				result = cameraSubject:GetModelCFrame().p
			end
		end
	else
		-- cameraSubject is nil
		-- Note: Previous RootCamera did not have this else case and let self.lastSubject and self.lastSubjectPosition
		-- both get set to nil in the case of cameraSubject being nil. This function now exits here to preserve the
		-- last set valid values for these, as nil values are not handled cases
		return
	end

	self.lastSubject = cameraSubject
	self.lastSubjectPosition = result

	return result
end

function BaseCamera:UpdateDefaultSubjectDistance()
	local player = Players.LocalPlayer
	if self.portraitMode then
		self.defaultSubjectDistance = Util.Clamp(player.CameraMinZoomDistance, player.CameraMaxZoomDistance, PORTRAIT_DEFAULT_DISTANCE)
	else
		self.defaultSubjectDistance = Util.Clamp(player.CameraMinZoomDistance, player.CameraMaxZoomDistance, DEFAULT_DISTANCE)
	end
end

function BaseCamera:OnViewportSizeChanged()
	local camera = game.Workspace.CurrentCamera
	local size = camera.ViewportSize
	self.portraitMode = size.X < size.Y
	self.isSmallTouchScreen = UserInputService.TouchEnabled and (size.Y < 500 or size.X < 700)

	self:UpdateDefaultSubjectDistance()
end

-- Listener for changes to workspace.CurrentCamera
function BaseCamera:OnCurrentCameraChanged()
	if UserInputService.TouchEnabled then
		if self.viewportSizeChangedConn then
			self.viewportSizeChangedConn:Disconnect()
			self.viewportSizeChangedConn = nil
		end

		local newCamera = game.Workspace.CurrentCamera

		if newCamera then
			self:OnViewportSizeChanged()
			self.viewportSizeChangedConn = newCamera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
				self:OnViewportSizeChanged()
			end)
		end
	end

	-- VR support additions
	if self.cameraSubjectChangedConn then
		self.cameraSubjectChangedConn:Disconnect()
		self.cameraSubjectChangedConn = nil
	end

	local camera = game.Workspace.CurrentCamera
	if camera then
		self.cameraSubjectChangedConn = camera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
			self:OnNewCameraSubject()
		end)
		self:OnNewCameraSubject()
	end
end

function BaseCamera:OnDynamicThumbstickEnabled()
	if UserInputService.TouchEnabled then
		self.isDynamicThumbstickEnabled = true
	end
end

function BaseCamera:OnDynamicThumbstickDisabled()
	self.isDynamicThumbstickEnabled = false
end

function BaseCamera:OnGameSettingsTouchMovementModeChanged()
	if Players.LocalPlayer.DevTouchMovementMode == Enum.DevTouchMovementMode.UserChoice then
		if (UserGameSettings.TouchMovementMode == Enum.TouchMovementMode.DynamicThumbstick
			or UserGameSettings.TouchMovementMode == Enum.TouchMovementMode.Default) then
			self:OnDynamicThumbstickEnabled()
		else
			self:OnDynamicThumbstickDisabled()
		end
	end
end

function BaseCamera:OnDevTouchMovementModeChanged()
	if Players.LocalPlayer.DevTouchMovementMode.Name == "DynamicThumbstick" then
		self:OnDynamicThumbstickEnabled()
	else
		self:OnGameSettingsTouchMovementModeChanged()
	end
end

function BaseCamera:OnPlayerCameraPropertyChange()
	-- This call forces re-evaluation of player.CameraMode and clamping to min/max distance which may have changed
	self:SetCameraToSubjectDistance(self.currentSubjectDistance)
end

function BaseCamera:GetCameraHeight()
	if VRService.VREnabled and not self.inFirstPerson then
		return math.sin(VR_ANGLE) * self.currentSubjectDistance
	end
	return 0
end

function BaseCamera:InputTranslationToCameraAngleChange(translationVector, sensitivity)
	local camera = game.Workspace.CurrentCamera
	if camera and camera.ViewportSize.X > 0 and camera.ViewportSize.Y > 0 and (camera.ViewportSize.Y > camera.ViewportSize.X) then
		-- Screen has portrait orientation, swap X and Y sensitivity
		return translationVector * Vector2.new( sensitivity.Y, sensitivity.X)
	end
	return translationVector * sensitivity
end

function BaseCamera:Enable(enable)
	if self.enabled ~= enable then
		self.enabled = enable
		if self.enabled then
			self:ConnectInputEvents()
			self:BindContextActions()

			if Players.LocalPlayer.CameraMode == Enum.CameraMode.LockFirstPerson then
				self.currentSubjectDistance = 0.5
				if not self.inFirstPerson then
					self:EnterFirstPerson()
				end
			end
		else
			self:DisconnectInputEvents()
			self:UnbindContextActions()
			-- Clean up additional event listeners and reset a bunch of properties
			self:Cleanup()
		end
	end
end

function BaseCamera:GetEnabled()
	return self.enabled
end

function BaseCamera:OnInputBegan(input, processed)
	if input.UserInputType == Enum.UserInputType.Touch then
		self:OnTouchBegan(input, processed)
	elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
		self:OnMouse2Down(input, processed)
	elseif input.UserInputType == Enum.UserInputType.MouseButton3 then
		self:OnMouse3Down(input, processed)
	end
end

function BaseCamera:OnInputChanged(input, processed)
	if input.UserInputType == Enum.UserInputType.Touch then
		self:OnTouchChanged(input, processed)
	elseif input.UserInputType == Enum.UserInputType.MouseMovement then
		self:OnMouseMoved(input, processed)
	elseif input.UserInputType == Enum.UserInputType.MouseWheel and not FFlagUserPointerActionsInPlayerScripts then -- remove with FFlagUserPointerActionsInPlayerScripts
		self:OnMouseWheel(input, processed)
	end
end

function BaseCamera:OnInputEnded(input, processed)
	if input.UserInputType == Enum.UserInputType.Touch then
		self:OnTouchEnded(input, processed)
	elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
		self:OnMouse2Up(input, processed)
	elseif input.UserInputType == Enum.UserInputType.MouseButton3 then
		self:OnMouse3Up(input, processed)
	end
end

function BaseCamera:OnPointerAction(wheel, pan, pinch, processed)
	if processed then
		return
	end

	if pan.Magnitude > 0 then
		local inversionVector = Vector2.new(1, UserGameSettings:GetCameraYInvertValue())
		local rotateDelta = self:InputTranslationToCameraAngleChange(PAN_SENSITIVITY*pan, MOUSE_SENSITIVITY)*inversionVector
		self.rotateInput = self.rotateInput + rotateDelta
	end

	local zoom = self.currentSubjectDistance
	local zoomDelta = -(wheel + pinch)

	if abs(zoomDelta) > 0 then
		local newZoom
		if self.inFirstPerson and zoomDelta > 0 then
			newZoom = FIRST_PERSON_DISTANCE_THRESHOLD
		else
			newZoom = zoom + zoomDelta*(1 + zoom*ZOOM_SENSITIVITY_CURVATURE)
		end

		self:SetCameraToSubjectDistance(newZoom)
	end
end

function BaseCamera:ConnectInputEvents()
	if FFlagUserPointerActionsInPlayerScripts then
		self.pointerActionConn = UserInputService.PointerAction:Connect(function(wheel, pan, pinch, processed)
			self:OnPointerAction(wheel, pan, pinch, processed)
		end)
	end

	self.inputBeganConn = UserInputService.InputBegan:Connect(function(input, processed)
		self:OnInputBegan(input, processed)
	end)

	self.inputChangedConn = UserInputService.InputChanged:Connect(function(input, processed)
		self:OnInputChanged(input, processed)
	end)

	self.inputEndedConn = UserInputService.InputEnded:Connect(function(input, processed)
		self:OnInputEnded(input, processed)
	end)

	self.menuOpenedConn = GuiService.MenuOpened:connect(function()
		self:ResetInputStates()
	end)

	self.gamepadConnectedConn = UserInputService.GamepadDisconnected:connect(function(gamepadEnum)
		if self.activeGamepad ~= gamepadEnum then return end
		self.activeGamepad = nil
		self:AssignActivateGamepad()
	end)

	self.gamepadDisconnectedConn = UserInputService.GamepadConnected:connect(function(gamepadEnum)
		if self.activeGamepad == nil then
			self:AssignActivateGamepad()
		end
	end)

	self:AssignActivateGamepad()
	self:UpdateMouseBehavior()
end

function BaseCamera:BindContextActions()
	self:BindGamepadInputActions()
	self:BindKeyboardInputActions()
end

function BaseCamera:AssignActivateGamepad()
	local connectedGamepads = UserInputService:GetConnectedGamepads()
	if #connectedGamepads > 0 then
		for i = 1, #connectedGamepads do
			if self.activeGamepad == nil then
				self.activeGamepad = connectedGamepads[i]
			elseif connectedGamepads[i].Value < self.activeGamepad.Value then
				self.activeGamepad = connectedGamepads[i]
			end
		end
	end

	if self.activeGamepad == nil then -- nothing is connected, at least set up for gamepad1
		self.activeGamepad = Enum.UserInputType.Gamepad1
	end
end

function BaseCamera:DisconnectInputEvents()
	if self.inputBeganConn then
		self.inputBeganConn:Disconnect()
		self.inputBeganConn = nil
	end
	if self.inputChangedConn then
		self.inputChangedConn:Disconnect()
		self.inputChangedConn = nil
	end
	if self.inputEndedConn then
		self.inputEndedConn:Disconnect()
		self.inputEndedConn = nil
	end
end

function BaseCamera:UnbindContextActions()
	for i = 1, #self.boundContextActions do
		ContextActionService:UnbindAction(self.boundContextActions[i])
	end
	self.boundContextActions = {}
end

function BaseCamera:Cleanup()
	if FFlagUserPointerActionsInPlayerScripts and self.pointerActionConn then
		self.pointerActionConn:Disconnect()
		self.pointerActionConn = nil
	end
	if self.menuOpenedConn then
		self.menuOpenedConn:Disconnect()
		self.menuOpenedConn = nil
	end
	if self.mouseLockToggleConn then
		self.mouseLockToggleConn:Disconnect()
		self.mouseLockToggleConn = nil
	end
	if self.gamepadConnectedConn then
		self.gamepadConnectedConn:Disconnect()
		self.gamepadConnectedConn = nil
	end
	if self.gamepadDisconnectedConn then
		self.gamepadDisconnectedConn:Disconnect()
		self.gamepadDisconnectedConn = nil
	end
	if self.subjectStateChangedConn then
		self.subjectStateChangedConn:Disconnect()
		self.subjectStateChangedConn = nil
	end
	if self.viewportSizeChangedConn then
		self.viewportSizeChangedConn:Disconnect()
		self.viewportSizeChangedConn = nil
	end
	if self.touchActivateConn then
		self.touchActivateConn:Disconnect()
		self.touchActivateConn = nil
	end

	self.turningLeft = false
	self.turningRight = false
	self.lastCameraTransform = nil
	self.lastSubjectCFrame = nil
	self.userPanningTheCamera = false
	self.rotateInput = Vector2.new()
	self.gamepadPanningCamera = Vector2.new(0,0)

	-- Reset input states
	self.startPos = nil
	self.lastPos = nil
	self.panBeginLook = nil
	self.isRightMouseDown = false
	self.isMiddleMouseDown = false

	self.fingerTouches = {}
	self.dynamicTouchInput = nil
	self.numUnsunkTouches = 0

	self.startingDiff = nil
	self.pinchBeginZoom = nil

	-- Unlock mouse for example if right mouse button was being held down
	if UserInputService.MouseBehavior ~= Enum.MouseBehavior.LockCenter then
		UserInputService.MouseBehavior = Enum.MouseBehavior.Default
	end
end

-- This is called when settings menu is opened
function BaseCamera:ResetInputStates()
	self.isRightMouseDown = false
	self.isMiddleMouseDown = false
	self:OnMousePanButtonReleased() -- this function doesn't seem to actually need parameters

	if UserInputService.TouchEnabled then
		--[[menu opening was causing serious touch issues
		this should disable all active touch events if
		they're active when menu opens.]]
		for inputObject in pairs(self.fingerTouches) do
			self.fingerTouches[inputObject] = nil
		end
		self.dynamicTouchInput = nil
		self.panBeginLook = nil
		self.startPos = nil
		self.lastPos = nil
		self.userPanningTheCamera = false
		self.startingDiff = nil
		self.pinchBeginZoom = nil
		self.numUnsunkTouches = 0
	end
end

function BaseCamera:GetGamepadPan(name, state, input)
	if input.UserInputType == self.activeGamepad and input.KeyCode == Enum.KeyCode.Thumbstick2 then
--		if self.L3ButtonDown then
--			-- L3 Thumbstick is depressed, right stick controls dolly in/out
--			if (input.Position.Y > THUMBSTICK_DEADZONE) then
--				self.currentZoomSpeed = 0.96
--			elseif (input.Position.Y < -THUMBSTICK_DEADZONE) then
--				self.currentZoomSpeed = 1.04
--			else
--				self.currentZoomSpeed = 1.00
--			end
--		else
			if state == Enum.UserInputState.Cancel then
				self.gamepadPanningCamera = ZERO_VECTOR2
				return
			end

			local inputVector = Vector2.new(input.Position.X, -input.Position.Y)
			if inputVector.magnitude > THUMBSTICK_DEADZONE then
				self.gamepadPanningCamera = Vector2.new(input.Position.X, -input.Position.Y)
			else
				self.gamepadPanningCamera = ZERO_VECTOR2
			end
		--end
		return Enum.ContextActionResult.Sink
	end
	return Enum.ContextActionResult.Pass
end

function BaseCamera:DoKeyboardPanTurn(name, state, input)
	if not self.hasGameLoaded and VRService.VREnabled then
		return Enum.ContextActionResult.Pass
	end

	if state == Enum.UserInputState.Cancel then
		self.turningLeft = false
		self.turningRight = false
		return Enum.ContextActionResult.Sink
	end

	if self.panBeginLook == nil and self.keyPanEnabled then
		if input.KeyCode == Enum.KeyCode.Left then
			self.turningLeft = state == Enum.UserInputState.Begin
		elseif input.KeyCode == Enum.KeyCode.Right then
			self.turningRight = state == Enum.UserInputState.Begin
		end
		return Enum.ContextActionResult.Sink
	end
	return Enum.ContextActionResult.Pass
end

function BaseCamera:DoPanRotateCamera(rotateAngle)
	local angle = Util.RotateVectorByAngleAndRound(self:GetCameraLookVector() * Vector3.new(1,0,1), rotateAngle, math.pi*0.25)
	if angle ~= 0 then
		self.rotateInput = self.rotateInput + Vector2.new(angle, 0)
		self.lastUserPanCamera = tick()
		self.lastCameraTransform = nil
	end
end

function BaseCamera:DoKeyboardPan(name, state, input)
	if not self.hasGameLoaded and VRService.VREnabled then
		return Enum.ContextActionResult.Pass
	end

	if state ~= Enum.UserInputState.Begin then
		return Enum.ContextActionResult.Pass
	end

	if self.panBeginLook == nil and self.keyPanEnabled then
		if input.KeyCode == Enum.KeyCode.Comma then
			self:DoPanRotateCamera(-math.pi*0.1875)
		elseif input.KeyCode == Enum.KeyCode.Period then
			self:DoPanRotateCamera(math.pi*0.1875)
		elseif input.KeyCode == Enum.KeyCode.PageUp then
			self.rotateInput = self.rotateInput + Vector2.new(0,math.rad(15))
			self.lastCameraTransform = nil
		elseif input.KeyCode == Enum.KeyCode.PageDown then
			self.rotateInput = self.rotateInput + Vector2.new(0,math.rad(-15))
			self.lastCameraTransform = nil
		end
		return Enum.ContextActionResult.Sink
	end
	return Enum.ContextActionResult.Pass
end

function BaseCamera:DoGamepadZoom(name, state, input)
	if input.UserInputType == self.activeGamepad then
		if input.KeyCode == Enum.KeyCode.ButtonR3 then
			if state == Enum.UserInputState.Begin then
				if self.distanceChangeEnabled then
					local dist = self:GetCameraToSubjectDistance()
					if FFlagUserThirdGamepadZoomStep then
						if dist > (GAMEPAD_ZOOM_STEP_2 + GAMEPAD_ZOOM_STEP_3)/2 then
							self:SetCameraToSubjectDistance(GAMEPAD_ZOOM_STEP_2)
						elseif dist > (GAMEPAD_ZOOM_STEP_1 + GAMEPAD_ZOOM_STEP_2)/2 then
							self:SetCameraToSubjectDistance(GAMEPAD_ZOOM_STEP_1)
						else
							self:SetCameraToSubjectDistance(GAMEPAD_ZOOM_STEP_3)
						end
					else
						if dist > 0.5 then
							self:SetCameraToSubjectDistance(0)
						else
							self:SetCameraToSubjectDistance(10)
						end
					end
				end
			end
		elseif input.KeyCode == Enum.KeyCode.DPadLeft then
			self.dpadLeftDown = (state == Enum.UserInputState.Begin)
		elseif input.KeyCode == Enum.KeyCode.DPadRight then
			self.dpadRightDown = (state == Enum.UserInputState.Begin)
		end

		if self.dpadLeftDown then
			self.currentZoomSpeed = 1.04
		elseif self.dpadRightDown then
			self.currentZoomSpeed = 0.96
		else
			self.currentZoomSpeed = 1.00
		end
		return Enum.ContextActionResult.Sink
	end
	return Enum.ContextActionResult.Pass
--	elseif input.UserInputType == self.activeGamepad and input.KeyCode == Enum.KeyCode.ButtonL3 then
--		if (state == Enum.UserInputState.Begin) then
--			self.L3ButtonDown = true
--		elseif (state == Enum.UserInputState.End) then
--			self.L3ButtonDown = false
--			self.currentZoomSpeed = 1.00
--		end
--	end
end

function BaseCamera:DoKeyboardZoom(name, state, input)
	if not self.hasGameLoaded and VRService.VREnabled then
		return Enum.ContextActionResult.Pass
	end

	if state ~= Enum.UserInputState.Begin then
		return Enum.ContextActionResult.Pass
	end

	if self.distanceChangeEnabled and Players.LocalPlayer.CameraMode ~= Enum.CameraMode.LockFirstPerson then
		if input.KeyCode == Enum.KeyCode.I then
			self:SetCameraToSubjectDistance( self.currentSubjectDistance - 5 )
		elseif input.KeyCode == Enum.KeyCode.O then
			self:SetCameraToSubjectDistance( self.currentSubjectDistance + 5 )
		end
		return Enum.ContextActionResult.Sink
	end
	return Enum.ContextActionResult.Pass
end

function BaseCamera:BindAction(actionName, actionFunc, createTouchButton, ...)
	table.insert(self.boundContextActions, actionName)
	ContextActionService:BindActionAtPriority(actionName, actionFunc, createTouchButton,
		CAMERA_ACTION_PRIORITY, ...)
end

function BaseCamera:BindGamepadInputActions()
	self:BindAction("BaseCameraGamepadPan", function(name, state, input) return self:GetGamepadPan(name, state, input) end,
		false, Enum.KeyCode.Thumbstick2)
	self:BindAction("BaseCameraGamepadZoom", function(name, state, input) return self:DoGamepadZoom(name, state, input) end,
		false, Enum.KeyCode.DPadLeft, Enum.KeyCode.DPadRight, Enum.KeyCode.ButtonR3)
end

function BaseCamera:BindKeyboardInputActions()
	self:BindAction("BaseCameraKeyboardPanArrowKeys", function(name, state, input) return self:DoKeyboardPanTurn(name, state, input) end,
		false, Enum.KeyCode.Left, Enum.KeyCode.Right)
	self:BindAction("BaseCameraKeyboardPan", function(name, state, input) return self:DoKeyboardPan(name, state, input) end,
		false, Enum.KeyCode.Comma, Enum.KeyCode.Period, Enum.KeyCode.PageUp, Enum.KeyCode.PageDown)
	self:BindAction("BaseCameraKeyboardZoom", function(name, state, input) return self:DoKeyboardZoom(name, state, input) end,
		false, Enum.KeyCode.I, Enum.KeyCode.O)
end

local function isInDynamicThumbstickArea(input)
	local playerGui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
	local touchGui = playerGui and playerGui:FindFirstChild("TouchGui")
	local touchFrame = touchGui and touchGui:FindFirstChild("TouchControlFrame")
	local thumbstickFrame = touchFrame and touchFrame:FindFirstChild("DynamicThumbstickFrame")

	if not thumbstickFrame then
		return false
	end

	local frameCornerTopLeft = thumbstickFrame.AbsolutePosition
	local frameCornerBottomRight = frameCornerTopLeft + thumbstickFrame.AbsoluteSize
	if input.Position.X >= frameCornerTopLeft.X and input.Position.Y >= frameCornerTopLeft.Y then
		if input.Position.X <= frameCornerBottomRight.X and input.Position.Y <= frameCornerBottomRight.Y then
			return true
		end
	end

	return false
end

---Adjusts the camera Y touch Sensitivity when moving away from the center and in the TOUCH_SENSITIVTY_ADJUST_AREA
function BaseCamera:AdjustTouchSensitivity(delta, sensitivity)
	local cameraCFrame = game.Workspace.CurrentCamera and game.Workspace.CurrentCamera.CFrame
	if not cameraCFrame then
		return sensitivity
	end
	local currPitchAngle = cameraCFrame:ToEulerAnglesYXZ()

	local multiplierY = TOUCH_SENSITIVTY_ADJUST_MAX_Y
	if currPitchAngle > TOUCH_ADJUST_AREA_UP and delta.Y < 0 then
		local fractionAdjust = (currPitchAngle - TOUCH_ADJUST_AREA_UP)/(MAX_Y - TOUCH_ADJUST_AREA_UP)
		fractionAdjust = 1 - (1 - fractionAdjust)^3
		multiplierY = TOUCH_SENSITIVTY_ADJUST_MAX_Y - fractionAdjust * (
			TOUCH_SENSITIVTY_ADJUST_MAX_Y - TOUCH_SENSITIVTY_ADJUST_MIN_Y)
	elseif currPitchAngle < TOUCH_ADJUST_AREA_DOWN and delta.Y > 0 then
		local fractionAdjust = (currPitchAngle - TOUCH_ADJUST_AREA_DOWN)/(MIN_Y - TOUCH_ADJUST_AREA_DOWN)
		fractionAdjust = 1 - (1 - fractionAdjust)^3
		multiplierY = TOUCH_SENSITIVTY_ADJUST_MAX_Y - fractionAdjust * (
			TOUCH_SENSITIVTY_ADJUST_MAX_Y - TOUCH_SENSITIVTY_ADJUST_MIN_Y)
	end

	return Vector2.new(
		sensitivity.X,
		sensitivity.Y * multiplierY
	)
end

function BaseCamera:OnTouchBegan(input, processed)
	local canUseDynamicTouch = self.isDynamicThumbstickEnabled and not processed
	if canUseDynamicTouch then
		if self.dynamicTouchInput == nil and isInDynamicThumbstickArea(input) then
			-- First input in the dynamic thumbstick area should always be ignored for camera purposes
			-- Even if the dynamic thumbstick does not process it immediately
			self.dynamicTouchInput = input
			return
		end
		self.fingerTouches[input] = processed
		self.inputStartPositions[input] = input.Position
		self.inputStartTimes[input] = tick()
		self.numUnsunkTouches = self.numUnsunkTouches + 1
	end
end

function BaseCamera:OnTouchChanged(input, processed)
	if self.fingerTouches[input] == nil then
		if self.isDynamicThumbstickEnabled then
			return
		end
		self.fingerTouches[input] = processed
		if not processed then
			self.numUnsunkTouches = self.numUnsunkTouches + 1
		end
	end

	if self.numUnsunkTouches == 1 then
		if self.fingerTouches[input] == false then
			self.panBeginLook = self.panBeginLook or self:GetCameraLookVector()
			self.startPos = self.startPos or input.Position
			self.lastPos = self.lastPos or self.startPos
			self.userPanningTheCamera = true

			local delta = input.Position - self.lastPos
			delta = Vector2.new(delta.X, delta.Y * UserGameSettings:GetCameraYInvertValue())
			if self.panEnabled then
				local adjustedTouchSensitivity = TOUCH_SENSITIVTY
				if FFlagUserTouchSensitivityAdjust then
					self:AdjustTouchSensitivity(delta, TOUCH_SENSITIVTY)
				end

				local desiredXYVector = self:InputTranslationToCameraAngleChange(delta, adjustedTouchSensitivity)
				self.rotateInput = self.rotateInput + desiredXYVector
			end
			self.lastPos = input.Position
		end
	else
		self.panBeginLook = nil
		self.startPos = nil
		self.lastPos = nil
		self.userPanningTheCamera = false
	end
	if self.numUnsunkTouches == 2 then
		local unsunkTouches = {}
		for touch, wasSunk in pairs(self.fingerTouches) do
			if not wasSunk then
				table.insert(unsunkTouches, touch)
			end
		end
		if #unsunkTouches == 2 then
			local difference = (unsunkTouches[1].Position - unsunkTouches[2].Position).magnitude
			if self.startingDiff and self.pinchBeginZoom then
				local scale = difference / math.max(0.01, self.startingDiff)
				local clampedScale = Util.Clamp(0.1, 10, scale)
				if self.distanceChangeEnabled then
					self:SetCameraToSubjectDistance(self.pinchBeginZoom / clampedScale)
				end
			else
				self.startingDiff = difference
				self.pinchBeginZoom = self:GetCameraToSubjectDistance()
			end
		end
	else
		self.startingDiff = nil
		self.pinchBeginZoom = nil
	end
end

function BaseCamera:OnTouchEnded(input, processed)
	if input == self.dynamicTouchInput then
		self.dynamicTouchInput = nil
		return
	end

	if self.fingerTouches[input] == false then
		if self.numUnsunkTouches == 1 then
			self.panBeginLook = nil
			self.startPos = nil
			self.lastPos = nil
			self.userPanningTheCamera = false
		elseif self.numUnsunkTouches == 2 then
			self.startingDiff = nil
			self.pinchBeginZoom = nil
		end
	end

	if self.fingerTouches[input] ~= nil and self.fingerTouches[input] == false then
		self.numUnsunkTouches = self.numUnsunkTouches - 1
	end
	self.fingerTouches[input] = nil
	self.inputStartPositions[input] = nil
	self.inputStartTimes[input] = nil
end

function BaseCamera:OnMouse2Down(input, processed)
	if processed then return end

	self.isRightMouseDown = true
	self:OnMousePanButtonPressed(input, processed)
end

function BaseCamera:OnMouse2Up(input, processed)
	self.isRightMouseDown = false
	self:OnMousePanButtonReleased(input, processed)
end

function BaseCamera:OnMouse3Down(input, processed)
	if processed then return end

	self.isMiddleMouseDown = true
	self:OnMousePanButtonPressed(input, processed)
end

function BaseCamera:OnMouse3Up(input, processed)
	self.isMiddleMouseDown = false
	self:OnMousePanButtonReleased(input, processed)
end

function BaseCamera:OnMouseMoved(input, processed)
	if not self.hasGameLoaded and VRService.VREnabled then
		return
	end

	local inputDelta = input.Delta
	inputDelta = Vector2.new(inputDelta.X, inputDelta.Y * UserGameSettings:GetCameraYInvertValue())

	if self.panEnabled and ((self.startPos and self.lastPos and self.panBeginLook) or self.inFirstPerson or self.inMouseLockedMode) then
		local desiredXYVector = self:InputTranslationToCameraAngleChange(inputDelta,MOUSE_SENSITIVITY)
		self.rotateInput = self.rotateInput + desiredXYVector
	end

	if self.startPos and self.lastPos and self.panBeginLook then
		self.lastPos = self.lastPos + input.Delta
	end
end

function BaseCamera:OnMousePanButtonPressed(input, processed)
	if processed then return end
	self:UpdateMouseBehavior()
	self.panBeginLook = self.panBeginLook or self:GetCameraLookVector()
	self.startPos = self.startPos or input.Position
	self.lastPos = self.lastPos or self.startPos
	self.userPanningTheCamera = true
end

function BaseCamera:OnMousePanButtonReleased(input, processed)
	self:UpdateMouseBehavior()
	if not (self.isRightMouseDown or self.isMiddleMouseDown) then
		self.panBeginLook = nil
		self.startPos = nil
		self.lastPos = nil
		self.userPanningTheCamera = false
	end
end

function BaseCamera:OnMouseWheel(input, processed)  -- remove with FFlagUserPointerActionsInPlayerScripts
	if not self.hasGameLoaded and VRService.VREnabled then
		return
	end
	if not processed then
		if self.distanceChangeEnabled then
			local wheelInput = Util.Clamp(-1, 1, -input.Position.Z)

			local newDistance
			if self.inFirstPerson and wheelInput > 0 then
				newDistance = FIRST_PERSON_DISTANCE_THRESHOLD
			else
				-- The 0.156 and 1.7 values are the slope and intercept of a line that is replacing the old
				-- rk4Integrator function which was not being used as an integrator, only to get a delta as a function of distance,
				-- which was linear as it was being used. These constants preserve the status quo behavior.
				newDistance = self.currentSubjectDistance + 0.156 * self.currentSubjectDistance * wheelInput + 1.7 * math.sign(wheelInput)
			end

			self:SetCameraToSubjectDistance(newDistance)
		end
	end
end

function BaseCamera:UpdateMouseBehavior()
	-- first time transition to first person mode or mouse-locked third person
	if self.inFirstPerson or self.inMouseLockedMode then
		UserGameSettings.RotationType = Enum.RotationType.CameraRelative
		UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
	else
		UserGameSettings.RotationType = Enum.RotationType.MovementRelative
		if self.isRightMouseDown or self.isMiddleMouseDown then
			UserInputService.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
		else
			UserInputService.MouseBehavior = Enum.MouseBehavior.Default
		end
	end
end

function BaseCamera:UpdateForDistancePropertyChange()
	-- Calling this setter with the current value will force checking that it is still
	-- in range after a change to the min/max distance limits
	self:SetCameraToSubjectDistance(self.currentSubjectDistance)
end

function BaseCamera:SetCameraToSubjectDistance(desiredSubjectDistance)
	local player = Players.LocalPlayer

	local lastSubjectDistance = self.currentSubjectDistance

	-- By default, camera modules will respect LockFirstPerson and override the currentSubjectDistance with 0
	-- regardless of what Player.CameraMinZoomDistance is set to, so that first person can be made
	-- available by the developer without needing to allow players to mousewheel dolly into first person.
	-- Some modules will override this function to remove or change first-person capability.
	if player.CameraMode == Enum.CameraMode.LockFirstPerson then
		self.currentSubjectDistance = 0.5
		if not self.inFirstPerson then
			self:EnterFirstPerson()
		end
	else
		local newSubjectDistance = Util.Clamp(player.CameraMinZoomDistance, player.CameraMaxZoomDistance, desiredSubjectDistance)
		if newSubjectDistance < FIRST_PERSON_DISTANCE_THRESHOLD then
			self.currentSubjectDistance = 0.5
			if not self.inFirstPerson then
				self:EnterFirstPerson()
			end
		else
			self.currentSubjectDistance = newSubjectDistance
			if self.inFirstPerson then
				self:LeaveFirstPerson()
			end
		end
	end

	-- Pass target distance and zoom direction to the zoom controller
	ZoomController.SetZoomParameters(self.currentSubjectDistance, math.sign(desiredSubjectDistance - lastSubjectDistance))

	-- Returned only for convenience to the caller to know the outcome
	return self.currentSubjectDistance
end

function BaseCamera:SetCameraType( cameraType )
	--Used by derived classes
	self.cameraType = cameraType
end

function BaseCamera:GetCameraType()
	return self.cameraType
end

-- Movement mode standardized to Enum.ComputerCameraMovementMode values
function BaseCamera:SetCameraMovementMode( cameraMovementMode )
	self.cameraMovementMode = cameraMovementMode
end

function BaseCamera:GetCameraMovementMode()
	return self.cameraMovementMode
end

function BaseCamera:SetIsMouseLocked(mouseLocked)
	self.inMouseLockedMode = mouseLocked
	self:UpdateMouseBehavior()
end

function BaseCamera:GetIsMouseLocked()
	return self.inMouseLockedMode
end

function BaseCamera:SetMouseLockOffset(offsetVector)
	self.mouseLockOffset = offsetVector
end

function BaseCamera:GetMouseLockOffset()
	return self.mouseLockOffset
end

function BaseCamera:InFirstPerson()
	return self.inFirstPerson
end

function BaseCamera:EnterFirstPerson()
	-- Overridden in ClassicCamera, the only module which supports FirstPerson
end

function BaseCamera:LeaveFirstPerson()
	-- Overridden in ClassicCamera, the only module which supports FirstPerson
end

-- Nominal distance, set by dollying in and out with the mouse wheel or equivalent, not measured distance
function BaseCamera:GetCameraToSubjectDistance()
	return self.currentSubjectDistance
end

-- Actual measured distance to the camera Focus point, which may be needed in special circumstances, but should
-- never be used as the starting point for updating the nominal camera-to-subject distance (self.currentSubjectDistance)
-- since that is a desired target value set only by mouse wheel (or equivalent) input, PopperCam, and clamped to min max camera distance
function BaseCamera:GetMeasuredDistanceToFocus()
	local camera = game.Workspace.CurrentCamera
	if camera then
		return (camera.CoordinateFrame.p - camera.Focus.p).magnitude
	end
	return nil
end

function BaseCamera:GetCameraLookVector()
	return game.Workspace.CurrentCamera and game.Workspace.CurrentCamera.CFrame.lookVector or UNIT_Z
end

-- Replacements for RootCamera:RotateCamera() which did not actually rotate the camera
-- suppliedLookVector is not normally passed in, it's used only by Watch camera
function BaseCamera:CalculateNewLookCFrame(suppliedLookVector)
	local currLookVector = suppliedLookVector or self:GetCameraLookVector()
	local currPitchAngle = math.asin(currLookVector.y)
	local yTheta = Util.Clamp(-MAX_Y + currPitchAngle, -MIN_Y + currPitchAngle, self.rotateInput.y)
	local constrainedRotateInput = Vector2.new(self.rotateInput.x, yTheta)
	local startCFrame = CFrame.new(ZERO_VECTOR3, currLookVector)
	local newLookCFrame = CFrame.Angles(0, -constrainedRotateInput.x, 0) * startCFrame * CFrame.Angles(-constrainedRotateInput.y,0,0)
	return newLookCFrame
end
function BaseCamera:CalculateNewLookVector(suppliedLookVector)
	local newLookCFrame = self:CalculateNewLookCFrame(suppliedLookVector)
	return newLookCFrame.lookVector
end

function BaseCamera:CalculateNewLookVectorVR()
	local subjectPosition = self:GetSubjectPosition()
	local vecToSubject = (subjectPosition - game.Workspace.CurrentCamera.CFrame.p)
	local currLookVector = (vecToSubject * X1_Y0_Z1).unit
	local vrRotateInput = Vector2.new(self.rotateInput.x, 0)
	local startCFrame = CFrame.new(ZERO_VECTOR3, currLookVector)
	local yawRotatedVector = (CFrame.Angles(0, -vrRotateInput.x, 0) * startCFrame * CFrame.Angles(-vrRotateInput.y,0,0)).lookVector
	return (yawRotatedVector * X1_Y0_Z1).unit
end

function BaseCamera:GetHumanoid()
	local player = Players.LocalPlayer
	local character = player and player.Character
	if character then
		local resultHumanoid = self.humanoidCache[player]
		if resultHumanoid and resultHumanoid.Parent == character then
			return resultHumanoid
		else
			self.humanoidCache[player] = nil -- Bust Old Cache
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if humanoid then
				self.humanoidCache[player] = humanoid
			end
			return humanoid
		end
	end
	return nil
end

function BaseCamera:GetHumanoidPartToFollow(humanoid, humanoidStateType)
	if humanoidStateType == Enum.HumanoidStateType.Dead then
		local character = humanoid.Parent
		if character then
			return character:FindFirstChild("Head") or humanoid.Torso
		else
			return humanoid.Torso
		end
	else
		return humanoid.Torso
	end
end

function BaseCamera:UpdateGamepad()
	local gamepadPan = self.gamepadPanningCamera
	if gamepadPan and (self.hasGameLoaded or not VRService.VREnabled) then
		gamepadPan = Util.GamepadLinearToCurve(gamepadPan)
		local currentTime = tick()
		if gamepadPan.X ~= 0 or gamepadPan.Y ~= 0 then
			self.userPanningTheCamera = true
		elseif gamepadPan == ZERO_VECTOR2 then
			self.lastThumbstickRotate = nil
			if self.lastThumbstickPos == ZERO_VECTOR2 then
				self.currentSpeed = 0
			end
		end

		local finalConstant = 0

		if self.lastThumbstickRotate then
			if VRService.VREnabled then
				self.currentSpeed = self.vrMaxSpeed
			else
				local elapsedTime = (currentTime - self.lastThumbstickRotate) * 10
				self.currentSpeed = self.currentSpeed + (self.maxSpeed * ((elapsedTime*elapsedTime)/self.numOfSeconds))

				if self.currentSpeed > self.maxSpeed then self.currentSpeed = self.maxSpeed end

				if self.lastVelocity then
					local velocity = (gamepadPan - self.lastThumbstickPos)/(currentTime - self.lastThumbstickRotate)
					local velocityDeltaMag = (velocity - self.lastVelocity).magnitude

					if velocityDeltaMag > 12 then
						self.currentSpeed = self.currentSpeed * (20/velocityDeltaMag)
						if self.currentSpeed > self.maxSpeed then self.currentSpeed = self.maxSpeed end
					end
				end
			end

			finalConstant = UserGameSettings.GamepadCameraSensitivity * self.currentSpeed
			self.lastVelocity = (gamepadPan - self.lastThumbstickPos)/(currentTime - self.lastThumbstickRotate)
		end

		self.lastThumbstickPos = gamepadPan
		self.lastThumbstickRotate = currentTime

		return Vector2.new( gamepadPan.X * finalConstant, gamepadPan.Y * finalConstant * self.ySensitivity * UserGameSettings:GetCameraYInvertValue())
	end

	return ZERO_VECTOR2
end

-- [[ VR Support Section ]] --

function BaseCamera:ApplyVRTransform()
	if not VRService.VREnabled then
		return
	end

	--we only want this to happen in first person VR
	local rootJoint = self.humanoidRootPart and self.humanoidRootPart:FindFirstChild("RootJoint")
	if not rootJoint then
		return
	end

	local cameraSubject = game.Workspace.CurrentCamera.CameraSubject
	local isInVehicle = cameraSubject and cameraSubject:IsA("VehicleSeat")

	if self.inFirstPerson and not isInVehicle then
		local vrFrame = VRService:GetUserCFrame(Enum.UserCFrame.Head)
		local vrRotation = vrFrame - vrFrame.p
		rootJoint.C0 = CFrame.new(vrRotation:vectorToObjectSpace(vrFrame.p)) * CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
	else
		rootJoint.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
	end
end

function BaseCamera:IsInFirstPerson()
	return self.inFirstPerson
end

function BaseCamera:ShouldUseVRRotation()
	if not VRService.VREnabled then
		return false
	end

	if not self.VRRotationIntensityAvailable and tick() - self.lastVRRotationIntensityCheckTime < 1 then
		return false
	end

	local success, vrRotationIntensity = pcall(function() return StarterGui:GetCore("VRRotationIntensity") end)
	self.VRRotationIntensityAvailable = success and vrRotationIntensity ~= nil
	self.lastVRRotationIntensityCheckTime = tick()

	self.shouldUseVRRotation = success and vrRotationIntensity ~= nil and vrRotationIntensity ~= "Smooth"

	return self.shouldUseVRRotation
end

function BaseCamera:GetVRRotationInput()
	local vrRotateSum = ZERO_VECTOR2
	local success, vrRotationIntensity = pcall(function() return StarterGui:GetCore("VRRotationIntensity") end)

	if not success then
		return
	end

	local vrGamepadRotation = self.GamepadPanningCamera or ZERO_VECTOR2
	local delayExpired = (tick() - self.lastVRRotationTime) >= self:GetRepeatDelayValue(vrRotationIntensity)

	if math.abs(vrGamepadRotation.x) >= self:GetActivateValue() then
		if (delayExpired or not self.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2]) then
			local sign = 1
			if vrGamepadRotation.x < 0 then
				sign = -1
			end
			vrRotateSum = vrRotateSum + self:GetRotateAmountValue(vrRotationIntensity) * sign
			self.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] = true
		end
	elseif math.abs(vrGamepadRotation.x) < self:GetActivateValue() - 0.1 then
		self.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] = nil
	end
	if self.turningLeft then
		if delayExpired or not self.vrRotateKeyCooldown[Enum.KeyCode.Left] then
			vrRotateSum = vrRotateSum - self:GetRotateAmountValue(vrRotationIntensity)
			self.vrRotateKeyCooldown[Enum.KeyCode.Left] = true
		end
	else
		self.vrRotateKeyCooldown[Enum.KeyCode.Left] = nil
	end
	if self.turningRight then
		if (delayExpired or not self.vrRotateKeyCooldown[Enum.KeyCode.Right]) then
			vrRotateSum = vrRotateSum + self:GetRotateAmountValue(vrRotationIntensity)
			self.vrRotateKeyCooldown[Enum.KeyCode.Right] = true
		end
	else
		self.vrRotateKeyCooldown[Enum.KeyCode.Right] = nil
	end

	if vrRotateSum ~= ZERO_VECTOR2 then
		self.lastVRRotationTime = tick()
	end

	return vrRotateSum
end

function BaseCamera:CancelCameraFreeze(keepConstraints)
	if not keepConstraints then
		self.cameraTranslationConstraints = Vector3.new(self.cameraTranslationConstraints.x, 1, self.cameraTranslationConstraints.z)
	end
	if self.cameraFrozen then
		self.trackingHumanoid = nil
		self.cameraFrozen = false
	end
end

function BaseCamera:StartCameraFreeze(subjectPosition, humanoidToTrack)
	if not self.cameraFrozen then
		self.humanoidJumpOrigin = subjectPosition
		self.trackingHumanoid = humanoidToTrack
		self.cameraTranslationConstraints = Vector3.new(self.cameraTranslationConstraints.x, 0, self.cameraTranslationConstraints.z)
		self.cameraFrozen = true
	end
end

function BaseCamera:OnNewCameraSubject()
	if self.subjectStateChangedConn then
		self.subjectStateChangedConn:Disconnect()
		self.subjectStateChangedConn = nil
	end

	local humanoid = workspace.CurrentCamera and workspace.CurrentCamera.CameraSubject
	if self.trackingHumanoid ~= humanoid then
		self:CancelCameraFreeze()
	end
	if humanoid and humanoid:IsA("Humanoid") then
		self.subjectStateChangedConn = humanoid.StateChanged:Connect(function(oldState, newState)
			if VRService.VREnabled and newState == Enum.HumanoidStateType.Jumping and not self.inFirstPerson then
				self:StartCameraFreeze(self:GetSubjectPosition(), humanoid)
			elseif newState ~= Enum.HumanoidStateType.Jumping and newState ~= Enum.HumanoidStateType.Freefall then
				self:CancelCameraFreeze(true)
			end
		end)
	end
end

function BaseCamera:GetVRFocus(subjectPosition, timeDelta)
	local lastFocus = self.LastCameraFocus or subjectPosition
	if not self.cameraFrozen then
		self.cameraTranslationConstraints = Vector3.new(self.cameraTranslationConstraints.x, math.min(1, self.cameraTranslationConstraints.y + 0.42 * timeDelta), self.cameraTranslationConstraints.z)
	end

	local newFocus
	if self.cameraFrozen and self.humanoidJumpOrigin and self.humanoidJumpOrigin.y > lastFocus.y then
		newFocus = CFrame.new(Vector3.new(subjectPosition.x, math.min(self.humanoidJumpOrigin.y, lastFocus.y + 5 * timeDelta), subjectPosition.z))
	else
		newFocus = CFrame.new(Vector3.new(subjectPosition.x, lastFocus.y, subjectPosition.z):lerp(subjectPosition, self.cameraTranslationConstraints.y))
	end

	if self.cameraFrozen then
		-- No longer in 3rd person
		if self.inFirstPerson then -- not VRService.VREnabled
			self:CancelCameraFreeze()
		end
		-- This case you jumped off a cliff and want to keep your character in view
		-- 0.5 is to fix floating point error when not jumping off cliffs
		if self.humanoidJumpOrigin and subjectPosition.y < (self.humanoidJumpOrigin.y - 0.5) then
			self:CancelCameraFreeze()
		end
	end

	return newFocus
end

function BaseCamera:GetRotateAmountValue(vrRotationIntensity)
	vrRotationIntensity = vrRotationIntensity or StarterGui:GetCore("VRRotationIntensity")
	if vrRotationIntensity then
		if vrRotationIntensity == "Low" then
			return VR_LOW_INTENSITY_ROTATION
		elseif vrRotationIntensity == "High" then
			return VR_HIGH_INTENSITY_ROTATION
		end
	end
	return ZERO_VECTOR2
end

function BaseCamera:GetRepeatDelayValue(vrRotationIntensity)
	vrRotationIntensity = vrRotationIntensity or StarterGui:GetCore("VRRotationIntensity")
	if vrRotationIntensity then
		if vrRotationIntensity == "Low" then
			return VR_LOW_INTENSITY_REPEAT
		elseif vrRotationIntensity == "High" then
			return VR_HIGH_INTENSITY_REPEAT
		end
	end
	return 0
end

function BaseCamera:Test()
	print("BaseCamera:Test()")
end

function BaseCamera:Update(dt)
	warn("BaseCamera:Update() This is a virtual function that should never be getting called.")
	return game.Workspace.CurrentCamera.CFrame, game.Workspace.CurrentCamera.Focus
end

return BaseCamera
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c004d</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX87DDFA1D0512452EAE9442789FEFE781">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">ZoomController</string>
							<string name="ScriptGuid">{A3569918-900B-44C8-8AE6-74FAF9610511}</string>
							<ProtectedString name="Source"><![CDATA[-- Zoom
-- Controls the distance between the focus and the camera.

local ZOOM_STIFFNESS = 4.5
local ZOOM_DEFAULT = 12.5
local ZOOM_ACCELERATION = 0.0375

local MIN_FOCUS_DIST = 0.5
local DIST_OPAQUE = 1

local Popper = require(script:WaitForChild("Popper"))

local clamp = math.clamp
local exp = math.exp
local min = math.min
local max = math.max
local pi = math.pi

local cameraMinZoomDistance, cameraMaxZoomDistance do
	local Player = game:GetService("Players").LocalPlayer

	local function updateBounds()
		cameraMinZoomDistance = Player.CameraMinZoomDistance
		cameraMaxZoomDistance = Player.CameraMaxZoomDistance
	end

	updateBounds()

	Player:GetPropertyChangedSignal("CameraMinZoomDistance"):Connect(updateBounds)
	Player:GetPropertyChangedSignal("CameraMaxZoomDistance"):Connect(updateBounds)
end

local ConstrainedSpring = {} do
	ConstrainedSpring.__index = ConstrainedSpring

	function ConstrainedSpring.new(freq, x, minValue, maxValue)
		x = clamp(x, minValue, maxValue)
		return setmetatable({
			freq = freq, -- Undamped frequency (Hz)
			x = x, -- Current position
			v = 0, -- Current velocity
			minValue = minValue, -- Minimum bound
			maxValue = maxValue, -- Maximum bound
			goal = x, -- Goal position
		}, ConstrainedSpring)
	end

	function ConstrainedSpring:Step(dt)
		local freq = self.freq*2*pi -- Convert from Hz to rad/s
		local x = self.x
		local v = self.v
		local minValue = self.minValue
		local maxValue = self.maxValue
		local goal = self.goal

		-- Solve the spring ODE for position and velocity after time t, assuming critical damping:
		--   2*f*x'[t] + x''[t] = f^2*(g - x[t])
		-- Knowns are x[0] and x'[0].
		-- Solve for x[t] and x'[t].

		local offset = goal - x
		local step = freq*dt
		local decay = exp(-step)

		local x1 = goal + (v*dt - offset*(step + 1))*decay
		local v1 = ((offset*freq - v)*step + v)*decay

		-- Constrain
		if x1 < minValue then
			x1 = minValue
			v1 = 0
		elseif x1 > maxValue then
			x1 = maxValue
			v1 = 0
		end

		self.x = x1
		self.v = v1

		return x1
	end
end

local zoomSpring = ConstrainedSpring.new(ZOOM_STIFFNESS, ZOOM_DEFAULT, MIN_FOCUS_DIST, cameraMaxZoomDistance)

local function stepTargetZoom(z, dz, zoomMin, zoomMax)
	z = clamp(z + dz*(1 + z*ZOOM_ACCELERATION), zoomMin, zoomMax)
	if z < DIST_OPAQUE then
		z = dz <= 0 and zoomMin or DIST_OPAQUE
	end
	return z
end

local zoomDelta = 0

local Zoom = {} do
	function Zoom.Update(renderDt, focus, extrapolation)
		local poppedZoom = math.huge

		if zoomSpring.goal > DIST_OPAQUE then
			-- Make a pessimistic estimate of zoom distance for this step without accounting for poppercam
			local maxPossibleZoom = max(
				zoomSpring.x,
				stepTargetZoom(zoomSpring.goal, zoomDelta, cameraMinZoomDistance, cameraMaxZoomDistance)
			)

			-- Run the Popper algorithm on the feasible zoom range, [MIN_FOCUS_DIST, maxPossibleZoom]
			poppedZoom = Popper(
				focus*CFrame.new(0, 0, MIN_FOCUS_DIST),
				maxPossibleZoom - MIN_FOCUS_DIST,
				extrapolation
			) + MIN_FOCUS_DIST
		end

		zoomSpring.minValue = MIN_FOCUS_DIST
		zoomSpring.maxValue = min(cameraMaxZoomDistance, poppedZoom)

		return zoomSpring:Step(renderDt)
	end

	function Zoom.SetZoomParameters(targetZoom, newZoomDelta)
		zoomSpring.goal = targetZoom
		zoomDelta = newZoomDelta
	end
end

return Zoom
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c004e</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBXAA2708BD3C5A4220933A90641945F045">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Popper</string>
								<string name="ScriptGuid">{337936CD-A1FD-49E0-9DA0-17D15C4270C8}</string>
								<ProtectedString name="Source"><![CDATA[--------------------------------------------------------------------------------
-- Popper.lua
-- Prevents your camera from clipping through walls.
--------------------------------------------------------------------------------

local Players = game:GetService('Players')

local FFlagUserPoppercamLooseOpacityThreshold do
	local success, enabled = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserPoppercamLooseOpacityThreshold")
	end)
	FFlagUserPoppercamLooseOpacityThreshold = success and enabled
end

local camera = game.Workspace.CurrentCamera

local min = math.min
local tan = math.tan
local rad = math.rad
local inf = math.huge
local ray = Ray.new

local function eraseFromEnd(t, toSize)
	for i = #t, toSize + 1, -1 do
		t[i] = nil
	end
end

local nearPlaneZ, projX, projY do
	local function updateProjection()
		local fov = rad(camera.FieldOfView)
		local view = camera.ViewportSize
		local ar = view.X/view.Y

		projY = 2*tan(fov/2)
		projX = ar*projY
	end

	camera:GetPropertyChangedSignal('FieldOfView'):Connect(updateProjection)
	camera:GetPropertyChangedSignal('ViewportSize'):Connect(updateProjection)

	updateProjection()

	nearPlaneZ = camera.NearPlaneZ
	camera:GetPropertyChangedSignal('NearPlaneZ'):Connect(function()
		nearPlaneZ = camera.NearPlaneZ
	end)
end

local blacklist = {} do
	local charMap = {}

	local function refreshIgnoreList()
		local n = 1
		blacklist = {}
		for _, character in pairs(charMap) do
			blacklist[n] = character
			n = n + 1
		end
	end

	local function playerAdded(player)
		local function characterAdded(character)
			charMap[player] = character
			refreshIgnoreList()
		end
		local function characterRemoving()
			charMap[player] = nil
			refreshIgnoreList()
		end

		player.CharacterAdded:Connect(characterAdded)
		player.CharacterRemoving:Connect(characterRemoving)
		if player.Character then
			characterAdded(player.Character)
		end
	end

	local function playerRemoving(player)
		charMap[player] = nil
		refreshIgnoreList()
	end

	Players.PlayerAdded:Connect(playerAdded)
	Players.PlayerRemoving:Connect(playerRemoving)

	for _, player in ipairs(Players:GetPlayers()) do
		playerAdded(player)
	end
	refreshIgnoreList()
end

--------------------------------------------------------------------------------------------
-- Popper uses the level geometry find an upper bound on subject-to-camera distance.
--
-- Hard limits are applied immediately and unconditionally. They're generally caused
-- when level geometry intersects with the near plane (with exceptions, see below).
--
-- Soft limits are only applied under certain conditions.
-- They're caused when level geometry occludes the subject without actually intersecting
-- with the near plane at the target distance.
--
-- Soft limits can be promoted to hard limits and hard limits can be demoted to soft limits.
-- We usually don't want the latter to happen.
--
-- A soft limit will be promoted to a hard limit if an obstruction
-- lies between the current and target camera positions.
--------------------------------------------------------------------------------------------

local subjectRoot
local subjectPart

camera:GetPropertyChangedSignal('CameraSubject'):Connect(function()
	local subject = camera.CameraSubject
	if subject:IsA('Humanoid') then
		subjectPart = subject.RootPart
	elseif subject:IsA('BasePart') then
		subjectPart = subject
	else
		subjectPart = nil
	end
end)

local function canOcclude(part)
	-- Occluders must be:
	-- 1. Opaque
	-- 2. Interactable
	-- 3. Not in the same assembly as the subject

	if FFlagUserPoppercamLooseOpacityThreshold then
		return
			part.Transparency < 0.25 and
			part.CanCollide and
			subjectRoot ~= (part:GetRootPart() or part) and
			not part:IsA('TrussPart')
	else
		return
			part.Transparency < 0.95 and
			part.CanCollide and
			subjectRoot ~= (part:GetRootPart() or part)
	end
end

-- Offsets for the volume visibility test
local SCAN_SAMPLE_OFFSETS = {
	Vector2.new( 0.4, 0.0),
	Vector2.new(-0.4, 0.0),
	Vector2.new( 0.0,-0.4),
	Vector2.new( 0.0, 0.4),
	Vector2.new( 0.0, 0.2),
}

--------------------------------------------------------------------------------
-- Piercing raycasts

local function getCollisionPoint(origin, dir)
	local originalSize = #blacklist
	repeat
		local hitPart, hitPoint = workspace:FindPartOnRayWithIgnoreList(
			ray(origin, dir), blacklist, false, true
		)

		if hitPart then
			if hitPart.CanCollide then
				eraseFromEnd(blacklist, originalSize)
				return hitPoint, true
			end
			blacklist[#blacklist + 1] = hitPart
		end
	until not hitPart

	eraseFromEnd(blacklist, originalSize)
	return origin + dir, false
end

--------------------------------------------------------------------------------

local function queryPoint(origin, unitDir, dist, lastPos)
	debug.profilebegin('queryPoint')

	local originalSize = #blacklist

	dist = dist + nearPlaneZ
	local target = origin + unitDir*dist

	local softLimit = inf
	local hardLimit = inf
	local movingOrigin = origin

	repeat
		local entryPart, entryPos = workspace:FindPartOnRayWithIgnoreList(ray(movingOrigin, target - movingOrigin), blacklist, false, true)

		if entryPart then
			if canOcclude(entryPart) then
				local wl = {entryPart}
				local exitPart = workspace:FindPartOnRayWithWhitelist(ray(target, entryPos - target), wl, true)

				local lim = (entryPos - origin).Magnitude

				if exitPart then
					local promote = false
					if lastPos then
						promote =
							workspace:FindPartOnRayWithWhitelist(ray(lastPos, target - lastPos), wl, true) or
							workspace:FindPartOnRayWithWhitelist(ray(target, lastPos - target), wl, true)
					end

					if promote then
						-- Ostensibly a soft limit, but the camera has passed through it in the last frame, so promote to a hard limit.
						hardLimit = lim
					elseif dist < softLimit then
						-- Trivial soft limit
						softLimit = lim
					end
				else
					-- Trivial hard limit
					hardLimit = lim
				end
			end

			blacklist[#blacklist + 1] = entryPart
			movingOrigin = entryPos - unitDir*1e-3
		end
	until hardLimit < inf or not entryPart

	eraseFromEnd(blacklist, originalSize)

	debug.profileend()
	return softLimit - nearPlaneZ, hardLimit - nearPlaneZ
end

local function queryViewport(focus, dist)
	debug.profilebegin('queryViewport')

	local fP =  focus.p
	local fX =  focus.rightVector
	local fY =  focus.upVector
	local fZ = -focus.lookVector

	local viewport = camera.ViewportSize

	local hardBoxLimit = inf
	local softBoxLimit = inf

	-- Center the viewport on the PoI, sweep points on the edge towards the target, and take the minimum limits
	for viewX = 0, 1 do
		local worldX = fX*((viewX - 0.5)*projX)

		for viewY = 0, 1 do
			local worldY = fY*((viewY - 0.5)*projY)

			local origin = fP + nearPlaneZ*(worldX + worldY)
			local lastPos = camera:ViewportPointToRay(
				viewport.x*viewX,
				viewport.y*viewY
			).Origin

			local softPointLimit, hardPointLimit = queryPoint(origin, fZ, dist, lastPos)

			if hardPointLimit < hardBoxLimit then
				hardBoxLimit = hardPointLimit
			end
			if softPointLimit < softBoxLimit then
				softBoxLimit = softPointLimit
			end
		end
	end
	debug.profileend()

	return softBoxLimit, hardBoxLimit
end

local function testPromotion(focus, dist, focusExtrapolation)
	debug.profilebegin('testPromotion')

	local fP = focus.p
	local fX = focus.rightVector
	local fY = focus.upVector
	local fZ = -focus.lookVector

	do
		-- Dead reckoning the camera rotation and focus
		debug.profilebegin('extrapolate')

		local SAMPLE_DT = 0.0625
		local SAMPLE_MAX_T = 1.25

		local maxDist = (getCollisionPoint(fP, focusExtrapolation.posVelocity*SAMPLE_MAX_T) - fP).Magnitude
		-- Metric that decides how many samples to take
		local combinedSpeed = focusExtrapolation.posVelocity.magnitude

		for dt = 0, min(SAMPLE_MAX_T, focusExtrapolation.rotVelocity.magnitude + maxDist/combinedSpeed), SAMPLE_DT do
			local cfDt = focusExtrapolation.extrapolate(dt) -- Extrapolated CFrame at time dt

			if queryPoint(cfDt.p, -cfDt.lookVector, dist) >= dist then
				return false
			end
		end

		debug.profileend()
	end

	do
		-- Test screen-space offsets from the focus for the presence of soft limits
		debug.profilebegin('testOffsets')

		for _, offset in ipairs(SCAN_SAMPLE_OFFSETS) do
			local scaledOffset = offset
			local pos, isHit = getCollisionPoint(fP, fX*scaledOffset.x + fY*scaledOffset.y)
			if queryPoint(pos, (fP + fZ*dist - pos).Unit, dist) == inf then
				return false
			end
		end

		debug.profileend()
	end

	debug.profileend()
	return true
end

local function Popper(focus, targetDist, focusExtrapolation)
	debug.profilebegin('popper')

	subjectRoot = subjectPart and subjectPart:GetRootPart() or subjectPart

	local dist = targetDist
	local soft, hard = queryViewport(focus, targetDist)
	if hard < dist then
		dist = hard
	end
	if soft < dist and testPromotion(focus, targetDist, focusExtrapolation) then
		dist = soft
	end

	subjectRoot = nil

	debug.profileend()
	return dist
end

return Popper
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c004f</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBXBAB81BB419A448798167FC4D4638037B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">CameraUI</string>
							<string name="ScriptGuid">{4AFC2024-EFDE-468B-B0A2-CD91A0535C40}</string>
							<ProtectedString name="Source"><![CDATA[local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
if not LocalPlayer then
	Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
	LocalPlayer = Players.LocalPlayer
end

local function waitForChildOfClass(parent, class)
	local child = parent:FindFirstChildOfClass(class)
	while not child or child.ClassName ~= class do
		child = parent.ChildAdded:Wait()
	end
	return child
end

local PlayerGui = waitForChildOfClass(LocalPlayer, "PlayerGui")

local TOAST_OPEN_SIZE = UDim2.new(0, 326, 0, 58)
local TOAST_CLOSED_SIZE = UDim2.new(0, 80, 0, 58)
local TOAST_BACKGROUND_COLOR = Color3.fromRGB(32, 32, 32)
local TOAST_BACKGROUND_TRANS = 0.4
local TOAST_FOREGROUND_COLOR = Color3.fromRGB(200, 200, 200)
local TOAST_FOREGROUND_TRANS = 0

-- Convenient syntax for creating a tree of instanes
local function create(className)
	return function(props)
		local inst = Instance.new(className)
		local parent = props.Parent
		props.Parent = nil
		for name, val in pairs(props) do
			if type(name) == "string" then
				inst[name] = val
			else
				val.Parent = inst
			end
		end
		-- Only set parent after all other properties are initialized
		inst.Parent = parent
		return inst
	end
end

local initialized = false

local uiRoot
local toast
local toastIcon
local toastUpperText
local toastLowerText

local function initializeUI()
	assert(not initialized)

	uiRoot = create("ScreenGui"){
		Name = "RbxCameraUI",
		AutoLocalize = false,
		Enabled = true,
		DisplayOrder = -1, -- Appears behind default developer UI
		IgnoreGuiInset = false,
		ResetOnSpawn = false,
		ZIndexBehavior = Enum.ZIndexBehavior.Sibling,

		create("ImageLabel"){
			Name = "Toast",
			Visible = false,
			AnchorPoint = Vector2.new(0.5, 0),
			BackgroundTransparency = 1,
			BorderSizePixel = 0,
			Position = UDim2.new(0.5, 0, 0, 8),
			Size = TOAST_CLOSED_SIZE,
			Image = "rbxasset://textures/ui/Camera/CameraToast9Slice.png",
			ImageColor3 = TOAST_BACKGROUND_COLOR,
			ImageRectSize = Vector2.new(6, 6),
			ImageTransparency = 1,
			ScaleType = Enum.ScaleType.Slice,
			SliceCenter = Rect.new(3, 3, 3, 3),
			ClipsDescendants = true,

			create("Frame"){
				Name = "IconBuffer",
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				Position = UDim2.new(0, 0, 0, 0),
				Size = UDim2.new(0, 80, 1, 0),

				create("ImageLabel"){
					Name = "Icon",
					AnchorPoint = Vector2.new(0.5, 0.5),
					BackgroundTransparency = 1,
					Position = UDim2.new(0.5, 0, 0.5, 0),
					Size = UDim2.new(0, 48, 0, 48),
					ZIndex = 2,
					Image = "rbxasset://textures/ui/Camera/CameraToastIcon.png",
					ImageColor3 = TOAST_FOREGROUND_COLOR,
					ImageTransparency = 1,
				}
			},

			create("Frame"){
				Name = "TextBuffer",
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				Position = UDim2.new(0, 80, 0, 0),
				Size = UDim2.new(1, -80, 1, 0),
				ClipsDescendants = true,

				create("TextLabel"){
					Name = "Upper",
					AnchorPoint = Vector2.new(0, 1),
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 0, 0.5, 0),
					Size = UDim2.new(1, 0, 0, 19),
					Font = Enum.Font.GothamSemibold,
					Text = "Camera control enabled",
					TextColor3 = TOAST_FOREGROUND_COLOR,
					TextTransparency = 1,
					TextSize = 19,
					TextXAlignment = Enum.TextXAlignment.Left,
					TextYAlignment = Enum.TextYAlignment.Center,
				},

				create("TextLabel"){
					Name = "Lower",
					AnchorPoint = Vector2.new(0, 0),
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 0, 0.5, 3),
					Size = UDim2.new(1, 0, 0, 15),
					Font = Enum.Font.Gotham,
					Text = "Right mouse button to toggle",
					TextColor3 = TOAST_FOREGROUND_COLOR,
					TextTransparency = 1,
					TextSize = 15,
					TextXAlignment = Enum.TextXAlignment.Left,
					TextYAlignment = Enum.TextYAlignment.Center,
				},
			},
		},

		Parent = PlayerGui,
	}

	toast = uiRoot.Toast
	toastIcon = toast.IconBuffer.Icon
	toastUpperText = toast.TextBuffer.Upper
	toastLowerText = toast.TextBuffer.Lower

	initialized = true
end

local CameraUI = {}

do
	-- Instantaneously disable the toast or enable for opening later on. Used when switching camera modes.
	function CameraUI.setCameraModeToastEnabled(enabled)
		if not enabled and not initialized then
			return
		end

		if not initialized then
			initializeUI()
		end

		toast.Visible = enabled
		if not enabled then
			CameraUI.setCameraModeToastOpen(false)
		end
	end

	local tweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	-- Tween the toast in or out. Toast must be enabled with setCameraModeToastEnabled.
	function CameraUI.setCameraModeToastOpen(open)
		assert(initialized)

		TweenService:Create(toast, tweenInfo, {
			Size = open and TOAST_OPEN_SIZE or TOAST_CLOSED_SIZE,
			ImageTransparency = open and TOAST_BACKGROUND_TRANS or 1,
		}):Play()

		TweenService:Create(toastIcon, tweenInfo, {
			ImageTransparency = open and TOAST_FOREGROUND_TRANS or 1,
		}):Play()

		TweenService:Create(toastUpperText, tweenInfo, {
			TextTransparency = open and TOAST_FOREGROUND_TRANS or 1,
		}):Play()

		TweenService:Create(toastLowerText, tweenInfo, {
			TextTransparency = open and TOAST_FOREGROUND_TRANS or 1,
		}):Play()
	end
end

return CameraUI
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0050</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXF0D2DBE4D1364773974B31F719C4BDF2">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">LegacyCamera</string>
							<string name="ScriptGuid">{DE1FA245-E9D1-4912-A11B-102D14A13DA4}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	LegacyCamera - Implements legacy controller types: Attach, Fixed, Watch
	2018 Camera Update - AllYourBlox		
--]]

-- Local private variables and constants
local UNIT_X = Vector3.new(1,0,0)
local UNIT_Y = Vector3.new(0,1,0)
local UNIT_Z = Vector3.new(0,0,1)
local X1_Y0_Z1 = Vector3.new(1,0,1)	--Note: not a unit vector, used for projecting onto XZ plane
local ZERO_VECTOR3 = Vector3.new(0,0,0)
local ZERO_VECTOR2 = Vector2.new(0,0)

local VR_PITCH_FRACTION = 0.25
local tweenAcceleration = math.rad(220)		--Radians/Second^2
local tweenSpeed = math.rad(0)				--Radians/Second
local tweenMaxSpeed = math.rad(250)			--Radians/Second
local TIME_BEFORE_AUTO_ROTATE = 2.0 		--Seconds, used when auto-aligning camera with vehicles
local PORTRAIT_OFFSET = Vector3.new(0,-3,0)

local Util = require(script.Parent:WaitForChild("CameraUtils"))

--[[ Services ]]--
local PlayersService = game:GetService('Players')
local VRService = game:GetService("VRService")

--[[ The Module ]]--
local BaseCamera = require(script.Parent:WaitForChild("BaseCamera"))
local LegacyCamera = setmetatable({}, BaseCamera)
LegacyCamera.__index = LegacyCamera

function LegacyCamera.new()
	local self = setmetatable(BaseCamera.new(), LegacyCamera)
	
	self.cameraType = Enum.CameraType.Fixed
	self.lastUpdate = tick()	
	self.lastDistanceToSubject = nil
	
	return self
end

function LegacyCamera:GetModuleName()
	return "LegacyCamera"
end

function LegacyCamera:Test()
	print("LegacyCamera:Test()")
end

--[[ Functions overridden from BaseCamera ]]--
function LegacyCamera:SetCameraToSubjectDistance(desiredSubjectDistance)
	return BaseCamera.SetCameraToSubjectDistance(self,desiredSubjectDistance)
end

function LegacyCamera:Update(dt)
	
	-- Cannot update until cameraType has been set
	if not self.cameraType then return end	
	
	local now = tick()
	local timeDelta = (now - self.lastUpdate)
	local camera = 	workspace.CurrentCamera
	local newCameraCFrame = camera.CFrame
	local newCameraFocus = camera.Focus
	local player = PlayersService.LocalPlayer
	local humanoid = self:GetHumanoid()
	local cameraSubject = camera and camera.CameraSubject
	local isInVehicle = cameraSubject and cameraSubject:IsA('VehicleSeat')
	local isOnASkateboard = cameraSubject and cameraSubject:IsA('SkateboardPlatform')
	local isClimbing = humanoid and humanoid:GetState() == Enum.HumanoidStateType.Climbing
	
	if self.lastUpdate == nil or timeDelta > 1 then
		self.lastDistanceToSubject = nil
	end
	local subjectPosition = self:GetSubjectPosition()	
	
	if self.cameraType == Enum.CameraType.Fixed then
		if self.lastUpdate then
			-- Cap out the delta to 0.1 so we don't get some crazy things when we re-resume from
			local delta = math.min(0.1, now - self.lastUpdate)
			local gamepadRotation = self:UpdateGamepad()		
			self.rotateInput = self.rotateInput + (gamepadRotation * delta)
		end		
		
		if subjectPosition and player and camera then
			local distanceToSubject = self:GetCameraToSubjectDistance()
			local newLookVector = self:CalculateNewLookVector()
			self.rotateInput = ZERO_VECTOR2
			
			newCameraFocus = camera.Focus -- Fixed camera does not change focus
			newCameraCFrame = CFrame.new(camera.CFrame.p, camera.CFrame.p + (distanceToSubject * newLookVector))
		end
	elseif self.cameraType == Enum.CameraType.Attach then
		if subjectPosition and camera then
			local distanceToSubject = self:GetCameraToSubjectDistance()
			local humanoid = self:GetHumanoid()
			if self.lastUpdate and humanoid and humanoid.RootPart then
				
				-- Cap out the delta to 0.1 so we don't get some crazy things when we re-resume from
				local delta = math.min(0.1, now - self.lastUpdate)
				local gamepadRotation = self:UpdateGamepad()
				self.rotateInput = self.rotateInput + (gamepadRotation * delta)		
				
				local forwardVector = humanoid.RootPart.CFrame.lookVector

				local y = Util.GetAngleBetweenXZVectors(forwardVector, self:GetCameraLookVector())
				if Util.IsFinite(y) then
					-- Preserve vertical rotation from user input
					self.rotateInput = Vector2.new(y, self.rotateInput.Y)
				end
			end

			local newLookVector = self:CalculateNewLookVector()
			self.rotateInput = ZERO_VECTOR2

			newCameraFocus = CFrame.new(subjectPosition)
			newCameraCFrame = CFrame.new(subjectPosition - (distanceToSubject * newLookVector), subjectPosition)
		end
	elseif self.cameraType == Enum.CameraType.Watch then
		if subjectPosition and player and camera then
			local cameraLook = nil

			local humanoid = self:GetHumanoid()
			if humanoid and humanoid.RootPart then
				local diffVector = subjectPosition - camera.CFrame.p
				cameraLook = diffVector.unit

				if self.lastDistanceToSubject and self.lastDistanceToSubject == self:GetCameraToSubjectDistance() then
					-- Don't clobber the zoom if they zoomed the camera
					local newDistanceToSubject = diffVector.magnitude
					self:SetCameraToSubjectDistance(newDistanceToSubject)
				end
			end
			
			local distanceToSubject = self:GetCameraToSubjectDistance()
			local newLookVector = self:CalculateNewLookVector(cameraLook)
			self.rotateInput = ZERO_VECTOR2
			
			newCameraFocus = CFrame.new(subjectPosition)
			newCameraCFrame = CFrame.new(subjectPosition - (distanceToSubject * newLookVector), subjectPosition)

			self.lastDistanceToSubject = distanceToSubject
		end
	else
		-- Unsupported type, return current values unchanged
		return camera.CFrame, camera.Focus
	end
	
	self.lastUpdate = now
	return newCameraCFrame, newCameraFocus
end

return LegacyCamera
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0051</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX836E714BD2B04522B06667E56DE9BC99">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Invisicam</string>
							<string name="ScriptGuid">{5F0BC050-42FA-4747-9B74-1BE5AA32AC03}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	Invisicam - Occlusion module that makes objects occluding character view semi-transparent
	2018 Camera Update - AllYourBlox		
--]]

--[[ Camera Maths Utilities Library ]]--
local Util = require(script.Parent:WaitForChild("CameraUtils"))

--[[ Top Level Roblox Services ]]--
local PlayersService = game:GetService("Players")
local RunService = game:GetService("RunService")

--[[ Constants ]]--
local ZERO_VECTOR3 = Vector3.new(0,0,0)
local USE_STACKING_TRANSPARENCY = true	-- Multiple items between the subject and camera get transparency values that add up to TARGET_TRANSPARENCY
local TARGET_TRANSPARENCY = 0.75 -- Classic Invisicam's Value, also used by new invisicam for parts hit by head and torso rays
local TARGET_TRANSPARENCY_PERIPHERAL = 0.5 -- Used by new SMART_CIRCLE mode for items not hit by head and torso rays

local MODE = {
	--CUSTOM = 1, 		-- Retired, unused
	LIMBS = 2, 			-- Track limbs
	MOVEMENT = 3, 		-- Track movement
	CORNERS = 4, 		-- Char model corners
	CIRCLE1 = 5, 		-- Circle of casts around character
	CIRCLE2 = 6, 		-- Circle of casts around character, camera relative
	LIMBMOVE = 7, 		-- LIMBS mode + MOVEMENT mode
	SMART_CIRCLE = 8, 	-- More sample points on and around character
	CHAR_OUTLINE = 9,	-- Dynamic outline around the character
}

local LIMB_TRACKING_SET = {
	-- Body parts common to R15 and R6
	['Head'] = true,
	
	-- Body parts unique to R6
	['Left Arm'] = true,
	['Right Arm'] = true,
	['Left Leg'] = true,
	['Right Leg'] = true,
	
	-- Body parts unique to R15
	['LeftLowerArm'] = true,
	['RightLowerArm'] = true,
	['LeftUpperLeg'] = true,
	['RightUpperLeg'] = true
}

local CORNER_FACTORS = {
	Vector3.new(1,1,-1),
	Vector3.new(1,-1,-1),
	Vector3.new(-1,-1,-1),
	Vector3.new(-1,1,-1)
}

local CIRCLE_CASTS = 10
local MOVE_CASTS = 3
local SMART_CIRCLE_CASTS = 24
local SMART_CIRCLE_INCREMENT = 2.0 * math.pi / SMART_CIRCLE_CASTS
local CHAR_OUTLINE_CASTS = 24

-- Used to sanitize user-supplied functions
local function AssertTypes(param, ...)
	local allowedTypes = {}
	local typeString = ''
	for _, typeName in pairs({...}) do
		allowedTypes[typeName] = true
		typeString = typeString .. (typeString == '' and '' or ' or ') .. typeName
	end
	local theType = type(param)
	assert(allowedTypes[theType], typeString .. " type expected, got: " .. theType)
end

-- Helper function for Determinant of 3x3, not in CameraUtils for performance reasons
local function Det3x3(a,b,c,d,e,f,g,h,i)
	return (a*(e*i-f*h)-b*(d*i-f*g)+c*(d*h-e*g))
end

-- Smart Circle mode needs the intersection of 2 rays that are known to be in the same plane
-- because they are generated from cross products with a common vector. This function is computing
-- that intersection, but it's actually the general solution for the point halfway between where
-- two skew lines come nearest to each other, which is more forgiving.
local function RayIntersection(p0, v0, p1, v1)
	local v2 = v0:Cross(v1)
	local d1 = p1.x - p0.x
	local d2 = p1.y - p0.y
	local d3 = p1.z - p0.z
	local denom = Det3x3(v0.x,-v1.x,v2.x,v0.y,-v1.y,v2.y,v0.z,-v1.z,v2.z)
	
	if (denom == 0) then
		return ZERO_VECTOR3 -- No solution (rays are parallel)
	end
	
	local t0 = Det3x3(d1,-v1.x,v2.x,d2,-v1.y,v2.y,d3,-v1.z,v2.z) / denom
	local t1 = Det3x3(v0.x,d1,v2.x,v0.y,d2,v2.y,v0.z,d3,v2.z) / denom
	local s0 = p0 + t0 * v0
	local s1 = p1 + t1 * v1
	local s = s0 + 0.5 * ( s1 - s0 )
	
	-- 0.25 studs is a threshold for deciding if the rays are
	-- close enough to be considered intersecting, found through testing 
	if (s1-s0).Magnitude < 0.25 then
		return s
	else
		return ZERO_VECTOR3
	end
end



--[[ The Module ]]--
local BaseOcclusion = require(script.Parent:WaitForChild("BaseOcclusion"))
local Invisicam = setmetatable({}, BaseOcclusion)
Invisicam.__index = Invisicam

function Invisicam.new()
	local self = setmetatable(BaseOcclusion.new(), Invisicam)
	
	self.char = nil
	self.humanoidRootPart = nil
	self.torsoPart = nil
	self.headPart = nil
	
	self.childAddedConn = nil
	self.childRemovedConn = nil
	
	self.behaviors = {} 	-- Map of modes to behavior fns
	self.behaviors[MODE.LIMBS] = self.LimbBehavior
	self.behaviors[MODE.MOVEMENT] = self.MoveBehavior
	self.behaviors[MODE.CORNERS] = self.CornerBehavior
	self.behaviors[MODE.CIRCLE1] = self.CircleBehavior
	self.behaviors[MODE.CIRCLE2] = self.CircleBehavior
	self.behaviors[MODE.LIMBMOVE] = self.LimbMoveBehavior
	self.behaviors[MODE.SMART_CIRCLE] = self.SmartCircleBehavior
	self.behaviors[MODE.CHAR_OUTLINE] = self.CharacterOutlineBehavior	
	
	self.mode = MODE.SMART_CIRCLE
	self.behaviorFunction = self.SmartCircleBehavior
	
	
	self.savedHits = {} 	-- Objects currently being faded in/out
	self.trackedLimbs = {}	-- Used in limb-tracking casting modes
		
	self.camera = game.Workspace.CurrentCamera

	self.enabled = false
	return self
end

function Invisicam:Enable(enable)
	self.enabled = enable
	
	if not enable then
		self:Cleanup()
	end
end

function Invisicam:GetOcclusionMode()
	return Enum.DevCameraOcclusionMode.Invisicam
end

--[[ Module functions ]]--
function Invisicam:LimbBehavior(castPoints)
	for limb, _ in pairs(self.trackedLimbs) do
		castPoints[#castPoints + 1] = limb.Position
	end
end

function Invisicam:MoveBehavior(castPoints)
	for i = 1, MOVE_CASTS do
		local position, velocity = self.humanoidRootPart.Position, self.humanoidRootPart.Velocity
		local horizontalSpeed = Vector3.new(velocity.X, 0, velocity.Z).Magnitude / 2
		local offsetVector = (i - 1) * self.humanoidRootPart.CFrame.lookVector * horizontalSpeed
		castPoints[#castPoints + 1] = position + offsetVector
	end
end

function Invisicam:CornerBehavior(castPoints)
	local cframe = self.humanoidRootPart.CFrame
	local centerPoint = cframe.p
	local rotation = cframe - centerPoint
	local halfSize = self.char:GetExtentsSize() / 2 --NOTE: Doesn't update w/ limb animations
	castPoints[#castPoints + 1] = centerPoint
	for i = 1, #CORNER_FACTORS do
		castPoints[#castPoints + 1] = centerPoint + (rotation * (halfSize * CORNER_FACTORS[i]))
	end
end

function Invisicam:CircleBehavior(castPoints)
	local cframe = nil
	if self.mode == MODE.CIRCLE1 then
		cframe = self.humanoidRootPart.CFrame
	else
		local camCFrame = self.camera.CoordinateFrame
		cframe = camCFrame - camCFrame.p + self.humanoidRootPart.Position
	end
	castPoints[#castPoints + 1] = cframe.p
	for i = 0, CIRCLE_CASTS - 1 do
		local angle = (2 * math.pi / CIRCLE_CASTS) * i
		local offset = 3 * Vector3.new(math.cos(angle), math.sin(angle), 0)
		castPoints[#castPoints + 1] = cframe * offset
	end
end	

function Invisicam:LimbMoveBehavior(castPoints)
	self:LimbBehavior(castPoints)
	self:MoveBehavior(castPoints)
end

function Invisicam:CharacterOutlineBehavior(castPoints)
	local torsoUp = self.torsoPart.CFrame.upVector.unit
	local torsoRight = self.torsoPart.CFrame.rightVector.unit
	
	-- Torso cross of points for interior coverage
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoUp
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoUp
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoRight
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoRight
	if self.headPart then
		castPoints[#castPoints + 1] = self.headPart.CFrame.p
	end
	
	local cframe = CFrame.new(ZERO_VECTOR3,Vector3.new(self.camera.CoordinateFrame.lookVector.X,0,self.camera.CoordinateFrame.lookVector.Z))
	local centerPoint = (self.torsoPart and self.torsoPart.Position or self.humanoidRootPart.Position)
	
	local partsWhitelist = {self.torsoPart}
	if self.headPart then
		partsWhitelist[#partsWhitelist + 1] = self.headPart
	end
	
	for i = 1, CHAR_OUTLINE_CASTS do
		local angle = (2 * math.pi * i / CHAR_OUTLINE_CASTS)
		local offset = cframe * (3 * Vector3.new(math.cos(angle), math.sin(angle), 0))
		
		offset = Vector3.new(offset.X, math.max(offset.Y, -2.25), offset.Z)	
		
		local ray = Ray.new(centerPoint + offset, -3 * offset)
		local hit, hitPoint = game.Workspace:FindPartOnRayWithWhitelist(ray, partsWhitelist, false, false)
		
		if hit then
			-- Use hit point as the cast point, but nudge it slightly inside the character so that bumping up against
			-- walls is less likely to cause a transparency glitch
			castPoints[#castPoints + 1] = hitPoint + 0.2 * (centerPoint - hitPoint).unit
		end
	end
end

function Invisicam:SmartCircleBehavior(castPoints)
	local torsoUp = self.torsoPart.CFrame.upVector.unit
	local torsoRight = self.torsoPart.CFrame.rightVector.unit
	
	-- SMART_CIRCLE mode includes rays to head and 5 to the torso.
	-- Hands, arms, legs and feet are not included since they
	-- are not canCollide and can therefore go inside of parts
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoUp
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoUp
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoRight
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoRight
	if self.headPart then
		castPoints[#castPoints + 1] = self.headPart.CFrame.p
	end
	
	local cameraOrientation = self.camera.CFrame - self.camera.CFrame.p
	local torsoPoint = Vector3.new(0,0.5,0) + (self.torsoPart and self.torsoPart.Position or self.humanoidRootPart.Position)
	local radius = 2.5
	
	-- This loop first calculates points in a circle of radius 2.5 around the torso of the character, in the
	-- plane orthogonal to the camera's lookVector. Each point is then raycast to, to determine if it is within
	-- the free space surrounding the player (not inside anything). Two iterations are done to adjust points that
	-- are inside parts, to try to move them to valid locations that are still on their camera ray, so that the
	-- circle remains circular from the camera's perspective, but does not cast rays into walls or parts that are
	-- behind, below or beside the character and not really obstructing view of the character. This minimizes
	-- the undesirable situation where the character walks up to an exterior wall and it is made invisible even
	-- though it is behind the character.
	for i = 1, SMART_CIRCLE_CASTS do
		local angle = SMART_CIRCLE_INCREMENT * i - 0.5 * math.pi
		local offset = radius * Vector3.new(math.cos(angle), math.sin(angle), 0)
		local circlePoint = torsoPoint + cameraOrientation * offset		
		 
		-- Vector from camera to point on the circle being tested		
		local vp = circlePoint - self.camera.CFrame.p
		
		local ray = Ray.new(torsoPoint, circlePoint - torsoPoint)
		local hit, hp, hitNormal = game.Workspace:FindPartOnRayWithIgnoreList(ray, {self.char}, false, false )
		local castPoint = circlePoint
				
		if hit then
			local hprime = hp + 0.1 * hitNormal.unit -- Slightly offset hit point from the hit surface
			local v0 = hprime - torsoPoint -- Vector from torso to offset hit point
			local d0 = v0.magnitude
			
			local perp = (v0:Cross(vp)).unit

			-- Vector from the offset hit point, along the hit surface
			local v1 = (perp:Cross(hitNormal)).unit
			
			-- Vector from camera to offset hit
			local vprime = (hprime - self.camera.CFrame.p).unit
			
			-- This dot product checks to see if the vector along the hit surface would hit the correct
			-- side of the invisicam cone, or if it would cross the camera look vector and hit the wrong side
			if ( v0.unit:Dot(-v1) < v0.unit:Dot(vprime)) then
				castPoint = RayIntersection(hprime, v1, circlePoint, vp)
				
				if castPoint.Magnitude > 0 then
					local ray = Ray.new(hprime, castPoint - hprime)
					local hit, hitPoint, hitNormal = game.Workspace:FindPartOnRayWithIgnoreList(ray, {self.char}, false, false )
					
					if hit then
						local hprime2 = hitPoint + 0.1 * hitNormal.unit
						castPoint = hprime2
					end
				else
					castPoint = hprime
				end
			else
				castPoint = hprime
			end
			
			local ray = Ray.new(torsoPoint, (castPoint - torsoPoint))
			local hit, hitPoint, hitNormal = game.Workspace:FindPartOnRayWithIgnoreList(ray, {self.char}, false, false )
	
			if hit then
				local castPoint2 = hitPoint - 0.1 * (castPoint - torsoPoint).unit
				castPoint = castPoint2	
			end
		end
		
		castPoints[#castPoints + 1] = castPoint
	end
end

function Invisicam:CheckTorsoReference()
	if self.char then
		self.torsoPart = self.char:FindFirstChild("Torso")
		if not self.torsoPart then
			self.torsoPart = self.char:FindFirstChild("UpperTorso")
			if not self.torsoPart then
				self.torsoPart = self.char:FindFirstChild("HumanoidRootPart")
			end
		end
		
		self.headPart = self.char:FindFirstChild("Head")
	end
end

function Invisicam:CharacterAdded(char, player)
	-- We only want the LocalPlayer's character
	if player~=PlayersService.LocalPlayer then return end
	
	if self.childAddedConn then
		self.childAddedConn:Disconnect()
		self.childAddedConn = nil
	end
	if self.childRemovedConn then
		self.childRemovedConn:Disconnect()
		self.childRemovedConn = nil
	end

	self.char = char
	
	self.trackedLimbs = {}
	local function childAdded(child)
		if child:IsA("BasePart") then
			if LIMB_TRACKING_SET[child.Name] then
				self.trackedLimbs[child] = true
			end

			if (child.Name == "Torso" or child.Name == "UpperTorso") then
				self.torsoPart = child
			end

			if (child.Name == "Head") then
				self.headPart = child
			end			
		end
	end
	
	local function childRemoved(child)
		self.trackedLimbs[child] = nil
		
		-- If removed/replaced part is 'Torso' or 'UpperTorso' double check that we still have a TorsoPart to use
		self:CheckTorsoReference()
	end	
	
	self.childAddedConn = char.ChildAdded:Connect(childAdded)
	self.childRemovedConn = char.ChildRemoved:Connect(childRemoved)
	for _, child in pairs(self.char:GetChildren()) do
		childAdded(child)
	end
end

function Invisicam:SetMode(newMode)
	AssertTypes(newMode, 'number')
	for modeName, modeNum in pairs(MODE) do
		if modeNum == newMode then
			self.mode = newMode
			self.behaviorFunction = self.behaviors[self.mode]
			return
		end
	end
	error("Invalid mode number")
end

function Invisicam:GetObscuredParts()
	return self.savedHits
end

-- Want to turn off Invisicam? Be sure to call this after.
function Invisicam:Cleanup()
	for hit, originalFade in pairs(self.savedHits) do
		hit.LocalTransparencyModifier = originalFade
	end
end

function Invisicam:Update(dt, desiredCameraCFrame, desiredCameraFocus)
	
	-- Bail if there is no Character
	if not self.enabled or not self.char then
		return desiredCameraCFrame, desiredCameraFocus		
	end

	self.camera = game.Workspace.CurrentCamera
	
	-- TODO: Move this to a GetHumanoidRootPart helper, probably combine with CheckTorsoReference
	-- Make sure we still have a HumanoidRootPart
	if not self.humanoidRootPart then
		local humanoid = self.char:FindFirstChildOfClass("Humanoid")
		if humanoid and humanoid.RootPart then
			self.humanoidRootPart = humanoid.RootPart
		else
			-- Not set up with Humanoid? Try and see if there's one in the Character at all:
			self.humanoidRootPart = self.char:FindFirstChild("HumanoidRootPart")
			if not self.humanoidRootPart then
				-- Bail out, since we're relying on HumanoidRootPart existing
				return desiredCameraCFrame, desiredCameraFocus
			end
		end
		
		-- TODO: Replace this with something more sensible
		local ancestryChangedConn
		ancestryChangedConn = self.humanoidRootPart.AncestryChanged:Connect(function(child, parent)
			if child == self.humanoidRootPart and not parent then 
				self.humanoidRootPart = nil
				if ancestryChangedConn and ancestryChangedConn.Connected then
					ancestryChangedConn:Disconnect()
					ancestryChangedConn = nil
				end
			end
		end)
	end
	
	if not self.torsoPart then
		self:CheckTorsoReference()
		if not self.torsoPart then
			-- Bail out, since we're relying on Torso existing, should never happen since we fall back to using HumanoidRootPart as torso
			return desiredCameraCFrame, desiredCameraFocus
		end
	end

	-- Make a list of world points to raycast to
	local castPoints = {}
	self.behaviorFunction(self, castPoints)
	
	-- Cast to get a list of objects between the camera and the cast points
	local currentHits = {}
	local ignoreList = {self.char}
	local function add(hit)
		currentHits[hit] = true
		if not self.savedHits[hit] then
			self.savedHits[hit] = hit.LocalTransparencyModifier
		end
	end
	
	local hitParts
	local hitPartCount = 0
	
	-- Hash table to treat head-ray-hit parts differently than the rest of the hit parts hit by other rays
	-- head/torso ray hit parts will be more transparent than peripheral parts when USE_STACKING_TRANSPARENCY is enabled
	local headTorsoRayHitParts = {}	
	local partIsTouchingCamera = {}
	
	local perPartTransparencyHeadTorsoHits = TARGET_TRANSPARENCY
	local perPartTransparencyOtherHits = TARGET_TRANSPARENCY
	
	if USE_STACKING_TRANSPARENCY then
	
		-- This first call uses head and torso rays to find out how many parts are stacked up
		-- for the purpose of calculating required per-part transparency
		local headPoint = self.headPart and self.headPart.CFrame.p or castPoints[1]
		local torsoPoint = self.torsoPart and self.torsoPart.CFrame.p or castPoints[2]
		hitParts = self.camera:GetPartsObscuringTarget({headPoint, torsoPoint}, ignoreList)
		
		-- Count how many things the sample rays passed through, including decals. This should only
		-- count decals facing the camera, but GetPartsObscuringTarget does not return surface normals,
		-- so my compromise for now is to just let any decal increase the part count by 1. Only one
		-- decal per part will be considered.
		for i = 1, #hitParts do
			local hitPart = hitParts[i]
			hitPartCount = hitPartCount + 1 -- count the part itself
			headTorsoRayHitParts[hitPart] = true
			for _, child in pairs(hitPart:GetChildren()) do
				if child:IsA('Decal') or child:IsA('Texture') then
					hitPartCount = hitPartCount + 1 -- count first decal hit, then break
					break
				end
			end
		end
		
		if (hitPartCount > 0) then
			perPartTransparencyHeadTorsoHits = math.pow( ((0.5 * TARGET_TRANSPARENCY) + (0.5 * TARGET_TRANSPARENCY / hitPartCount)), 1 / hitPartCount )
			perPartTransparencyOtherHits = math.pow( ((0.5 * TARGET_TRANSPARENCY_PERIPHERAL) + (0.5 * TARGET_TRANSPARENCY_PERIPHERAL / hitPartCount)), 1 / hitPartCount )
		end
	end
	
	-- Now get all the parts hit by all the rays
	hitParts = self.camera:GetPartsObscuringTarget(castPoints, ignoreList)
	
	local partTargetTransparency = {}
	
	-- Include decals and textures
	for i = 1, #hitParts do
		local hitPart = hitParts[i]
		
		partTargetTransparency[hitPart] =headTorsoRayHitParts[hitPart] and perPartTransparencyHeadTorsoHits or perPartTransparencyOtherHits

		-- If the part is not already as transparent or more transparent than what invisicam requires, add it to the list of
		-- parts to be modified by invisicam
		if hitPart.Transparency < partTargetTransparency[hitPart] then
			add(hitPart)
		end
		
		-- Check all decals and textures on the part
		for _, child in pairs(hitPart:GetChildren()) do
			if child:IsA('Decal') or child:IsA('Texture') then
				if (child.Transparency < partTargetTransparency[hitPart]) then
					partTargetTransparency[child] = partTargetTransparency[hitPart]
					add(child)
				end
			end
		end
	end
	
	-- Invisibilize objects that are in the way, restore those that aren't anymore
	for hitPart, originalLTM in pairs(self.savedHits) do
		if currentHits[hitPart] then
			-- LocalTransparencyModifier gets whatever value is required to print the part's total transparency to equal perPartTransparency			
			hitPart.LocalTransparencyModifier = (hitPart.Transparency < 1) and ((partTargetTransparency[hitPart] - hitPart.Transparency) / (1.0 - hitPart.Transparency)) or 0
		else -- Restore original pre-invisicam value of LTM
			hitPart.LocalTransparencyModifier = originalLTM
			self.savedHits[hitPart] = nil
		end
	end
	
	-- Invisicam does not change the camera values
	return desiredCameraCFrame, desiredCameraFocus
end

return Invisicam]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0052</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXB498E876787E48AF8C042419BCD304F7">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MouseLockController</string>
							<string name="ScriptGuid">{1E5588B6-F772-4312-8E4C-1F990AAA1D4D}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	MouseLockController - Replacement for ShiftLockController, manages use of mouse-locked mode
	2018 Camera Update - AllYourBlox
	
	mobile support added by gAOREK
--]]

--[[ Constants ]]--
local DEFAULT_MOUSE_LOCK_CURSOR = "rbxasset://textures/MouseLockedCursor.png"

local MOUSE_LOCK_ICON_ON = "rbxassetid://4109432113"
local MOUSE_LOCK_ICON_OFF = "rbxassetid://4109426420"

local CONTEXT_ACTION_NAME = "MouseLockSwitchAction"
local MOUSELOCK_ACTION_PRIORITY = Enum.ContextActionPriority.Default.Value

local Util = require(script.Parent:WaitForChild("CameraUtils"))

--[[ Services ]]--
local PlayersService = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local ContextActionService = game:GetService("ContextActionService")
local Settings = UserSettings()	-- ignore warning
local GameSettings = Settings.GameSettings
local Mouse = PlayersService.LocalPlayer:GetMouse()

--[[ Variables ]]

--[[ The Module ]]--
local MouseLockController = {}
MouseLockController.__index = MouseLockController

-- preload shift lock icons
task.spawn(function()
	game:GetService("ContentProvider"):PreloadAsync({MOUSE_LOCK_ICON_ON, MOUSE_LOCK_ICON_OFF})
end)

function MouseLockController.new()
	local self = setmetatable({}, MouseLockController)

	self.isMouseLocked = false
	self.savedMouseCursor = nil
	self.boundKeys = {Enum.KeyCode.LeftShift, Enum.KeyCode.RightShift} -- defaults

	self.mouseLockToggledEvent = Instance.new("BindableEvent")
	
	local boundKeysObj = script:FindFirstChild("BoundKeys")
	if (not boundKeysObj) or (not boundKeysObj:IsA("StringValue")) then
		-- If object with correct name was found, but it's not a StringValue, destroy and replace
		if boundKeysObj then
			boundKeysObj:Destroy()
		end

		boundKeysObj = Instance.new("StringValue")
		boundKeysObj.Name = "BoundKeys"
		boundKeysObj.Value = "LeftShift,RightShift"
		boundKeysObj.Parent = script
	end

	if boundKeysObj then
		boundKeysObj.Changed:Connect(function(value)
			self:OnBoundKeysObjectChanged(value)
		end)
		self:OnBoundKeysObjectChanged(boundKeysObj.Value) -- Initial setup call
	end

	-- Watch for changes to user's ControlMode and ComputerMovementMode settings and update the feature availability accordingly
	GameSettings.Changed:Connect(function(property)
		if property == "ControlMode" or property == "ComputerMovementMode" then
			self:UpdateMouseLockAvailability()
		end
	end)

	-- Watch for changes to DevEnableMouseLock and update the feature availability accordingly
	PlayersService.LocalPlayer:GetPropertyChangedSignal("DevEnableMouseLock"):Connect(function()
		self:UpdateMouseLockAvailability()
	end)

	-- Watch for changes to DevEnableMouseLock and update the feature availability accordingly
	PlayersService.LocalPlayer:GetPropertyChangedSignal("DevComputerMovementMode"):Connect(function()
		self:UpdateMouseLockAvailability()
	end)

	self:UpdateMouseLockAvailability()

	return self
end

function MouseLockController:GetIsMouseLocked()
	return self.isMouseLocked
end

function MouseLockController:GetBindableToggleEvent()
	return self.mouseLockToggledEvent.Event
end

function MouseLockController:GetMouseLockOffset()
	local offsetValueObj = script:FindFirstChild("CameraOffset")
	if offsetValueObj and offsetValueObj:IsA("Vector3Value") then
		return offsetValueObj.Value
	else
		-- If CameraOffset object was found but not correct type, destroy
		if offsetValueObj then
			offsetValueObj:Destroy()
		end
		offsetValueObj = Instance.new("Vector3Value")
		offsetValueObj.Name = "CameraOffset"
		offsetValueObj.Value = Vector3.new(1.75,0,0) -- Legacy Default Value
		offsetValueObj.Parent = script
	end

	if offsetValueObj and offsetValueObj.Value then
		return offsetValueObj.Value
	end

	return Vector3.new(1.75,0,0)
end

function MouseLockController:UpdateMouseLockAvailability()
	local devAllowsMouseLock = PlayersService.LocalPlayer.DevEnableMouseLock
	local devMovementModeIsScriptable = PlayersService.LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.Scriptable
	local userHasMouseLockModeEnabled = GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch
	local userHasClickToMoveEnabled =  GameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove
	local MouseLockAvailable = devAllowsMouseLock and userHasMouseLockModeEnabled and not userHasClickToMoveEnabled and not devMovementModeIsScriptable

	if MouseLockAvailable~=self.enabled then
		self:EnableMouseLock(MouseLockAvailable)
	end
end

function MouseLockController:OnBoundKeysObjectChanged(newValue)
	self.boundKeys = {} -- Overriding defaults, note: possibly with nothing at all if boundKeysObj.Value is "" or contains invalid values
	for token in string.gmatch(newValue,"[^%s,]+") do
		for keyCode, keyEnum in pairs(Enum.KeyCode:GetEnumItems()) do
			if token == keyEnum.Name then
				self.boundKeys[#self.boundKeys+1] = keyEnum
				break
			end
		end
	end
	self:UnbindContextActions()
	self:BindContextActions()
end

--[[ Local Functions ]]--
function MouseLockController:OnMouseLockToggled()
	self.isMouseLocked = not self.isMouseLocked

	if self.isMouseLocked then
		local cursorImageValueObj = script:FindFirstChild("CursorImage")
		if cursorImageValueObj and cursorImageValueObj:IsA("StringValue") and cursorImageValueObj.Value then
			self.savedMouseCursor = Mouse.Icon
			Mouse.Icon = cursorImageValueObj.Value
		else
			if cursorImageValueObj then
				cursorImageValueObj:Destroy()
			end
			cursorImageValueObj = Instance.new("StringValue")
			cursorImageValueObj.Name = "CursorImage"
			cursorImageValueObj.Value = DEFAULT_MOUSE_LOCK_CURSOR
			cursorImageValueObj.Parent = script
			self.savedMouseCursor = Mouse.Icon
			Mouse.Icon = DEFAULT_MOUSE_LOCK_CURSOR
		end
	else
		if self.savedMouseCursor then
			Mouse.Icon = self.savedMouseCursor
			self.savedMouseCursor = nil
		end
	end

	self.mouseLockToggledEvent:Fire()
end

function MouseLockController:DoMouseLockSwitch(name, state, input)
	if state == Enum.UserInputState.Begin or UserInputService.TouchEnabled then
		self:OnMouseLockToggled()
		return Enum.ContextActionResult.Sink
	end
	return Enum.ContextActionResult.Pass
end

function MouseLockController:BindContextActions()
	--behold, the worst part of this whole script
	if UserInputService.TouchEnabled then
		self.shiftLock = false
		
		-- Creating the  b u t t o n  with unecessary   s  p  a  c  e   between    s   t   u   f   f
		local sg 				=	Instance.new("ScreenGui",PlayersService.LocalPlayer.PlayerGui)
			  sg.Name 			= 	"MobileShiftLock"
			  sg.ResetOnSpawn 	= 	false
		
		local button 			= 	Instance.new("ImageButton",sg)
			  button.Name 		= 	"ShiftLockButton"
			  button.Position 	= 	UDim2.new(1,-65,0.5,-15)
			  button.Size 		= 	UDim2.new(0,55,0,55)
			  button.Image 		= 	MOUSE_LOCK_ICON_OFF
			
			  button.BackgroundTransparency = 5280 --big name, big brain, big number
		
		button.MouseButton1Click:Connect(function()
			self.shiftLock = not self.shiftLock
			
			button.Image =  self.shiftLock and MOUSE_LOCK_ICON_ON  -- I ALSO LIKE USING CAPS AND EXTRA LONG VARIABLE NAMES
											or MOUSE_LOCK_ICON_OFF
											
			return self:DoMouseLockSwitch()
		end)
			
		-- obligatory stuff that i have no clue what it does but used bc it wouldnt work any other way
		self.actionGui = sg
		self.actionButton = button
	else
		-----------------the original code-------------------------------------------------------------------------------------------------------------------------
		--[[]]ContextActionService:BindActionAtPriority(CONTEXT_ACTION_NAME, function(name, state, input) return self:DoMouseLockSwitch(name, state, input) end,---
		--[[]] false, MOUSELOCK_ACTION_PRIORITY, unpack(self.boundKeys))                                                                                        ---
		-----------------------------------------------------------------------------------------------------------------------------------------------------------
	end
end

function MouseLockController:UnbindContextActions()
		ContextActionService:UnbindAction(CONTEXT_ACTION_NAME)
end

function MouseLockController:IsMouseLocked()
	return self.enabled and self.isMouseLocked
end

function MouseLockController:EnableMouseLock(enable)
	if enable~=self.enabled then

		self.enabled = enable

		if self.enabled then
			-- Enabling the mode
			self:BindContextActions()
		else
			-- Disabling
			-- Restore mouse cursor
			if Mouse.Icon~="" then
				Mouse.Icon = ""
			end

			self:UnbindContextActions()

			-- If the mode is disabled while being used, fire the event to toggle it off
			if self.isMouseLocked then
				self.mouseLockToggledEvent:Fire()
			end

			self.isMouseLocked = false
		end

	end
end

return MouseLockController
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0053</UniqueId>
						</Properties>
						<Item class="StringValue" referent="RBXEC062A393AB8416B984216DAADF2F231">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">BoundKeys</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">4227f8f5cae1593f02f550a7000c0054</UniqueId>
								<string name="Value">LeftShift,RightShift</string>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="StarterCharacterScripts" referent="RBX662CFF4020ED4A6EA24183811D38845C">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterCharacterScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000019198</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBX639AC9381D284C7F9F87603C86D34A99">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterPack</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182aa</UniqueId>
		</Properties>
		<Item class="Tool" referent="RBX1C5B07AE2FC14ABD900124002F2F23C1">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<bool name="ManualActivationOnly">false</bool>
				<string name="Name">Noclip</string>
				<bool name="RequiresHandle">false</bool>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
				<UniqueId name="UniqueId">3879cf7078e0a1fe024c23e000148f5f</UniqueId>
			</Properties>
			<Item class="LocalScript" referent="RBXB90C271FC8C742629E188355229A5BC3">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">NoclipScript</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{B08C0359-8AFB-4014-9ED1-439B654DB7CC}</string>
					<ProtectedString name="Source"><![CDATA[local smooth = script.Parent:WaitForChild("Smooth")
if smooth.Value then
	require(script.NoclipScriptSmoothOn)()
else
	require(script.NoclipScriptSmoothOff)()
end]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3879cf7078e0a1fe024c23e000148f5b</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX7DE44E79A3504704BE61A7CD72652EF7">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">NoclipScriptSmoothOn</string>
						<string name="ScriptGuid">{427C1893-18A1-4485-AA8B-C9EAB682D9BE}</string>
						<ProtectedString name="Source"><![CDATA[return function()
	--SETTINGS
	--The button settings should be the name of a button. See the KeyCode enum for valid names.
	--If you don't want a key for it, put nil instead of a string with the name.
	--The default speed should be a number.
	
	--The button that moves the player up.
	local UpButton = "Space"
	--The button that moves the player down.
	local DownButton = "LeftControl"
	
	--The button that speeds the player up.
	local SpeedUpButton = "E"
	--The button that slows the player down.
	local SpeedDownButton = "Q"
	
	--The speed by default.
	local DefaultSpeed = script.Parent.Parent.Speed.Value
	
	
	
	--SCRIPT (made by funwolf7)
	--It is not recommended to modify anything past this point unless you know what you are doing.
	
	local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")
	local ContextActionService = game:GetService("ContextActionService")
	
	local Player = game.Players.LocalPlayer
	local PlayerScripts = Player:WaitForChild("PlayerScripts")
	local PlayerModule = require(PlayerScripts:WaitForChild("PlayerModule"))
	local ControlModule = PlayerModule:GetControls()
	
	local Equipped = false
	
	local Speed = type(DefaultSpeed) and DefaultSpeed or 50
	
	local Connection
	
	local function OnPress(Name,State,Object)
		if not UserInputService:GetFocusedTextBox() and Equipped then
			if Name == "NoclipSpeedUp" then
				if State == Enum.UserInputState.Begin then
					Speed = Speed + 10
				end
			elseif Name == "NoclipSpeedDown" then
				if State == Enum.UserInputState.Begin then
					Speed = math.max(Speed - 10,10)
				end
			end
		end
	end
	
	script.Parent.Parent.ToolTip = "Move around like you are playing normally."
	
	if UpButton and type(UpButton) == "string" and Enum.KeyCode[UpButton] then
		script.Parent.Parent.ToolTip = script.Parent.Parent.ToolTip .. " Press " .. UpButton .. " to move upwards."
	end
	if DownButton and type(DownButton) == "string" and Enum.KeyCode[DownButton] then
		script.Parent.Parent.ToolTip = script.Parent.Parent.ToolTip .. " Press " .. UpButton .. " to move downwards."
	end
	
	if SpeedUpButton and type(SpeedUpButton) == "string" and Enum.KeyCode[SpeedUpButton] then
		ContextActionService:BindAction("NoclipSpeedUp",OnPress,false,Enum.KeyCode[SpeedUpButton])
		script.Parent.Parent.ToolTip = script.Parent.Parent.ToolTip .. " Press " .. SpeedUpButton .. " to speed up."
	end
	if SpeedDownButton and type(SpeedDownButton) == "string" and Enum.KeyCode[SpeedDownButton] then
		ContextActionService:BindAction("NoclipSpeedDown",OnPress,false,Enum.KeyCode[SpeedDownButton])
		script.Parent.Parent.ToolTip = script.Parent.Parent.ToolTip .. " Press " .. SpeedDownButton .. " to slow down."
	end
	
	script.Parent.Parent.Equipped:Connect(function()
		Equipped = true
		Connection = RunService.Heartbeat:Connect(function(Step)
			local Character = Player.Character
			if Character then
				local Humanoid = Character:FindFirstChild("Humanoid")
				local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
				local Camera = workspace.CurrentCamera
				
				if Humanoid then
					Humanoid.PlatformStand = true
				end
				
				if HumanoidRootPart then
					HumanoidRootPart.Anchored = true
					HumanoidRootPart.Velocity = Vector3.new()
					
					if Camera then
						local MoveAmount = ControlModule:GetMoveVector() or Vector3.new()
						
						if not UserInputService:GetFocusedTextBox() then
							if UpButton and type(UpButton) == "string" and Enum.KeyCode[UpButton] then
								if UserInputService:IsKeyDown(Enum.KeyCode[UpButton]) then
									MoveAmount = Vector3.new(MoveAmount.X,1,MoveAmount.Z)
								end
							end
							if DownButton and type(DownButton) == "string" and Enum.KeyCode[DownButton] then
								if UserInputService:IsKeyDown(Enum.KeyCode[DownButton]) then
									MoveAmount = Vector3.new(MoveAmount.X,MoveAmount.Y - 1,MoveAmount.Z)
								end
							end
						end
						
						MoveAmount = MoveAmount.Magnitude > 1 and MoveAmount.Unit or MoveAmount
						MoveAmount = MoveAmount * Step * Speed
						
						HumanoidRootPart.CFrame = CFrame.new(HumanoidRootPart.Position,HumanoidRootPart.Position + Camera.CFrame.LookVector) * CFrame.new(MoveAmount)
					end
				end
			end
		end)
	end)
	
	script.Parent.Parent.Unequipped:Connect(function()
		Equipped = false
		local Character = Player.Character
		if Character then
			local Humanoid = Character:FindFirstChild("Humanoid")
			local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
			
			if Humanoid then
				Humanoid.PlatformStand = false
			end
			
			if HumanoidRootPart then
				HumanoidRootPart.Anchored = false
			end
		end
		if Connection then
			Connection:Disconnect()
			Connection = nil
		end
	end)
end]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3879cf7078e0a1fe024c23e000148f5c</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXC84D98E460E14779A5A40A3C8BDCB8FD">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">NoclipScriptSmoothOff</string>
						<string name="ScriptGuid">{3A700A4C-4524-48AF-BE97-8B87A58676FE}</string>
						<ProtectedString name="Source"><![CDATA[return function()
	--SETTINGS
	--The button settings should be the name of a button. See the KeyCode enum for valid names.
	--If you don't want a key for it, put nil instead of a string with the name.
	--The default speed should be a number.
	
	--The button that moves the player up.
	local UpButton = "Space"
	--The button that moves the player down.
	local DownButton = "LeftControl"
	
	--The button that speeds the player up.
	local SpeedUpButton = "E"
	--The button that slows the player down.
	local SpeedDownButton = "Q"
	
	--The speed by default.
	local DefaultSpeed = script.Parent.Parent.Speed.Value
	
	
	
	--SCRIPT (made by funwolf7)
	--It is not recommended to modify anything past this point unless you know what you are doing.
	
	local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")
	local ContextActionService = game:GetService("ContextActionService")
	
	local Player = game.Players.LocalPlayer
	local PlayerScripts = Player:WaitForChild("PlayerScripts")
	local PlayerModule = require(PlayerScripts:WaitForChild("PlayerModule"))
	local ControlModule = PlayerModule:GetControls()
	
	local Equipped = false
	
	local Speed = type(DefaultSpeed) and DefaultSpeed or 50
	
	local Connection
	
	local function OnPress(Name,State,Object)
		if not UserInputService:GetFocusedTextBox() and Equipped then
			if Name == "NoclipSpeedUp" then
				if State == Enum.UserInputState.Begin then
					Speed = Speed + 10
				end
			elseif Name == "NoclipSpeedDown" then
				if State == Enum.UserInputState.Begin then
					Speed = math.max(Speed - 10,10)
				end
			end
		end
	end
	
	script.Parent.Parent.ToolTip = "Move around like you are playing normally."
	
	if UpButton and type(UpButton) == "string" and Enum.KeyCode[UpButton] then
		script.Parent.Parent.ToolTip = script.Parent.Parent.ToolTip .. " Press " .. UpButton .. " to move upwards."
	end
	if DownButton and type(DownButton) == "string" and Enum.KeyCode[DownButton] then
		script.Parent.Parent.ToolTip = script.Parent.Parent.ToolTip .. " Press " .. UpButton .. " to move downwards."
	end
	
	if SpeedUpButton and type(SpeedUpButton) == "string" and Enum.KeyCode[SpeedUpButton] then
		ContextActionService:BindAction("NoclipSpeedUp",OnPress,false,Enum.KeyCode[SpeedUpButton])
		script.Parent.Parent.ToolTip = script.Parent.Parent.ToolTip .. " Press " .. SpeedUpButton .. " to speed up."
	end
	if SpeedDownButton and type(SpeedDownButton) == "string" and Enum.KeyCode[SpeedDownButton] then
		ContextActionService:BindAction("NoclipSpeedDown",OnPress,false,Enum.KeyCode[SpeedDownButton])
		script.Parent.Parent.ToolTip = script.Parent.Parent.ToolTip .. " Press " .. SpeedDownButton .. " to slow down."
	end
	
	script.Parent.Parent.Equipped:Connect(function()
		Equipped = true
		Connection = true
		while wait() do --i hate the smoothness of what this noclip used to be ngl
			if Connection == nil then break end
			local Character = Player.Character
			if Character then
				local Humanoid = Character:FindFirstChild("Humanoid")
				local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
				local Camera = workspace.CurrentCamera
				
				if Humanoid then
					Humanoid.PlatformStand = true
				end
				
				if HumanoidRootPart then
					HumanoidRootPart.Anchored = true
					HumanoidRootPart.Velocity = Vector3.new()
					
					if Camera then
						local MoveAmount = ControlModule:GetMoveVector() or Vector3.new()
						
						if not UserInputService:GetFocusedTextBox() then
							if UpButton and type(UpButton) == "string" and Enum.KeyCode[UpButton] then
								if UserInputService:IsKeyDown(Enum.KeyCode[UpButton]) then
									MoveAmount = Vector3.new(MoveAmount.X,1,MoveAmount.Z)
								end
							end
							if DownButton and type(DownButton) == "string" and Enum.KeyCode[DownButton] then
								if UserInputService:IsKeyDown(Enum.KeyCode[DownButton]) then
									MoveAmount = Vector3.new(MoveAmount.X,MoveAmount.Y - 1,MoveAmount.Z)
								end
							end
						end
						
						MoveAmount = MoveAmount.Magnitude > 1 and MoveAmount.Unit or MoveAmount
						MoveAmount = MoveAmount * 0.035 * Speed
						
						HumanoidRootPart.CFrame = CFrame.new(HumanoidRootPart.Position,HumanoidRootPart.Position + Camera.CFrame.LookVector) * CFrame.new(MoveAmount)
					end
				end
			end
		end
	end)
	
	script.Parent.Parent.Unequipped:Connect(function()
		Equipped = false
		local Character = Player.Character
		if Character then
			local Humanoid = Character:FindFirstChild("Humanoid")
			local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
			
			if Humanoid then
				Humanoid.PlatformStand = false
			end
			
			if HumanoidRootPart then
				HumanoidRootPart.Anchored = false
			end
		end
		if Connection then
			Connection = nil
		end
	end)	
end]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3879cf7078e0a1fe024c23e000148f5d</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="NumberValue" referent="RBXF7BCF587F8E648D598F893595AC057B3">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Speed</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3879cf7078e0a1fe024c23e000148f5e</UniqueId>
					<double name="Value">60</double>
				</Properties>
			</Item>
			<Item class="BoolValue" referent="RBXC8B1D573CB7146A192EF24DCA1613CE1">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Smooth</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3879cf7078e0a1fe024c23e000148f5a</UniqueId>
					<bool name="Value">true</bool>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="StarterGui" referent="RBXC6073552F090446D96196211D6544FEC">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<token name="ScreenOrientation">2</token>
			<bool name="ShowDevelopmentGui">true</bool>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182ab</UniqueId>
			<token name="VirtualCursorMode">0</token>
		</Properties>
	</Item>
	<Item class="LocalizationService" referent="RBX0FEE36D2C73E488CAAE74CC786BA6E2C">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LocalizationService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182ad</UniqueId>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX229D3A2F76AB41E8BC18F538C657C145">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Teleport Service</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182b1</UniqueId>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBX1C6A09608F684D8C8797A37F8B2D49DA">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CollectionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182b3</UniqueId>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBX761132A3E60A4C7EB58CE9DFDD5BCC8E">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182b4</UniqueId>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX18099235F71E4E519D5522D34CE36112">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Geometry</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182b6</UniqueId>
		</Properties>
	</Item>
	<Item class="InsertService" referent="RBXDA46576D77744A789F539AB169F707ED">
		<Properties>
			<bool name="AllowClientInsertModels">false</bool>
			<bool name="AllowInsertFreeModels">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">InsertService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182b8</UniqueId>
		</Properties>
		<Item class="StringValue" referent="RBX430F9007876A47DA96D9CACEBD3B7C6B">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">InsertionHash</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0ee705e8faf759c20180fd200001919f</UniqueId>
				<string name="Value">{ADDCF4F9-E282-45F6-88E1-8475749B6020}</string>
			</Properties>
		</Item>
	</Item>
	<Item class="GamePassService" referent="RBX342DB308354747D2A8AAF5EC3F25EE20">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">GamePassService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182b9</UniqueId>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX24F1A5FC5EBB49AFB9A85CCA844111BA">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182ba</UniqueId>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBXA1BB4805D56E4D3D9EE78CB0EBA75D19">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CookiesService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182bb</UniqueId>
		</Properties>
	</Item>
	<Item class="VRService" referent="RBX4F0A8B0F266742409265CF84BA54FCFE">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VRService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182c5</UniqueId>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBXED047E6B600A4FF1B40B01BD5DE946BF">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ContextActionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182c6</UniqueId>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX511B1A97679F4EB896AB35DF6070A009">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182c8</UniqueId>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBXB58FB9227F4F4BBEA536D49BBBF3FE03">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">AssetService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182c9</UniqueId>
		</Properties>
	</Item>
	<Item class="TouchInputService" referent="RBX356D1AF994AE42299A6A88CC130D764D">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TouchInputService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182ca</UniqueId>
		</Properties>
	</Item>
	<Item class="AnalyticsService" referent="RBX786291BFD82045DF8A4CC2BDB2FAAC45">
		<Properties>
			<string name="ApiKey"></string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">AnalyticsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182cd</UniqueId>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBX35735CE8267B46C8B83DEAB07B6B4B60">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Selection</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182d0</UniqueId>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBXF11747E0A8B64B02A30A73926DF88070">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182d9</UniqueId>
		</Properties>
		<Item class="Folder" referent="RBXFB7DEBBC9DE34D2AA5F1C7BC03551C96">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">SoftlockServer</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018878</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBXEBD727BD11A341A6815F29D750795BC5">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">GameRunner</string>
					<string name="ScriptGuid">{FC876615-18EA-4A65-B7B5-973BC20E3CAE}</string>
					<ProtectedString name="Source"><![CDATA[-- Provides an object that runs the game's server-sided code.
-- By udev2192

--local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
--local ServerStorage = game:GetService("ServerStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local Replicators = RepModules:WaitForChild("Replicators")

require(Replicators:WaitForChild("BaseReplicator"))

ReplicatedStorage, RepModules, Replicators = nil
--local UtilRepModules = RepModules:WaitForChild("Utils")

--local Object = require(UtilRepModules:WaitForChild("Object"))
--local Spawner = require(script:WaitForChild("Spawner"))

local Launchers = script:WaitForChild("Launchers")
--local ClientPackage = ServerStorage:WaitForChild("ObbyistClient")

--local Areas = workspace:WaitForChild("Areas")
--local Lobby = Areas:WaitForChild("Lobby")
--local MainSpawn = Lobby:WaitForChild("_Spawn")

-- Destroy archive objects
--if typeof(Archive) == "Instance" then
--	Archive:Destroy()
--end
--Archive = nil

local GameRunner = {}

-- The default launcher to use. This is the launcher that should be used for
-- the "start" place
GameRunner.DefaultLauncher = "Lobby"

-- If the ClientPackage scripts reset on player respawn
-- Only applied to the next distributed client packages.
--GameRunner.ClientPackResets = false

--local function IsPlayer(Player)
--	return typeof(Player) == "Instance" and Player:IsA("Player")
--end

--local function IsPlayerInGame(Player)
--	return IsPlayer(Player) and Player.Parent == Players
--end

--local function GiveClientPack(Player)
--	if typeof(ClientPackage) == "Instance" then
--		if IsPlayer(Player) == true then
--			coroutine.wrap(function()
--				local PlayerGui = Player:WaitForChild("PlayerGui")
--				if typeof(PlayerGui) == "Instance" then
--					local ClientPackClone = ClientPackage:Clone()
--					if ClientPackClone:IsA("ScreenGui") then
--						ClientPackClone.ResetOnSpawn = GameRunner.ClientPackResets
--						ClientPackClone.IgnoreGuiInset = true
--						ClientPackClone.Parent = PlayerGui
--					end
					
--					ClientPackClone = nil
--				end
				
--				PlayerGui = nil
--			end)()
--		end
--	end
--end

-- Gets a generic "object" for OOP handling.
--function GameRunner.GetGenericObject()
--	return Object
--end

-- The object that runs the server-sided code.
-- Use Obj.Dispose() for garbage collection.
--function GameRunner.New()
--	local Obj = Object.New("GameRunner")
--	Obj.StartedAt = 0
	
--	-- The start function
--	function Obj.Start()
--		-- Begin initialization.
--		Obj.StartedAt = os.time()
		
--		local PlayerObjects = {} -- A table of contents for each player
		
--		local function DisposePlrObjects(PlrObjects)
--			if PlrObjects ~= nil then
--				for i, v in pairs(PlrObjects) do
--					if v.Dispose ~= nil then
--						v.Dispose()
--					end
--				end
--			end
--		end
		
--		local function HandlePlayerRemoving(Player)
--			local PlrObjects = PlayerObjects[Player]
--			DisposePlrObjects(PlrObjects)
			
--			PlayerObjects[Player] = nil
--			PlrObjects = nil
--		end
		
--		local function HandlePlayer(Player)
--			local NextPlrObjects = {}
			
--			-- Initialize player
--			local SpawnerObj = Spawner.New(Player)
--			SpawnerObj.Spawn = MainSpawn
--			SpawnerObj.AutoRespawns = true
			
--			NextPlrObjects.Spawner = SpawnerObj
			
--			-- Only add if the player hasn't left while initializing.
--			if IsPlayerInGame(Player) == true then
--				PlayerObjects[Player] = NextPlrObjects
				
--				-- Give the player the ClientPackage
--				GiveClientPack(Player)
--			else
--				DisposePlrObjects(NextPlrObjects)
--			end
			
--			NextPlrObjects = nil
--		end
		
--		-- Initialize replicators.
--		--local TestRep = require(Replicators:WaitForChild("TestReplicator"))
--		--print("TestReplicator value:", TestRep)
--		--TestRep.Dispose()
		
--		-- Connect events.
--		for i, v in pairs(Players:GetPlayers()) do
--			coroutine.wrap(HandlePlayer)(v)
--		end
--		Players.PlayerAdded:Connect(HandlePlayer)
--		Players.PlayerRemoving:Connect(HandlePlayerRemoving)
--	end
	
--	return Obj
--end

-- Runs the launcher module under the given module name
-- If no name is specified or a blank string is provided,
-- the default will be used.
function GameRunner.Run(LauncherName)
	if typeof(LauncherName) ~= "string" or LauncherName == "" then
		LauncherName = GameRunner.DefaultLauncher
	end
	
	local Launcher = require(Launchers:WaitForChild(LauncherName))
	
	local LauncherObj = Launcher.New()
	LauncherObj.Start()
	
	--print("Initialized after " .. os.time() - LauncherObj.StartedAt .. " ms")
	
	Launcher = nil
	
	return LauncherObj
end

return GameRunner]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ea7</UniqueId>
				</Properties>
				<Item class="Folder" referent="RBX58EAEA2C4C024A6FA497D6A7540B3F5C">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Launchers</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018879</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX908AA43EF4004C2FA846D858EA3AF1EA">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">LauncherUtil</string>
							<string name="ScriptGuid">{A41F2B96-151F-4684-ACE8-1B4506E1B493}</string>
							<ProtectedString name="Source"><![CDATA[-- The set of utility functions for the server launchers.
-- All game states will be handled under the same place file.
-- By udev2192

-- The name of the client package.
local CLIENT_PACKAGE_NAME = "SoftlockClient"

-- LaunchMode attribute name for the client package.
local CLIENT_MODE_ATTRIBUTE = "LaunchMode"

local Players = game:GetService("Players")
local ClientPackage = game:GetService("ServerStorage"):WaitForChild(CLIENT_PACKAGE_NAME)

local LauncherUtil = {}
LauncherUtil.ClientPackResettable = false

-- Initialize client package
ClientPackage.ResetOnSpawn = LauncherUtil.ClientPackResettable
ClientPackage.IgnoreGuiInset = true

function LauncherUtil.IsPlayer(Player)
	return typeof(Player) == "Instance" and Player:IsA("Player")
end

function LauncherUtil.IsPlayerInGame(Player)
	return LauncherUtil.IsPlayer(Player) and Player.Parent == Players
end

-- Sets the LaunchMode attribute of the client package
function LauncherUtil.SetLaunchMode(Mode)
	ClientPackage:SetAttribute(CLIENT_MODE_ATTRIBUTE, Mode)
end

-- Distributes the client package to the player instance provided.
function LauncherUtil.GiveClientPack(Player)
	if typeof(ClientPackage) == "Instance" then
		if LauncherUtil.IsPlayer(Player) == true then
			coroutine.wrap(function()
				local PlayerGui = Player:WaitForChild("PlayerGui")
				if typeof(PlayerGui) == "Instance" then
					local ClientPackClone = ClientPackage:Clone()
					if ClientPackClone:IsA("ScreenGui") then
						ClientPackClone.Parent = PlayerGui
					end

					ClientPackClone = nil
				end

				PlayerGui = nil
			end)()
		end
	end
end

-- Kicks all the players in the server.
function LauncherUtil.KickEveryone(Message)
	if typeof(Message) ~= "string" then
		Message = ""
	end
	
	for i, v in pairs(Players:GetPlayers()) do
		if LauncherUtil.IsPlayer(v) == true then
			v:Kick(Message)
		end
	end
end

return LauncherUtil]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ea8</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXFAC0B9FDB5684E7E88BFC80F7D61337A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Lobby</string>
							<string name="ScriptGuid">{59F9CBC2-856F-42F8-A481-08890FA11ADF}</string>
							<ProtectedString name="Source"><![CDATA[-- The launcher that handles the "lobby" game state.
-- This is usually the starting place.

-- By udev2192

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local MapHandles = RepModules:WaitForChild("MapHandles")
local Replicators = RepModules:WaitForChild("Replicators")
local UtilRepModules = RepModules:WaitForChild("Utils")

local ObjectGroup = require(UtilRepModules:WaitForChild("ObjectGroup"))
local BaseLauncher = require(UtilRepModules:WaitForChild("BaseLauncher"))

local BaseInteractive = require(
	MapHandles
	:WaitForChild("Interactives")
	:WaitForChild("BaseInteractive")
)
local MapLoader = require(
	MapHandles
	:WaitForChild("MapLoader")
)

local Launchers = script.Parent
local ServerPackage = Launchers.Parent
local PlayerHandlers = ServerPackage:WaitForChild("PlayerHandlers")

local PingTester = require(Replicators:WaitForChild("SpeedTest"))

local LauncherUtil = require(Launchers:WaitForChild("LauncherUtil"))

local Spawner = require(PlayerHandlers:WaitForChild("Spawner"))

--local Areas = workspace:WaitForChild("Areas")
local Lobby = workspace:WaitForChild("Lobby")
local MainSpawn = Lobby:WaitForChild("_Spawn")

local LobbyLauncher = {}
local SpawnDelay = game:GetService("Players").RespawnTime

local function HasDisposalFunc(Val)
	return typeof(Val) == "table" and typeof(Val.Dispose) == "function"
end

local WhitelistedJoinIds = {game.CreatorId, 1564385423}

local function CanJoin(Player)
	return true--table.find(WhitelistedJoinIds, Player.UserId) ~= nil
end

function LobbyLauncher.New()
	local LobbyLaunch = BaseLauncher.New()
	
	local PlayerObjects = {}
	
	-- Connection object group
	local Connections = ObjectGroup.New()
	Connections.CleansOnDisposal = true
	
	BaseInteractive.CreateCollisionGroups()
	BaseInteractive.RefreshCollisionGroups()
	
	LobbyLaunch.SetStarter(function()
		-- Initialize client package
		LauncherUtil.SetLaunchMode(script.Name)
		
		-- Initialize ping tester
		local CurrentPingTester = PingTester.New()
		Connections.Add(CurrentPingTester)
		CurrentPingTester.Open()
		
		-- Initialize map loader
		local CurrentMapLoader = MapLoader.ServerCreate()
		CurrentMapLoader.RefreshMapLaunchers()
		CurrentMapLoader.Open()
		
		-- Initialize player connection
		local function OnPlayerJoin(Player)
			if CanJoin(Player) then
				if LauncherUtil.IsPlayer(Player) then
					local PlrObjGroup = ObjectGroup.New()
					PlrObjGroup.CleansOnDisposal = true

					PlayerObjects[Player.UserId] = PlrObjGroup

					-- Create a spawner for the player
					local Spawner = Spawner.New(Player)
					Spawner.Spawn = MainSpawn
					Spawner.AutoRespawns = true

					-- Add player objects
					PlrObjGroup.Add(Spawner)

					-- Give the player the client package
					LauncherUtil.GiveClientPack(Player)

					-- Add player to replicator whitelists
					local UserId = Player.UserId
					CurrentPingTester.AddToWhitelist(UserId)
					CurrentMapLoader.AddToWhitelist(UserId)
				end
			end
		end
		
		-- Connect player events
		for i, v in pairs(Players:GetPlayers()) do
			coroutine.wrap(OnPlayerJoin)(v)
		end
		
		Connections.Add(Players.PlayerAdded:Connect(OnPlayerJoin))
		Connections.Add(Players.PlayerRemoving:Connect(function(v)
			local UserId = v.UserId
			local PlrGroup = PlayerObjects[UserId]

			if HasDisposalFunc(PlrGroup) then
				PlrGroup.Dispose()
			end
			
			PlayerObjects[UserId] = nil
			UserId, PlrGroup = nil, nil
		end))
	end)
	
	LobbyLaunch.BindToShutdown(function()
		-- Disconnect events
		Connections.Dispose()
		Connections = nil
		
		-- Clear player objects
		for i, v in pairs(PlayerObjects) do
			if HasDisposalFunc(v) then
				v.Dispose()
			end
		end
		
		PlayerObjects = nil
	end)
	
	return LobbyLaunch
end

return LobbyLauncher]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ea9</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX63BCF544386B4F7995863A827191849A">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">PlayerHandlers</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd200001887a</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX5A014A32459A40169868FBC18E0CF807">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Spawner</string>
							<string name="ScriptGuid">{FF015C90-D2B7-4FCC-A392-53256C240CE9}</string>
							<ProtectedString name="Source"><![CDATA[-- Takes care of player spawning.
-- By udev2192

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local RepStorage = game:GetService("ReplicatedStorage")
local PhysicsService = game:GetService("PhysicsService")

local RepModules = RepStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Runtime = require(UtilRepModules:WaitForChild("Runtime"))
local Object = require(UtilRepModules:WaitForChild("Object"))

--local DEFAULT_PHYSICS_GROUP = PhysicsService:GetCollisionGroupName(0)
local HEALTH_SCRIPT_NAME = "Health"

local Spawner = {}
local CollisionGroups = require(
	RepModules:WaitForChild("MapHandles")
	:WaitForChild("Interactives")
	:WaitForChild("BaseInteractive")
).CollisionGroups

Spawner.DefaultRespawnTime = Players.RespawnTime

-- If player-to-player collisions are enabled by default
Spawner.PlayersCollideByDefault = false

Spawner.PlayerCollisionGroup = CollisionGroups.Players

-- How long to wait in seconds before moving the character
-- to the spawn.
-- This is needed because moving immediately after spawn
-- almost always fails.
Spawner.SpawnMoveDelay = 0.01

Players.CharacterAutoLoads = false -- So that this module takes care of spawning
--PhysicsService:CreateCollisionGroup(Spawner.PlayerCollisionGroup)
--PhysicsService:CollisionGroupSetCollidable(Spawner.PlayerCollisionGroup, Spawner.PlayerCollisionGroup, false)

local function IsPlayer(Player)
	return typeof(Player == "Instance" and Player:IsA("Player"))
end

local function TogglePartPlayerCollision(Part, Collides)
	if Collides == true then
		PhysicsService:SetPartCollisionGroup(Part, CollisionGroups.Default)
	else
		PhysicsService:SetPartCollisionGroup(Part, Spawner.PlayerCollisionGroup)
	end
end

function Spawner.New(Player)
	assert(IsPlayer(Player), "The player object must be a player instance.")
	
	local Obj = Object.New("PlayerSpawner")
	local IsAwaitingSpawn = false -- Set to true when the player dies
	
	local Connections = {}
	
	Obj.Character = nil
	Obj.CharacterHeight = 5
	Obj.Humanoid = nil
	Obj.Player = Player
	Obj.RespawnTime = Spawner.DefaultRespawnTime
	
	-- The BasePart in which the player will spawn at next.
	Obj.Spawn = nil
	
	--[[
	<boolean> - If set to false, any server script parented to the player's
	character named "Health" is destroyed.
	]]--
	Obj.KeepHealthScript = false
	
	local function CanSpawnPlayer()
		return Player.Parent == Players
	end
	
	local function WaitForRespawnTime()
		local RespawnTime = Obj.RespawnTime
		local Elapsed = 0
		while Obj.AutoRespawns == true and Elapsed < RespawnTime and CanSpawnPlayer() do
			Elapsed += RunService.Heartbeat:Wait()
		end
	end
	
	local function CheckDescendant(d)
		if typeof(d) == "Instance" then
			if d:IsA("BasePart") then
				TogglePartPlayerCollision(d, Obj.CanCharCollide)
			elseif Obj.KeepHealthScript == false and d:IsA("Script") and d.Name == HEALTH_SCRIPT_NAME then
				d:Destroy()
			end
		end
	end
	
	-- Sets if character descendants are listened to when they're added.
	local function TogglePhysicGroupListener(Connected)
		local Char = Obj.Character
		if Connected == true then
			Connections.DescendantAddedEvent = Char.DescendantAdded:Connect(CheckDescendant)
		else
			local AddedEvent = Connections.DescendantAddedEvent
			if AddedEvent ~= nil then
				AddedEvent:Disconnect()
			end
			AddedEvent = nil
		end
	end
	
	-- Function that is called on respawn to
	-- set player-to-player collision.
	local function SetCharCollidable(Collides)
		local Char = Obj.Character
		if Char ~= nil then
			local CharParts = Char:GetDescendants()
			if #CharParts > 0 then
				if Collides == true then
					if Connections.DescendantAddedEvent ~= nil then
						TogglePhysicGroupListener(false)
					end
				else
					if Connections.DescendantAddedEvent == nil then
						TogglePhysicGroupListener(true)
					end
				end
			end
			
			for i, v in pairs(CharParts) do
				CheckDescendant(v)
				--if v:IsA("BasePart") then
				--	TogglePartPlayerCollision(v, Collides)
				--end
			end
			
			CharParts = nil
		end
	end
	
	-- Spawns and returns the player's character.
	local function SpawnChar()
		Player:LoadCharacter()
		local Char = Player.Character
		Obj.Character = Char
		SetCharCollidable(Obj.CanCharCollide)
		return Char
	end
	
	-- Internally spawns at a given location.
	local function SpawnAt(Cf)
		local Char = SpawnChar()
		if Char ~= nil and typeof(Char) == "Instance" then
			local Humanoid = Char:WaitForChild("Humanoid", 5)

			if typeof(Humanoid) == "Instance" then
				Obj.Character = Char
				Obj.Humanoid = Humanoid
				coroutine.wrap(function()
					Runtime.WaitForDur(Spawner.SpawnMoveDelay)
					Obj.SetCFrame(Cf)
				end)()
			else
				Char:Destroy()
			end

			Humanoid = nil
		end

		Char = nil
	end
	
	-- Spawns the character on top of Obj.Spawn.
	local function SpawnAtSelected()
		local Selected = Obj.Spawn
		if Selected ~= nil then
			SpawnAt(Selected.CFrame + Vector3.new(0, Selected.Size.Y/2 + Obj.CharacterHeight/2, 0))
		end
	end
	
	local function HandleDeath()
		if Obj.AutoRespawns == true then
			IsAwaitingSpawn = true
			WaitForRespawnTime()
			
			if CanSpawnPlayer() then
				SpawnAtSelected()
			end
		end
	end
	
	local function SetHumanoidHealthConnected(Connected)
		if Connected == true then
			-- Disconnect, in case this was previously connected.
			SetHumanoidHealthConnected(false)
			
			-- Connect again.
			local Humanoid = Obj.Humanoid
			if Humanoid ~= nil then
				Connections.HumanoidHealthEvent = Humanoid.HealthChanged:Connect(function(health)
					if health <= 0 then
						-- Take care of the humanoid's death.
						SetHumanoidHealthConnected(false)
						HandleDeath()
						if Obj.AutoRespawns == true then
							SetHumanoidHealthConnected(true)
						end
					end
				end)
			end
		else
			local HealthEvent = Connections.HumanoidHealthEvent
			if HealthEvent ~= nil then
				HealthEvent:Disconnect()
			end
			Connections.HumanoidHealthEvent = nil
			HealthEvent = nil
		end
	end
	
	-- Sets the character's CFrame.
	function Obj.SetCFrame(Cf)
		local Char = Obj.Character
		if Char ~= nil and Char.PrimaryPart ~= nil then
			Char:SetPrimaryPartCFrame(Cf)
		end
	end
	
	-- If the player's character is spawned.
	Obj.SetProperty("IsSpawned", false, function(val)
		IsAwaitingSpawn = false
		
		if val == true then
			SpawnAtSelected()
		else
			if Obj.Character ~= nil then
				Obj.Character:Destroy()
			end
		end
	end)
	
	-- If the player's character can collide with other players.
	Obj.SetProperty("CanCharCollide", Spawner.PlayersCollideByDefault, function(val)
		SetCharCollidable(Obj.Character, val)
	end)
	
	-- Sets if the character can auto-respawn.
	Obj.SetProperty("AutoRespawns", false, function(val)
		if val == true then
			Obj.IsSpawned = true -- Spawns the player
			SetHumanoidHealthConnected(true)
		else
			SetHumanoidHealthConnected(false)
		end
	end)
	
	Obj.SetInstanceDestroy(false)
	
	function Obj.OnDisposal()
		for i, v in pairs(Connections) do
			v:Disconnect()
		end
		
		Connections = {}
	end
	
	return Obj
end

return Spawner]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eaa</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Script" referent="RBX61CD96AAEC8F4B9F8841B4100B1340D1">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Runner</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{DA60F850-5F76-45E1-B95C-4D41B6A76839}</string>
					<ProtectedString name="Source"><![CDATA[-- This script runs the ServerPackage.
-- By udev2192

local Archive = game:GetService("ServerStorage"):WaitForChild("Archive", 5)
local ScriptPackage = script.Parent
local GameRunner = require(ScriptPackage:WaitForChild("GameRunner"))

-- Destroy the archive if found.
if typeof(Archive) == "Instance" then
	Archive:Destroy()
end
Archive = nil

local Maps = game:GetService("ServerStorage"):WaitForChild("GameStorage"):WaitForChild("Maps")
local MapWorkspace = workspace:WaitForChild("MapWorkspace")
for i, v in pairs(MapWorkspace:GetChildren()) do
	v.Parent = Maps
end
MapWorkspace:Destroy()
Maps, MapWorkspace = nil

-- Run the game
local Runner = GameRunner.Run()

-- Garbage collect, now that the game is initialized
ScriptPackage, GameRunner, Runner = nil]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0ee705e8faf759c20180fd200001913f</UniqueId>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="ServerStorage" referent="RBXB1EC6D620D2044AC99783C31F995BB57">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ServerStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182da</UniqueId>
		</Properties>
		<Item class="ScreenGui" referent="RBX4835327168A642E7AA3DE2B73BF07C22">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoLocalize">true</bool>
				<bool name="ClipToDeviceSafeArea">true</bool>
				<int name="DisplayOrder">0</int>
				<bool name="Enabled">true</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">SoftlockClient</string>
				<bool name="ResetOnSpawn">true</bool>
				<Ref name="RootLocalizationTable">null</Ref>
				<token name="SafeAreaCompatibility">1</token>
				<token name="ScreenInsets">2</token>
				<token name="SelectionBehaviorDown">0</token>
				<token name="SelectionBehaviorLeft">0</token>
				<token name="SelectionBehaviorRight">0</token>
				<token name="SelectionBehaviorUp">0</token>
				<bool name="SelectionGroup">false</bool>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000019137</UniqueId>
				<token name="ZIndexBehavior">1</token>
			</Properties>
			<Item class="LocalScript" referent="RBX63496CF50AE447DEA453C9CF868D4C2D">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Runner</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{47C2EB61-4050-4F7D-BC0D-21AC9E90EC1F}</string>
					<ProtectedString name="Source"><![CDATA[-- Starts the game's client runner.
-- By udev2192

-- Launcher attribute name.
local LAUNCH_ATTRIBUTE_NAME = "LaunchMode"

local ClientPakcage = script.Parent

-- Start the client stuff.
local ClientRunner = require(ClientPakcage:WaitForChild("ClientRunner"))
local ClientRunnerObj = ClientRunner.Run(script.Parent:GetAttribute(LAUNCH_ATTRIBUTE_NAME))

-- Garbage collect.
ClientPakcage, ClientRunner, ClientRunnerObj, LAUNCH_ATTRIBUTE_NAME = nil, nil, nil, nil]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000188f7</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXF8BD169999694D9EA853259A676D840A">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ClientRunner</string>
					<string name="ScriptGuid">{69778A33-426B-4931-9D5C-59D7645C8507}</string>
					<ProtectedString name="Source"><![CDATA[-- Runs the game's client-sided code.
-- By udev2192

local Launchers = script:WaitForChild("Launchers")

local ClientRunner = {}

-- Runs the launcher module under the name specified.
-- Returns the launcher object created.
function ClientRunner.Run(Name)
	assert(typeof(Name) == "string", "Launcher module name must be provided as a string.")
	
	local Launcher = require(Launchers:WaitForChild(Name))
	
	local LauncherObj = Launcher.New()
	LauncherObj.Start()
	
	Launcher = nil
	
	return LauncherObj
end

--[[
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local Adapters = RepModules:WaitForChild("Adapters")
local Replicators = RepModules:WaitForChild("Replicators")
local UtilRepModules = RepModules:WaitForChild("Utils")

local GuiModules = script:WaitForChild("Gui")
local Liquids = script:WaitForChild("Liquids")
local Movement = script:WaitForChild("Movement")
local Notifiers = script:WaitForChild("Notifiers")
local Sound = script:WaitForChild("Sound")
local ZiplineService = script:WaitForChild("ZiplineService")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Runtime = require(UtilRepModules:WaitForChild("Runtime"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local AreaAdapter = require(Adapters:WaitForChild("AreaAdapter"))
local Hitbox = require(Adapters:WaitForChild("Hitbox"))

local BrowserLib = require(GuiModules:WaitForChild("BrowserLib"))

local MoverFinder = require(Movement:WaitForChild("MoverFinder"))

local NotifierToolkit = require(Notifiers:WaitForChild("NotifierToolkit"))
local Meter = require(Notifiers:WaitForChild("MeterNotification"))

local DeathFX = require(script:WaitForChild("DeathFX"))
local ZipRunner = require(script:WaitForChild("ZiplineRunner"))

local BGM = require(Sound:WaitForChild("BGM"))
local Swimmer = require(Liquids:WaitForChild("Swimmer"))

local Areas = workspace:WaitForChild("Areas")

local ClientRunner = {}
ClientRunner.StartArea = "Lobby"

function ClientRunner.New(Config)
	local Obj = Object.New("PlayerClientRunner")
	Obj.InitializedAt = 0
	Obj.ClientObjects = {}
	Obj.MoverNames = {"JumpPad", "LaunchRamp"}
	
	local Player = Players.LocalPlayer
	local PlayerGui = Player:WaitForChild("PlayerGui")
	local Camera = workspace.CurrentCamera
	
	-- Runs the client stuff.
	function Obj.Start()
		Obj.InitializedAt = os.time()
		
		-- Initialize GUI.
		local ScreenGui = Util.CreateInstance("ScreenGui", {
			ResetOnSpawn = false,
			IgnoreGuiInset = true,
			DisplayOrder = 3,
			Name = "MainGui",
			Parent = PlayerGui
		})
		
		-- Create a folder for the ui.
		local MainUi = Util.CreateInstance("Folder", {
			Name = "MainGui",
			Parent = ScreenGui
		})
		
		-- Create the loading ui
		local LoadingText = BrowserLib.New("TextLabel", {
			Size = UDim2.new(0.1, 0, 0.025, 0),
			Position = UDim2.new(0.1, 0, 0.95, 0),
			TextTransparency = 0.5,
			TextStrokeTransparency = 0.5,
			Font = Enum.Font.Gotham,
			TextXAlignment = Enum.TextXAlignment.Left,
			Text = "LOADING",
			Parent = MainUi
		})
		
		-- Initialize notifications
		local NotifKit = NotifierToolkit.New()
		NotifKit.SetParent(MainUi)
		
		-- Get the lobby's area adapter
		local LobbyAdapter = AreaAdapter.New(Areas:WaitForChild(ClientRunner.StartArea))
		
		local LobbyBGM = BGM.New()
		LobbyBGM.SoundURL = LobbyAdapter.GetInfo("BGM")
		
		-- Set the lobby lighting.
		LobbyAdapter.UseLighting(true)
		
		-- Initialize mechanics.
		local ObjSwimmer = Swimmer.New(Player)
		ObjSwimmer.SetWorkspaceUse(true)
		
		local ObjZipRunner = ZipRunner.New(Player)
		
		for i, v in pairs(Obj.MoverNames) do
			local Finder = MoverFinder.New(v)
			Obj.ClientObjects[v] = Finder
			Finder.Search()
			Finder = nil
		end
		
		-- Initialize death screen.
		local PlrDeathFx = DeathFX.New(Player)
		PlrDeathFx.SetParent(Camera)
		
		--local AirMeter = BrowserLib.New("TextLabel", {
		--	Size = UDim2.new(0.3, 0, 0.05, 0),
		--	Position = UDim2.new(0.5, 0, 0.75, 0),
		--	Font = Enum.Font.Gotham,
		--	Text = "Air: " .. ObjSwimmer.Air .. "/" .. ObjSwimmer.MaxAir,
		--	Name = "AirMeter",
		--	Parent = MainUi
		--})
		
		-- Initialize meter display
		local AirMeter = nil
		
		-- Display air meter when needed
		ObjSwimmer.AirChanged = function(Air)
			if Air < ObjSwimmer.MaxAir and Air > 0 then
				if AirMeter == nil then
					AirMeter = Meter.New(NotifKit, "Air")
					AirMeter.SetProgressColor(Color3.fromRGB(89, 197, 255))
					AirMeter.Value = Air
					AirMeter.MaxValue = ObjSwimmer.MaxAir
					AirMeter.Appear()
				end
				
				AirMeter.Value = Air
				AirMeter.MaxValue = ObjSwimmer.MaxAir
			else
				if AirMeter ~= nil then
					AirMeter.Dispose()
					AirMeter = nil
				end
			end
		end
		
		-- Get rid of loading text
		coroutine.wrap(function()
			local FadeTweenDur = 0.5
			
			Util.Tween(LoadingText, TweenInfo.new(FadeTweenDur), {TextTransparency = 1, TextStrokeTransparency = 1})
			Runtime.WaitForDur(FadeTweenDur)
			LoadingText:Destroy()
			LoadingText = nil
		end)()
		
		-- Say hello
		--local TestNotifColor = Color3.fromRGB(255, 38, 197)
		--local TestNotifRepeatDelay = 1
		
		--NotifKit.NotifyText("Hello, this is a test", TestNotifColor, 10)
		
		---- Do more notification testing
		--while true do
		--	local RandomWait = math.random(200, 1000) * 0.01
		--	NotifKit.NotifyText("Test, goes away after: " .. RandomWait .. "s", TestNotifColor, RandomWait)
		--	Runtime.WaitForDur(TestNotifRepeatDelay)
		--end
		
		-- Hitbox testing
		
		--local HitboxTesterGui = BrowserLib.New("TextLabel", {
		--	Size = UDim2.new(0.3, 0, 0.1, 0),
		--	Position = UDim2.new(0.5, 0, 0.25, 0),
		--	Font = Enum.Font.Gotham,
		--	Text = "Not touching",
		--	Name = "AirMeter",
		--	Parent = MainUi
		--})
		
		--local TestHitbox = Hitbox.New()
		
		--local HitboxTestPart = workspace:WaitForChild("HitboxTester")
		--TestHitbox.SetPartConnected(HitboxTestPart, true)
		
		--TestHitbox.OnHit.Connect(function(Index, HitPosition, HitSize)
		--	HitboxTesterGui.Text = "Index: " .. tostring(Index) .. "\n HitPosition: " .. tostring(HitPosition) .. "\n HitSize: " .. tostring(HitSize)
		--end)
		
		--TestHitbox.OnHitStop.Connect(function()
		--	HitboxTesterGui.Text = "Not touching"
		--end)
		
		--print("Connect test char added")
		--Player.CharacterAdded:Connect(function(Char)
		--	TestHitbox.UsePart(nil)
		--	TestHitbox.UsePart(Char:WaitForChild("HumanoidRootPart"))
		--	print("Root part binded to hitbox")
		--end)
	end
	
	-- Disposes of the module objects used to
	-- run the client stuff.
	function Obj.Shutdown()
		if Obj.ClientObjects ~= nil then
			for i, v in pairs(Obj.ClientObjects) do
				if v.Dispose ~= nil then
					v.Dispose()
				end
			end
		end
	end
	
	Obj.OnDisposal = function()
		Obj.Shutdown()
	end
	
	return Obj
end
]]--

return ClientRunner]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eab</UniqueId>
				</Properties>
				<Item class="Folder" referent="RBXC7066A4006DC4DB88A813578CA085E9D">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Liquids</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd200001887f</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX1F6A46181DA14CB89F5877A8130D98F9">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">SwimmerInput</string>
							<string name="ScriptGuid">{A04EF343-6470-45D2-9628-DDB8C16AE2C7}</string>
							<ProtectedString name="Source"><![CDATA[-- A utility module that provides an object
-- for detecting swimmer client input.

-- THIS VERSION IS DEPRECATED, USE THE ONE IN REPLICATEDSTORAGE INSTEAD

-- By udev2192

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ContextAction = game:GetService("ContextActionService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui", 25)
assert(typeof(PlayerGui) == "Instance", "The PlayerGui couldn't be found.")

local InputChangeConnection = nil
local Platform = nil -- The type of device the player is on.
local SwimmerInput = {}
local InputChangeFuncs = {}

local InputLockVals = {
	[true] = Enum.ContextActionResult.Sink,
	[false] = Enum.ContextActionResult.Pass
}

local FULL_RADIUS = UDim.new(1, 0)

local INPUT_IDS = {
	[Enum.UserInputType.Touch] = "Mobile",
	[Enum.UserInputType.Keyboard] = "PC",
	[Enum.UserInputType.Accelerometer] = "VR"
}

-- Returns the type of device the player is on
function SwimmerInput.GetPlatform(LastInput)
	LastInput = LastInput or UserInputService:GetLastInputType()

	if table.find(UserInputService:GetConnectedGamepads(), LastInput) then -- True if one of the gamepad slots are connected.
		return "Console"
	else
		return INPUT_IDS[LastInput] or "PC" -- Use the PC platform as a last result
	end
end

function SwimmerInput.ToggleInputChangeEvent(Enabled)
	if Enabled == true then
		InputChangeConnection = UserInputService.LastInputTypeChanged:Connect(function(Last)
			Platform = SwimmerInput.GetPlatform(Last)

			-- Fire any input change callbacks
			for i, v in pairs(InputChangeFuncs) do
				if typeof(v) == "function" then
					v()
				end
			end
		end)
	else
		if InputChangeConnection ~= nil then
			InputChangeConnection:Disconnect()
			InputChangeConnection = nil
		end
	end
end

local function AddARC(Gui, Ratio)
	assert(typeof(Gui) == "Instance", "Argument 1 must be an instance.")

	local Arc = Util.CreateInstance("UIAspectRatioConstraint", {
		DominantAxis = Enum.DominantAxis.Height,
		AspectRatio = Ratio or 1,
		Parent = Gui
	})

	return Arc
end

local function MakeCircular(Gui)
	assert(typeof(Gui) == "Instance", "Argument 1 must be an instance.")
	
	local Corner = Util.CreateInstance("UICorner", {
		CornerRadius = FULL_RADIUS,
		Parent = Gui
	})

	return Corner
end

-- For grabbing the mobile jump button located on a mobile screen
local function GetMobileJumpButton()
	-- Check to see if the player is on mobile (cause that should be the only time the jump button appears)
	if Platform == "Mobile" then
		local function WarnButtonMissing(Location)
			warn("The mobile jump button could not be found. The location of the jump button might have changed. The jump button failed to locate at: " .. tostring(Location))
		end

		-- Find the jump button and return it if found
		if PlayerGui then
			local JumpButton = PlayerGui:WaitForChild("TouchGui", 5)
			if JumpButton then
				JumpButton = JumpButton:WaitForChild("TouchControlFrame", 5)
				if JumpButton then
					JumpButton = JumpButton:WaitForChild("JumpButton", 5)
					if JumpButton and JumpButton:IsA("GuiButton") then
						if JumpButton:IsA("GuiButton") then
							return JumpButton
						else
							WarnButtonMissing(JumpButton:GetFullName() .. " (meaning the supposed object was found but however, it isn't a GuiButton).")
						end
					else
						WarnButtonMissing(JumpButton:GetFullName())
					end
				else
					WarnButtonMissing(JumpButton:GetFullName())
				end
			else
				WarnButtonMissing(JumpButton:GetFullName())
			end

			JumpButton = nil
		else
			WarnButtonMissing(PlayerGui:GetFullName())
		end

		-- Return nil if anything in the jump button path is missing
		WarnButtonMissing = nil
		return nil
	else
		return nil
	end
end

-- Initalize input.
Platform = SwimmerInput.GetPlatform()
SwimmerInput.ToggleInputChangeEvent(true)

-- Object constructor.
function SwimmerInput.New()
	local SwimInputEnabled = false

	local Connections = {}
	local GuiObjects = {}

	local Obj = Object.New("SwimmerInputHandler")
	Obj.Keybinds = {
		PC = {
			SwimUp = Enum.KeyCode.Space,
			SwimDown = Enum.KeyCode.LeftShift
		},

		Console = {
			SwimUp = Enum.KeyCode.ButtonA,
			SwimDown = Enum.KeyCode.ButtonB
		}
	}

	-- The mobile dive button.
	Obj.DiveButton = nil

	Obj.DiveButtonFont = Enum.Font.GothamBold
	Obj.DiveButtonText = "Dive"

	-- Keybinding priority for this object's input listener.
	Obj.KeybindPriority = 10000

	-- Sets if the ContextAction listener locks the input of the swim keybinds
	-- to itself.
	Obj.IsSinkingInput = false

	-- The most recent swimming direction.
	Obj.SwimDirection = nil

	local function DestroyInstances()
		for i, v in pairs(Connections) do
			if typeof(v) == "RBXScriptConnection" then
				v:Disconnect()
			end
		end

		for i, v in pairs(GuiObjects) do
			if typeof(v) == "Instance" then
				v:Destroy()
			end
		end
	end

	-- Returns true if the key specified is a swimming keybind
	local function IsSwimKey(Key)
		local Keys = Obj.Keybinds[Platform]
		if typeof(Keys) == "table" then
			for i2, v2 in pairs(Keys) do
				if Key == v2 then
					return true
				end
			end
		end
	end

	-- Internally handles swim input
	local function ChangeSwimDirection(Dir)
		Obj.SwimDirection = Dir
		Object.FireCallback(Obj.DirectionChanged, Dir)
	end
	
	-- Returns the vertical direction (up or down) as a string corresponding to the keys being pressed.
	local function GetCurrentSwimKey()
		for i, Platform in pairs(Obj.Keybinds) do
			if Platform ~= nil then
				local SwimUpKey = Platform.SwimUp
				local SwimDownKey = Platform.SwimDown

				if SwimUpKey ~= nil and SwimDownKey ~= nil then
					if UserInputService:IsKeyDown(SwimUpKey) then
						return "up"
					elseif UserInputService:IsKeyDown(SwimDownKey) then
						return "down"
					end
				end
			end
		end

		return nil -- Return nil if there is no swimming key (for a vertical direction) being held down
	end
	
	-- Internally handles swimming key presses
	local function HandleSwimKeybinds(InputName, InputState, InputObject) -- Used by ContextAction:BindActionAtPriority() inside Client.ToggleSwimming()
		-- Returning Enum.ContextActionResult.Sink prevents any other input receivers from getting that input
		local KeyCode = InputObject.KeyCode
		if IsSwimKey(KeyCode) then
			
			-- Determine whether to let input pass.
			local Result = InputLockVals[Obj.IsSinkingInput]
			
			-- Handle input.
			if InputState == Enum.UserInputState.Begin then
				-- Determine the direction to swim in based on the key press based on the input name
				if InputName == "SwimUpKeybinds" then
					ChangeSwimDirection("up")
				elseif InputName == "SwimDownKeybinds" then
					ChangeSwimDirection("down")
				else
					return Enum.ContextActionResult.Pass
				end
			elseif InputState == Enum.UserInputState.End then
				--if IsSwimKey(KeyCode) then -- Determine if it's a swimming keybind that was let go of
				--	-- Before setting the SwimDirection to nil, make sure the player is not trying to swim in another vertical direction (by checking if a key for the reverse direction is not being held)
				--	local SwimKey = GetCurrentSwimKey()
				--	if SwimKey == nil then
				--		ChangeSwimDirection(nil)
				--	else
				--		SwimKey = string.lower(tostring(SwimKey))
				--		if SwimKey == "up" then
				--			ChangeSwimDirection("up")
				--		elseif SwimKey == "down" then
				--			ChangeSwimDirection("down")
				--		end
				--	end
				--	SwimKey = nil
				--end
				
				return Enum.ContextActionResult.Pass
			else
				return Enum.ContextActionResult.Pass
			end
			
			return Result
		else
			return Enum.ContextActionResult.Pass
		end
	end
	
	-- For binding/connecting input for the user to swim up or down
	function Obj.ToggleSwimmingInput(Enabled)
		if Enabled == true then
			if SwimInputEnabled == true then
				-- Disconnect previous input event connections if found
				Obj.ToggleSwimmingInput(false)
			end

			SwimInputEnabled = true

			-- Handle input
			if Platform == "Mobile" then
				local function WarnButtonMissing()
					warn("The mobile jump button could not be found so you won't be able to swim up or down.")
				end

				-- Find the jump button
				if PlayerGui then
					local JumpButton = GetMobileJumpButton()
					if JumpButton and typeof(JumpButton) == "Instance" and JumpButton:IsA("GuiButton") then
						-- Connect swimming up to the jump button
						Connections["MobileSwimUp"] = JumpButton.MouseButton1Down:Connect(function(IsJumping)
							ChangeSwimDirection("up")
						end)

						Connections["MobileStopSwimmingUp"] = JumpButton.MouseButton1Up:Connect(function(IsJumping)
							if Obj.SwimDirection == "up" then
								ChangeSwimDirection(nil)
							end
						end)

						-- Connect swimming down to the dive button created here
						local Button = Util.CreateInstance("TextButton", {
							Size = JumpButton.Size,
							Position = JumpButton.Position - UDim2.new(0,0,JumpButton.Size.Y.Scale + 0.05,JumpButton.Size.Y.Offset), -- Make the dive button on top of the jump button
							Font = Obj.DiveButtonFont or Enum.Font.SourceSansBold,
							TextScaled = true,
							TextColor3 = Color3.new(1,1,1),
							TextTransparency = 0.75,
							Text = Obj.DiveButtonText or "",
							BackgroundColor3 = Color3.new(0,0,0),
							BorderSizePixel = 0,
							BackgroundTransparency = 0.5
						})

						AddARC(Button, 1)
						MakeCircular(Button)

						-- Connect the diving event and load the button
						GuiObjects.DiveButton = Button
						if GuiObjects.DiveButton ~= nil then -- Just in case
							Connections["MobileSwimDown"] = Button.MouseButton1Down:Connect(function() -- To swim down
								ChangeSwimDirection("down")
							end)
							Connections["MobileStopSwimmingDown"] = Button.MouseButton1Up:Connect(function() -- To stop swimming down
								if Obj.SwimDirection == "down" then
									ChangeSwimDirection(nil)
								end
							end)
							Button.Parent = JumpButton.Parent
						end

						Button = nil
					end

					JumpButton = nil
				end

				WarnButtonMissing = nil
			else

				-- Provide a connection (for those not on mobile) to stop swimming in a vertical direction.
				-- This is used to fix a jumping bug.
				Connections["StopSwimmingVertically"] = UserInputService.InputEnded:Connect(function(Input)
					local KeyCode = Input.KeyCode
					
					if Input.UserInputState == Enum.UserInputState.End and IsSwimKey(KeyCode) then -- Determine if it's a swimming keybind that was let go of
						-- Before setting the SwimDirection to nil, make sure the player is not trying to swim in another vertical direction (by checking if a key for the reverse direction is not being held)
						local SwimKey = GetCurrentSwimKey()
						if SwimKey == nil then
							ChangeSwimDirection(nil)
						else
							SwimKey = string.lower(tostring(SwimKey))
							if SwimKey == "up" then
								ChangeSwimDirection("up")
							elseif SwimKey == "down" then
								ChangeSwimDirection("down")
							end
						end
						SwimKey = nil
					end
					
					KeyCode = nil
				end)

				-- Bind input for swimming vertically
				local Keybinds = Obj.Keybinds
				if Keybinds ~= nil then
					ContextAction:BindActionAtPriority("SwimDownKeybinds", HandleSwimKeybinds, false, Obj.KeybindPriority, Keybinds.PC.SwimDown, Keybinds.Console.SwimDown)
					ContextAction:BindActionAtPriority("SwimUpKeybinds", HandleSwimKeybinds, false, Obj.KeybindPriority, Keybinds.PC.SwimUp, Keybinds.Console.SwimUp)
				end
				Keybinds = nil
			end
		else
			SwimInputEnabled = false

			-- Disconnect and destroy ways of input used for swimming (if the player is no longer in any water)
			DestroyInstances()

			ContextAction:UnbindAction("SwimDownKeybind")
			ContextAction:UnbindAction("SwimUpKeybind")
		end
	end

	-- Disconnect and destroy everything on disposal.
	Obj.OnDisposal = function()
		InputChangeFuncs[Obj] = nil
		Obj.ToggleSwimmingInput(false)

		DestroyInstances()

		Connections = nil
		GuiObjects = nil
	end

	-- Invoked when a swimming input direction is received.
	-- Parameters:
	-- Direction - Either: "up", "down", or nil
	Obj.DirectionChanged = nil

	InputChangeFuncs[Obj] = function()
		Obj.ToggleSwimmingInput(SwimInputEnabled)
	end

	return Obj
end

return SwimmerInput]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eb2</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXA3BA5BE0A7C14EE4ACB3440A2985C040">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Swimmer</string>
							<string name="ScriptGuid">{87F55A72-34B6-41E9-87A8-01F350495F43}</string>
							<ProtectedString name="Source"><![CDATA[-- This module provides an object that gives players the ability to swim
-- in liquids (from BaseParts).

-- Thanks to ForbiddenJ for swimming movement logic.

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Debris = game:GetService("Debris")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local Adapters = RepModules:WaitForChild("Adapters")
local UtilRepModules = RepModules:WaitForChild("Utils")

local LiquidModules = script.Parent

local CharAdapter = require(Adapters:WaitForChild("CharacterAdapter"))
local Object = require(UtilRepModules:WaitForChild("Object"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local LiquidAdapter = require(LiquidModules:WaitForChild("LiquidAdapter"))
local SwimmerInput = require(LiquidModules:WaitForChild("SwimmerInput"))

local Camera = workspace.CurrentCamera

local Swimmer = {}
Swimmer.HumanoidCollectionId = "SwimmerHumanoids" -- For internal use

local function PlaySound(URL)
	local Sound = Instance.new("Sound")
	Sound.SoundId = Util.FormatAssetId(URL)
	Sound.Volume = 1
	Sound.Parent = script

	if Sound.IsLoaded == false then
		Sound.Loaded:Wait()
	end

	Sound:Play()
	Debris:AddItem(Sound, Sound.TimeLength)
	Sound = nil
end

-- Toggles the SoundGroup used in the 

-- Gets the weight of the specified part.
local function GetPartWeight(BasePart)
	if Util.IsBasePart(BasePart) then
		-- Get a BasePart's weight, the weight of its connected parts
		local AccumulatedWeight = 0
		for i, v in pairs(BasePart:GetConnectedParts()) do
			if v:IsA("BasePart") then
				AccumulatedWeight = AccumulatedWeight + v:GetMass()
			end
		end
		-- Calculate the weight by going through the table and return the weight relative to the gravity
		return AccumulatedWeight * workspace.Gravity
	end
end

function Swimmer.New(Player)
	assert(typeof(Player) == "Instance" and Player:IsA("Player"), "Argument 1 must be a player instance.")

	local Obj = Object.New("Swimmer")
	local ObjCharAdapter = CharAdapter.New(Player)
	local ObjInput = SwimmerInput.New()

	local Liquids = {} -- Liquid adapters
	local ActiveLiquids = {} -- Liquid adapters the rig is in.
	local Connections = {} -- Liquid body part connections
	
	local FloatTweens = {}

	local CharObjects = ObjCharAdapter.Parts
	local Forces = {}
	local ForceEnabled = false -- Swimmin force debounce.
	local FloatingForces = {} -- Forces used to make the character float.
	local RootPartWeight = 0
	local OldRig = nil -- For adapter refresh
	local Rig = nil
	local IsInLiquid = false -- Internal identifier for sound playback
	local WaitingForFloat = false
	local VerticalDirection = nil
	local CanPlaySounds = false

	-- Physics tweaking stuff
	Obj.PhysicsConfig = {
		MaxSwimTorqueY = 2000, -- The maximum amount of force (negative or positive) that can be applied in the Y-axis to turn the player's character while they are swimming
		SwimRotationalDamping = 50, -- The higher this number gets, the more intertia that is ignored when turning
		SwimRotationalPower = 500 -- The amount of power to use to turn the character while they are swimming
	}

	-- Air change rates by liquid state.
	-- Numbers are in change per second.
	Obj.AirChanges = {
		-- Decreases should be negative numbers

		["water"] = -8,
		["acid"] = -30,
		["lava"] = -10000
	}

	-- How long (in seconds) the player has to wait before
	-- breathing in when out of a liquid.
	Obj.BreatheInDelay = 2

	-- Air gained per second when not in a liquid.
	Obj.AirRecoveryRate = 12

	-- Current air cap.
	Obj.MaxAir = 100

	-- Sounds by liquid state
	Obj.LiquidSounds = {
		-- Format: ["state"] = "id"
		["default"] = "rbxasset://sounds/impact_water.mp3",
		["lava"] = "rbxasset://sounds/Rocket shot.wav"--"rbxassetid://5094928129"--"rbxasset://sounds/Launching rocket.wav"
	}

	Obj.SplashOutSound = "rbxasset://sounds/impact_water.mp3"
	Obj.SoundsEnabled = true

	-- The current liquid body the player is in.
	Obj.CurrentBody = nil

	-- The velocity of the character when it is floating.
	Obj.FloatVelocity = Vector3.new(0, 1, 0)

	Obj.FloatTweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
	Obj.FloatStopVelocity = Vector3.new(0, 0, 0)

	-- The liquid body identifier string.
	Obj.BodyId = "_Liquid"

	-- If the player can lose air.
	Obj.CanLoseAir = true

	Obj.CanLoseAirWhileDead = false
	Obj.CanSwimWhileDead = false
	Obj.SoundsEnabledWhileDead = false
	Obj.MaxForceMultiplier = 3.1
	
	-- Time after character loading to wait before letting a sound be played.
	Obj.SoundSpawnCooldown = 0.1

	-- Multiplier for the humanoid's jump power when
	-- they launch out of a liquid.
	Obj.JumpBoostFactor = 1

	local function RefreshCharValues()
		local RootPart = CharObjects.RootPart
		if RootPart ~= nil then
			RootPartWeight = GetPartWeight(RootPart) * (Obj.MaxForceMultiplier or 1)
		end
		
		CanPlaySounds = false

		local Char = CharObjects.Character
		if Char ~= nil then
			Rig = Char:WaitForChild(Obj.InteractingRig)

			if Rig ~= nil then
				IsInLiquid = false
				
				-- Set liquid adapter rigs
				for i, v in pairs(Liquids) do
					if OldRig ~= nil then
						v.SetInteractingPart(OldRig, false)
					end

					v.SetInteractingPart(Rig, true)
				end
			end

			OldRig = Rig
			
			-- Go through sound cooldown
			coroutine.wrap(function()
				local SoundCooldown = Obj.SoundSpawnCooldown or 0

				if SoundCooldown > 0 then
					CanPlaySounds = false
					local Elapsed = 0
					
					while Elapsed < SoundCooldown do
						Elapsed += RunService.Heartbeat:Wait()
					end
					
					CanPlaySounds = true
				else
					CanPlaySounds = true
				end
			end)()
		end
	end

	local function HandleAirSupply(Air)
		if Air <= 0 then
			-- Kill the player when they run out of air
			local Humanoid = CharObjects.Humanoid
			if Humanoid ~= nil then
				Humanoid.Health = 0
			end
		end

		-- Fire the callback.
		Object.FireCallback(Obj.AirChanged, Air)
	end

	-- Internally toggles air recovery.
	local function ToggleAirRecovery(Enabled)
		if Enabled == true then
			-- Disconnect the old recovery runner.
			ToggleAirRecovery(false)

			-- Inhale.
			Obj.InhaleRun = RunService.Heartbeat:Connect(function(Delta)
				-- Check if the player is out of a liquid and has less than or equal to max air
				if Obj.CurrentBody == nil and Obj.Air <= Obj.MaxAir then
					-- Recover
					Obj.Air = math.min(Obj.Air + (Obj.AirRecoveryRate * Delta), Obj.MaxAir)
				else
					ToggleAirRecovery(false)
				end
			end)
		else
			local InhaleRun = Obj.InhaleRun

			if InhaleRun ~= nil then
				InhaleRun:Disconnect()
			end

			Obj.InhaleRun = nil
			InhaleRun = nil
		end
	end

	local function CanSwim()
		local Humanoid = CharObjects.Humanoid
		local IsAlive = true
		if Humanoid ~= nil then
			IsAlive = Humanoid.Health > 0
		end

		return Obj.CanSwimWhileDead == true or (Obj.CanSwimWhileDead == false and IsAlive)
	end

	-- Toggles the swimming force.
	local function ToggleForce(Enabled)
		if Enabled == true and CanSwim() == true then
			local PhysicsConfig = Obj.PhysicsConfig
			local RootPart = CharObjects.RootPart
			local Humanoid = CharObjects.Humanoid

			if PhysicsConfig ~= nil and RootPart ~= nil and Humanoid ~= nil then
				-- Moves the character.
				local Force = Util.CreateInstance("BodyVelocity", {
					Velocity = Vector3.new(0,0,0),
					P = RootPartWeight, -- Power
					MaxForce = Vector3.new(RootPartWeight, RootPartWeight, RootPartWeight) * 3.1,
					Parent = RootPart
				})

				-- Rotates the character.
				local Gyro = Util.CreateInstance("BodyGyro", {
					MaxTorque = Vector3.new(math.huge, PhysicsConfig.MaxSwimTorqueY, math.huge),
					D = PhysicsConfig.SwimRotationalDamping,
					P = PhysicsConfig.SwimRotationalPower,
					CFrame = RootPart.CFrame, -- Important because this is where the torque will be applied
					Parent = RootPart
				})

				Forces.Force = Force
				Forces.Gyro = Gyro

				-- Set Humanoid PlatformStand, so default
				-- humanoid control doesn't apply
				Humanoid.PlatformStand = true
			end

			PhysicsConfig, RootPart, Humanoid = nil, nil, nil
		else
			for i, v in pairs(Forces) do
				if typeof(v) == "Instance" then
					v:Destroy()
				end
			end

			-- Allow for default control again
			local Humanoid = CharObjects.Humanoid
			if Humanoid ~= nil then
				Humanoid.PlatformStand = false

				-- Launch the humanoid upwards if it was swimming up.
				if VerticalDirection == "up" then
					local RootPart = CharObjects.RootPart
					if RootPart ~= nil then
						local RootVelocity = RootPart.Velocity
						local UpVelocity = Humanoid.JumpPower * (Obj.JumpBoostFactor or 1)

						-- Jump the humanoid for consistency.
						Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)

						-- Apply the velocity
						RootPart:ApplyImpulse(Vector3.new(RootVelocity.X, UpVelocity, RootVelocity.Z))

						RootVelocity, UpVelocity  = nil, nil
					end
					RootPart = nil
				end
			end
			Humanoid = nil
		end
	end

	local function ToggleSwimRunner(Enabled)
		if Enabled == true then
			-- Disconnect the old swim runner if it exists.
			ToggleSwimRunner(false)

			-- Runs swimmer humanoid movement
			Obj.SwimRunner = RunService.Heartbeat:Connect(function(Delta)
				local Body = Obj.CurrentBody
				if Body ~= nil then

					if CanSwim() == true then
						local Humanoid = CharObjects.Humanoid
						local IsAlive = true
						if Humanoid ~= nil then
							IsAlive = Humanoid.Health > 0
						end

						if Obj.CanLoseAir == true then
							-- Do death check before draining air.
							if Humanoid == nil or Obj.CanLoseAirWhileDead == true or (Obj.CanLoseAirWhileDead == false and IsAlive) then
								-- Drain air.
								Obj.Air = math.max(0, Obj.Air + ((Obj.AirChanges[Body.State] or 0) * Delta))
							end
						end

						-- Move the humanoid
						local Force = Forces.Force
						local Gyro = Forces.Gyro

						if Forces ~= nil and Gyro ~= nil then
							if Humanoid ~= nil then
								local MoveDir = Humanoid.MoveDirection -- The movement direction of the humanoid
								local HumanoidSpeed = Humanoid.WalkSpeed -- The movement speed of the humanoid

								local YVelocity = nil -- The Vector3 that hoists the swim direction of the player on the Y-axis
								if VerticalDirection == "up" then
									YVelocity = MoveDir + Vector3.new(0, 1, 0) -- Swim up
								elseif VerticalDirection == "down" then
									YVelocity = MoveDir + Vector3.new(0, -1, 0) -- Swim down
								else
									YVelocity = MoveDir + Vector3.new(0, 0, 0)
								end
								Force.Velocity = YVelocity * HumanoidSpeed

								if MoveDir.Magnitude > 0.1 then -- Detect if the character is applying force in any direction other than just up or down by detecting if there is magnitude in the move direction (the up and down direction won't affect this number)
									Gyro.CFrame = CFrame.new(Vector3.new(0,0,0), MoveDir) -- Apply a directional force away from the center
								end
								MoveDir, HumanoidSpeed, YVelocity = nil, nil, nil
							end

							Humanoid = nil
						end
					else
						ToggleSwimRunner(false)
						ToggleForce(false)
					end
				end
			end)
		else
			local SwimRunner = Obj.SwimRunner

			if SwimRunner ~= nil then
				SwimRunner:Disconnect()
			end

			Obj.SwimRunner = nil
			SwimRunner = nil
		end
	end

	-- This moves the humanoid while they're swimming
	local function MoveSwimmer(Direction)
		VerticalDirection = Direction
	end

	-- Sets the current body the rig is swimming in.
	-- This can only have one value for this object.
	local function SetCurrentBody(Body)
		Obj.CurrentBody = Body

		if Body ~= nil then
			if ForceEnabled == false then
				ForceEnabled = true
				if CanSwim() then
					ToggleForce(true)
					ToggleSwimRunner(true)
					ObjInput.IsSinkingInput = true
				else
					Obj.ToggleFloating(true)
				end
			end
		else
			if ForceEnabled == true then
				ForceEnabled = false

				ToggleSwimRunner(false)
				ToggleForce(false)
				Obj.ToggleFloating(false)
				ObjInput.IsSinkingInput = false

				-- Yielding in roblox sucks sometimes,
				-- so coroutines are needed.
				coroutine.wrap(function()
					-- Wait for air recovery
					local Elapsed = 0
					local RecoverDelay = Obj.BreatheInDelay
					if RecoverDelay ~= nil then
						while Obj.CurrentBody == nil and Elapsed < RecoverDelay do
							Elapsed += RunService.Heartbeat:Wait()
						end
					end
					Elapsed, RecoverDelay = nil, nil

					-- Breathe in
					if Obj.CurrentBody == nil then
						ToggleAirRecovery(true)
					end
				end)()
			end
		end
	end

	-- Makes the player swim in the liquid body,
	-- if IsSwimming is true, false for getting
	-- out of the body.
	-- The body parameter should be a BasePart.
	local function SwimInBody(Body, IsSwimming)
		local Humanoid = CharObjects.Humanoid

		if Humanoid ~= nil then
			local NextBody = nil
			if Body ~= nil then
				if IsSwimming == true then
					Obj.CurrentBody = Body

					-- Add to the table
					table.insert(ActiveLiquids, Body)
					--print("Swimming in:", Body.State)

					NextBody = Body
					Body = nil
				else
					-- Remove from the table
					local TablePos = table.find(ActiveLiquids, Body)
					if TablePos ~= nil then
						table.remove(ActiveLiquids, TablePos)
					end
					TablePos = nil

					-- Swim in the last body in the table.
					-- If there are none, it means the
					-- player isn't in any liquids.
					NextBody = ActiveLiquids[#ActiveLiquids]
				end
			end

			-- Swim in the next body.
			Obj.CurrentBody = NextBody
			SetCurrentBody(NextBody)

			-- Fire the callback
			Object.FireCallback(Obj.RigEntryChanged, NextBody, IsSwimming)

			-- Play a sound to indicate liquid entry change.
			if CanPlaySounds == true then
				if Obj.SoundsEnabled == true then
					-- Check if the sounds can be played when dead.
					local SoundsWhenDead = Obj.SoundsEnabledWhileDead
					if SoundsWhenDead == true or (SoundsWhenDead == false and Humanoid ~= nil and Humanoid.Health > 0) then
						-- Play the corresponding sound.
						if NextBody == nil then
							if IsInLiquid == true then
								IsInLiquid = false
								coroutine.wrap(PlaySound)(Obj.SplashOutSound)
							end
						elseif IsInLiquid == false then
							IsInLiquid = true
							coroutine.wrap(PlaySound)(Obj.LiquidSounds[NextBody.State] or Obj.LiquidSounds["default"])
						end
					end
				end
			end
		end
	end

	local function IsLiquidBody(Part)
		return Util.IsBasePart(Part) and string.match(Part.Name, Obj.BodyId)
	end

	-- Toggles if the specified liquid can be interacted with
	-- by this object.
	local function ToggleLiquidRegistry(Body, IsRegistered)
		if Util.IsBasePart(Body) then

			if IsRegistered == true then
				-- Register if not already registered
				if Liquids[Body] == nil then
					local Adapter = LiquidAdapter.New(Body)		
					Liquids[Body] = Adapter
					Adapter.SetInteractingPart(Rig, true)
					--print("a")
					Adapter.EntryStatusChanged = function(Part, Entered)
						--print("b")
						if Util.IsInstance(Part) then
							--print("c")
							SwimInBody(Adapter, Entered)
						end
					end
				end
			else
				-- De-register
				local Adapter = Liquids[Body]
				if Adapter ~= nil then
					Adapter.Dispose()
				end

				Liquids[Body] = nil
				Adapter = nil
			end
		end
	end

	local function HandleLiquidBasePart(Descendant, IsAdded)
		-- Check for the identifier
		if Util.IsBasePart(Descendant) and string.match(Descendant.Name, Obj.BodyId) then
			-- Toggle registration
			ToggleLiquidRegistry(Descendant, IsAdded)
		end
	end

	-- Makes the character float. For realism, this should
	-- be called if the player is in water.
	-- Paramters:
	-- IsFloating (boolean) - If the character will float.
	function Obj.ToggleFloating(IsFloating)
		local Char = CharObjects.Character

		if IsFloating == true then
			-- Toggle off any existing floating forces
			Obj.ToggleFloating(false)

			if Char ~= nil then
				-- Start floating
				local FloatVelocity = Obj.FloatVelocity
				if FloatVelocity ~= nil then
					local Parts = Char:GetChildren()
					local Info = Obj.FloatTweenInfo or TweenInfo.new()
					local Properties = {AssemblyLinearVelocity = FloatVelocity}

					-- Tween to the float force
					for i, v in pairs(Parts) do
						if Util.IsBasePart(v) then
							table.insert(FloatTweens, Util.Tween(v, Info, Properties))
						end
					end
					Properties = nil

					-- Wait for tween finish
					WaitingForFloat = true
					local Elapsed = 0
					local Time = Info.Time or 0
					while WaitingForFloat == true and Elapsed < Time do
						Elapsed += RunService.Heartbeat:Wait()
					end
					Info = nil

					-- If floating hasn't been toggled off yet, maintain the force
					if WaitingForFloat == true then
						for i, v in pairs(Parts) do
							if Util.IsBasePart(v) then
								if WaitingForFloat == true then
									FloatingForces[v] = Util.CreateInstance("BodyVelocity", {
										Velocity = FloatVelocity,
										Name = "FloatVelocity",
										Parent = v
									})
								else
									break
								end
							end
						end
					end
					
					for i, v in pairs(FloatTweens) do
						v:Pause()
						v:Destroy()
					end
					FloatTweens = {}

					WaitingForFloat = false
					FloatVelocity = nil
				end
			end
		else
			-- Stop floating
			WaitingForFloat = false
			
			-- Destroy float forces
			for i, v in pairs(FloatingForces) do
				if Util.IsInstance(v) == true then
					v:Destroy()
				end
			end
		end
	end

	-- Regenerates the player's air and stops when
	-- the air reaches the maximum or if a liquid
	-- is entered again.
	function Obj.Inhale()
		ToggleAirRecovery(true)
	end

	-- Sets if the object will look for bodies in the workspace.
	function Obj.SetWorkspaceUse(IsUsing)
		if IsUsing == true then
			Obj.WorkspaceDescendantAdded = workspace.DescendantAdded:Connect(function(desc)
				HandleLiquidBasePart(desc, true)
			end)

			Obj.WorkspaceDescendantRemoved = workspace.DescendantRemoving:Connect(function(desc)
				HandleLiquidBasePart(desc, false)
			end)

			for i, v in pairs(workspace:GetDescendants()) do
				HandleLiquidBasePart(v, true)
			end
		else
			local DescAdd = Obj.WorkspaceDescendantAdded
			local DescRemove = Obj.WorkspaceDescendantRemoved

			if DescAdd ~= nil then
				DescAdd:Disconnect()
			end

			if DescRemove ~= nil then
				DescRemove:Disconnect()
			end

			DescAdd, DescRemove = nil, nil
		end
	end

	-- How much air the player has.
	Obj.SetProperty("Air", 100, HandleAirSupply)

	-- Fires when a rig enters or exits a liquid.
	-- Parameters:
	-- IsEntering - True if the rig entered the liquid, false if otherwise.
	-- Liquid - The adapter entered.
	Obj.RigEntryChanged = nil

	-- Fires when the amount of air changes.
	-- Parameters:
	-- Air: number - Amount of oxygen left.
	Obj.AirChanged = nil

	-- How much air the player has.
	Obj.SetProperty("Air", Obj.MaxAir, HandleAirSupply)

	-- The name of the rig that interacts with the liquids.
	Obj.SetProperty("InteractingRig", "Head", RefreshCharValues)

	-- Connect internal events.
	Obj.OnDisposal = function()
		-- Destroy/forget stuff.
		Obj.SetWorkspaceUse(false)
		Obj.ToggleFloating(false)
		ToggleForce(false)
		Forces = nil

		-- Dispose all adapters
		for i, v in pairs(Liquids) do
			ToggleLiquidRegistry(i, false)
		end

		-- Stop listening to input.
		ObjInput.Dispose()

		-- De-register all liquid bodies.
		for i, v in pairs(Liquids) do
			ToggleLiquidRegistry(i, false)
		end
	end

	ObjCharAdapter.Loaded = function(Parts)
		Obj.Air = Obj.MaxAir
		CharObjects = Parts
		RefreshCharValues()
	end

	-- Swimming input handler
	ObjInput.DirectionChanged = function(Direction)
		MoveSwimmer(Direction)
		--print("Direction changed:", Direction)
	end

	-- Float if the player drowned.
	ObjCharAdapter.OnDeath = function()
		ObjInput.IsSinkingInput = false
		MoveSwimmer(nil)
		if Obj.CurrentBody ~= nil then
			Obj.ToggleFloating(true)
		end
	end

	RefreshCharValues()
	ObjInput.ToggleSwimmingInput(true)

	return Obj
end

return Swimmer]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eb3</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX4588566DC59849A5A2342895600016FB">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">LiquidAdapter</string>
							<string name="ScriptGuid">{3FADA75F-289C-4FF0-99EF-413866B30FEC}</string>
							<ProtectedString name="Source"><![CDATA[-- This module provides an object that turns a BasePart
-- into a liquid body.
-- For best results, this should be on the client.

-- By udev2192

local RunService = game:GetService("RunService")
local Collections = game:GetService("CollectionService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local LiquidAdapter = {}
local AwaitingDisposal = {} -- LiquidAdapters that get disposed when Parent = nil.

local DestroyListener = nil
local WSCache = nil -- Workspace cache folder for this module.

LiquidAdapter.CollectionId = "LiquidAdapterParts"
LiquidAdapter.WorkspaceCacheName = "LiquidWSCache"

-- The default liquid state.
LiquidAdapter.DefaultLiquidState = "water"

LiquidAdapter.DisplayYSize = 0.01
LiquidAdapter.DisplayTransparency = 0.5
LiquidAdapter.DisplayPartName = "LiquidDisplay"

local function IsTableBlank(Table)
	for i, v in pairs(Table) do
		-- Return true since if this runs once, it's not blank.
		return false
	end
	
	-- Otherwise, return true
	return true
end

-- Toggles Adapter disposal on part removal.
local function ToggleRemovalWait(Adapter, IsWaiting)
	local Part = Adapter.GetBodyPart()

	if IsWaiting == true then
		AwaitingDisposal[Part] = Adapter
	else
		AwaitingDisposal[Part] = nil
	end
end

-- Toggles the CollectionService listener for Instance removal.
local function ToggleRemoveListener(IsActivated)
	if IsActivated == true then
		-- Disconnect the previous destroy listener, just in case.
		ToggleRemoveListener(false)

		-- Connect.
		DestroyListener = Collections:GetInstanceRemovedSignal(LiquidAdapter.CollectionId):Connect(function(inst)
			local Adapter = AwaitingDisposal[inst]

			-- Dispose on removal.
			if Adapter ~= nil then
				Adapter.Dispose()
			end

			Adapter = nil
		end)
	else
		if DestroyListener ~= nil then
			DestroyListener:Disconnect()
		end

		DestroyListener = nil
	end
end

local function ToggleWorkspaceCache(Enabled)
	if Enabled == true then
		WSCache = Util.CreateInstance("Folder", {
			Name = LiquidAdapter.WorkspaceCacheName,
			Parent = workspace
		})
	else
		if Util.IsInstance(WSCache) then
			WSCache:Destroy()
			WSCache = nil
		end
	end
end

ToggleRemoveListener(true)
ToggleWorkspaceCache(true)

function LiquidAdapter.New(Part)
	assert(Util.IsBasePart(Part), "Argument 1 must be a BasePart.")

	local Obj = Object.New("LiquidAdapter")
	local Interacting = {}
	local DisplayRunner = nil
	local DisplayPart = nil

	-- So EntryStatusChanged only fires on change
	-- for each specific part.
	local RecordedIsInside = {}
	
	Obj.StateChangeEvent = nil
	Obj.FrameEvent = nil
	Obj.StateId = "State"
	Obj.StateInstance = Part:FindFirstChild(Obj.StateId)
	
	-- Current water state
	Obj.State = LiquidAdapter.DefaultLiquidState

	-- Toggles the RunService.Heartbeat listener.
	local function ToggleRunEvent(Enabled)
		if Enabled == true then
			Obj.FrameEvent = RunService.Heartbeat:Connect(function()
				-- Do "is inside" checks for each part.
				for i, v in pairs(Interacting) do
					local IsInside = Util.IsInBasePart(v, Part)
					
					if RecordedIsInside[v] ~= IsInside then
						RecordedIsInside[v] = IsInside

						-- Fire the callback.
						Object.FireCallback(Obj.EntryStatusChanged, v, IsInside)
					end
				end
			end)
		else
			-- Disconnect the event.
			local FrameEvent = Obj.FrameEvent
			if FrameEvent ~= nil then
				FrameEvent:Disconnect()
			end

			Obj.FrameEvent = nil
			FrameEvent = nil
		end
	end

	-- Sets if the specified part's entry is listened to.
	local function SetIsInsideEvent(InteractingPart, Enabled)
		if Enabled == true then
			Interacting[InteractingPart] = InteractingPart
		else
			Interacting[InteractingPart] = nil
		end
		
		-- Connect when there's an interacting part,
		-- and disconnect when there are none.
		if IsTableBlank(Interacting) == true then
			ToggleRunEvent(false)
		else
			ToggleRunEvent(true)
		end
	end
	
	local function AdaptStateChanged(StringVal, Enabled)
		if StringVal ~= nil and Enabled == true then
			-- Do disconection, just in case.
			AdaptStateChanged(nil, false)
			
			-- Reconnect.
			Obj.State = StringVal.Value
			Obj.StateChangedEvent = StringVal.Changed:Connect(function(val)
				Obj.State = val
			end)
		else
			local ChangeEvent = Obj.StateChangedEvent
			if ChangeEvent ~= nil then
				ChangeEvent:Disconnect()
			end
			
			Obj.StateChangedEvent = nil
			ChangeEvent = nil
		end
	end
	
	local function HandleStateVal(inst, Enabled)
		if Util.IsInstance(inst) and inst:IsA("StringValue") then
			if inst.Name == Obj.StateId and Enabled == true then
				if Enabled == true then
					Obj.StateInstance = inst
					AdaptStateChanged(inst, true)
				else
					AdaptStateChanged(inst, false)
					Obj.StateInstance = nil
				end
			end
		end
	end
	
	-- Refreshes the display part.
	local function UpdateDisplay()
		local DisplayPartRef = DisplayPart
		if DisplayPartRef ~= nil then
			local PartSize = Part.Size
			
			DisplayPart.CFrame = Part.CFrame + (Part.Size / 2)
			DisplayPart.Size = Vector3.new(PartSize.X, LiquidAdapter.DisplayYSize, PartSize.Z)
			DisplayPartRef.Color = Part.Color
			DisplayPartRef.Material = Part.Material
			
			PartSize = nil
		end
		
		DisplayPartRef = nil
	end

	-- Sets the part that can interact with the liquid body.
	function Obj.SetInteractingPart(Other, Enabled)
		assert(Util.IsInstance(Other) and (Util.IsBasePart(Other) or Other:IsA("Camera")), "Argument 1 must be a BasePart or a Camera")

		SetIsInsideEvent(Other, Enabled)
	end
	
	-- Sets if the water body's dimensions are displayed via an overlay at the top.
	function Obj.SetTopDisplay(Enabled)
		if Enabled == true then
			-- Disconnect previous connections
			Obj.SetTopDisplay(false)
			
			-- Create the display part
			DisplayPart = Instance.new("Part")
			DisplayPart.Anchored = true
			DisplayPart.CanCollide = false
			DisplayPart.Transparency = LiquidAdapter.DisplayTransparency
			DisplayPart.Name = LiquidAdapter.DisplayPartName
			DisplayPart.Parent = WSCache
			
			-- Reconnect the top display
			DisplayRunner = RunService.Heartbeat:Connect(UpdateDisplay)
		else
			if DisplayRunner ~= nil then
				DisplayRunner:Disconnect()
				DisplayRunner = nil
			end
			
			if DisplayPart ~= nil then
				DisplayPart:Destroy()
				DisplayPart = nil
			end
		end
	end

	-- Returns the part associated with the adapter.
	function Obj.GetBodyPart()
		return Part
	end

	-- Sets if the object disposes itself once the water body is
	-- removed from the DataModel, which is when Parent = nil.
	Obj.SetProperty("DisposeOnDestroy", true, function(val)
		ToggleRemovalWait(Obj, val)
	end)

	-- Callback that fires when the interacting part
	-- enters or exits the liquid body.
	-- Paramters:
	-- Part - The instance that had its entry status changed.
	-- IsInside - If the interacting part is now inside the body.
	Obj.EntryStatusChanged = nil
	
	Obj.OnDisposal = function()
		-- Disconnect all interacting parts
		for i, v in pairs(Interacting) do
			Obj.SetInteractingPart(v, false)
		end
		
		Obj.SetTopDisplay(false)
	end
	
	HandleStateVal(Obj.StateInstance, true)
	
	-- Connect to state instance add/remove
	Obj.StateAdded = Part.ChildAdded:Connect(function(c)
		HandleStateVal(c, true)
	end)
	Obj.StateRemove = Part.ChildRemoved:Connect(function(c)
		HandleStateVal(c, false)
	end)

	return Obj
end

return LiquidAdapter]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eb4</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX552209C8E02447FDA449D0B3F2F0F83D">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">LiquidEntry</string>
							<string name="ScriptGuid">{5B9CFCEA-E3E1-4BAC-95BC-2FFD4D10E062}</string>
							<ProtectedString name="Source"><![CDATA[-- Provides an object that handles liquid entry (as a group).
-- By udev2192

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local LiquidAdapter = require(script.Parent:WaitForChild("LiquidAdapter"))

local LiquidEntry = {}
local CFRAME_PROPERTY_NAME = "CFrame"

-- Checks if the specified object has the CFrame property.
local function HasCFrame(Obj)
	return Util.IsInstance(Obj) and Util.IsProperty(Obj, CFRAME_PROPERTY_NAME)
end

function LiquidEntry.New()
	local Obj = Object.New("LiquidEntryHandler")
	local Interacting = {} -- Table of interacting parts
	local ActiveBodies = {}
	local CurrentBodies = {}
	local Registered = {} -- Registered liquid adapters
	
	-- Handles body entry internally.
	local function HandleEntry(Part, Body, Entered)
		-- Check if the interacting part is registered
		if typeof(ActiveBodies[Part]) == "table" then
			-- Fire the signal for the most recent body that was entered/exited
			if Entered == true then
				table.insert(ActiveBodies[Part], Body)
			else
				local Index = table.find(ActiveBodies[Part], Body)
				if Index ~= nil then
					table.remove(ActiveBodies[Part], Index)
				end
			end
		end
	end
	
	-- Retoggles for all registered bodies
	local function TogglePartInteraction(Part, IsInteracting)
		for i, v in pairs(Registered) do
			v.SetInteractingPart(Part, IsInteracting)
		end
	end
	
	function Obj.AddInteractingPart(Part)
		assert(HasCFrame(Part), "The object in Argument 1 must have the CFrame property.")
		
		table.insert(Interacting, Part)
		ActiveBodies[Part] = {}
		
		TogglePartInteraction(Part, true)
	end
	
	function Obj.RemoveInteractingPart(Part)
		TogglePartInteraction(Part, false)
		
		local Index = table.find(Interacting, Part)
		
		if Index ~= nil then
			table.remove(Interacting, Index)
		end
		
		ActiveBodies[Part] = nil
		Index = nil
	end
	
	function Obj.DisconnectAllInteractions()
		for i, v in pairs(Interacting) do
			Obj.RemoveInteractingPart(v)
		end
	end
	
	-- Registers/deregisters a liquid BasePart.
	function Obj.ToggleLiquidRegistry(Body, IsRegistered)
		if IsRegistered == true then
			-- Register if not already registered
			if Registered[Body] == nil then
				local Adapter = LiquidAdapter.New(Body)		
				Registered[Body] = Adapter
				for i, v in pairs(Interacting) do
					Adapter.SetInteractingPart(v)
				end
				--print("a")
				Adapter.EntryStatusChanged = function(Part, Entered)
					--print("b")
					if Util.IsInstance(Part) then
						--print("c")
						HandleEntry(Part, Adapter, Entered)
					end
				end
			end
		else
			-- De-register
			local Adapter = Registered[Body]
			if Adapter ~= nil then
				Adapter.Dispose()
			end

			Registered[Body] = nil
			Adapter = nil
		end
	end
	
	function Obj.RemoveAllLiquids()
		for i, v in pairs(Registered) do
			Obj.ToggleLiquidRegistry(i, false)
		end
	end
	
	Obj.BodyEntryChanged = Signal.New()
	
	Obj.OnDisposal = function()
		Obj.DisconnectAllInteractions()
		Obj.RemoveAllLiquids()
	end
end

return LiquidEntry]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eb5</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX9B14647F9FD342B0B48B8ECA4C21D962">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">BlurScreen</string>
						<string name="ScriptGuid">{412F9A2D-DDD3-42A0-8A37-4D0501F89489}</string>
						<ProtectedString name="Source"><![CDATA[-- Provides an object that displays a blur screen.
-- By udev2192

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local ORIGINAL_RESPAWN_TIME = Players.RespawnTime
--local DEFAULT_BLUR_COLOR = Color3.new(1, 1, 1)

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local Adapters = RepModules:WaitForChild("Adapters")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Runtime = require(UtilRepModules:WaitForChild("Runtime"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local DeathFX = {}
DeathFX.DefaultTweenInfo = TweenInfo.new(math.min(0.5, ORIGINAL_RESPAWN_TIME), Enum.EasingStyle.Linear, Enum.EasingDirection.Out)

function DeathFX.New()
	local Obj = Object.New("BlurScreen")
	local IsFadingIn = false
	
	Obj.TweenInfo = DeathFX.DefaultTweenInfo
	Obj.FadeInAfter = ORIGINAL_RESPAWN_TIME - Obj.TweenInfo.Time - 0.1
	--Obj.Color = DEFAULT_BLUR_COLOR
	
	Obj.Blur = Util.CreateInstance("BlurEffect", {
		Enabled = false,
		Size = 0
	})
	--Obj.ColorCorrection = Util.CreateInstance("ColorCorrectionEffect", {
	--	Enabled = false,
	--	TintColor = Obj.Color,
	--	Brightness = 0
	--})
	Obj.Frame = Util.CreateInstance("Frame", {
		Visible = false,
		
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(1, 0, 1, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),
		
		BackgroundTransparency = 1,
		BackgroundColor3 = Color3.fromRGB(0, 0, 0),
		BorderSizePixel = 0,
		
		ZIndex = 1
	})

	-- Sets the parent property of the blur effect instances
	-- to the one specified.
	--function Obj.SetParent(Inst)
	--	local Blur = Obj.Blur
	--	local ColorCorrection = Obj.ColorCorrection

	--	if Blur ~= nil and ColorCorrection ~= nil then
	--		Blur.Parent = Inst
	--		ColorCorrection.Parent = Inst
	--	end
	--end

	-- Fades in the blur screen.
	function Obj.FadeIn()
		local Blur = Obj.Blur
		local Frame = Obj.Frame
		--local ColorCorrection = Obj.ColorCorrection

		if Blur ~= nil and Frame ~= nil then
			IsFadingIn = true
			Blur.Enabled = true
			Frame.Visible = true
			
			local ti = Obj.TweenInfo
			Util.Tween(Blur, ti, {Size = 64})
			--Util.Tween(ColorCorrection, ti, {Brightness = 1})
			Util.Tween(Frame, ti, {BackgroundTransparency = 0})
			ti = nil
		end
	end

	-- Fades out the blur screen.
	function Obj.FadeOut()
		local Blur = Obj.Blur
		local Frame = Obj.Frame

		if Blur ~= nil and Frame ~= nil then
			IsFadingIn = false
			
			--ColorCorrection.TintColor = Obj.Color
			local ti = Obj.TweenInfo
			Util.Tween(Blur, ti, {Size = 0})
			--Util.Tween(ColorCorrection, ti, {Brightness = 0})
			Util.Tween(Frame, ti, {BackgroundTransparency = 1})
			
			-- Wait before disabling so the animation can finish
			Runtime.WaitForDur(ti.Time)
			ti = nil
			
			-- Disable FX
			if IsFadingIn == false then
				Blur.Enabled = false
				Frame.Visible = false
			end
		end
	end
	
	-- Initialize
	Obj.SetInstanceDestroy(true)

	return Obj
end

return DeathFX]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eb6</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX30A34C48B5E34B16BDD28204BDD4894F">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Movement</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018880</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXB40696E7870643B79B92260BC33BF4AA">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">JumpPad</string>
							<string name="ScriptGuid">{353E3E01-A414-4AD4-94E7-B81842A2CA46}</string>
							<ProtectedString name="Source"><![CDATA[-- Provides a class that launches a player upward when they touch it.
-- By udev2192

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Movement = script.Parent
local BaseMover = require(Movement:WaitForChild("BaseMover"))

local JumpPad = {}

function JumpPad.New(Part, CharAdapter)
	BaseMover.AssertPart(Part, 1)
	
	Part.CanCollide = false
	
	local Mover = BaseMover.New(CharAdapter)
	Mover.Part = Part
	Mover.NextForce = Vector3.new(0, Part:GetAttribute("Power"), 0)
	Mover.ForceDuration = Part:GetAttribute("ForceDuration") or 0
	Mover.SoundId = Part:GetAttribute("SoundId") or Mover.SoundId
	Mover.UseJumpBoost = true
	
	return Mover
end

return JumpPad]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eb7</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXA6549DE4860B442496E57DCCC064BC1D">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MoverFinder</string>
							<string name="ScriptGuid">{C6987448-95FC-4B10-B1AC-C12721B499DF}</string>
							<ProtectedString name="Source"><![CDATA[-- Finds movers using InstanceCollectors and binds them to
-- their corresponding modules
-- By udev2192

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RepModules = ReplicatedStorage:WaitForChild("Modules")

local Adapters = RepModules:WaitForChild("Adapters")
local Utils = RepModules:WaitForChild("Utils")

local Object = require(Utils:WaitForChild("Object"))
local InstanceCollector = require(Adapters:WaitForChild("InstanceCollector"))

local MoverModules = script.Parent

local MoverFinder = {}
MoverFinder.__index = MoverFinder

-- Instance collection prefix.
-- Ex: "_ExampleMover"
MoverFinder.Prefix = "_"

MoverFinder.DefaultSearchInstance = workspace:WaitForChild("Areas")

local function IsPart(Part)
	return typeof(Part) == "Instance" and Part:IsA("Part")
end

-- Constructor
-- Note: Module is the module instance itself
function MoverFinder.New(Name, CharAdapter)
	assert(typeof(Name) == "string", "Argument 1 must be a string.")
	assert(typeof(CharAdapter) == "table", "Argument 2 must be a CharacterAdapter.")
	
	local Mod = MoverModules:WaitForChild(Name, 5)
	
	if typeof(Mod) == "Instance" and Mod:IsA("ModuleScript") then
		Mod = require(Mod)
		
		local Obj = Object.New("MoverFinder")
		local MoverCollector = InstanceCollector.New()
		MoverCollector.SearchId = MoverFinder.Prefix .. Name
		
		local Movers = {}
		
		Obj.NextSearchInstance = MoverFinder.DefaultSearchInstance
		
		-- Dispose()s a single mover.
		function Obj.ClearMover(Part)
			local Mover = Movers[Part]
			
			if Mover ~= nil and Mover.Dispose ~= nil then
				Mover.Dispose()
			end
			
			Movers[Part] = nil
			Mover = nil
		end
		
		-- Garbage collects the found movers.
		function Obj.ClearAllMovers()
			for i, v in pairs(Movers) do
				Obj.ClearMover(v)
			end
		end
		
		-- Searches for the movers.
		function Obj.Search()
			local Keyword = MoverFinder.Prefix .. Name
			MoverCollector.AdaptInstance(Obj.NextSearchInstance)
		end
		
		MoverCollector.InstanceFound = function(Inst)
			if IsPart(Inst) == true then
				-- Add the mover.
				Movers[Inst] = Mod.New(Inst, CharAdapter)
			end
		end
		
		MoverCollector.InstanceRemoved = function(Inst)
			Obj.ClearMover(Inst)
		end
		
		Obj.OnDisposal = function()
			MoverCollector.Dispose()
			MoverCollector = nil
			
			Obj.ClearAllMovers()
			Movers = nil
			
			Mod = nil
		end
		
		return Obj
	else
		Mod = nil
		error("Couldn't find the mover module named:", Name)
	end
end

return MoverFinder]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eb8</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXC79CC05F73944016B278BE1C65E97438">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BaseMover</string>
							<string name="ScriptGuid">{E145EAB2-54D7-49B6-965F-C8B9B40B8F0D}</string>
							<ProtectedString name="Source"><![CDATA[-- Does the internal handling for the movement mechanics.
-- By udev2192

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local Adapters = RepModules:WaitForChild("Adapters")
local UtilRepModules = RepModules:WaitForChild("Utils")

local CharAdapter = require(Adapters:WaitForChild("CharacterAdapter"))
local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))

local ClientPackage = script.Parent.Parent
--local Sound = ClientPackage:WaitForChild("Sound")

--local SoundPlayer = require(Sound:WaitForChild("SoundPlayer"))

local Player = game:GetService("Players").LocalPlayer

local BaseMover = {}
BaseMover.__index = BaseMover

BaseMover.DefaultSoundId = "rbxassetid://9114890978"--"rbxassetid://624706518"

local ZERO_VECTOR3 = Vector3.new(0, 0, 0)
--local GLOBALS_ENABLED = true

--if GLOBALS_ENABLED == true and RunService:IsClient() then
--	-- For static fields.
--	-- This is so multiple require()s of this module
--	-- will return tables with the same
--	-- memory address.
--	BaseMover.__index = BaseMover

--	-- Global character adapter for convienence.
--	BaseMover.CharAdapter = CharAdapter.New(Player)
--end

-- Slightly buggy, ik :/
local function PlaySound(URL, Volume)
	if URL ~= nil and URL ~= "" then
		coroutine.wrap(function()
			local Sound = Instance.new("Sound")
			Sound.SoundId = URL
			Sound.Looped = false
			Sound.Volume = Volume or 0
			Sound.Parent = script
			Sound:Play()
			Sound.Ended:Wait()
			Sound:Destroy()
			Sound = nil
		end)()
	end
end

-- For utility purposes.
function BaseMover.AssertPart(Part, ArgNumber)
	assert(typeof(Part) == "Instance" and Part:IsA("BasePart"), "Argument " .. ArgNumber .. " must be a BasePart.")
end

function BaseMover.New(CharAdapter)
	assert(typeof(CharAdapter) == "table", "Argument 1 must be a CharacterAdapter.")

	local Obj = Object.New("BaseMover")
	local ObjParts = CharAdapter.Parts
	local IsOnCooldown = false
	local IsPreparingLaunch = false
	
	local InteractingRig = nil
	local TouchConnection = nil -- Interacting rig .Touched connection
	local DestroyConnection = nil

	-- Does the cooldown.
	local function DoCooldown()
		local Time = 0
		
		if Obj.DoesForceCooldown == true then
			Time = Obj.ForceDuration
		else
			Time = Obj.CooldownTime
		end
		
		if typeof(Time) == "number" and Time > 0 then
			IsOnCooldown = true

			local Elapsed = 0
			while Obj.CooldownTime ~= nil and Elapsed < Time do
				Elapsed += RunService.Heartbeat:Wait()
			end

			IsOnCooldown = false
		end
	end

	-- Connects to the specified rig's touch.
	local function UseRig(RigName)
		if RigName ~= nil then
			UseRig(nil)

			-- Reconnect touch
			InteractingRig = ObjParts.Hitbox or ObjParts.Character:WaitForChild(RigName)

			if typeof(InteractingRig) == "Instance" and InteractingRig:IsA("BasePart") then
				TouchConnection = InteractingRig.Touched:Connect(function(OtherPart)
					local PartToTouch = Obj.Part
					if PartToTouch == OtherPart then
						--print("Touch")
						Obj.Launch()
					end

					PartToTouch = nil
				end)
			else
				error("Cannot connect rig because", tostring(InteractingRig), "isn't a BasePart.")
			end
		else
			if TouchConnection ~= nil then
				TouchConnection:Disconnect()
			end
			TouchConnection = nil
		end
	end

	-- Character load handler.
	local function OnCharLoad(Parts)
		ObjParts = Parts

		UseRig(Obj.RigName)
	end

	-- The debounce in seconds before the next trigger
	-- of the mover by the character.
	Obj.CooldownTime = 0

	-- Force of the next launch.
	Obj.NextForce = ZERO_VECTOR3

	-- How long, in seconds, to maintain the force of the next launch.
	Obj.ForceDuration = 0

	-- If the CharAdapter's current forces will be cancelled before
	-- applying this mover's force.
	Obj.UseForceOverride = true

	-- The BasePart, that when touched, triggers the force.
	Obj.Part = nil

	-- The sound ID played when the mover is activated.
	Obj.SoundId = BaseMover.DefaultSoundId

	-- The name of the rig that interacts with the humanoid.
	-- Applies if the hitbox isn't found in CharAdapter.
	Obj.RigName = "Hitbox"
	
	-- If the character is given a jump boost when the force is applied.
	Obj.UseJumpBoost = false
	
	-- Multiplies the up force if th next force goes up.
	-- This is mainly for countering workspace.Gravity
	Obj.UpForceMultiplier = 1
	
	-- If the mover uses force duration for cooldown time.
	Obj.DoesForceCooldown = true
	
	-- If the launching is enabled.
	Obj.Enabled = true
	
	-- The volume of the sound played for the mover.
	Obj.SoundVolume = 1
	
	-- Applies the force.
	function Obj.Launch()
		if IsPreparingLaunch == false then
			IsPreparingLaunch = true
			
			if Obj.Enabled == true and IsOnCooldown == false then
				coroutine.wrap(DoCooldown)()

				if Obj.UseForceOverride == true then
					CharAdapter.CancelForces()
				end

				-- Prepare launch force
				if Obj.UseJumpBoost == true then
					local Humanoid = ObjParts.Humanoid
					if typeof(Humanoid) == "Instance" and Humanoid:IsA("Humanoid") then
						Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
					end
				end

				local NextForce = Obj.NextForce

				-- Apply up force multiplier, if going up
				local YForceMultiplier = 1
				if NextForce.Y > 0 then
					YForceMultiplier = Obj.UpForceMultiplier
				end
				NextForce = NextForce * Vector3.new(1, YForceMultiplier, 1)

				-- Launch
				CharAdapter.ApplyForce(NextForce, Obj.ForceDuration)
				Obj.OnLaunch.Fire(NextForce)
				NextForce = nil

				-- Play the sound.
				coroutine.wrap(PlaySound)(Obj.SoundId, Obj.SoundVolume)
				--print("Playing sound", Obj.SoundId)
			end
			
			IsPreparingLaunch = false
		end
	end

	-- Sets if the Dispose() is called when the Part is parented to nil.
	function Obj.SetAutoDispose(IsAuto)
		if IsAuto == true then
			Obj.SetAutoDispose(false)
		else
			if DestroyConnection ~= nil then
				DestroyConnection:Disconnect()
			end
			DestroyConnection = nil
		end
	end
	
	-- Initialize
	if ObjParts.Character ~= nil then
		UseRig(Obj.RigName)
	end
	CharAdapter.LoadedEvent.Connect(OnCharLoad)

	-- Fired when the mover is triggered.
	-- Params:
	-- Velocity - The velocity of the launch.
	Obj.OnLaunch = Signal.New()

	Obj.OnDisposal = function()
		Obj.OnLaunch.DisconnectAll()

		CharAdapter.LoadedEvent.Disconnect(OnCharLoad)
		UseRig(nil)
		InteractingRig = nil

		ObjParts = nil
	end

	return Obj
end

return BaseMover]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eb9</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX9B8FACF8CC4A4DD296032B3312124CD5">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">LaunchRamp</string>
							<string name="ScriptGuid">{3AC9BDB6-295C-4241-96A1-992CF73F04E8}</string>
							<ProtectedString name="Source"><![CDATA[-- Provides a class that launches a player in the ramp's direction when they touch it.
-- By udev2192

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Movement = script.Parent
local BaseMover = require(Movement:WaitForChild("BaseMover"))

local JumpPad = {}

function JumpPad.New(Part, CharAdapter)
	BaseMover.AssertPart(Part, 1)
	
	Part.CanCollide = false
	
	local Mover = BaseMover.New(CharAdapter)
	Mover.Part = Part
	Mover.NextForce = Part.CFrame.LookVector * (Part:GetAttribute("Power") or 1)
	Mover.ForceDuration = Part:GetAttribute("ForceDuration") or 0
	Mover.SoundId = Part:GetAttribute("SoundId") or Mover.SoundId
	Mover.UseJumpBoost = true
	
	return Mover
end

return JumpPad]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eba</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX87D472C5157542ED9B151D69290665C9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ZiplineRunner</string>
						<string name="ScriptGuid">{51DE66DA-48C5-4514-B1B1-B6E42473DF42}</string>
						<ProtectedString name="Source"><![CDATA[-- Runs the zipline package for ziplines in the workspace.
-- By udev2192

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")

local ZiplineService = script.Parent:WaitForChild("ZiplineService")

local Adapters = RepModules:WaitForChild("Adapters")
local Utils = RepModules:WaitForChild("Utils")

local InstAdapter = require(Adapters:WaitForChild("InstanceCollector"))
local Object = require(Utils:WaitForChild("Object"))

local PlayerAdapter = require(ZiplineService:WaitForChild("PlayerAdapter"))
local Zipline = require(ZiplineService:WaitForChild("Zipline"))

local Areas = workspace:WaitForChild("Areas")

local ZipRunner = {}

function ZipRunner.New(Player)
	assert(typeof(Player) == "Instance" and Player:IsA("Player"), "Argument 1 must be a player instance.")
	
	local Obj = Object.New("ZiplineCollector")
	local ZipCollector = InstAdapter.New()
	local ObjPlrAdapter = PlayerAdapter.New(Player)
	
	local Ziplines = {}
	
	-- Toggles zipline registry.
	local function ToggleZiplineRegistry(Inst, Enabled)
		if Enabled == true then
			if typeof(Inst) == "Instance" and Inst:IsA("Model") then
				local Zip = Zipline.New(Inst)
				Ziplines[Inst] = Zip
				Zip.ModelParent = Inst
			end
		else
			local Zip = Ziplines[Inst]
			if Zip ~= nil then
				Zip.Dispose()
			end
			Ziplines[Inst] = nil
			Zip = nil
		end
	end
	
	-- The part of the name to look for when registering a zipline.
	Obj.Keyword = "_Zipline"
	
	-- Disposes all the ziplines.
	function Obj.DisposeAll()
		for i, v in pairs(Ziplines) do
			if v.Dispose ~= nil then
				v.Dispose()
			end
		end
	end
	
	Obj.OnDisposal = function()
		-- Dispose other stuff.
		ZipCollector.Dispose()
		ZipCollector = nil
		
		ObjPlrAdapter.Dispose()
		ObjPlrAdapter = nil
		
		Obj.DisposeAll()
	end
	
	-- Look for ziplines
	ZipCollector.InstanceFound = function(inst)
		ToggleZiplineRegistry(inst, true)
	end
	ZipCollector.InstanceRemoved = function(inst)
		ToggleZiplineRegistry(inst, false)
	end
	ZipCollector.SearchId = Obj.Keyword
	ZipCollector.AdaptInstance(Areas)
end

return ZipRunner]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ec3</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX9F6D80574E6345DF9DC37100993B0A44">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Notifiers</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018882</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX58CB8E1BC17E4167B8D7694A84871056">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Notifier</string>
							<string name="ScriptGuid">{CBD1CA3B-615E-401D-B87E-BFC90EDDCF5C}</string>
							<ProtectedString name="Source"><![CDATA[-- This class lays the foundation of notifications that appear somewhere
-- on the user's screen.
-- This class is used for a group of notifications and handles positioning.

-- By udev2192

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))

local Notifier = {}
local PREFERRED_SIZE_ADDEND = UDim2.new(0.3, 0, 0, 0)

local Abs = math.abs

Notifier.__index = Notifier
Notifier.TypeName = "Notifier"

local function AbsoluteUDim2Value(Udim)
	return UDim2.new(Abs(Udim.X.Scale), Abs(Udim.X.Offset), Abs(Udim.Y.Scale), Abs(Udim.Y.Offset))
end

local function MultiplyUDim2(Udim, Multiplier)
	local ScaleX = Udim.X.Scale * Multiplier
	local OffsetX = Udim.X.Offset * Multiplier
	local ScaleY = Udim.Y.Scale * Multiplier
	local OffsetY = Udim.Y.Offset * Multiplier
	
	return UDim2.new(ScaleX, OffsetX, ScaleY, OffsetY)
end

function Notifier.New()
	local Obj = Object.New(Notifier.TypeName)
	local GuiList = {} -- Gui array
	local TweenFuncs = {}
	
	local NotifFrame = Instance.new("Frame")
	NotifFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	NotifFrame.Size = UDim2.new(1, 0, 1, 0)
	NotifFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	NotifFrame.BackgroundTransparency = 1
	NotifFrame.BorderSizePixel = 0
	NotifFrame.Name = Notifier.TypeName .. "Frame"
	
	-- Starting position where the notifications are created.
	-- Use this point for the start of a tween for the most
	-- recent notification.
	Obj.StartPosition = UDim2.new(0.5, 0, 0.85, 0)
	
	-- How much each notification is "shoved by" on the screen.
	-- This affects the most recent notification too.
	Obj.MovePosition = UDim2.new(0, 0, -0.05, 0)
	
	-- Reference value that indicates the size each notification should be
	-- so that they fit onto a list with equal spacing.
	Obj.PreferredSize = AbsoluteUDim2Value(Obj.MovePosition) + PREFERRED_SIZE_ADDEND
	
	-- Reference number for notification animation time
	Obj.PreferredAnimationTime = 0.25
	
	-- Reference number for notification tweening info
	Obj.PreferredTweenInfo = TweenInfo.new(Obj.PreferredAnimationTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	
	-- Whether or not to destroy instances in GuiList when Dispose() is called.
	Obj.AutoDestroy = true
	
	-- Returns a reference to GuiList.
	function Obj.GetGuiList()
		return GuiList
	end
	
	-- Returns a reference to the Notifier's frame instance.
	function Obj.GetFrame()
		return NotifFrame
	end
	
	-- Sets the notifier frame's parenting instance.
	function Obj.SetParent(Inst)
		NotifFrame.Parent = Inst
	end
	
	-- Sets the Z-Index property of the notifier's frame
	function Obj.SetLayer(Layer)
		NotifFrame.ZIndex = Layer
	end
	
	-- Returns the preferred UDIm2 position of the Gui if it is added
	-- to the group.
	function Obj.GetPosition(Gui)
		local Index = table.find(GuiList, Gui)
		
		if Index ~= nil then
			return Obj.StartPosition + MultiplyUDim2(Obj.MovePosition, Index + 1)
		end
	end
	
	-- Calls the notification GUI animators.
	local function CallGuiAnimators(GuiAffected, IsAppearing)
		for i, v in ipairs(GuiList) do
			local Func = TweenFuncs[v]
			
			if typeof(Func) == "function" then
				-- So the only gui that is animating out is GuiAffected,
				-- if IsApppearing is false
				if v == GuiAffected and IsAppearing == false then
					IsAppearing = false
				else
					IsAppearing = true
				end
				
				coroutine.wrap(Func)(IsAppearing, Obj.GetPosition(v))
			end
			
			Func = nil
		end
	end
	
	-- Binds a function for animating the GUI for the notification.
	-- Function (arg 2) format: function(IsAppearing, Position)
	function Obj.AddAnimatorFunc(Gui, Func)
		TweenFuncs[Gui] = Func
	end
	
	-- Removes a function for animating the GUI for the notification.
	function Obj.RemoveAnimatorFunc(Gui)
		TweenFuncs[Gui] = nil
	end
	
	-- Adds the specified GUI object to the list and returns its
	-- preffered UDim2 position on the list.
	function Obj.Add(Gui)
		local Index = 1
		table.insert(GuiList, Index, Gui)
		
		Gui.Parent = NotifFrame
		
		local PreferredPos = Obj.StartPosition + MultiplyUDim2(Obj.MovePosition, Index)
		Obj.GuiAdded.Fire(Gui, PreferredPos)
		
		CallGuiAnimators(Gui, true)
		
		return PreferredPos
	end
	
	-- Removes the specified GUI from the UI list.
	-- The Gui must be Destroy()ed externally for it to go away.
	function Obj.Remove(Gui)
		local Index = table.find(GuiList, Gui)
		
		if Index ~= nil then			
			-- Remove from the list
			table.remove(GuiList, Index)
			local OutPosition = Obj.StartPosition + MultiplyUDim2(Obj.MovePosition, Index + 2)
			Obj.GuiRemoved.Fire(Gui, OutPosition)
			
			CallGuiAnimators(Gui, false)
			
			-- Call the animator for the notification going out
			local Func = TweenFuncs[Gui]
			if typeof(Func) == "function" then
				coroutine.wrap(Func)(false, OutPosition)
			end
			
			OutPosition, Func = nil, nil
			Obj.RemoveAnimatorFunc(Gui)
		end
	end
	
	-- Fires when a GUI component is added.
	-- Params:
	-- Gui - The GUI instance added.
	-- Position - The preferred UDim2 position of the UI.
	Obj.GuiAdded = Signal.New()
	
	-- Fires when a GUI component is removed.
	-- Params:
	-- Gui - The GUI instance removed.
	-- Position - The preffered UDim2 position to animate to.
	Obj.GuiRemoved = Signal.New()
	
	Obj.OnDisposal = function()
		Obj.GuiAdded.DisconnectAll()
		Obj.GuiRemoved.DisconnectAll()
		
		if Obj.AutoDestroy == true then
			NotifFrame:Destroy()
			NotifFrame = nil
			
			for i, v in pairs(GuiList) do
				if typeof(v) == "Instance" then
					v:Destroy()
				end
			end
		end
		
		TweenFuncs = nil
		GuiList = nil
	end
	
	return Obj
end

return Notifier]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ec4</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXDC3E4B01E4E94A7BB4BA1F15BF275A24">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">TextNotification</string>
							<string name="ScriptGuid">{6D4CDDF5-AFE2-4274-80D7-4FEDEC47CDCE}</string>
							<ProtectedString name="Source"><![CDATA[-- Class for creating a basic text notification.
-- By udev2192

local BaseNotif = require(script.Parent:WaitForChild("BaseNotification"))
local Util = BaseNotif.GetUtils()

local TextNotification = {}
local GRADIENT_ENABLED = true

function TextNotification.New(Notifier, Text)
	local Label = Util.CreateInstance("TextLabel", {
		TextColor3 = Color3.new(1, 1, 1),
		TextStrokeColor3 = Color3.new(0, 0, 0),
		TextTransparency = 1,
		TextStrokeTransparency = 1,
		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		AnchorPoint = Vector2.new(0.5, 0.5),
		Font = Enum.Font.Gotham,
		TextScaled = true,
		Text = Text or ""
	})
	
	if GRADIENT_ENABLED == true then
		BaseNotif.ApplyGradient(Label)
	end
	
	local Notif = BaseNotif.New(Notifier, Label)
	Notif.TweenInfo = Notifier.PreferredTweenInfo
	Notif.ApplyDimensions(Label)
	
	-- Notification animator function
	Notif.SetAnimator(function(IsAppearing, Pos)
		local Transparency = 0
		if IsAppearing == true then
			Transparency = 0
		else
			Transparency = 1
		end
		
		local Info = Notif.TweenInfo or TweenInfo.new()
		local Tween = Util.Tween(Label, Info, {TextTransparency = Transparency, TextStrokeTransparency = Transparency, Position = Pos})
		
		if IsAppearing == false then
			BaseNotif.WaitForDur(Info.Time)
			Label:Destroy()
			Label = nil
		end
	end)
	
	return Notif
end

return TextNotification]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ec5</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX69445E58381A4B30BF781E452F5B8413">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BaseNotification</string>
							<string name="ScriptGuid">{7DDEEB33-1FBC-43BC-B381-25EA21F2C788}</string>
							<ProtectedString name="Source"><![CDATA[-- This module provides a class that lays the foundation of a notification.
-- This is to be used with the Notifier class.

-- By udev2192

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local Notifier = require(script.Parent:WaitForChild("Notifier"))

local BaseNotification = {}
local NotifierType = Notifier.TypeName

-- Color sequence from top to bottom
local DEFAULT_COLOR_SEQUENCE = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1, Color3.fromRGB(180, 180, 180))})

-- Convienence function for getting the utilities.
function BaseNotification.GetUtils()
	return Util
end

-- Convience wait function:
-- Waits for a specified amount of time in seconds.
-- Returns the time difference between the desired wait
-- and the actual wait.
function BaseNotification.WaitForDur(Duration)
	assert(typeof(Duration) == "number", "Argument 1 must be a number.")

	local Elapsed = 0
	while (Elapsed < Duration) do
		Elapsed += RunService.Heartbeat:Wait()
	end

	return Elapsed - Duration
end

-- Utility function for applying a gradient.
function BaseNotification.ApplyGradient(Gui, ColorSeq)
	assert(typeof(Gui) == "Instance", "Argument 1 must be an instance")
	
	ColorSeq = ColorSeq or DEFAULT_COLOR_SEQUENCE
	
	local Gradient = Util.CreateInstance("UIGradient", {
		Color = ColorSeq,
		Rotation = 90,
		Parent = Gui
	})
	
	return Gradient
end

function BaseNotification.New(NotifierObj, Gui)
	assert(Object.MatchesType(NotifierType, NotifierObj), "Argument 1 must be of type " .. NotifierType)
	assert(typeof(Gui) == "Instance" and Gui:IsA("GuiObject"), "Argument 2 must be a GuiObject")
	
	local Obj = Object.New("BaseNotification")
	
	-- Whether to destroy the Gui when Dispose() is called.
	Obj.AutoDestroyGui = false
	
	-- Applies the dimensions based off the Notifier's dimension properties.
	function Obj.ApplyDimensions()
		Gui.Size = NotifierObj.PreferredSize
		Gui.Position = NotifierObj.StartPosition
	end
	
	-- Returns a reference to the GuiObject associated.
	function Obj.GetGui()
		return Gui
	end
	
	-- Sets the animation/tweening function.
	-- Put nil as argument 1 to remove the function.
	function Obj.SetAnimator(Func)
		if typeof(Func) == "function" then
			NotifierObj.AddAnimatorFunc(Gui, Func)
		else
			NotifierObj.RemoveAnimatorFunc(Gui)
		end
	end
	
	-- Adds the notification to the Notifier.
	function Obj.Appear()
		NotifierObj.Add(Gui)
	end
	
	-- Use Dispose() to get rid of the notification (and animate it out,
	-- if applicable).
	Obj.OnDisposal = function()
		NotifierObj.Remove(Gui)
		
		-- Hide animation would be completed when this point is reached
		Obj.SetAnimator(nil)
		
		if Obj.AutoDestroyGui == true then
			Gui:Destroy()
		end
	end
	
	return Obj
end

return BaseNotification]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ec6</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX408766E84B9344F4A6719A28613495AB">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">NotifierToolkit</string>
							<string name="ScriptGuid">{8BC2AB82-27BD-4EA9-9C6D-890E385F634C}</string>
							<ProtectedString name="Source"><![CDATA[-- Extends the Notfier class to provide some utility functions.
-- By udev2192

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local UtilRepModules = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Utils")

local Runtime = require(UtilRepModules:WaitForChild("Runtime"))

local Notifiers = script.Parent

local Notifier = require(Notifiers:WaitForChild("Notifier"))
local TextNotif = require(Notifiers:WaitForChild("TextNotification"))

local NotifierToolkit = {}

NotifierToolkit.__index = NotifierToolkit

function NotifierToolkit.New()
	local Toolkit = Notifier.New()
	
	-- Notifies notifications through a function styled like
	-- the one from Flood Escape 2 by Crazyblox Games.
	function Toolkit.NotifyText(Text, Color, Lifetime)
		Lifetime = Lifetime or 4
		
		local Notif = TextNotif.New(Toolkit, Text)

		local Gui = Notif.GetGui()
		Gui.TextColor3 = Color or Gui.TextColor3

		Toolkit.Add(Gui)
		
		coroutine.wrap(function()
			Runtime.WaitForDur(Lifetime)
			Notif.Dispose()
		end)()
		
		return Notif
	end
	
	return Toolkit
end

return NotifierToolkit]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ec7</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX48D426E04D6F47BBB3358F4F79A0893B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MeterNotification</string>
							<string name="ScriptGuid">{820F4283-EBD1-45B8-A0B9-390394C08A07}</string>
							<ProtectedString name="Source"><![CDATA[-- Provides a GUi that appears as a notification that indicates a value with a limit
-- By udev2192

local BaseNotif = require(script.Parent:WaitForChild("BaseNotification"))
local Util = BaseNotif.GetUtils()

local MeterNotification = {}
local ZERO_UDIM2 = UDim2.new(0, 0, 0, 0)
local DEFAULT_COLOR = Color3.fromRGB(100, 100, 100)
local DEFAULT_TWEEN_INFO = TweenInfo.new()
local GRADIENTS_ENABLED = true
local DEFAULT_METER_NAME = "Meter"

MeterNotification.TypeName = "MeterNotification"

-- Utility function for creating a UI frame
local function MakeFrame(Color, FrameSize)
	return Util.CreateInstance("Frame", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = FrameSize or ZERO_UDIM2,
		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		BackgroundColor3 = Color or DEFAULT_COLOR,
		ClipsDescendants = true,
		Name = MeterNotification.TypeName
	})
end

function MeterNotification.New(Notifier, MeterName, BarColor, BackgroundColor, TextColor)
	-- Create the meter frame
	local Frame = MakeFrame(BarColor, Notifier.PreferredSize)
	
	-- This is the progress bar
	local Bar = MakeFrame(BackgroundColor, UDim2.new(0, 0, 1, 0))
	Bar.Position = UDim2.new(0.5, 0, 0.5, 0)
	Bar.Parent = Frame
	
	local TextBar = Util.CreateInstance("TextLabel", {
		TextColor3 = TextColor or Color3.fromRGB(255, 255, 255),
		TextStrokeColor3 = Color3.new(0, 0, 0),
		TextTransparency = 1,
		TextStrokeTransparency = 1,
		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(1, 0, 1, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),
		Font = Enum.Font.Gotham,
		TextScaled = true,
		Text = DEFAULT_METER_NAME,
		Parent = Frame
	})
	
	--local Corner = Util.CreateInstance("UICorner", {
	--	CornerRadius = UDim.new(1, 0),
	--	Parent = Frame
	--})
	
	--local BarCorner = Util.CreateInstance("UICorner", {
	--	CornerRadius = UDim.new(1, 0),
	--	Parent = Bar
	--})
	
	Util.CreateInstance("UIGradient", {
		Transparency = NumberSequence.new({
			NumberSequenceKeypoint.new(0, 1),
			NumberSequenceKeypoint.new(0.25, 0.25),
			NumberSequenceKeypoint.new(0.75, 0.25),
			NumberSequenceKeypoint.new(1, 1)
		}),
		
		Parent = Bar
	})
	
	local Obj = BaseNotif.New(Notifier, Frame)
	
	-- Updates the meter
	local function UpdateMeter()
		local Name = Obj.MeterName or DEFAULT_METER_NAME
		local NumValue = Obj.Value or 0
		local MaxValue = Obj.MaxValue or 1
		
		local Size = 0 -- Percentage
		
		if MaxValue > 0 then
			Size = NumValue / MaxValue
		else
			-- To avoid problems with dividing by 0
			Size = 0
		end
		
		-- Round if necessary
		if Obj.IsRounding == true then
			NumValue = math.floor(NumValue)
			MaxValue = math.floor(MaxValue)
		end
		
		-- Update visuals
		TextBar.Text = Name .. ": " .. NumValue .. "/" .. MaxValue
		Bar.Size = UDim2.new(Size, 0, 1, 0)
		--Bar.Position = UDim2.new(Size / 2, 0, 0.5, 0)
		
		Name, NumValue, MaxValue, Size = nil, nil, nil, nil
	end
	
	-- Sets the corner radius of the frame
	function Obj.SetCornerRadius(udim)
		if Corner ~= nil then
			Corner.CornerRadius = udim
		end
		
		if BarCorner ~= nil then
			BarCorner.CornerRadius = udim
		end
	end
	
	-- Sets the color of the progress bar
	function Obj.SetProgressColor(color)
		if Bar ~= nil then
			Bar.BackgroundColor3 = color
		end
	end
	
	-- Sets the color of the background bar
	function Obj.SetBackgroundColor(color)
		if Frame ~= nil then
			Frame.BackgroundColor3 = color
		end
	end
	
	-- Sets the color of the text
	function Obj.SetTextColor(color)
		if TextBar ~= nil then
			TextBar.TextColor3 = color
		end
	end
	
	-- The name of the meter
	Obj.SetProperty("MeterName", MeterName or DEFAULT_METER_NAME, UpdateMeter)
	
	-- The number value associated with the meter
	Obj.SetProperty("Value", 0, UpdateMeter)
	
	-- The maximum number value associated with the meter
	Obj.SetProperty("MaxValue", 1, UpdateMeter)
	
	-- If numbers displayed are rounded
	Obj.SetProperty("IsRounding", true, UpdateMeter)
	
	-- Tweening info for animating the meter
	Obj.TweenInfo = Notifier.PreferredTweenInfo
	
	Obj.ApplyDimensions()
	
	if GRADIENTS_ENABLED == true then
		BaseNotif.ApplyGradient(Bar)
		BaseNotif.ApplyGradient(TextBar)
	end
	
	-- Meter animator
	Obj.SetAnimator(function(IsAppearing, Pos)
		local Transparency = 0
		
		if IsAppearing == true then
			Transparency = 0
		else
			Transparency = 1
		end
		
		local Info = Obj.TweenInfo or DEFAULT_TWEEN_INFO
		
		-- Animate
		Util.Tween(Frame, Info, {Position = Pos})
		Util.Tween(Bar, Info, {BackgroundTransparency = Transparency})
		Util.Tween(TextBar, Info, {TextStrokeTransparency = Transparency, TextTransparency = Transparency})
		
		if IsAppearing == false then
			-- Destroy GUI after the animation completes
			BaseNotif.WaitForDur(Info.Time)
			
			Frame:Destroy() -- Other UI components of the meter get destroyed here too
			Corner, TextBar, Bar, Frame, BarCorner = nil, nil, nil, nil, nil
		end
	end)
	
	return Obj
end

return MeterNotification]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ec8</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX9034502C811E4D1981DC24898DB333E1">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Launchers</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018883</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX5B2FD56F34E74551A302469D327BDE44">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Lobby</string>
							<string name="ScriptGuid">{4026C916-4D45-4FAD-95D5-0D27C3479BDF}</string>
							<ProtectedString name="Source"><![CDATA[-- Client launcher for the lobby.
-- By udev2192

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local Adapters = RepModules:WaitForChild("Adapters")
local GuiModules = RepModules:WaitForChild("Gui")
local Replicators = RepModules:WaitForChild("Replicators")
local Sound = RepModules:WaitForChild("Sound")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Package = script.Parent.Parent

local CameraFX = Package:WaitForChild("CameraFX")
local Liquids = Package:WaitForChild("Liquids")
local Movement = Package:WaitForChild("Movement")
local Notifiers = Package:WaitForChild("Notifiers")
--local PartCutters = Package:WaitForChild("PartCutters")
local Runners = Package:WaitForChild("Runners")
local Stands = Package:WaitForChild("Stands")

local GuiBuilds = Package:WaitForChild("GuiBuilds")
local GuiComponents = GuiModules:WaitForChild("Components")

local BaseLauncher = require(UtilRepModules:WaitForChild("BaseLauncher"))
local ObjectGroup = require(UtilRepModules:WaitForChild("ObjectGroup"))
local Runtime = require(UtilRepModules:WaitForChild("Runtime"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local AreaAdapter = require(Adapters:WaitForChild("AreaAdapter"))
local CharAdapter = require(Adapters:WaitForChild("CharacterAdapter"))
local Hitbox = require(Adapters:WaitForChild("Hitbox"))

local BaseCameraFX = require(CameraFX:WaitForChild("BaseCameraFX"))
local Deathcam = require(CameraFX:WaitForChild("Deathcam"))

local BrowserLib = require(GuiModules:WaitForChild("BrowserLib"))

local Healthbar = require(GuiBuilds:WaitForChild("Healthbar"))
--local IntroText = require(GuiBuilds:WaitForChild("IntroText"))
local RandomTextwall1 = require(GuiBuilds:WaitForChild("RandomTextwall1"))
local SpeedTestMenu = require(GuiBuilds:WaitForChild("SpeedTestMenu"))

local GridMenu = require(GuiComponents:WaitForChild("GridMenu"))
local IconButton = require(GuiComponents:WaitForChild("IconButton"))
local MenuSet = require(GuiComponents:WaitForChild("MenuSet"))
local NpcDialog = require(GuiComponents:WaitForChild("NpcDialog"))

local MoverFinder = require(Movement:WaitForChild("MoverFinder"))

local NotifierToolkit = require(Notifiers:WaitForChild("NotifierToolkit"))
local Meter = require(Notifiers:WaitForChild("MeterNotification"))

local Portals = require(Runners:WaitForChild("Portals"))

local DestroyableStand = require(Stands:WaitForChild("DestroyableStand"))
local MultiplayerStand = require(Stands:WaitForChild("MultiplayerStand"))

local DeathFX = require(Package:WaitForChild("DeathFX"))
--local InteractiveRunner = require(Package:WaitForChild("InteractiveRunner"))
local ZipRunner = require(Package:WaitForChild("ZiplineRunner"))

local MusicPlayer = require(Sound:WaitForChild("MusicPlayer"))
local Swimmer = require(Liquids:WaitForChild("Swimmer"))
--local PartCutFinder = require(PartCutters:WaitForChild("CuttableFinder"))

--local Areas = workspace:WaitForChild("Areas")

local Launcher = {}

-- Starting area name.
local STARTING_AREA_NAME = "Lobby"

function Launcher.New()
	local Obj = BaseLauncher.New()
	Obj.InitializedAt = 0
	Obj.ClientObjects = ObjectGroup.New()
	Obj.MoverNames = {"JumpPad", "LaunchRamp"}

	local Player = Players.LocalPlayer
	local PlayerGui = Player:WaitForChild("PlayerGui")
	local Camera = workspace.CurrentCamera
	
	Obj.BindToShutdown(Obj.ClientObjects.Dispose)

	-- Runs the client stuff.
	Obj.SetStarter(function()
		Obj.InitializedAt = os.time()

		-- Initialize GUI.
		local ScreenGui = Util.CreateInstance("ScreenGui", {
			ResetOnSpawn = false,
			IgnoreGuiInset = true,
			DisplayOrder = 3,
			
			-- Important for proper Z-Index behavior
			ZIndexBehavior = Enum.ZIndexBehavior.Sibling,
			
			Name = "MainGui",
			Parent = PlayerGui
		})

		-- Create a folder for the ui.
		local MainUi = Util.CreateInstance("Folder", {
			Name = "MainGui",
			Parent = ScreenGui
		})

		-- Create the loading ui
		local LoadingText = BrowserLib.New("TextLabel", {
			Size = UDim2.new(0.1, 0, 0.025, 0),
			Position = UDim2.new(0.1, 0, 0.95, 0),
			TextTransparency = 0.5,
			TextStrokeTransparency = 0.5,
			Font = Enum.Font.Gotham,
			TextXAlignment = Enum.TextXAlignment.Left,
			Text = "LOADING",
			Parent = MainUi
		})

		-- Initialize notifications
		local NotifKit = NotifierToolkit.New()
		NotifKit.SetParent(MainUi)
		
		local PortalRunner = Portals.New(ScreenGui, NotifKit)
		local MapLoader = PortalRunner.GetLoader()
		
		-- Initialize the player's character adapter.
		local LocalCharAdapter = CharAdapter.New(Player)

		-- Get the lobby's area adapter
		local LobbyAdapter = AreaAdapter.New(workspace:WaitForChild(STARTING_AREA_NAME))
		
		--local TestHitbox = Hitbox.New()
		
		--print("c")
		local LobbyBGMSound = LobbyAdapter.GetInfo("MainBGM")
		--print("d")
		local LobbyBGM = MapLoader.MusicPlayer--MusicPlayer.New()
		
		local BGMAttributionText = BrowserLib.New("TextLabel", {
			Size = UDim2.new(0.5, 0, 0.02, 0),
			Position = UDim2.new(0.5, 0, 0.025, 0),
			TextTransparency = 0.5,
			TextStrokeTransparency = 0.5,
			Font = Enum.Font.Gotham,
			TextXAlignment = Enum.TextXAlignment.Center,
			Text = "",
			ZIndex = 5,
			Parent = MainUi
		})
		
		local function ChangeMusicAttribution(Attribution: string)
			BGMAttributionText.Text = "Now playing: " .. Attribution
			--print("Now playing:", Attribution)
		end
		ChangeMusicAttribution(LobbyBGM.AssetInfo)
		LobbyBGM.AttributionChanged.Connect(ChangeMusicAttribution)
		
		--print("e")
		--LobbyBGM.BindHitbox(TestHitbox)
		--LobbyBGM.MusicMode = MusicPlayer.MusicMode.ByMusicZone
		LobbyBGM.FindMusicZones = true
		LobbyBGM.MainSound = LobbyBGMSound
		
		-- Fade out music on death
		--LocalCharAdapter.DeathEvent.Connect(function()
		--	LobbyBGM.MainSound = nil
		--	LobbyBGM.PlayMusicZones = false
		--end)

		-- Set the lobby lighting.
		LobbyAdapter.UseLighting(true)

		-- Initialize mechanics.
		local ObjSwimmer = Swimmer.New(Player)
		ObjSwimmer.SetWorkspaceUse(true)

		local ObjZipRunner = ZipRunner.New(Player)

		for i, v in pairs(Obj.MoverNames) do
			local Finder = MoverFinder.New(v, LocalCharAdapter)
			Obj.ClientObjects[v] = Finder
			Finder.Search()
			Finder = nil
		end

		-- Initalize cuttable parts.
		--local MainCutFinder = PartCutFinder.New(Areas)
		--MainCutFinder = nil

		-- Initialize death screen.
		local PlrDeathFx = DeathFX.New(LocalCharAdapter)
		--PlrDeathFx.SetParent(Camera)
		PlrDeathFx.Blur.Parent = Camera
		PlrDeathFx.Frame.Parent = MainUi

		--local AirMeter = BrowserLib.New("TextLabel", {
		--	Size = UDim2.new(0.3, 0, 0.05, 0),
		--	Position = UDim2.new(0.5, 0, 0.75, 0),
		--	Font = Enum.Font.Gotham,
		--	Text = "Air: " .. ObjSwimmer.Air .. "/" .. ObjSwimmer.MaxAir,
		--	Name = "AirMeter",
		--	Parent = MainUi
		--})

		-- Initialize meter display
		local AirMeter = nil

		-- Display air meter when needed
		ObjSwimmer.AirChanged = function(Air)
			if Air < ObjSwimmer.MaxAir and Air > 0 then
				if AirMeter == nil then
					AirMeter = Meter.New(NotifKit, "Air")
					AirMeter.SetProgressColor(Color3.fromRGB(89, 197, 255))
					AirMeter.Value = Air
					AirMeter.MaxValue = ObjSwimmer.MaxAir
					AirMeter.Appear()
				end

				AirMeter.Value = Air
				AirMeter.MaxValue = ObjSwimmer.MaxAir
			else
				if AirMeter ~= nil then
					AirMeter.Value = Air
					AirMeter.Dispose()
					AirMeter = nil
				end
			end
		end
		
		-- Portal runner testing
		--print("testing portals")
		
		
		-- Player stand testing
		--print("Testing player pvp stand")
		--local IntensifyBGMTest = "rbxassetid://6460316914"--5567767035" --//1492179112
		--local LocalPlrStand = DestroyableStand.New(LocalCharAdapter)
		----LocalPlrStand.ToggleTouchConnection(true)
		----LocalPlrStand.ToggleMoveRunner(true)
		--LocalPlrStand.LivesChanged.Connect(function(Lives)
		--	if Lives > 0 then
		--		NotifKit.NotifyText(Lives .. " stand lives left")
		--	elseif Lives == 0 then
		--		NotifKit.NotifyText("Your stand has been taken out. Don't die!")
		--		LobbyBGM.FadeToURL(IntensifyBGMTest) -- Music atmosphere test
		--	elseif Lives < 0 then
		--		NotifKit.NotifyText("Resetting stand lives for the sake of testing")
		--		LobbyBGM.MainSound = LobbyBGMSound
		--		LocalPlrStand.Lives = 3
		--	end
		--end)
		
		-- Initialize multiplayer stands
		--print("Starting multiplayer stands")
		--local MultiStand = MultiplayerStand.New()
		--MultiStand.IncludeLocalPlayer = false
		--MultiStand.SetAutomated(true)
		
		-- Hitbox testing
		--local HitboxTesterGui = BrowserLib.New("TextLabel", {
		--	Size = UDim2.new(0.75, 0, 0.1, 0),
		--	Position = UDim2.new(0.5, 0, 0.25, 0),
		--	Font = Enum.Font.Gotham,
		--	Text = "Not touching",
		--	Name = "HitboxTestLabel",
		--	Visible = false,
		--	Parent = MainUi
		--})

		--local HitboxTestParts = workspace:WaitForChild("HitboxTesters")
		--if HitboxTestParts ~= nil then
		--	for i, v in pairs(HitboxTestParts:GetChildren()) do
		--		if v:IsA("BasePart") then
		--			TestHitbox.ConnectPart(v, true)
		--		end
		--	end
		--else
		--	warn("No hitbox testing parts model was found in the Workspace.")
		--end
		--HitboxTestParts = nil

		--TestHitbox.OnHit.Connect(function(Index, HitRegion)
		--	HitboxTesterGui.Text = "Index: " .. tostring(Index) .. "\n HitPosition: " .. tostring(HitRegion.Center) .. "\n HitSize: " .. tostring(HitRegion.Size) .. "\n HitStatus: " .. tostring(HitRegion.Status)
		--end)

		--TestHitbox.OnHitStop.Connect(function()
		--	HitboxTesterGui.Text = "Not touching"
		--end)
		
		-- Healthbar testing
		local MainHealthbar = Healthbar.New(false)
		MainHealthbar.CirclesEnabled = false
		MainHealthbar.ShakeOnHealthLoss = true

		print("Connect test char added")
		local function OnCharSpawn(Char)
			--TestHitbox.BindToPart(nil)
			--LobbyBGM.PlayMusicZones = true
			
			--if LobbyBGM.MainSound ~= LobbyBGMSound then
			--	LobbyBGM.MainSound = LobbyBGMSound
			--end
			
			local RootPart = Char:WaitForChild("HumanoidRootPart")
			--TestHitbox.BindToPart(RootPart)
			--LobbyBGM.MusicZoneHitbox = RootPart
			--print("Root part binded to hitbox")
			
			MainHealthbar.Humanoid = Char:WaitForChild("Humanoid")
			print("Humanoid binded to healthbar")
		end
		
		local TestChar = Player.Character
		if TestChar ~= nil then
			OnCharSpawn(TestChar)
		end
		TestChar = nil
		
		Player.CharacterAdded:Connect(OnCharSpawn)
		
		MainHealthbar.Gui.Parent = MainUi
		
		-- Test GUI components
		print("Doing sequential gui testing")
		local TestMenuSet = MenuSet.New()
		TestMenuSet.GuiPosition = nil
		
		local TestGridMenu = GridMenu.New()
		TestGridMenu.IsUsingGrid = true
		TestGridMenu.BackImageTransparency = 0.75
		TestGridMenu.SetTitle("Menu")
		TestGridMenu.Gui.Size = UDim2.new(0.5, 0, 0.5, 0)
		TestGridMenu.Gui.ZIndex = 5
		
		-- Gui components that go into the menu set
		TestMenuSet.Add("Main", TestGridMenu)
		TestMenuSet.Add("Ping", SpeedTestMenu.New())
		TestMenuSet.Add("Rant", RandomTextwall1.New())
		
		local SpeedTestButton = IconButton.New()
		SpeedTestButton.SetText("Ping Test")
		
		TestGridMenu.AddComponent(SpeedTestButton)
		
		local TestMenuImage = Util.CreateInstance("ImageLabel", {
			AnchorPoint = Vector2.new(0.5, 0.5),
			Size = UDim2.new(1, 0, 1, 0),
			Position = UDim2.new(0.5, 0, 0.5, 0),
			
			BackgroundTransparency = 1,
			BorderSizePixel = 0,
			
			Image = "rbxasset://textures/shadowblurmask.png",
			ScaleType = Enum.ScaleType.Crop,
		})
		
		TestGridMenu.SetImage(TestMenuImage:Clone())
		
		local TypeActions = NpcDialog.TypeActions
		local MultiNpcDialog = NpcDialog.New()
		MultiNpcDialog.UseContinueButton = true
		MultiNpcDialog.TapToFinishEnabled = false
		MultiNpcDialog.ClearWhenHidden = true
		--MultiNpcDialog.TextList = {
		--	"This is a copy of the blox fruits npc dialog system",
		--	"You heard that right, it's a copy, not some 'inspiration'",
		--	"k end of the testing thing"
		--}
		
		local function HideNpcDialog()
			task.wait(2)
			MultiNpcDialog.ClearOptions()
			MultiNpcDialog.Clear()
			MultiNpcDialog.SetVisible(false)
		end
		
		MultiNpcDialog.ActionMap = {
			{TypeActions.Write, "Useless service on your way!"},
			{TypeActions.Wait, 0.5},
			{TypeActions.Call, function()
				print("hi")
			end},
			{TypeActions.Write, " What would you like to do next?"},
			{TypeActions.SetOptions, {
				{
					Id = "OptionA1",
					Name = "Option A",
					ActionMap = {
						{TypeActions.Write, "You chose option A."},
						{TypeActions.Wait, 0.5},
						{TypeActions.Write, " Very well then, please proceed to do the first steps."},
						{TypeActions.Call, HideNpcDialog}
					}
				},

				{
					Id = "OptionB1",
					Name = "Option B",
					ActionMap = {
						{TypeActions.Write, "You chose option B."},
						{TypeActions.Wait, 0.5},
						{TypeActions.Write, " Very well then, please proceed to do the second steps."},
						{TypeActions.Call, HideNpcDialog}
					}
				},
			}
			},
		}
		MultiNpcDialog.Gui.Parent = MainUi
		
		local GridMenuButton1 = IconButton.New()
		GridMenuButton1.SetText("multi-text npc dialog test")
		GridMenuButton1.GetButton().Activated:Connect(function()
			TestMenuSet.HideAll()
			if MultiNpcDialog.Gui.Visible == false then
				print("testing multi-text npc thing")
				MultiNpcDialog.Pause()
				MultiNpcDialog.Clear()
				MultiNpcDialog.SetVisible(true)
				
				--MultiNpcDialog.StopTextList()
				--MultiNpcDialog.UseTextList()
				MultiNpcDialog.UseActionMap()
			end
		end)
		TestGridMenu.AddComponent(GridMenuButton1)
		
		TestGridMenu.AddComponent(IconButton.New())
		
		local IsTestingNpcDialog = false
		local NpcDialogTest = NpcDialog.New()
		NpcDialogTest.Gui.Parent = MainUi
		
		local GridMenuButton3 = IconButton.New()
		GridMenuButton3.SetRichTextEnabled(true)
		GridMenuButton3.SetText("<i>some</i> <b>npc dialog</b> test")
		GridMenuButton3.GetButton().Activated:Connect(function()
			TestMenuSet.HideAll()
			
			if not IsTestingNpcDialog then
				IsTestingNpcDialog = true
				
				print("testing npc dialog")
				
				NpcDialogTest.Clear()
				NpcDialogTest.NextString = "This is a test of the npc dialog thing copied from blox fruits"
				NpcDialogTest.ScrollSpeed = 30
				NpcDialogTest.SetVisible(true)
				NpcDialogTest.Type(NpcDialogTest.NextString:len())
				
				task.wait(5)
				NpcDialogTest.Clear()
				NpcDialogTest.SetVisible(false)
				
				IsTestingNpcDialog = false
			end
		end)
		TestGridMenu.AddComponent(GridMenuButton3)
		
		local SecondaryMenuButton = IconButton.New()
		SecondaryMenuButton.SetRichTextEnabled(true)
		SecondaryMenuButton.SetText("Help")
		TestGridMenu.AddComponent(SecondaryMenuButton)
		
		local function AddAspectRatioToMenu(Gui)
			local Arc = Instance.new("UIAspectRatioConstraint")
			Arc.AspectRatio = 1.5
			Arc.DominantAxis = Enum.DominantAxis.Height
			Arc.Parent = Gui
		end
		
		SpeedTestButton.GetButton().Activated:Connect(function()
			TestMenuSet.Show("Ping")
		end)
		
		SecondaryMenuButton.GetButton().Activated:Connect(function()
			TestMenuSet.Show("Rant")
		end)
		
		-- Mute button
		local DefaultMasterVolume = LobbyBGM.MasterVolume
		
		local MusicToggle = IconButton.New("Music: On")
		MusicToggle.GetButton().Activated:Connect(function()
			if LobbyBGM.MasterVolume <= 0 then
				LobbyBGM.MasterVolume = DefaultMasterVolume
				MusicToggle.SetText("Music: On")
			else
				LobbyBGM.MasterVolume = 0
				MusicToggle.SetText("Music: Off")
			end
		end)
		TestGridMenu.AddComponent(MusicToggle)
		
		local TestSetGui = TestMenuSet.Gui
		TestSetGui.Size = UDim2.new(0.5, 0, 0.5, 0)
		TestSetGui.ZIndex = 10
		AddAspectRatioToMenu(TestSetGui)
		TestSetGui.Parent = MainUi
		
		--print("showing menu in 5 seconds")
		--task.wait(5)
		--TestGridMenu.SetVisible(true)
		
		--print("hiding menu in 3 seconds")
		--task.wait(3)
		--TestGridMenu.SetVisible(false)
		
		print("displaying a button to re-toggle the menu")
		local TestMenuButton = IconButton.New()
		TestMenuButton.BackImageTransparency = 0.75
		TestMenuImage.Image = "rbxassetid://7108912646"
		TestMenuButton.SetImage(TestMenuImage:Clone())
		
		TestMenuButton.GetButton().Activated:Connect(function()
			if TestGridMenu.IsFadingIn() then
				TestMenuSet.HideAll()
			else
				TestMenuSet.Show("Main")
			end
		end)
		
		TestMenuButton.SetText("Menu")
		Util.ApplyProperties(TestMenuButton.Gui, {
			Size = UDim2.new(0.075, 0, 0.075, 0),
			Position = UDim2.new(0.075, 0, 0.5, 0),
			Parent = MainUi
		})
		TestMenuButton.SetVisible(true)
		
		--print("testing intro text")
		--local TestIntroText = IntroText.New("Bee Swarm Obby [Insane] by Onett")
		--local TestIntroDisplayed = false
		--TestIntroText.VisibleChanged.Sync = true
		--TestIntroText.Color = Color3.fromRGB(0, 58, 220)
		--TestIntroText.Gui.Parent = MainUi
		
		--print("Test interactives")
		--local TestInteractiveRunner = InteractiveRunner.New()
		--TestInteractiveRunner.AdaptInstance(Areas)
		--TestInteractiveRunner.RunAll()
		
		-- Test camera effects
		print("now testing deathcam")
		local DeathcamTest = Deathcam.New()
		DeathcamTest.ResetsCamera = true
		DeathcamTest.ChangesFov = true
		DeathcamTest.FocusedFov = 50
		DeathcamTest.Bind(LocalCharAdapter)
		
		--print("now testing camera effects")
		--local CameraFXTester = BaseCameraFX.New()
		--CameraFXTester.OffsetScale = 1
		
		--local Head
		
		--coroutine.wrap(function()
		--	while true do
		--		if Head ~= nil then
		--			CameraFXTester.FollowedCFrame = Head.CFrame
		--		end
				
		--		task.wait()
		--	end
		--end)()
		
		--print("Now testing for camera FX id:", CameraFXTester.GetRenderIndex())
		--CameraFXTester.Follow()
		
		--local function OnCharLoadForCamFX(Parts)
		--	Head = Player.Character:WaitForChild("Head")
		--end
		
		--if LocalCharAdapter.Parts ~= nil then
		--	OnCharLoadForCamFX(LocalCharAdapter.Parts)
		--end
		--LocalCharAdapter.RespawnEvent.Connect(OnCharLoadForCamFX)
		
		-- Register client objects
		local ClientObjects = Obj.ClientObjects
		if ClientObjects ~= nil then
			for i, v in pairs(
				{
					LobbyBGM, LobbyBGMSound, LobbyAdapter, PortalRunner
				}
				) do
				ClientObjects.Add(v)
			end
		end
		
		local LeaveEvent
		LeaveEvent = Players.PlayerRemoving:Connect(function(Left)
			if Left == Player then
				LeaveEvent:Disconnect()
				LeaveEvent = nil
				
				Obj.Shutdown()
				
				print("cleaned client objects at " .. DateTime.now():ToIsoDate())
			end
		end)

		-- Get rid of loading text and display place/build version
		task.spawn(function()
			local FadeTweenDur = 0.5
			local FadeTween = TweenInfo.new(FadeTweenDur, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)

			Util.Tween(LoadingText, FadeTween, {TextTransparency = 1, TextStrokeTransparency = 1})
			Runtime.WaitForDur(FadeTweenDur)
			LoadingText.Text = "BUILD V" .. game.PlaceVersion
			Util.Tween(LoadingText, FadeTween, {TextTransparency = 0.5, TextStrokeTransparency = 0.5})
			
			FadeTween, FadeTweenDur = nil, nil
		end)
	end)

	return Obj
end

return Launcher]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ec9</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX956F10E407BA4AD483B5E8B570FA578F">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">PartCutters</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018884</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX392ECC4DF3E04D81B1E021007131E411">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PartCut</string>
							<string name="ScriptGuid">{57F852E0-F155-4CE8-953E-231CB5852BAB}</string>
							<ProtectedString name="Source"><![CDATA[-- Class that acts as a box that can cut through BaseParts.
-- For performance reasons, orientation isn't taken into account.
-- By udev2192

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))

local PartCut = {}

local ZERO_VECTOR3 = Vector3.new(0, 0, 0)

function PartCut.New()
	local Obj = Object.New("PartCut")
	local PartRunner = nil
	
	-- The size vector of the cut
	Obj.Size = ZERO_VECTOR3
	
	-- The position vector of the cut
	Obj.Position = ZERO_VECTOR3
	
	-- Binds a BasePart to the PartCutter.
	-- This means that the part provided will
	-- be doing the cut.
	-- Specify with nil to disable.
	function Obj.BindPart(Part)
		if typeof(Part) == "Instance" and Part:IsA("BasePart") then
			-- Disconnect previous connection
			Obj.BindPart(nil)
			
			-- Reconnect
			PartRunner = RunService.Heartbeat:Connect(function()
				Obj.Size = Part.Size
				Obj.Position = Part.Position
			end)
		else
			if PartRunner ~= nil then
				PartRunner:Disconnect()
				PartRunner = nil
			end
		end
	end
	
	Obj.OnDisposal = function()
		Obj.BindPart(nil)
	end
	
	return Obj
end

return PartCut]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eca</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXB6054858AF68432883372D6C43CB7B33">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PartCutter</string>
							<string name="ScriptGuid">{5FF0E54F-792E-444F-BF55-01A3C8DA067A}</string>
							<ProtectedString name="Source"><![CDATA[-- This class carves holes from the PartCuts that are binded to it.
-- This is what makes the moveable GBJs.
-- Thanks to this devforum post for help with the cutting logic:
-- https://devforum.roblox.com/t/consume-everything-how-greedy-meshing-works/452717

-- Essentially, this is greedy meshing that uses raycasts

-- By udev2192

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))

local PartCutter = {}

-- Minimum part size in all dimensions
local MINIMUM_SIZE = 0.05

local function IsVector3(Obj)
	return typeof(Obj) == "Vector3"
end

local function IsPart(Part)
	return typeof(Part) == "Instance" and Part:IsA("BasePart")
end

-- Determines if the position is within the bounds of the box
local function IsInBox(Position, Box)
	return math.abs(Position.X) < Box.Size.X/2 and math.abs(Position.Y) < Box.Size.Y/2 and math.abs(Position.Z) < Box.Size.Z/2
end

function PartCutter.New(Part)
	assert(IsPart(Part), "Argument 1 must be a BasePart.")
	
	local Obj = Object.New("PartCutter")
	local CutRunner = nil
	
	-- The table of part cuts.
	local PartCuts = {}
	
	-- Part filling folder instance.
	local FillFolder = Instance.new("Folder")
	FillFolder.Name = "PartFills"
	FillFolder.Parent = Part
	
	-- The x and z size of each slice/voxel of the parts.
	-- Higher number = better performance
	-- Applied on next refresh.
	Obj.VoxelSize = 1
	
	-- Checks if the position is cut by the PartCuts stored.
	local function IsCut(Position)
		for i, v in pairs(PartCuts) do
			if IsInBox(Position, v) then
				return true
			end
		end
		
		return false
	end
	
	
	-- Cuts the part into pieces so that
	-- the cuts can be made.
	--local function SlicePart(Part)
	--	assert(IsPart(Part), "Argument 1 must be a BasePart.")
		
	--	-- Slice the part.
	--	local VoxelSize = Obj.VoxelSize or 1
	--	local PartSize = Part.Size
	--	local XSize = PartSize.X
	--	local SizeIndex = 0
		
	--	-- Store occupied dimensions (these are voxels
	--	-- that will have geometry/be filled).
	--	local Occupied = {}
		
	--	-- Generate the heightmap from the PartCuts
	--	for i, v in pairs(PartCuts) do
			
	--	end
		
		
	--	for i = 0, XSize, VoxelSize do
	--		-- Break if the remainder has been reached.
	--		if XSize - i < VoxelSize then
	--			break
	--		end
	--	end
	--end
	
	-- Gets the map of the PartCuts. If the entry
	-- of the table returns true, the voxel will
	-- be filled, otherwise it won't.
	function Obj.GetMap()
		assert(IsPart(Part), "No part has been binded, therefore the map couldn't be generated.")
		
		local VoxelSize = Obj.VoxelSize or 1
		assert(VoxelSize >= MINIMUM_SIZE, "VoxelSize must be at least " .. MINIMUM_SIZE .. " studs.")
		
		-- Occupied voxels
		local Occupied = {}

		-- Get the part's corners
		local PartSize = Part.Size
		local PartPos = Part.Position
		local PartPosDiff = PartSize / 2
		local PartBegin = PartPos - PartPosDiff
		local PartEnd = PartPos + PartPosDiff
		
		-- Generate the map by iterating through the voxels by column
		local function GetColumnMap(XPos)
			-- Occupied column voxels
			local ColumnOccupied = {}

			for i = PartBegin.Z, PartEnd.Z, VoxelSize do
				-- Generate a Vector3 for position comparison
				local ComparedVector = Vector3.new(XPos, PartPos.Y, i)
				
				-- Determine if there's a collision for each cut.
				-- If there isn't one, mark it as occupied
				-- so it can be filled.
				local IsFilled = true
				for i, v in pairs(PartCuts) do
					-- Break on first cut "collision"
					if IsInBox(ComparedVector, v) == true then
						IsFilled = false
						break
					end
				end
				
				-- Register fill status.
				ColumnOccupied[i] = IsFilled
			end
		end
		
		for i = PartBegin.X, PartEnd.X, VoxelSize do
			local Remaining = PartEnd.X - i
			
			if Remaining >= VoxelSize then
				Occupied[i] = GetColumnMap(i)
			else
				-- Account for the remainder, then break
				local RemainderIndex = i + Remaining
				Occupied[RemainderIndex] = GetColumnMap(RemainderIndex)
				
				break
			end
		end 
		
		return Occupied, {
			Beginning = PartBegin,
			End = PartEnd
		}
	end
	
	-- Adds a part slice segment to the fill folder by
	-- properties table.
	local function AddSliceFill(SliceInfo)
		local PartClone = Part:Clone()

		for i, v in pairs(SliceInfo) do
			PartClone[i] = v
		end

		PartClone.Parent = FillFolder

		return PartClone
	end

	-- Removes all the slices from the fill folder.
	local function RemoveAllSlices()
		if FillFolder ~= nil then
			for i, v in pairs(FillFolder:GetChildren()) do
				v:Destroy()
			end
		end
	end
	
	-- Refreshes the generation of the sliced part.
	function Obj.Refresh()
		-- Generation height-map
		local Map, Corners = Obj.GetMap()
		
		-- Voxel size
		local VoxelSize = Obj.VoxelSize or 1
		
		-- Get the maximum-possible extent for the
		-- current segment from the algorithm for
		-- best performance.
		local XSize = 0
		local YSize = Part.Size.Y
		local ZSize = 0
		
		local XPos = 0
		local YPos = Part.Position.Y
		local ZPos = 0
		
		-- Greedy meshing dimensions (these will be the fill segment properties)
		local Dimensions = {}
		
		-- Function for adding (checks that the size is valid before doing so)
		local function Add(FillSize, FillPos)
			if FillSize.X >= MINIMUM_SIZE and FillSize.Y >= MINIMUM_SIZE and FillSize.Z >= MINIMUM_SIZE then
				table.insert(Dimensions, {
					Size = FillSize,
					Position = FillPos
				})
			end
		end
		
		local function AddIndex()
			Add(Vector3.new(XSize, YSize, ZSize), Vector3.new(XPos, YPos, ZPos))
		end
		
		-- Toggles position shift to account for size
		local function TogglePosChange(IsChanged)
			local Multiplier = 1
			
			if IsChanged == true then
				Multiplier = 1
			else
				Multiplier = -1
			end
			
			XPos += (XSize / 2) * Multiplier
			ZPos += (ZSize / 2) * Multiplier
		end
		
		-- If the entire column could be completed without
		-- colliding, add the full z-size.
		for i, v in pairs(Map) do
			local HasCollided = false
			
			-- To strech the XSize as much as possible
			XSize += 1
			XPos = Corners.Beginning.X + (i - 1)
			
			for i2, v2 in pairs(v) do
				ZPos = Corners.Beginning.Z + (i - 1)
				
				if v2 == true then
					-- Voxel is occupied, move on
					ZSize += VoxelSize
				else
					-- Add the slice now that a cut collision
					-- has been reached
					HasCollided = true
					
					TogglePosChange(true)
					AddIndex()
					TogglePosChange(false)
				end
			end
			
			-- Add the remaining slice fill and reset the sizing
			-- before moving onto the next column
			-- (if a collision was reached for this column)
			if HasCollided == false then
				TogglePosChange(true)
				AddIndex()
				TogglePosChange(false)
				
				-- Reset x-size for new column
				XSize = 0
			end
			
			ZSize = 0
		end
		
		-- Fill slices after dimensions have been found for stability
		local AddedSlices = {}
		for i, v in pairs(Dimensions) do
			table.insert(AddedSlices, AddSliceFill(v))
		end
		
		-- Remove the old slices
		for i, v in pairs(FillFolder:GetChildren()) do
			if table.find(AddedSlices, v) == nil then
				v:Destroy()
			end
		end
	end
	
	-- Toggles the per-frame updater for the part cutter.
	function Obj.ToggleUpdater(IsRunning)
		if IsRunning == true then
			-- Disconnect previous runner.
			Obj.ToggleUpdater(false)
			
			-- Reconnect.
			CutRunner = RunService.Heartbeat:Connect(Obj.Refresh)
		else
			if CutRunner ~= nil then
				CutRunner:Disconnect()
				CutRunner = nil
			end
		end
	end
	
	-- Adds a PartCut to be accounted by the slicing algorithm.
	function Obj.AddCut(Cut)
		assert(IsVector3(Cut.Size) and IsVector3(Cut.Position), "Argument 1 object must have both Size and Position properties.")
		
		table.insert(PartCuts, Cut)
	end
	
	-- Removes a PartCut from being accounted by the slicing algorithm.
	function Obj.RemoveCut(Cut)
		local Index = table.find(PartCuts, Cut)
		
		if Index ~= nil then
			table.remove(PartCuts, Index)
		end
		
		Index = nil
	end
	
	Obj.OnDisposal = function()
		Obj.ToggleUpdater(false)
		
		for i, v in pairs(PartCuts) do
			Obj.RemoveCut(v)
		end
		
		PartCuts = nil
		
		FillFolder:Destroy()
		FillFolder = nil
	end
	
	return Obj
end

return PartCutter]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ecb</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX67554818A5FA48B4B9EBCF8CCCAE1712">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">CuttableFinder</string>
							<string name="ScriptGuid">{76C74A42-340D-48E8-A2A5-6BA41081C3CA}</string>
							<ProtectedString name="Source"><![CDATA[-- Finds cuttable parts that PartCutter can interact with.
-- By udev2192

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local Adapters = RepModules:WaitForChild("Adapters")
local UtilRepModules = RepModules:WaitForChild("Utils")

local InstanceCollector = require(Adapters:WaitForChild("InstanceCollector"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))

local PartCutters = script.Parent

local PartCutter = require(PartCutters:WaitForChild("PartCutter"))

ReplicatedStorage, RepModules, Adapters, UtilRepModules, PartCutters = nil, nil, nil, nil, nil

local CuttableFinder = {}

local function IsInstance(Obj)
	return typeof(Obj) == "Instance"
end

-- Constructs the finder for cuttable parts and returns it.
function CuttableFinder.New(Inst)
	assert(IsInstance(Inst), "Argument 1 must be an instance.")
	
	local Finder = InstanceCollector.New()
	local Cuttables = {}
	
	Finder.SearchId = "_Cuttable"
	
	-- Fired when a PartCut is found.
	Finder.PartCutFound = Signal.New()

	-- Fired when a PartCut is removed.
	Finder.PartCutRemoved = Signal.New()
	
	-- Removes and disposes a cuttable.
	function Finder.DisposeCuttable(Cut)
		local CutObj = Cuttables[Cut]
		
		if CutObj ~= nil then
			CutObj.Dispose()
		end
		
		Cuttables[Cut] = nil
		CutObj = nil
	end
	
	-- Removes all cuttables found and/or stored.
	function Finder.DisposeAllCuttables()
		for i, v in pairs(Cuttables) do
			Finder.DisposeCuttable(v)
		end
	end
	
	-- Connect events to found/removed parts.
	Finder.InstanceFound = function(Part)
		if IsInstance(Part) and Part:IsA("BasePart") then
			local Cutter = PartCutter.New(Part)
			Cutter.ToggleUpdater(true)
			
			Cuttables[Part] = Cutter
		end
	end
	
	Finder.InstanceRemoved = function(Part)
		if IsInstance(Part) and Part:IsA("BasePart") then
			Finder.DisposeCuttable(Part)
		end
	end
	
	Finder.AddDisposalListener(function()
		if Finder.PartCutFound ~= nil then
			Finder.PartCutFound.DisconnectAll()
		end
		
		if Finder.PartCutRemoved ~= nil then
			Finder.PartCutRemoved.DisconnectAll()
		end
	end)
	
	-- Search.
	Finder.AdaptInstance(Inst)
	
	return Finder
end

return CuttableFinder]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ecc</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX30492AFE20A34E1E91961F4462F98CDD">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PlayerCutter</string>
							<string name="ScriptGuid">{D528F95F-4CEB-4F18-9547-FCCCDF7B4200}</string>
							<ProtectedString name="Source"><![CDATA[-- An object provided so that players can cut through parts.
-- By udev2192

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))

local PlayerCutter = {}

function PlayerCutter.New(CharAdapter)
	assert(typeof(CharAdapter) == "table", "Argument 1 must be a CharacterAdapter.")
	
	
end

return PlayerCutter]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ecd</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX497B7FCC8C8241DE9476C6EAAA92EFD8">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Stands</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018885</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXC3DC5BC2DB0947FF9B3C6E851AB1C53A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PlayerStand</string>
							<string name="ScriptGuid">{D0CFE159-4452-408E-83E4-638C51C81AA0}</string>
							<ProtectedString name="Source"><![CDATA[-- Gives the player a cylindrical stand over a cuttable part/softlock zone.
-- By udev2192

local RunService = game:GetService("RunService")

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")
local UtilModules = RepModules:WaitForChild("Utils")

local Object = require(UtilModules:WaitForChild("Object"))
local Runtime = require(UtilModules:WaitForChild("Runtime"))
local Util = require(UtilModules:WaitForChild("Utility"))

RepModules, UtilModules = nil, nil

-- Keyword for a softlock zone.
local GBJ_KEYWORD = "^_SoftlockZone"

-- Default stand part diameter.
local DEFAULT_STAND_DIAMETER = 5

-- Default stand part height.
local DEFAULT_STAND_HEIGHT = 1

-- Stand BasePart defaults.
local STAND_PART_PROPERTIES = {
	Anchored = true,
	CanCollide = true,
	Size = Vector3.new(DEFAULT_STAND_HEIGHT, DEFAULT_STAND_DIAMETER, DEFAULT_STAND_DIAMETER),
	Shape = Enum.PartType.Cylinder,
	Orientation = Vector3.new(0, 0, 90),
	Color = Color3.fromRGB(85, 85, 255),
	Material = Enum.Material.Neon,
	Transparency = 0.7,
	Reflectance = 0.75
}

-- Stand BasePart folder name.
local STAND_FOLDER_NAME = "PlayerStandBaseParts"

-- Stand BasePart folder.
local StandPartFolder = workspace:FindFirstChild(STAND_FOLDER_NAME) or Instance.new("Folder")
StandPartFolder.Name = STAND_FOLDER_NAME
StandPartFolder.Parent = workspace

local PlayerStand = {}

local function IsPart(Obj)
	return typeof(Obj) == "Instance" and Obj:IsA("BasePart")
end

-- Returns if the part is considered a "GBJ zone".
local function IsGBJPart(Part)
	return IsPart(Part) and string.match(Part.Name, GBJ_KEYWORD)
end

-- Creates and returns the default stand BasePart.
local function CreateStandPart()
	local Part = Instance.new("Part")
	
	for i, v in pairs(STAND_PART_PROPERTIES) do
		Part[i] = v
	end
	
	return Part
end

function PlayerStand.GetDefaultDiameter()
	return DEFAULT_STAND_DIAMETER
end

function PlayerStand.New(CharAdapter)
	assert(typeof(CharAdapter) == "table", "Argument 1 must be a CharacterAdapter.")
	
	local Stand = Object.New("PlayerStand")
	local Hitbox = nil
	local TouchConnection = nil
	local MoveRunner = nil
	local IsTouchingGBJ = false
	
	-- Currently stored stand part diameter.
	local CurrentDiameter = DEFAULT_STAND_DIAMETER
	
	-- The current GBJ part that the stand is connected to.
	local CurrentGBJPart = nil
	
	-- The BasePart that the stand uses.
	Stand.Part = nil
	
	-- The tweening info used by AnimateDiameter()
	Stand.DiameterTweenInfo = TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
	
	-- Destroys the stand part.
	function Stand.DestroyStandPart()
		local StandPart = Stand.Part
		if StandPart ~= nil then
			StandPart:Destroy()
		end
		StandPart = nil
		Stand.Part = nil
	end
	
	-- Respawns the stand part.
	function Stand.RespawnPart()
		Stand.DestroyStandPart()
		
		local StandPartInit = CreateStandPart()
		Stand.Part = StandPartInit
		StandPartInit.Parent = StandPartFolder
		StandPartInit = nil
	end
	
	-- Sets diameter of the stand.
	function Stand.SetDiameter(Diameter)
		CurrentDiameter = Diameter
		
		local StandPart = Stand.Part

		if IsPart(StandPart) == true then
			StandPart.Size = Vector3.new(DEFAULT_STAND_HEIGHT, Diameter, Diameter)
		end
	end
	
	-- Gets the current diameter of the stand.
	function Stand.GetDiameter()
		return CurrentDiameter
	end
	
	-- Animates to the destination diameter of the stand part.
	function Stand.AnimateDiameter(Diameter)
		CurrentDiameter = Diameter
		
		local StandPart = Stand.Part
		
		if IsPart(StandPart) == true then
			local AnimInfo = Stand.DiameterTweenInfo or TweenInfo.new()
			
			-- Animate
			return Util.Tween(StandPart, AnimInfo, {Size = Vector3.new(DEFAULT_STAND_HEIGHT, Diameter, Diameter)})
		end
	end
	
	-- Moves the part to be under the hitbox.
	function Stand.MoveStand()
		local StandPart = Stand.Part
		
		if StandPart ~= nil and Hitbox ~= nil and CurrentGBJPart ~= nil then
			local GBJSizeHalved = CurrentGBJPart.Size / 2
			local GBJPos = CurrentGBJPart.Position
			
			local GBJBegin = GBJPos - GBJSizeHalved
			local GBJEnd = GBJPos + GBJSizeHalved
			
			local HitboxPos = Hitbox.Position
			
			local function ClampDim(Dimension)
				return math.clamp(HitboxPos[Dimension], GBJBegin[Dimension], GBJEnd[Dimension])
			end
			
			StandPart.Position = Vector3.new(ClampDim("X"), GBJPos.Y + GBJSizeHalved.Y, ClampDim("Z"))
		end
	end
	
	-- Toggles the movement runner for the player stand.
	function Stand.ToggleMoveRunner(IsRunning)
		if IsRunning == true then
			Stand.ToggleMoveRunner(false)
			
			local StandPart = Stand.Part
			if IsPart(StandPart) then
				-- Reconnect movement
				MoveRunner = RunService.Heartbeat:Connect(Stand.MoveStand)
			else
				warn("Cannot turn on move runner because no stand part has been set.")
			end
		else
			if MoveRunner ~= nil then
				MoveRunner:Disconnect()
				MoveRunner = nil
			end
		end
	end
	
	-- Toggles the .Touched connection for finding GBJ parts.
	function Stand.ToggleTouchConnection(IsConnected)
		if IsConnected == true and Hitbox ~= nil then
			Stand.ToggleTouchConnection(false)
			
			-- Reconnect GBJ zone touch.
			TouchConnection = Hitbox.Touched:Connect(function(OtherPart)
				if IsGBJPart(OtherPart) then
					-- Move the stand to the GBJ part.
					CurrentGBJPart = OtherPart
				end
			end)
		else
			if TouchConnection ~= nil then
				TouchConnection:Disconnect()
				TouchConnection = nil
			end
		end
	end
	
	-- Character load handler.
	local function OnCharLoad(Parts)
		Hitbox = Parts.Hitbox
	end
	
	OnCharLoad(CharAdapter.Parts)
	
	-- Connect events.
	CharAdapter.LoadedEvent.Connect(OnCharLoad)
	
	Stand.OnDisposal = function()
		Stand.ToggleTouchConnection(false)
		Stand.ToggleMoveRunner(false)
		CharAdapter.LoadedEvent.Disconnect(OnCharLoad)
		Stand.DestroyStandPart()
		
		Hitbox = nil
	end
	
	return Stand
end

return PlayerStand]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ece</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXAF2F4CAA644648E784201F16F941DE30">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">DestroyableStand</string>
							<string name="ScriptGuid">{1B67587C-1730-42E8-8FDE-AE8A329A5A01}</string>
							<ProtectedString name="Source"><![CDATA[-- A version of the PlayerStand that has lives.
-- By udev2192

local Players = game:GetService("Players")

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")
local UtilModules = RepModules:WaitForChild("Utils")

local Runtime = require(UtilModules:WaitForChild("Runtime"))
local Signal = require(UtilModules:WaitForChild("Signal"))
local TimeWaiter = require(UtilModules:WaitForChild("TimeWaiter"))
local Util = require(UtilModules:WaitForChild("Utility"))

local PlayerStand = require(script.Parent:WaitForChild("PlayerStand"))

RepModules, UtilModules = nil, nil

local DestroyableStand = {}

function DestroyableStand.New(CharAdapter)
	local Stand = PlayerStand.New(CharAdapter)
	local OriginalDiameter = Stand.GetDiameter()
	local AnimWaiter = nil
	local IsCharacterAlive = false
	
	local function DisposeAnimWaiter()
		if AnimWaiter ~= nil then
			AnimWaiter.Dispose()
			AnimWaiter = nil
		end
	end
	
	-- Gets the currently preferred stand size.
	local function GetStandSize()
		return (OriginalDiameter or 1) * ((Stand.Lives or 1) / (Stand.MaxLives or 1))
	end
	
	-- Fades the stand part out, then destroys it.
	local function FadeStandPart(Time)
		local StandPart = Stand.Part

		if StandPart ~= nil then
			if Time > 0 then
				coroutine.wrap(function()
					Util.Tween(StandPart, TweenInfo.new(Time, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Transparency = 1})
					Runtime.WaitForDur(Time)
					Stand.DestroyStandPart()
				end)()
			else
				StandPart.Transparency = 1
				Stand.DestroyStandPart()
			end
		end
	end
	
	-- If a life is decremented by 1 when the
	-- character dies.
	Stand.SubtractLifeOnDeath = true
	
	-- The maximum amount of lives in the player stand.
	Stand.MaxLives = 3
	
	-- The amount of "lives" in the player stand
	Stand.SetProperty("Lives", Stand.MaxLives, function(lives)
		-- Fire the signal to indicate change
		local ChangeSignal = Stand.LivesChanged
		if ChangeSignal ~= nil then
			ChangeSignal.Fire(lives)
		end
		ChangeSignal = nil
		
		-- Animate to show the amount of lives left
		-- (Fade the stand if no lives are left)
		local RespawnTime = Players.RespawnTime
		local AnimTime = Stand.DiameterTweenInfo.Time
		local StandPart = Stand.Part
		local FadeTime = RespawnTime - AnimTime - 0.5

		if lives > 0 then
			AnimWaiter = TimeWaiter.New(AnimTime)
			Stand.AnimateDiameter(GetStandSize())
			
			-- Wait to fade
			AnimWaiter.Waited.Connect(function()
				DisposeAnimWaiter()
				FadeStandPart(FadeTime)
			end)
			coroutine.wrap(AnimWaiter.Wait)()
		else
			-- Fade immediately
			FadeStandPart(FadeTime)
		end
	end)
	
	-- Fired when the amount of lives changes.
	-- Params:
	-- Lives (number) - The new amount of lives.
	Stand.LivesChanged = Signal.New()
	
	local function ToggleConnections(IsConnected)
		Stand.ToggleTouchConnection(IsConnected)
		Stand.ToggleMoveRunner(IsConnected)
	end
	
	-- Connect character events
	local function OnCharLoad()
		IsCharacterAlive = true
		
		-- Respawn stand part if it's alive
		if Stand.Lives > 0 then
			DisposeAnimWaiter()

			Stand.RespawnPart()
			Stand.SetDiameter(GetStandSize())
			
			ToggleConnections(true)
		end
	end
	
	local function OnDeath()
		if IsCharacterAlive == true then
			IsCharacterAlive = false
			
			-- Decrement lives if enabled
			if Stand.SubtractLifeOnDeath == true then
				Stand.Lives += -1
			end

			ToggleConnections(false)
		end
	end
	
	OnCharLoad()
	
	CharAdapter.LoadedEvent.Connect(OnCharLoad)
	CharAdapter.DeathEvent.Connect(OnDeath)
	
	Stand.AddDisposalListener(function()
		CharAdapter.LoadedEvent.Disconnect(OnCharLoad)
		CharAdapter.DeathEvent.Disconnect(OnDeath)
		
		DisposeAnimWaiter()
		
		local ChangeSignal = Stand.LivesChanged
		if ChangeSignal ~= nil then
			ChangeSignal.Dispose()
		end
		Stand.LivesChanged = nil
		ChangeSignal = nil
	end)
	
	return Stand
end

return DestroyableStand]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ecf</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXCF76012328F042C99804C757541574CA">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MultiplayerStand</string>
							<string name="ScriptGuid">{FFD792BE-B5F9-4F4A-944E-2A0BD36CA829}</string>
							<ProtectedString name="Source"><![CDATA[-- Handles multiplayer stand display. Intended for the client.

-- REMINDER TO MAKE THIS SYNC AND NOT HAVE ISSUES WHEN PLAYERS DIE

-- By udev2192

local Players = game:GetService("Players")

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")

local CharAdapter = require(RepModules:WaitForChild("Adapters"):WaitForChild("CharacterAdapter"))
local Object = require(RepModules:WaitForChild("ObjectGetter")).GetClass()

local DestroyableStand = require(script.Parent:WaitForChild("DestroyableStand"))

RepModules = nil

local MultiplayerStand = {}

local function IsPlayer(Obj)
	return typeof(Obj) == "Instance" and Obj:IsA("Player")
end

function MultiplayerStand.New()
	local Multi = Object.New("MultiplayerStand")
	local PlayerCharAdapters = {}
	local PlayerStands = {}
	
	local PlayerAddingEvent = nil
	local PlayerRemovingEvent = nil
	
	-- If the local player is included to be added to
	-- the object's list.
	Multi.IncludeLocalPlayer = false
	
	-- Removes objects created for the specified player's stand
	local function RemovePlayerObjects(Player)
		local Stand = PlayerStands[Player]
		if Stand ~= nil then
			Stand.Dispose()
		end
		PlayerStands[Player] = nil
		Stand = nil
		
		local Adapter = PlayerCharAdapters[Player]
		if Adapter ~= nil then
			Adapter.Dispose()
		end
		
		PlayerCharAdapters[Player] = nil
		Adapter = nil
	end
	
	-- Clears all the stored player objects.
	function Multi.ClearPlayerObjects()
		for i, v in pairs(PlayerCharAdapters) do
			RemovePlayerObjects(i)
		end
	end
	
	-- Sets if stand giving is automated (by character respawn).
	function Multi.SetAutomated(IsAutomated)
		if IsAutomated == true then
			Multi.SetAutomated(false)
			
			-- Reconnect player events
			local function OnPlayerAdd(Player)
				if IsPlayer(Player) == true and (Multi.IncludeLocalPlayer == true or Player ~= Players.LocalPlayer) then
					local PlrAdapter = CharAdapter.New(Player)
					PlayerCharAdapters[Player] = PlrAdapter
					
					PlayerStands[Player] = DestroyableStand.New(PlrAdapter)
					PlrAdapter = nil
				end
			end
			
			for i, v in pairs(Players:GetPlayers()) do
				OnPlayerAdd(v)
			end
			
			PlayerAddingEvent = Players.PlayerAdded:Connect(OnPlayerAdd)
			PlayerRemovingEvent = Players.PlayerRemoving:Connect(RemovePlayerObjects)
		else
			if PlayerAddingEvent ~= nil then
				PlayerAddingEvent:Disconnect()
				PlayerAddingEvent = nil
			end
			
			if PlayerRemovingEvent ~= nil then
				PlayerRemovingEvent:Disconnect()
				PlayerRemovingEvent = nil
			end
		end
	end
	
	Multi.OnDisposal = function()
		Multi.SetAutomated(false)
		
		-- Remove all player objects stored here on disposal
		Multi.ClearPlayerObjects()
	end
	
	return Multi
end

return MultiplayerStand]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ed0</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX990EA31788DC41DD8D4BAFFE9D87F0AE">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">ZiplineService</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018886</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX382C98448131486F9622887F532FC3B5">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Zipline</string>
							<string name="ScriptGuid">{DDFB835B-24BF-41E3-9A60-DC3C89A76B77}</string>
							<ProtectedString name="Source"><![CDATA[--[[
Zipline.lua by udev2192

Something yes

Probably not intended for widespread use

Thanks to Crazyblox for design
]]--

local ZiplineService = script.Parent

local Object = require(ZiplineService:WaitForChild("Object"))
local ConfigDefaults = require(ZiplineService:WaitForChild("ConfigDefaults"))
local Display = require(ZiplineService:WaitForChild("Display"))

-- Calculation modules
local Bezier = require(ZiplineService:WaitForChild("Bezier"))
local Spline = require(ZiplineService:WaitForChild("Spline"))

local Zipline = {}

-- Attribute names
local DISPLAY_PRECISION_ATTRIBUTE = "DisplayPrecision"
local FORMULA_ATTRIBUTE = "GenerationMode"
local PATH_DISPLAYED_ATTRIBUTE = "DisplaysPath"
local PRECISION_ATTRIBUTE = "Precision"
local THICKNESS_ATTRIBUTE = "Thickness"

-- Multiplier for the part group size when using precision
-- as the variable.
local DISPLAY_PRECISION_MULTIPLIER = 0.3

local DISPLAY_PRECISION_MIN = 0.0001
local DISPLAY_PRECISION_MAX = 10

-- The name given to the start parts on ziplines.
Zipline.START_PART_COLLECTION = "CurvedZiplineMechanic1"

-- "Bezier" or "Spline"
-- Bezier = Faster generation
-- Spline = Accurate generation (currently broken, so don't use)
-- This is a beta flag that is no longer in use.
--Zipline.DEFAULT_GENERATION_MODE = "Bezier"

-- For smooth ziplining
-- (No longer used as this is a customizable option)
--Zipline.MAGNITUDE_MULTIPLIER = 60

-- Generation mode enum that specifies
-- the formula that a zipline uses to generate a zipline.
Zipline.GenerationMode = {
	Linear = 1,
	Quadratic = 2,
	Cubic = 3
}

-- Allows for better curve generation.
-- This has released so it is no longer a flag, rather
-- a toggleable option for each zipline.
--Zipline.ENABLE_CUBIC_GENERATION = false

function Zipline.GetCollection()
	local Collection = _G[Zipline.START_PART_COLLECTION]
	if Collection == nil then
		_G[Zipline.START_PART_COLLECTION] = {}
	end
	
	return _G[Zipline.START_PART_COLLECTION]
end

Zipline.GetCollection() -- Do for initialization

local function CheckIsModel(Model)
	assert(typeof(Model) == "Instance" and Model:IsA("Model"), "Argument 1 must be a model.")
end

local function IsBasePart(Part)
	return typeof(Part) == "Instance" and Part:IsA("BasePart")
end

local function IsAllParts(...)
	local ps = {...}
	
	if #ps > 0 then
		for i, v in pairs(ps) do
			if IsBasePart(v) == false then
				return false
			end
		end
		
		return true
	else
		return false
	end
end

local function AddToCollection(Part, Zip)
	if IsBasePart(Part) then
		_G[Zipline.START_PART_COLLECTION][Part] = Zip
	end
end

local function RemoveFromCollection(Part)
	_G[Zipline.START_PART_COLLECTION][Part] = nil
end

-- Returns the zipline associated with the instance provided.
function Zipline.GetZipline(inst)
	assert(typeof(inst) == "Instance", "Argument 1 must be an Instance.")
	return Zipline.GetCollection()[inst]
end

-- Calculates the course of the zipline.
function Zipline.GetZiplineCourse(Zip, Parts, Fidelity, Formula)
	local NumParts = #Parts
	local i = 1
	local Beziers = {}

	local GenerationMode = Zipline.GenerationMode
	local Linear = GenerationMode.Linear
	local Quadratic = GenerationMode.Quadratic
	local Cubic = GenerationMode.Cubic

	GenerationMode = nil

	while i < NumParts do
		local part1 = Parts[i]
		local part2 = Parts[i + 1]
		local part3 = Parts[i + 2]
		local part4 = Parts[i + 3]

		if Formula == Cubic and IsBasePart(part4) then
			-- Use the cubic bezier function.
			-- Laggy, so not recommended.
			if IsAllParts(part1, part2, part3, part4) then
				local p1 = part1.Position
				local p2 = part2.Position
				local p3 = part3.Position
				local p4 = part4.Position

				local bz = Bezier.New(Bezier.Cubic, (p4 - p1).Magnitude * Fidelity, p1, p2, p3, p4)
				Zip.TotalDistance += bz.TotalDist
				table.insert(Beziers, bz)
				bz.Dispose()
			end

			i += 3 -- Not 4, because the 3rd might not be the last
		elseif (Formula == Quadratic or Formula == Cubic) and IsBasePart(part3) then -- Check if there's 3 or more points remaining
			-- Use the quadratic bezier function.
			if IsAllParts(part1, part2, part3) then
				local p1 = part1.Position
				local p2 = part2.Position
				local p3 = part3.Position

				local bz = Bezier.New(Bezier.Quadratic, (p3 - p1).Magnitude * Fidelity, p1, p2, p3)
				Zip.TotalDistance += bz.TotalDist
				table.insert(Beziers, bz)
				bz.Dispose()
			end

			i += 2 -- Not 3, because the 3rd might not be the last
		elseif (Formula == Linear or Formula == Quadratic or Formula == Cubic) and IsBasePart(part2) then
			-- Use the linear bezier function.
			if IsAllParts(part1, part2) then
				local p1 = part1.Position
				local p2 = part2.Position

				local bz = Bezier.New(Bezier.Linear, (p2 - p1).Magnitude * Fidelity, p1, p2)
				Zip.TotalDistance += bz.TotalDist
				table.insert(Beziers, bz)

				bz.Dispose()
			end
			
			i += 1 -- Not 2, because the 2nd might not be the last
		else
			break
		end
	end

	return Beziers
end

--Zipline.GenerationFuncs = {
--	-- Format: Generator = {GeneratorFunc, LerpFunc}
	
--	Bezier = {
--		function(Zip, Parts, Fidelity, Formula)
--			local NumParts = #Parts
--			local i = 1
--			local Beziers = {}
			
--			local GenerationMode = Zipline.GenerationMode
--			local Linear = GenerationMode.Linear
--			local Quadratic = GenerationMode.Quadratic
--			local Cubic = GenerationMode.Cubic
			
--			GenerationMode = nil

--			while i < NumParts do
--				local part1 = Parts[i]
--				local part2 = Parts[i + 1]
--				local part3 = Parts[i + 2]
--				local part4 = Parts[i + 3]
				
--				if Formula == Cubic and IsBasePart(part4) then
--					-- Use the cubic bezier function.
--					-- Laggy, so not recommended.
--					if IsAllParts(part1, part2, part3, part4) then
--						local p1 = part1.Position
--						local p2 = part2.Position
--						local p3 = part3.Position
--						local p4 = part4.Position

--						local bz = Bezier.New(Bezier.Cubic, (p4 - p1).Magnitude * Fidelity, p1, p2, p3, p4)
--						Zip.TotalDistance += bz.TotalDist
--						table.insert(Beziers, bz)
--						bz.Dispose()
--					end

--					i += 3 -- Not 4, because the 3rd might not be the last
--				elseif Formula == Quadratic and IsBasePart(part3) then -- Check if there's 3 or more points remaining
--					-- Use the quadratic bezier function.
--					if IsAllParts(part1, part2, part3) then
--						local p1 = part1.Position
--						local p2 = part2.Position
--						local p3 = part3.Position

--						local bz = Bezier.New(Bezier.Quadratic, (p3 - p1).Magnitude * Fidelity, p1, p2, p3)
--						Zip.TotalDistance += bz.TotalDist
--						table.insert(Beziers, bz)
--						bz.Dispose()
--					end

--					i += 2 -- Not 3, because the 3rd might not be the last
--				elseif Formula == Linear and IsBasePart(part2) then
--					-- Use the linear bezier function.
--					if IsAllParts(part1, part2) then
--						local p1 = part1.Position
--						local p2 = part2.Position

--						local bz = Bezier.New(Bezier.Linear, (p2 - p1).Magnitude * Fidelity, p1, p2)
--						Zip.TotalDistance += bz.TotalDist
--						table.insert(Beziers, bz)

--						bz.Dispose()
--					end
--				else
--					break
--				end
--			end

--			return Beziers
--		end,
		
--		Bezier.LerpCombined
--	},
	
--	Spline = {
--		function(Zip, Parts)
--			local vectors = {}
--			for i, v in ipairs(Parts) do
--				if IsBasePart(v) then
--					table.insert(vectors, v.Position)
--				end
--			end

--			local sp = Spline.NewVector3(vectors)
--			return {sp}
--		end,
		
--		Spline.LerpCombined
--	}
--}

-- Generates a new rideable zipline from a model.
function Zipline.New(Model)
	CheckIsModel(Model)

	local Zip = Object.New("Zipline")
	Zip.StartPart = nil
	Zip.TotalDistance = 0
	
	-- Configurable attributes
	Zip.DisplayThickness = ConfigDefaults.FillValue(THICKNESS_ATTRIBUTE, Model:GetAttribute(THICKNESS_ATTRIBUTE))
	Zip.SetProperty("Precision", ConfigDefaults.FillValue(PRECISION_ATTRIBUTE, Model:GetAttribute(PRECISION_ATTRIBUTE)), Zip.Refresh)
	Zip.SetProperty("GenerationMode", ConfigDefaults.FillValue(FORMULA_ATTRIBUTE, Model:GetAttribute(FORMULA_ATTRIBUTE)), Zip.Refresh)
	
	local ZipDecorPart = Model:WaitForChild("Decor", 5)
	assert(IsBasePart(ZipDecorPart), "The BasePart named 'Decor' wasn't found in the model.")
	local ZiplineTransparency = ZipDecorPart.Transparency
	ZipDecorPart.CanCollide = false
	ZipDecorPart.Transparency = 1

	local ZiplinePath = Instance.new("Folder")
	ZiplinePath.Name = "ZiplinePath"
	
	-- Handles the zipline course's segments and returns them.
	function Zip.GetCourse(model)
		CheckIsModel(model)

		local Points = model:WaitForChild("Points", 5)
		if Points ~= nil then
			local FoundStart = false

			-- Manual order detection is needed due to GetChildren() randomness
			local NumParts = #Points:GetChildren()
			local Parts = {}
			for i = 1, NumParts, 1 do
				local p = Points:FindFirstChild(tostring(i))
				if IsBasePart(p) then
					if FoundStart == false then
						FoundStart = true
						Zip.StartPart = p

						AddToCollection(p, Zip)
					end

					p.CanCollide = false
					table.insert(Parts, p)
				end
			end

			return Zipline.GetZiplineCourse(Zip, Parts, Zip.Precision, Zip.GenerationMode)
		end
	end
	
	-- Returns the configuration attribute of the zipline's model.
	function Zip.GetModelSetting(Attribute)
		return ConfigDefaults.FillValue(Attribute, Model:GetAttribute(Attribute))
	end

	-- Returns a combination of zipline display lines from the given bezier set.
	function Zip.GetZipDisplay(BezierSet)
		-- Set the part group size to account for
		local DisplayPrecision = math.clamp(Zip.GetModelSetting(DISPLAY_PRECISION_ATTRIBUTE), DISPLAY_PRECISION_MIN, DISPLAY_PRECISION_MAX)
		
		local PrecisionMultiplied = math.floor(Zip.Precision or 1 * (1 / DisplayPrecision))
		local GroupSize = math.max(PrecisionMultiplied, 1)
		PrecisionMultiplied, DisplayPrecision = nil, nil
		
		local Set = {}
		
		local d = Display.New()
		d.PartGroupSize = GroupSize
		d.Thickness = Zip.DisplayThickness
		d.Material = ZipDecorPart.Material
		d.Color = ZipDecorPart.Color
		d.Transparency = ZiplineTransparency
		d.Refresh(BezierSet)
		d.Parts.Parent = ZiplinePath

		return Set
	end

	function Zip.Refresh()
		local BezierSet = Zip.GetCourse(Model)
		Zip.BezierSet = BezierSet
		
		-- Display zipline if enabled.
		if Zip.GetModelSetting(PATH_DISPLAYED_ATTRIBUTE) == true then
			Zip.Display = Zip.GetZipDisplay(BezierSet)
		end
		
		BezierSet = nil
	end

	-- Initialize the zipline
	Zip.Refresh()

	-- The parent property of the zipline display model.
	Zip.SetProperty("ModelParent", nil, function(parent)
		if parent == nil or typeof(parent) == "Instance" then
			ZiplinePath.Parent = parent
		end
	end)

	-- Gets a lerped value over the course of the zipline
	function Zip.LerpTo(Time)
		Time = math.clamp(Time, 0, 1)
		return Bezier.LerpCombined(Time, Zip.BezierSet)
	end

	Zip.OnDisposal = function()
		if Zip.StartPart ~= nil then
			RemoveFromCollection(Zip.StartPart)
		end
		
		-- Dispose other objects
		if Zip.BezierSet ~= nil then
			for i, v in pairs(Zip.BezierSet) do
				v.Dispose()
			end
		end
		
		if Zip.DisplaySet ~= nil then
			for i, v in pairs(Zip.DisplaySet) do
				v.Dispose()
			end
		end
	end

	-- Listen for model changes
	Zip.AddEvent = Model.ChildAdded:Connect(function(c)
		if IsBasePart(c) then
			Zip.Refresh()
		end
	end)
	Zip.RemoveEvent = Model.ChildRemoved:Connect(function(c)
		if IsBasePart(c) then
			Zip.Refresh()
		end
	end)

	return Zip
end

return Zipline]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ed1</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXE1207959A23B45378EE563280D1F30B5">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Rider</string>
							<string name="ScriptGuid">{57AD891A-B64E-4BA6-B84B-FF482C4446B2}</string>
							<ProtectedString name="Source"><![CDATA[--[[
The class that gives the ability for a player
to ride the zipline.

By udev2192
]]--

local RunService = game:GetService("RunService")

local ZiplineService = script.Parent
local Object = require(ZiplineService:WaitForChild("Object"))
local Zipline = require(ZiplineService:WaitForChild("Zipline"))

local ZERO_VECTOR3 = Vector3.new(0, 0, 0)

local Rider = {}

-- Attribute names
local RIDER_DISPLAYED_ATTRIBUTE = "DisplaysRider"
local RIDE_SPEED_ATTRIBUTE = "RideSpeed"

Rider.WORKSPACE_CACHE_NAME = "ZiplineRiderWScache"

local function IsInstance(name, inst)
	return typeof(inst) == "Instance" and inst:IsA(name)
end

local function IsPart(Part)
	return IsInstance("BasePart", Part)
end

local function HasTouchEvent(Part)
	return IsInstance("BasePart", Part) or IsInstance("Humanoid", Part)
end

-- Welds part1 to part2
local function WeldParts(p1, p2)
	local Weld = Instance.new("WeldConstraint")
	Weld.Part0 = p1
	Weld.Part1 = p2
	Weld.Parent = Rider.WorkspaceCache
	
	return Weld
end

local function GetCFrameOri(Ori)
	assert(typeof(Ori) == "Vector3", "Argument 1 must be a Vector3.")
	return CFrame.fromOrientation(math.rad(Ori.X), math.rad(Ori.Y), math.rad(Ori.Z))
end

--local function GetModelHeight(Model)
--	assert(typeof(Model) == "Instance" and Model:IsA("Model"), "Argument 1 must be a model.")
--	return Model:GetExtentsSize().Y
--end

-- Toggles if the rider cache folder exists in the DataModel.
function Rider.ToggleRiderCache(Enabled)
	local WSCache = Rider.WorkspaceCache
	
	if Enabled == true then
		WSCache = WSCache or workspace:FindFirstChild(Rider.WORKSPACE_CACHE_NAME) or Instance.new("Folder")
		
		Rider.WorkspaceCache = WSCache
		WSCache.Name = Rider.WORKSPACE_CACHE_NAME
		WSCache.Parent = workspace
	else
		if WSCache ~= nil then
			WSCache:Destroy()
		end
		
		Rider.WorkspaceCache = nil
		WSCache = nil
	end
end

Rider.ToggleRiderCache(true)

function Rider.New()
	local Obj = Object.New("ZiplineRider")
	local NumConnections = 0
	local IsTouching = false
	
	Obj.CanZipline = true
	Obj.IsOnZipline = false
	Obj.Speed = 16 -- In studs per second
	Obj.TouchConnections = {}
	Obj.LastVelocity = ZERO_VECTOR3
	
	-- If zipline configuration affects ride speed.
	Obj.ZiplineAffectsSpeed = true
	
	-- The default part that rides the zipline.
	Obj.RidingRig = nil
	
	-- Display properties of the handle part
	Obj.HandleDisplaySettings = {
		Transparency = 0,
		Material = Enum.Material.Concrete,
		Color = Color3.fromRGB(0, 0, 0),
		Size = Vector3.new(4, 1, 1)
	}
	
	-- BodyGyro mover config
	-- Thanks to ForbiddenJ for helping me
	-- tweak these!
	-- 1 power makes for precise replication
	-- because the physics engine would've
	-- picked up the CFrame change along
	-- with high dampening values to get
	-- rid of bouncing
	Obj.GyroDampening = 2500
	Obj.GyroPower = 1
	
	Obj.PartMassMultiplier = 2000
	
	-- Returns if the rider can keep riding the zipline.
	function Obj.CanAdvanceOnZipline()
		return Obj ~= nil and Obj.CanZipline == true and Obj.IsOnZipline == true
	end
	
	-- Sends the provided part riding down the provided zipline.
	function Obj.UseZipline(Part, Zip)
		assert(IsPart(Part), "Argument 1 must be a BasePart.")
		assert(Zip ~= nil, "Argument 2 must be a Zipline.")
		
		if Obj.CanZipline == true and Obj.IsOnZipline == false then
			
			Obj.IsOnZipline = true
			local Time = 0
			local TotalDist = Zip.TotalDistance
			if TotalDist > 0 then
				-- Begin the zipline welding.
				local Moving = Instance.new("Part")
				
				local HandleDisplay = Obj.HandleDisplaySettings or {}
				for i, v in pairs(HandleDisplay) do
					Moving[i] = v
				end
				
				Moving.CanCollide = false
				Moving.Anchored = true
				
				--local Mass = Part.Mass
				
				-- Use a BodyGyro and BodyPosition for replication.
				-- Force properties don't matter since the
				-- CFrame property will be taken in by the physics engine
				local BodyGyro = Instance.new("BodyGyro")
				local BodyPosition = Instance.new("BodyPosition")
				--BodyGyro.MaxTorque = Vector3.new(Mass, Mass, Mass) * Obj.PartMassMultiplier
				--BodyGyro.D = Obj.GyroDampening
				--BodyGyro.P = Obj.GyroPower
				
				-- Change ride speed to zipline settings when permitted.
				if Obj.ZiplineAffectsSpeed == true then
					Obj.Speed = Zip.GetModelSetting(RIDE_SPEED_ATTRIBUTE)
				end
				
				-- Longer ziplines should have DistDelta
				-- be a shorter number.
				local DistDelta = Obj.Speed / TotalDist

				local function nextFrame()
					local Pos, cf = Zip.LerpTo(Time)
					cf = cf.Direction
					
					local RiderCf = cf - Vector3.new(0, (Zip.DisplayThickness + (Part.Size.Y/2)), 0)
					if Pos ~= nil and Obj ~= nil then
						Moving.CFrame = cf
						Obj.LastVelocity = cf.LookVector * Obj.Speed
						Part.CFrame = RiderCf
						
						-- Replicate
						BodyGyro.CFrame = RiderCf
						BodyPosition.Position = RiderCf.Position
						
						--Moving.AssemblyLinearVelocity = cf.LookVector -- So movement replicates
					end
					return Pos, cf, RiderCf
				end
				
				-- Weld the parts
				local FirstPos, FirstCf, RiderCf = nextFrame()
				
				Part.CFrame = RiderCf --CFrame.new(FirstPos.X, FirstPos.Y, FirstPos.Z) * GetCFrameOri(FirstCf.YVector)
				--local Weld = WeldParts(Part, Moving)
				if Zip.GetModelSetting(RIDER_DISPLAYED_ATTRIBUTE) == true then
					Moving.Parent = Rider.WorkspaceCache
				else
					Moving.Parent = nil
				end
				
				BodyGyro.CFrame = RiderCf
				BodyPosition.Position = RiderCf.Position
				
				BodyGyro.Parent = Part
				BodyPosition.Parent = Part
				
				FirstPos, FirstCf = nil, nil

				Object.FireCallback(Obj.OnGrab, Zip)

				-- Ride the zipline.
				-- A while loop is used instead of RunService.Heartbeat
				-- to lower the impact of framerate.
				while Obj.CanAdvanceOnZipline() and Time <= 1 do
					local TimeDelta = RunService.Heartbeat:Wait()
					Time += DistDelta * TimeDelta
					--print(Time)
					nextFrame()
				end

				nextFrame = nil

				-- Let go of the part.
				BodyGyro:Destroy()
				BodyGyro = nil
				
				BodyPosition:Destroy()
				BodyPosition = nil
				
				--Weld:Destroy()
				--Weld = nil

				Moving:Destroy()
				Moving = nil
			end
			
			if Obj ~= nil then
				Obj.IsOnZipline = false

				Object.FireCallback(Obj.OnRelease, Zip)
			end
		end
	end
	
	-- Releases the rider from the zipline
	function Obj.Release()
		Obj.IsOnZipline = false
	end

	-- Handles a part touch internally.
	function Obj.HandleTouch(ControlPart, OtherPart)
		if Obj.CanZipline == true and Obj.IsOnZipline == false then
			local Zipline = Zipline.GetZipline(OtherPart)
			
			if Zipline ~= nil then
				Obj.UseZipline(Obj.RidingRig or ControlPart, Zipline)
			end
		end
	end

	-- Adds the touch connection to the part specified.
	function Obj.AddTouchConnection(Part)
		assert(IsPart(Part), "Argument 1 must be a BasePart")
		NumConnections += 1
		
		local Connection = Part.Touched:Connect(function(OtherPart)
			if IsTouching == false then
				IsTouching = true
				Obj.HandleTouch(Part, OtherPart)
				IsTouching = false
			end
		end)
		Obj.TouchConnections[Part] = Connection
	end
	
	-- Disconnects all parts from triggering this rider
	function Obj.DisconnectAll()
		for i, v in pairs(Obj.TouchConnections) do
			if typeof(v) == "RBXScriptConnection" then
				v:Disconnect()
				v = nil
			end
		end
	end
	
	-- Fired when a zipline is grabbed.
	Obj.OnGrab = nil
	
	-- Fired when the rider lets go of a zipline.
	Obj.OnRelease = nil
	
	Obj.OnDisposal = function()
		Obj.Release()
		Obj.DisconnectAll()
	end
	
	return Obj
end

return Rider]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ed2</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX03A24C4F200F4AFAB4E2FF592A53EB9D">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PlayerAdapter</string>
							<string name="ScriptGuid">{B23ECAEC-F6BE-454D-A103-987637DE537D}</string>
							<ProtectedString name="Source"><![CDATA[--[[
The Rider module adapter/wrapper for players.

By default, the player gets off a zipline
when they jump or when they die.

By udev2192
]]--

local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local ZiplineService = script.Parent
local Object = require(ZiplineService:WaitForChild("Object"))
local Rider = require(ZiplineService:WaitForChild("Rider"))

local PlayerAdapter = {}

-- For manual tuning (default numbers are for R6)
local LAUNCH_VELOCITY_MULTIPLIER = 1
local JUMP_VELOCITY_MULTIPLIER = 1

-- Sets if the ziplines can only be triggered
-- by one rig.
local USING_ONE_RIG = false

-- Attribute names
local JUMP_DISMOUNT_ATTRIBUTE = "CanJumpToDismount"
local GRAB_SOUND_ATTRIBUTE = "GrabSound"
local RIDE_SOUND_ATTRIBUTE = "RideSound"
local RELEASE_SOUND_ATTRIBUTE = "ReleaseSound"
local VOLUME_ATTRIBUTE = "Volume"

-- Humanoid states where a player would let go of the zipline.
PlayerAdapter.RELEASE_STATES = {Enum.HumanoidStateType.Dead, Enum.HumanoidStateType.Jumping}

-- The name of the rig of the character that can triggger the zipline.
PlayerAdapter.RIG_NAME = "Head"

--PlayerAdapter.GRAB_SOUND = "rbxassetid://12222054"
--PlayerAdapter.RIDE_SOUND = "rbxassetid://12222076" -- Loop
--PlayerAdapter.RELEASE_SOUND = "rbxassetid://11900833"

local function WaitForDur(s)
	if typeof(s) == "number" and s > 0 then
		local Elapsed = 0
		
		while Elapsed < s do
			Elapsed += RunService.Heartbeat:Wait()
		end
	end
end

local function PlaySound(URL, Volume)
	if URL ~= nil and URL ~= "" then
		coroutine.wrap(function()
			local Sound = Instance.new("Sound")
			Sound.SoundId = URL
			Sound.Looped = false
			Sound.Volume = Volume or 0.5
			Sound.Parent = script
			Sound:Play()
			Sound.Ended:Wait()
			Sound:Destroy()
			Sound = nil
		end)()
	end
end

local function IsPart(Part)
	return typeof(Part) == "Instance" and Part:IsA("Part")
end

local function GetWeightOfPart(Part)
	assert(IsPart(Part), "Argument 1 must be a BasePart.")
	
	local Weight = Part:GetMass()
	for i, v in pairs(Part:GetConnectedParts()) do
		if IsPart(v) then
			Weight += v:GetMass()
		end
	end
	
	return Weight
end

-- Rider workspace cache toggler.
function PlayerAdapter.ToggleRiderCache(Enabled)
	Rider.ToggleRiderCache(Enabled)
end

function PlayerAdapter.New(Player)
	assert(typeof(Player) == "Instance" and Player:IsA("Player"), "Argument 1 must be a player instance.")
	assert(RunService:IsClient(), "PlayerAdapter is currently only supported on the client.")

	local Obj = Object.New("ZiplinePlayerAdapter")
	local StateChangedEvent = nil
	local JumpRequestEvent = nil
	
	Obj.Character = nil
	Obj.Humanoid = nil
	Obj.RespawnEvent = nil
	Obj.Rider = Rider.New()
	Obj.RideLoop = nil
	Obj.Rig = nil
	Obj.RigTouchEvent = nil
	Obj.RootPart = nil
	Obj.UseMomentum = true -- If momentum is applied on zipline release
	
	-- How long to wait before accepting the next zipline
	-- jump request.
	Obj.NextJumpDelay = 0.005
	
	-- This number multiplies the humanoid's WalkSpeed,
	-- which is used for the zipline rider speed.
	-- This might be needed so the player doesn't
	-- feel as if riding the zipline is too slow.
	-- No longer used as of customization update.
	--Obj.HumanoidSpeedMultiplier = 1.5

	local PlayerLeavingEvent = nil

	local function DisconnectHumanoidChange()
		if StateChangedEvent ~= nil then
			StateChangedEvent:Disconnect()
			StateChangedEvent = nil
		end
	end
	
	local function DisconnectJumpRequest()
		if JumpRequestEvent ~= nil then
			JumpRequestEvent:Disconnect()
			JumpRequestEvent = nil
		end
	end
	
	-- This function handles releases before the player
	-- reaches the end of a zipline.
	local function HandleEarlyRelease()
		DisconnectJumpRequest()
		DisconnectHumanoidChange()

		-- Release
		Obj.DoInternalRelease()
	end
	
	local function ToggleRideLoop(IsPlaying, Url)
		local PrevLoop = Obj.RideLoop
		
		if IsPlaying == true then
			if Url ~= nil and Url ~= "" then
				ToggleRideLoop(false) -- In case the loop is still playing

				local Loop = Instance.new("Sound")
				Obj.RideLoop = Loop
				
				Loop.SoundId = Url
				Loop.Looped = true
				Loop.Parent = script
				Loop:Play()

				Loop = nil
			end
		elseif PrevLoop ~= nil then
			PrevLoop:Destroy()
		end
		
		PrevLoop = nil
	end

	function Obj.DoInternalRelease()
		if Obj.Rider ~= nil then
			Obj.Rider.Release()
		end
	end
	
	-- Sets the velocity of the HumanoidRootPart (for internal use)
	function Obj.SetVelocity(velocity)
		if Obj.UseMomentum == true then
			local RootPart = Obj.RootPart
			if RootPart ~= nil then
				velocity = velocity * LAUNCH_VELOCITY_MULTIPLIER
				RootPart.AssemblyLinearVelocity = velocity
				RootPart:ApplyImpulse(velocity)
			end
		end
	end

	function Obj.HandleHumanoidChange(State)
		-- Release from a zipline if there is a release state match
		if table.find(PlayerAdapter.RELEASE_STATES, State) then
			Obj.DoInternalRelease()
		end

		if State == Enum.HumanoidStateType.Dead then
			if Obj.RigTouchEvent ~= nil then
				Obj.RigTouchEvent:Disconnect()
				Obj.RigTouchEvent = nil
			end

			if Obj.Rider ~= nil then
				Obj.Rider.DisconnectAll()
			end

			DisconnectHumanoidChange()
			DisconnectJumpRequest()
		end
	end
	
	-- Connects "important" rider events
	function Obj.ReconnectEvents()
		-- Disconnect previously connected events, just in case.
		DisconnectJumpRequest()
		DisconnectHumanoidChange()

		-- Reconnect.
		local ObjRider = Obj.Rider
		local Humanoid = Obj.Humanoid

		if ObjRider ~= nil and Humanoid ~= nil then
			local NextLaunchVelocty = nil
			
			-- Debounce values.
			local IsGrabbing = false
			local IsReleasing = false
			local JumpRequested = false
			
			-- Event connections.
			ObjRider.OnGrab = function(Zip)
				if IsGrabbing == false and IsReleasing == false and JumpRequested == false then
					IsGrabbing = true
					
					NextLaunchVelocty = nil -- Just in case
					--StateChangedEvent = Obj.Humanoid.StateChanged:Connect(Obj.HandleHumanoidChange)

					-- Connect to releasing when the player dies.
					StateChangedEvent = Obj.Humanoid.HealthChanged:Connect(function(health)
						if health <= 0 then
							ObjRider.DisconnectAll() -- So the player can't grab a zipline while being dead.
							HandleEarlyRelease()
						end
					end)

					-- Makes players have the ability to jump to dismount.
					-- This applies if the zipline allows for it.
					-- Needed for now cause PlatformStand sucks.
					if Zip.GetModelSetting(JUMP_DISMOUNT_ATTRIBUTE) == true then
						JumpRequestEvent = UserInputService.JumpRequest:Connect(function()
							if JumpRequested == false then
								JumpRequested = true
								
								--print("Jump to release requested")
								HandleEarlyRelease()

								if Humanoid ~= nil and ObjRider ~= nil then
									local lv = ObjRider.LastVelocity
									NextLaunchVelocty = Vector3.new(lv.X, Humanoid.JumpPower * JUMP_VELOCITY_MULTIPLIER, lv.Z)
									Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
								end
								
								-- Counter "multi-grabbing" by waiting.
								WaitForDur(Obj.NextJumpDelay or 0)
								
								JumpRequested = false
							end
						end)
					end
					
					IsGrabbing = false
					
					local Vol = Zip.GetModelSetting(VOLUME_ATTRIBUTE)
					PlaySound(Zip.GetModelSetting(GRAB_SOUND_ATTRIBUTE), Vol)
					ToggleRideLoop(true, Zip.GetModelSetting(RIDE_SOUND_ATTRIBUTE), Vol)
				end
			end

			Obj.Rider.OnRelease = function(Zip)
				if IsReleasing == false then
					IsReleasing = true
					
					--print("release detected")
					DisconnectHumanoidChange()
					DisconnectJumpRequest()
					--Obj.Humanoid.PlatformStand = false

					if NextLaunchVelocty == nil then
						local LastVelocity = Obj.Rider.LastVelocity
						--print(LastVelocity)
						Obj.SetVelocity(LastVelocity)
					else
						--print("Next launch velocity", NextLaunchVelocty)
						Obj.SetVelocity(NextLaunchVelocty)
					end

					NextLaunchVelocty = nil

					PlaySound(Zip.GetModelSetting(RELEASE_SOUND_ATTRIBUTE), Zip.GetModelSetting(VOLUME_ATTRIBUTE))
					ToggleRideLoop(false)
					
					IsReleasing = false
				end
			end
		end
	end

	-- Does the internal respawn handling.
	-- This is where the zipline ability stuff happens.
	function Obj.HandleRespawn(char)
		if typeof(char) == "Instance" then
			-- Clear the connected parts remaining
			local ObjRider = Obj.Rider
			if ObjRider ~= nil then
				ObjRider.DisconnectAll()

				-- Connect humanoid state change events
				local Humanoid = char:WaitForChild("Humanoid", 5)
				assert(typeof(Humanoid) == "Instance" and Humanoid:IsA("Humanoid"), "The character's humanoid is missing.")
				Obj.Humanoid = Humanoid
				Obj.RootPart = char:WaitForChild("HumanoidRootPart")
				ObjRider.Speed = Humanoid.WalkSpeed * (Obj.HumanoidSpeedMultiplier or 1)

				-- Reconnect the interacting rig
				Obj.Character = char
				Obj.Rig = char:WaitForChild(PlayerAdapter.RIG_NAME)
				Obj.ReconnectEvents()
				ObjRider.RidingRig = Obj.Rig
				if USING_ONE_RIG == true then
					ObjRider.AddTouchConnection(Obj.Rig)
				else
					for i, v in pairs(Obj.Character:GetChildren()) do
						if v:IsA("BasePart") then
							ObjRider.AddTouchConnection(v)
						end
					end
				end
			end
		end
	end

	-- Set the specified rig to be able to interact with ziplines
	Obj.SetProperty("InteractingRig", nil, function(rig)
		if typeof(rig) == "Instance" and rig:IsA("BasePart") and Obj.Rider ~= nil then
			Obj.Rider.DisconnectAll()
			Obj.Rider.AddTouchConnection(rig)
		end
	end)

	-- Initialize
	Obj.HandleRespawn(Player.Character)

	Obj.RespawnEvent = Player.CharacterAdded:Connect(Obj.HandleRespawn)

	PlayerLeavingEvent = Players.PlayerRemoving:Connect(function(plr)
		if plr == Player then
			PlayerLeavingEvent:Disconnect()
			PlayerLeavingEvent = nil
			
			DisconnectHumanoidChange()
			DisconnectJumpRequest()

			Obj.Rider.Dispose()
			Obj.Dispose()
		end
	end)
	
	Obj.OnDisposal = function()
		-- Release and get rid of the rider on disposal.
		HandleEarlyRelease()
		
		local ObjRider = Obj.Rider
		
		if ObjRider ~= nil then
			ObjRider.Dispose()
		end
		
		ObjRider = nil
	end

	return Obj
end

return PlayerAdapter]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ed3</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX789FB7D03B5647E984C559EB3B4E9E3B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Bezier</string>
							<string name="ScriptGuid">{57425B4F-F25C-4B83-B390-9F5873A35B8D}</string>
							<ProtectedString name="Source"><![CDATA[--[[
Bezier.lua by udev2192

Handles operations with bezier curves

Some variable names are derived from algebra for readability.

Thanks to Roblox for providing the necessary functions:
https://developer.roblox.com/en-us/articles/Bezier-curves
]]--

local ZiplineService = script.Parent
local Object = require(ZiplineService:WaitForChild("Object"))

local Bezier = {}

local function Hypotenuse(a, b)
	return (a^2 + b^2) ^ 0.5
end

local function GetLengthInternal(numPoints, func, dataType, ...)
	local Total, Ranges, Sums, IntToTime = 0, {}, {}, {}
	local IsVector = string.match(dataType, "Vector", 1)
	
	for i = 0, numPoints - 1, 1 do
		local p1, p2 = func(i / numPoints, ...), func((i + 1) / numPoints, ...)
		local distance = nil;
		if IsVector then
			distance = (p2 - p1).magnitude
		else
			distance = Hypotenuse(p1, p2);
		end
		
		local CenterPosition = (p1 + p2) / 2

		Ranges[Total] = {
			Distance = distance,
			Point1 = p1,
			Point2 = p2,
			Magnitude = (p2 - p1).Magnitude,
			CenterPos = CenterPosition,
			Direction = CFrame.new(CenterPosition, p1) * CFrame.Angles(0, math.pi, 0)
		}
		
		table.insert(Sums, Total)
		Total += distance
	end

	return Total, Ranges, Sums
end

function Bezier.Lerp(a, b, c) -- For interpolation
	return a + (b - a) * c
end

function Bezier.Calculate(t, PointsTable)
	assert(typeof(PointsTable) == "table", "Argument #2 must be a table.")
	
	-- t specifies time/alpha (between 0-1)
	-- PointsTable specifies each point
	if typeof(PointsTable) == "table" then
		if #PointsTable >= 2 then
			
		else
			warn("Argument #2 must have at least 2 indexes/points.")
			return 0
		end
	else
	end
end

function Bezier.Linear(t, p0, p1)
	return (1 - t) * p0 + t * p1
end

function Bezier.Quadratic(t, p0, p1, p2)
	return (1 - t)^2 * p0 + 2 * (1 - t) * t * p1 + t^2 * p2
end

function Bezier.Cubic(t, p0, p1, p2, p3)
	return (1 - t)^3 * p0 + 3 * (1 - t)^2 * t * p1 + 3 * (1 - t) * t^2 * p2 + t^3 * p3
end

-- Segment length calculator (in a single dimension)
function Bezier.GetLengths(numPoints, func, ...)
	return GetLengthInternal(numPoints, func, "number", ...)
end

-- For Vector3 segment length calculation
function Bezier.GetVect3Lengths(numPoints, func, ...)
	return GetLengthInternal(numPoints, func, "Vector3", ...)
end

-- Constructs and returns a new bezier
function Bezier.New(calcFunc, numPoints, ...)
	local Obj = Object.New("BezierCurve")
	
	function Obj.RecalculateAll(func, numPointsRedo, ...)
		local TotalDist, RangesList, DistancesList = Bezier.GetVect3Lengths(numPointsRedo, func, ...)
		local Points = {...}
		
		Obj.BeginningPoint = Points[1]
		Obj.EndPoint = Points[#Points]
		
		Obj.SetProperty("Func", calcFunc, nil)
		Obj.SetProperty("NumPoints", numPoints, nil)
		Obj.SetProperty("Points", Points, nil)

		Obj.SetProperty("TotalDist", TotalDist, nil) -- Total travel distance.
		Obj.SetProperty("Ranges", RangesList, nil)
		Obj.SetProperty("Distances", DistancesList, nil)
		
		return TotalDist, RangesList, DistancesList
	end
	
	-- For initialization
	Obj.RecalculateAll(calcFunc, numPoints, ...)
	
	-- Resets the path to the specified Vector3 points
	function Obj.SetPoints(...)
		return Obj.RecalculateAll(Obj.Func, Obj.NumPoints, ...)
	end
	
	-- Gets the index of the curve.
	-- Use if percentage isn't a factor.
	function Obj.GetSegmentByIndex(pos)
		return Obj.Ranges[pos]
	end
	
	-- Returns the distance by the provided array index,
	-- if it exists.
	--function Obj.GetDistanceByIndex(Index)
	--	return Obj.Distances[Index]
	--end
	
	-- Gets a segment based on the percentage of the curve.
	function Obj.GetSegmentByTime(timePos)
		local t, near = timePos * Obj.TotalDist, 0
		local DistTable = Obj.Distances
		
		for _, i in ipairs(DistTable) do
			if (t - i) >= 0 then
				near = i
			else
				break
			end 
		end
		
		local pointsSet = Obj.Ranges[near]
		
		if typeof(pointsSet) == "table" then
			local percent = (t - near) / pointsSet.Distance
			return pointsSet, percent -- {point1, point2, ...}, offset
		else
			return
		end
	end
	
	-- Returns an array of all segments
	function Obj.GetAllSegments()
		--local NumPoints = Obj.NumPoints
		--local Increment = 1/NumPoints
		--
		--local Set = {}
		--for i = 0, 1, Increment do
		--	local Segment = Obj.GetSegmentByTime(i)
		--	if Segment ~= nil then
		--		table.insert(Set, Segment)
		--	end
		--end
		
		--return Set
		
		--return Obj.Ranges
		
		local Segments = {}
		local Ranges = Obj.Ranges
		local Distances = Obj.Distances
		if Distances ~= nil then
			for i, v in ipairs(Distances) do
				local val = Ranges[v]
				if val ~= nil then
					table.insert(Segments, val)
				end
			end
		end
		
		return Segments
	end
	
	return Obj
end

-- Returns a lerped value on the bezier set (this is for arc length parameterization).
function Bezier.LerpCombined(Time, Beziers)
	local TotalDist, Sums = 0, {}

	-- Find the sum of all bezier curves
	for i, v in ipairs(Beziers) do
		table.insert(Sums, TotalDist)
		TotalDist += v.TotalDist
	end

	-- Pinpoint the position on the combined bezier with the provided time
	local t, near, CurrentBezier = TotalDist * Time, 0, Beziers[1]
	for i, v in ipairs(Sums) do
		if (t - v) >= 0 then
			near, CurrentBezier = v, Beziers[i]
		else
			break
		end
	end

	-- Find the percent traveled on the overall bezier
	local Percentage = (t - near) / CurrentBezier.TotalDist

	-- Interpolate using the percentage
	local FoundSegment = CurrentBezier.GetSegmentByTime(Percentage)
	local a, b, c = FoundSegment.Point1, FoundSegment.Point2, Percentage

	return Bezier.Lerp(a, b, c), FoundSegment
end

return Bezier]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ed4</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX31D718263E704D28B96169DDC0BDC45E">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">ConfigDefaults</string>
							<string name="ScriptGuid">{6F9E1EF4-E130-400B-BCC8-87D01D1396AD}</string>
							<ProtectedString name="Source"><![CDATA[-- Default configuration values for the ziplines.

local ConfigDefaults = {}

ConfigDefaults.Values = {
	RideSpeed = 16, -- How fast the player rides the zipline (in studs per second).
	Thickness = 0.5, -- Zipline thickness (in studs).
	GenerationMode = 2, -- Zipline generation formula.
	Precision = 50, -- How precise zipline generation should be.
	DisplayPrecision = 0.5, -- How precise the zipline path should be.
	Volume = 0.5, -- Volume that the zipline sounds play at for the zipline.
	CanJumpToDismount = true, -- If the player can jump to dismount the zipline.
	DisplaysPath = true, -- If a path (in parts) for the zipline is generated.
	DisplaysRider = true, -- If the rider part is displayed.
	GrabSound = "rbxassetid://12222054", -- Played when the zipline is grabbed.
	RideSound = "rbxassetid://12222076", -- Loop played during zipline ride.
	ReleaseSound = "rbxassetid://11900833" -- Played when the zipline is released.
}

-- Returns the default from the values list if the
-- argument 2 is nil or the type is mismatched.
function ConfigDefaults.FillValue(ValueName, Val)
	local Default = ConfigDefaults.Values[ValueName]
	
	if Default ~= nil then
		if typeof(Val) == typeof(Default) then
			return Val
		else
			return Default
		end
	else
		warn(ValueName, "is an invalid zipline attribute.")
		return nil
	end
end

return ConfigDefaults]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ed5</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXFD66D79AB2F54DADA3733B52127532EA">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Spline</string>
							<string name="ScriptGuid">{9BBCAB5E-55B0-43C0-A0C5-749D987EFAB1}</string>
							<ProtectedString name="Source"><![CDATA[--[[
A utility module for cubic spline interpolation.

See: https://en.wikipedia.org/wiki/Spline_interpolation
]]--

local ZiplineService = script.Parent
local Object = require(ZiplineService:WaitForChild("Object"))

local Spline = {}

local function Hypotenuse(a, b)
	return (a^2 + b^2) ^ 0.5
end

function Spline.Lerp(a, b, c) -- For interpolation
	return a + (b - a) * c
end

-- Formula
function Spline.Interpolate(numPoints, t, a, b)
	return ((1 - (t * numPoints)) * a) + ((t * numPoints) * b) + ((t * numPoints) * ((1 - (t * numPoints))) * (((1 - (t * numPoints)) * a) * (t * numPoints * b)))
end

function Spline.GetVector3(numPoints, t, v1, v2)
	assert(typeof(v1) == "Vector3", "Argument 3 must be a Vector3.")
	assert(typeof(v2) == "Vector3", "Argument 4 must be a Vector3.")
	
	local x = Spline.Interpolate(numPoints, t, v1.X, v2.X)
	local y = Spline.Interpolate(numPoints, t, v1.Y, v2.Y)
	local z = Spline.Interpolate(numPoints, t, v1.Z, v2.Z)
	
	return Vector3.new(x, y, z)
end

function Spline.GetLength(IsVector3, PointArgs)
	local Total, Ranges, Sums = 0, {}, {}
	local numPoints = #PointArgs
	
	local func = nil
	if IsVector3 then
		func = Spline.GetVector3
	else
		func = Spline.Interpolate
	end
	
	for i = 0, numPoints - 1, 1 do
		local p1, p2 = func(numPoints, i / numPoints, PointArgs[1], PointArgs[numPoints]), func(numPoints, i / numPoints, PointArgs[1], PointArgs[numPoints])
		local distance = nil;
		if IsVector3 then
			distance = (p2 - p1).magnitude
		else
			distance = Hypotenuse(p1, p2);
		end

		local CenterPosition = (p1 + p2) / 2

		Ranges[Total] = {
			Distance = distance,
			Point1 = p1,
			Point2 = p2,
			Magnitude = (p2 - p1).Magnitude,
			CenterPos = CenterPosition,
			Direction = CFrame.new(CenterPosition, p1) * CFrame.Angles(0, math.pi, 0)
		}

		table.insert(Sums, Total)
		Total += distance
	end
	
	return Total, Ranges, Sums
end

function Spline.NewVector3(points)
	assert(typeof(points) == "table", "Argument 1 must be an array.")
	
	local Obj = Object.New("Spline")
	
	-- Refreshes the spline's calculations
	function Obj.Refresh()
		local TotalDist, RangesList, DistancesList = Spline.GetLength(true, Obj.PointsArray)
		
		Obj.SetProperty("TotalDist", TotalDist, nil) -- Total travel distance.
		Obj.SetProperty("Ranges", RangesList, nil)
		Obj.SetProperty("Distances", DistancesList, nil)
	end
	
	-- Resets the path to the specified Vector3 points
	function Obj.SetPoints(newPoints)
		Obj.PointsArray = newPoints
	end

	-- Gets the index of the curve.
	-- Use if percentage isn't a factor.
	function Obj.GetSegmentByIndex(pos)
		return Obj.Ranges[pos]
	end

	-- Gets a segment based on the percentage of the curve.
	function Obj.GetSegmentByTime(timePos)
		local t, near = timePos * Obj.TotalDist, 0
		local DistTable = Obj.Distances

		for _, i in ipairs(DistTable) do
			if (t - i) >= 0 then
				near = i
			else
				break
			end 
		end

		local pointsSet = Obj.Ranges[near]

		if typeof(pointsSet) == "table" then
			local percent = (t - near) / pointsSet.Distance
			return pointsSet, percent -- {point1, point2, ...}, offset
		else
			return
		end
	end

	-- Returns an array of all segments
	function Obj.GetAllSegments()
		local NumPoints = Obj.NumPoints
		local Increment = 1/NumPoints

		local Set = {}
		for i = 0, 1, Increment do
			local Segment = Obj.GetSegmentByTime(i)
			if Segment ~= nil then
				table.insert(Set, Segment)
			end
		end

		return Set
	end
	
	-- Initialize
	Obj.SetProperty("NumPoints", #points, Obj.Refresh)
	Obj.SetProperty("PointsArray", points, Obj.Refresh)
	Obj.Refresh()
	
	return Obj
end

-- Returns a lerped value on the spline set (this is for arc length parameterization).
function Spline.LerpCombined(Time, Beziers)
	local TotalDist, Sums = 0, {}

	-- Find the sum of all bezier curves
	for i, v in ipairs(Beziers) do
		table.insert(Sums, TotalDist)
		TotalDist += v.TotalDist
	end

	-- Pinpoint the position on the combined bezier with the provided time
	local t, near, CurrentBezier = TotalDist * Time, 0, Beziers[1]
	for i, v in ipairs(Sums) do
		if (t - v) >= 0 then
			near, CurrentBezier = v, Beziers[i]
		else
			break
		end
	end

	-- Find the percent traveled on the overall bezier
	local Percentage = (t - near) / CurrentBezier.TotalDist

	-- Interpolate using the percentage
	local FoundSegment = CurrentBezier.GetSegmentByTime(Percentage)
	local a, b, c = FoundSegment.Point1, FoundSegment.Point2, Percentage

	return Spline.Lerp(a, b, c), FoundSegment
end

return Spline]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ed6</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXDF4D11A8AFE74962A5F7F5D3F4B2290B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Display</string>
							<string name="ScriptGuid">{DD486FEE-65AB-4927-9299-EB4577A9ECB9}</string>
							<ProtectedString name="Source"><![CDATA[-- The module that displays the zipline.
-- By: udev2192

-- Unused function archive:
--[[
	local function DrawByIndex(i1, i2)
		local s1 = Bezier.GetSegmentByIndex(i1)
		local s2 = Bezier.GetSegmentByIndex(i2)
		local point1 = s1.Point1
		local point2 = s2.Point2
		local CenterPos = (point1 + point2) / 2
		local cf = CFrame.new(CenterPos, point1)
		
		local Properties = {
			Anchored = true,
			CanCollide = false,
			Size = Vector3.new(ZIPLINE_THICKNESS, ZIPLINE_THICKNESS, (point2 - point1).Magnitude),
			CFrame = cf,
			--CFrame = CFrame.new(CenterPos.X, CenterPos.Y, CenterPos.Z) * GetLineOrientation(p1, p2);
			Transparency = Obj.Transparency,
			Material = Obj.Material,
			Color = Obj.Color
		}

		local Part = GetLineInternal(Properties)

		return Part
	end
]]--

local ZiplineService = script.Parent
local Object = require(ZiplineService:WaitForChild("Object"))

local Display = {}

local ZERO_VECTOR3 = Vector3.new(0, 0, 0)

local DEFAULT_MATERIAL = Enum.Material.Plastic
local DEFAULT_COLOR = Color3.fromRGB(0, 0, 0)
local DEFAULT_TRANSPARENCY = 0.5;

function GetLineOrientation(p1, p2)
	return CFrame.lookAt(p1, p2)
end

function GetLineInternal(PartProperties)
	local Line = Instance.new("Part")
	Line.Anchored = true -- Just in case
	for i, v in pairs(PartProperties) do
		--print(i, ":", v)
		Line[i] = v
	end

	return Line
end

-- Generates a 3d line for display as a Part.
function Display.GetLineFromPoints(PartProperties)
	return GetLineInternal(PartProperties)
end

function Display.New()
	local Obj = Object.New("ZiplineDisplay")
	Obj.Parts = Instance.new("Model")
	--Obj.Segments = {}

	-- Amount of points one displayed point would actually represent.
	-- This means higher number = better performance.
	Obj.PartGroupSize = 20

	Obj.SetProperty("Material", DEFAULT_MATERIAL, function(material)
		for i, v in ipairs(Obj.Parts:GetChildren()) do
			if v:IsA("BasePart") then
				v.Material = material
			end
		end
	end)
	Obj.SetProperty("Color", DEFAULT_COLOR, function(color)
		for i, v in ipairs(Obj.Parts:GetChildren()) do
			if v:IsA("BasePart") then
				v.Color = color
			end
		end
	end)
	Obj.SetProperty("Transparency", DEFAULT_COLOR, function(transparency)
		for i, v in ipairs(Obj.Parts:GetChildren()) do
			if v:IsA("BasePart") then
				v.Transparency = transparency
			end
		end
	end)
	Obj.SetProperty("Thickness", 1, function(thickness)
		for i, v in ipairs(Obj.Parts:GetChildren()) do
			if v:IsA("BasePart") then
				v.Size = Vector3.new(thickness, thickness, v.Size.Z)
			end
		end
	end)

	-- Draws the zipline display using the beziers provided in the array.
	function Obj.Refresh(beziers)
		local Thickness = Obj.Thickness
		local GroupSize = Obj.PartGroupSize
		local model = Obj.Parts

		if Thickness ~= nil and GroupSize ~= nil then
			for i, bezier in ipairs(beziers) do
				local Segments = bezier.GetAllSegments()
				--Obj.Segments = Segments

				-- The last segment with GroupSize
				-- taken into account.
				local LastSegment = nil
				
				local TotalMagnitude = 0

				-- The last part group center position.
				--local LastCenterPos = nil

				-- Generate the parts
				local NumSegments = #Segments
				local FinalIndex = NumSegments - GroupSize + 1

				for i, v in ipairs(Segments) do
					local p1 = nil
					local p2 = nil
					local Magnitude = nil
					local HasReachedEnd = false

					-- Get the last end point from the info in the bezier
					local NextEndPoint = Segments[i + math.floor(GroupSize * 0.5)]

					-- Calculate size, then mark the center as the position
					-- of placement (to group segment parts)
					-- If the index is at one of the ends, cap the group sizing
					-- so that it doesn't go beyond the control points.
					if i >= FinalIndex then
						HasReachedEnd = true
						
						if NextEndPoint ~= nil and LastSegment ~= nil then
							-- Calculate the beginning of the last segment
							--p1 = Segments[i - math.floor(ZipPrecision)].Point2
							--local LastSegment = Segments[i - math.floor(ZipPrecision)]
							local SegmentPoint1 = LastSegment.Point1
							local SegmentPoint2 = LastSegment.Point2
							
							p1 = ((SegmentPoint1 + SegmentPoint2) / 2) + ((SegmentPoint2 - SegmentPoint1) * (GroupSize * 0.5)) --+ ((LastSegment.Point2 - LastSegment.Point1) * (GroupSize / 2))
						elseif i == 1 then
							p1 = bezier.BeginningPoint
						else
							break
						end
						
						if p1 ~= nil then
							p2 = bezier.EndPoint
							--print(bezier.EndPoint)
							--print(GroupSize, "min", (v.Point1 - p2).Magnitude)
							--p1 = p2 - ((v.Point2 - v.Point1) * math.min(GroupSize, (v.Point1 - p2).Magnitude))
							--p1 = (v.Point2 - p2)

							--LastSegment = NextEndPoint
							Magnitude = (p2 - p1).Magnitude--bezier.TotalDist - TotalMagnitude --
							--print("End magnitude:", Magnitude)
						else
							break
						end
					elseif i == 1 then
						p1 = bezier.BeginningPoint
						p2 = NextEndPoint and NextEndPoint.Point1 or bezier.EndPoint --p1 + ((v.Point2 - v.Point1) * math.min(GroupSize, (v.Point2 - p1).Magnitude))
						--p2 = (v.Point2 - p1)

						Magnitude = (p2 - p1).Magnitude
						--print("Beginning magnitude", Magnitude)
					elseif (i % GroupSize) == 0 then
						p1 = v.Point1
						p2 = v.Point2

						Magnitude = (p2 - p1).Magnitude * GroupSize
						
						-- Add the index by the group size.
						-- to reduce the amount of iterations.
						-- Cap at the final index to make sure we don't skip
						-- the ending segment.
						
						-- Subtraction by 1 is needed because of the increment
						-- that happens on the next index.
						i = math.min(i + GroupSize - 1, FinalIndex - 1)
					else
						continue
					end
					
					TotalMagnitude += Magnitude

					--local p1 = v.Point1
					--local p2 = v.Point2

					local CenterPos = (p1 + p2) / 2
					--LastCenterPos = CenterPos

					LastSegment = v --- ((v.Point2 - v.Point1) * math.min(GroupSize, (v.Point1 - p2).Magnitude)) --v.Point2 - p2--CenterPos + (p2 / 2)

					local Properties = {
						Anchored = true,
						CanCollide = false,
						Size = Vector3.new(Thickness, Thickness, Magnitude),
						CFrame = CFrame.new(CenterPos, p1),
						--CFrame = CFrame.new(CenterPos.X, CenterPos.Y, CenterPos.Z) * GetLineOrientation(p1, p2);
						Transparency = Obj.Transparency,
						Material = Obj.Material,
						Color = Obj.Color
					}

					local Part = GetLineInternal(Properties)

					if typeof(Part) == "Instance" and Part:IsA("BasePart") then
						Part.Parent = model
					end

					if HasReachedEnd == true then
						break
					end
				end
				

				-- Would get rid of a ton of lag if this worked lol:
				--[[
				for i = 1, GroupSize, NumSegments do
					local Segment = Segments[i]
					
					if Segment ~= nil then
						local p1 = nil
						local p2 = nil

						-- Calculate size, then mark the center as the position
						-- of placement (to group segment parts)
						if i == 1 then
							p1 = bezier.BeginningPoint
							p2 = p1 + ((Segment.Point2 - Segment.Point1) * GroupSize)
						elseif i == NumSegments then
							p2 = bezier.EndPoint
							p1 = p2 - ((Segment.Point2 - Segment.Point1) * GroupSize)
						else
							p1 = Segment.Point1
							p2 = Segment.Point2
						end

						--local p1 = v.Point1
						--local p2 = v.Point2

						local CenterPos = (p1 + p2) / 2

						local Properties = {
							Anchored = true,
							CanCollide = false,
							Size = Vector3.new(Thickness, Thickness, Segment.Magnitude * GroupSize),
							CFrame = CFrame.new(Segment.CenterPos, p1),
							--CFrame = CFrame.new(CenterPos.X, CenterPos.Y, CenterPos.Z) * GetLineOrientation(p1, p2);
							Transparency = Obj.Transparency,
							Material = Obj.Material,
							Color = Obj.Color
						}

						local Part = GetLineInternal(Properties)

						if typeof(Part) == "Instance" and Part:IsA("BasePart") then
							Part.Parent = model
						end
					end
				end
				]]--
			end
		end
	end

	-- Displays the bezier (display properties should be set first)
	--function Obj.DisplayBezier(bezier)
	--	if bezier == nil then
	--		bezier = Obj.Bezier
	--	end

	--	Obj.Bezier = bezier
	--	Obj.Refresh(bezier)
	--end

	Obj.OnDisposal = function()
		if Obj.Parts ~= nil then
			Obj.Parts:Destroy()
		end
	end

	return Obj
end

return Display]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ed7</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX1C4CD7927FA44F8FBA6DA4DE836BD3AF">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Object</string>
							<string name="ScriptGuid">{D3C98E19-6359-4A2B-9EBC-DF9742F3981A}</string>
							<ProtectedString name="Source"><![CDATA[--[[
Object/instance handler using metatables.
By: udev2192

Generic updated event callback:
function OnObjectUpdate(Key, Value)

end

Generic updater function:
function UpdateFunc(NewValue)

end
]]--

local Object = {};
local Inherited = {};
local InheritedUpdaters = {};

-- Makes fields and methods on the module table
-- itself static.
Object.__index = Object;

--[[
Returns true if the specified class matches the object provided,
if it is an object.

Params:
TypeName <string> - The type's name.
Variant <variant> - Any value.
]]--
function Object.MatchesType(TypeName, Variant)
	return typeof(Variant) == "table" and TypeName == Variant.TypeName;
end

--[[
Sets the default class that is inherited from and the
updaters that are used when an instance
of the particular object has been constructed.

Params:
Table <table> - The table pointing to the class to inherit from.
Updaters <table> - A dictionary of functions to use as a default.
]]--
function Object.Inherit(Table, Updaters)
	assert(typeof(Table == "table"), "Argument 1 must be a table.");
	assert(Updaters == nil or typeof(Updaters == "table"), "Argument 2 must be a table or nil.");
	
	for i, v in pairs(Table) do
		Inherited[i] = v;
	end
	
	if Updaters ~= nil then
		for i, v in pairs(Updaters) do
			InheritedUpdaters[i] = v;
		end
	end
end

--[[
	Fires the specified callback with the provided arguments.
	
	Params:
	func <function> - The function to call.
	... <tuple> - The arguments to pass to the function.
]]--
function Object.FireCallback(func, ...)
	if typeof(func) == "function" then
		coroutine.wrap(func)(...);
	end
end

-- Constructor function for the object (anything outside this is static).
function Object.New(Type)
	local Obj = {};
	local Updaters = {};
	local DisposalListeners = {};
	local InstanceDestroyEnabled = false;
	
	if typeof(Type) ~= "string" then
		Type = "";
	end
	
	Obj.Name = Type;
	Obj.TypeName = Type;
	
	-- This part loads inherited properties and their updaters.
	for i, v in pairs(Inherited) do
		Obj[i] = v;
		
		local f = InheritedUpdaters[i]
		if typeof(f) == "function" then
			Updaters[i] = f;
		end
	end
	
	-- The metatable takes care of the indexing.
	local Meta = setmetatable({}, {
		__index = function(t, k)
			if Obj ~= nil then
				return Obj[k];
			end
		end,
		
		__newindex = function(t, k, v)
			if Obj ~= nil then
				Obj[k] = v;

				if k ~= "OnUpdate" then -- To prevent accidental recursion
					-- Fire the event
					local UpdatedCallback = t.OnUpdate;
					if typeof(UpdatedCallback) == "function" then
						coroutine.wrap(UpdatedCallback)(k, v);
					end

					-- Run updater
					if Updaters ~= nil then
						local Updater = Updaters[k];
						if typeof(Updater) == "function" then
							Updater(v);
						end
					end
				end
			end
		end,
	})
	
	-- Asserts if the object has been Dispose()'d.
	local function AssertDisposed()
		assert(DisposalListeners ~= nil, "Object has already been disposed.");
	end
	
	--[[
	Callback that is fired when the object gets updated.
	This can happen through a property being initalized or set.
	]]--
	Obj.OnUpdate = nil;
	
	--[[
	Callback that is fired once the object is "disposed".
	This callback is called before the ones in the listener
	table so use this if you need to set a priority
	disposal callback.
	]]--
	Obj.OnDisposal = nil;
	
	--[[
	Sets a property and specifies what changing it does.
	Should be used for intializing a property.
	
	Params:
	Name <string> - The name of the property to update.
	Value <variant> - The new value of the property.
	Updater <function> - The callback to set (use nil for no callback).
	]]--
	function Obj.SetProperty(Name, Value, Updater)
		Obj[Name] = Value;
		
		local IsFunc = typeof(Updater) == "function";
		if Updater == nil or IsFunc then
			Updaters[Name] = Updater;
			
			-- Run the updater for initialization.
			if IsFunc then
				Updater(Value);
			end
		end
	end
	
	--[[
	Sets if this object destroys any object/instance
	that has the :Destroy() function.
	Disabled by default.
	
	Params:
	Enabled <boolean> - Whether or not to do the above.
	]]--
	function Obj.SetInstanceDestroy(Enabled)
		assert(typeof(Enabled) == "boolean", "Argument 1 must be a boolean.");
		
		InstanceDestroyEnabled = Enabled;
	end
	
	--[[
	Adds a listener function that is called when Dispose() is called.
	
	Params:
	Listener <function> - The function to add.
	]]--
	function Obj.AddDisposalListener(Listener)
		AssertDisposed();
		assert(typeof(Listener) == "function", "Argument 1 must be a function.");
		
		DisposalListeners[Listener] = Listener;
	end
	
	--[[
	Removes a listener that is called when Dispose() is called.
	
	Params:
	Listener <function> - The function to remove.
	]]--
	function Obj.RemoveDisposalListener(Listener)
		AssertDisposed();
		DisposalListeners[Listener] = nil;
	end
	
	--[[
	Removes all listeners from being called when Dispose() is called.
	]]--
	function Obj.ClearDisposalListeners()
		if DisposalListeners ~= nil then
			DisposalListeners = {};
		end
	end
	
	--[[
	Prepares the object for garbage collection.
	]]--
	function Obj.Dispose()
		Updaters = nil;
		
		-- Run the disposal callback
		local DisposeFunc = Obj.OnDisposal;
		if typeof(DisposeFunc) == "function" then
			-- Run as a non-coroutine, in case any values are still needed
			DisposeFunc();
		end
		
		-- Run the other disposal listeners.
		if DisposalListeners ~= nil then
			for i, v in pairs(DisposalListeners) do
				if typeof(v) == "function" then
					v();
				end
			end
		end
		
		-- Disconnect any Instance execution stuff.
		for i, v in pairs(Obj) do
			pcall(function() 
				local idxType = typeof(v);
				if idxType == "RBXScriptConnection" then
					v:Disconnect();
				elseif idxType == "Instance" and InstanceDestroyEnabled == true then
					v:Destroy();
				end
			end);
		end
		
		-- Destroy the metatable
		setmetatable(Obj, nil);
		Meta = nil;
		DisposalListeners = nil;
		InstanceDestroyEnabled = nil;
		
		-- The Obj table is garbage collected once the field holding
		-- an instance of this object is set to nil or another value
	end
	
	return Meta;
end

return Object;]]></ProtectedString>
							<int64 name="SourceAssetId">6782907931</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ed8</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBXBBFAB518CD494A6F97E2FFE677D03883">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">CameraFX</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018887</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXCCB0AC699C694F9689F640745B091889">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BaseCameraFX</string>
							<string name="ScriptGuid">{923D50CE-82C5-47EB-A6DA-C9BEC8153501}</string>
							<ProtectedString name="Source"><![CDATA[--[[
Provides a class that can be utilized to create effects
with the camera.

By udev2192
]]--

local ZERO_CFRAME = CFrame.new(0, 0, 0)
local DEFAULT_TWEEN_INFO = TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
local FOLLOW_ID_PREFIX = "CameraFxFollowingId_"

local RunService = game:GetService("RunService")

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

RepModules, UtilRepModules = nil, nil

-- Function pointer
local Lerp = Util.Lerp

local Camera = workspace.CurrentCamera

-- The rendering priority of the camera.
local CameraPriority = Enum.RenderPriority.Camera.Value

local BaseCameraFX = {}
BaseCameraFX.__index = BaseCameraFX

function BaseCameraFX.New()
	local Obj = Object.New("BaseCameraFX")
	local LastCFrame

	-- Name of the camera rendering priority for this instance.
	local RenderIndex = FOLLOW_ID_PREFIX .. os.clock()

	-- Tweening info used for field-of-view changes.
	Obj.FOVTweeningInfo = DEFAULT_TWEEN_INFO

	-- Destination CFrame for animation.
	Obj.FollowedCFrame = ZERO_CFRAME

	--[[
	The number used to multiply the difference between the current
	CFrame and the destination CFrame on every frame.
	In order to go towards the destination, this number must be
	less than 1.
	]]--
	Obj.OffsetScale = 0

	-- Called every camera render step to follow a moving object.
	local function FollowCFrameForStep(Delta)
		local Destination = Obj.FollowedCFrame
		local Scale = Obj.OffsetScale

		--if LastCFrame ~= nil then
			LastCFrame = Camera.CFrame
		--end

		if Destination ~= nil and LastCFrame ~= nil then
			if Scale > 0 then
				-- Ease via a "lerp".
				-- The goal is inversed to be able to
				-- lerp towards the Camera's CFrame
				Camera.CFrame = Destination:Lerp(LastCFrame, Scale * Delta)

				-- Set a beginning point so we can grab
				-- the previous CFrame later
				--LastCFrame = Camera.CFrame
			else
				-- Immediately set.
				Camera.CFrame = Destination
			end
		end
	end

	--[[
	Returns:
	
	<string>: The BindToRenderStep() string identifier used to
			  bind the camera follow function to happen after
			  camera following.
	]]--
	function Obj.GetRenderIndex()
		return RenderIndex
	end

	--[[
	Animates the camera to a new field of view.
	
	Params:
	NewFOV <number> - The field-of-view to animate to.
	]]--
	function Obj.TweenFOV(NewFOV)
		Util.Tween(Camera, Obj.FOVTweeningInfo, {FieldOfView = NewFOV})
	end

	--[[
	Stops the following of a moving object.
	]]--
	function Obj.StopFollowing()
		RunService:UnbindFromRenderStep(RenderIndex)
		LastCFrame = nil
	end

	--[[
	Makes the camera follow the CFrame under FollowedCFrame.
	]]--
	function Obj.Follow()
		FollowCFrameForStep(0)
		RunService:BindToRenderStep(RenderIndex, CameraPriority + 1, FollowCFrameForStep)
	end

	return Obj
end

return BaseCameraFX]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ed9</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX1EBD75EB0F284138A14C9A68128DA1C4">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Focuscam</string>
							<string name="ScriptGuid">{F37F522C-A4B1-4D65-8929-B6291FFE5C1E}</string>
							<ProtectedString name="Source"><![CDATA[--[[
Creates a camera effect that focuses onto a certain part
through an animation.

By udev2192
]]--

local ZERO_VECTOR3 = Vector3.new(0, 0, 0)

local RunService = game:GetService("RunService")

local BaseCameraFX = require(script.Parent:WaitForChild("BaseCameraFX"))

local Camera = workspace.CurrentCamera

local Focuscam = {}

function Focuscam.New()
	local CamFX = BaseCameraFX.New()
	local IsFocused = false
	local FollowedPart
	local FollowConnection
	
	local DefaultFOV = Camera.FieldOfView
	
	CamFX.Name = script.Name
	
	--[[
	Sets if the calling Disable() resets the
	camera mode back to the provided defaults.
	]]--
	CamFX.ResetsCamera = false
	
	--[[
	The original camera mode to switch back to when
	Disable() is called.
	]]--
	CamFX.OriginalMode = Enum.CameraType.Custom
	
	--[[
	The original field-of-view to tween back to when Disable()
	is called.
	]]--
	CamFX.OriginalFov = DefaultFOV
	
	--[[
	The field-of-view to focus to when Enable() is called.
	]]--
	CamFX.FocusedFov = DefaultFOV
	
	--[[
	If focusing changes the field-of-view.
	]]--
	CamFX.ChangesFov = false
	
	--[[
	The position to look at a certain point from.
	]]--
	CamFX.ViewingPosition = ZERO_VECTOR3
	
	DefaultFOV = nil
	
	local function DisconnectRunner()
		if FollowConnection ~= nil then
			FollowConnection:Disconnect()
			FollowConnection = nil
		end
	end
	
	-- Sets the camera to adjust to look at the
	-- followed part's CFrame.
	local function UpdateForFrame()
		if FollowedPart ~= nil then
			CamFX.FollowedCFrame = CFrame.lookAt(CamFX.ViewingPosition, FollowedPart.Position)
		end
	end
	
	--[[
	Toggles the focus effect off and resets to
	camera defaults if told to do so.
	]]--
	function CamFX.Disable()
		DisconnectRunner()
		CamFX.StopFollowing()
		
		if CamFX.ResetsCamera == true then
			CamFX.TweenFOV(CamFX.OriginalFov)
			Camera.CameraType = CamFX.OriginalMode
		end
	end
	
	--[[
	Toggles the focus effect onto a certain part.
	
	Params:
	Part <variant> - Anything that has a .Position property.
	]]--
	function CamFX.Enable(Part)
		Camera.CameraType = Enum.CameraType.Scriptable
		
		DisconnectRunner()
		FollowedPart = Part
		UpdateForFrame()
		FollowConnection = RunService.Heartbeat:Connect(UpdateForFrame)
		
		CamFX.Follow()
		
		if CamFX.ChangesFov == true then
			CamFX.TweenFOV(CamFX.FocusedFov)
		end
	end
	
	CamFX.AddDisposalListener(CamFX.Disable)
	
	return CamFX
end

return Focuscam]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eda</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXDBF0BCFA4851456E9E0F4DB9E6618D3F">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Deathcam</string>
							<string name="ScriptGuid">{12F10975-7741-4BBB-A673-CBFFDF6BF4D3}</string>
							<ProtectedString name="Source"><![CDATA[--[[
For binding a character's death to focusing on its head.

By udev2192
]]--

local WAIT_FOR_CHILD_YIELD = 5
local DEFAULT_START_OFFSET = Vector3.zero--Vector3.new(0, 0, 20)

local Focuscam = require(script.Parent:WaitForChild("Focuscam"))
local Camera = workspace.CurrentCamera

local Deathcam = {}

function Deathcam.New()
	local CamFX = Focuscam.New()
	local IsAlive = false
	local CurrentChar
	
	CamFX.Name = script.Name
	
	--[[
	The name of the character part to focus on.
	]]--
	CamFX.FocusedPartName = "Head"
	
	--[[
	The position offset from the focused part to start from.
	]]--
	CamFX.StartingOffset = DEFAULT_START_OFFSET
	
	-- Handler function for character death.
	local function OnDeath()
		if IsAlive then
			IsAlive = false
			
			local Character = CurrentChar.Parts.Character

			if Character ~= nil then
				local PartName = CamFX.FocusedPartName
				local PartToFocus = Character:WaitForChild(PartName, WAIT_FOR_CHILD_YIELD)

				if PartToFocus ~= nil then
					CamFX.ViewingPosition = (Camera.CFrame + CamFX.StartingOffset).Position
					CamFX.Enable(PartToFocus)
				end
			end
		end
	end
	
	local function OnRespawn()
		CamFX.Disable()
		IsAlive = true
	end
	
	--[[
	Unbinds a character adapter from being focused on.
	]]--
	function CamFX.Unbind()
		if CurrentChar ~= nil then
			CurrentChar.DeathEvent.Disconnect(OnDeath)
			CurrentChar.RespawnEvent.Disconnect(OnRespawn)
		end
		
		CurrentChar = nil
		IsAlive = false
	end
	
	--[[
	Binds a character adapter to be focused on.
	
	Params:
	Char <CharacterAdapter> - The CharacterAdapter to bind.
	]]--
	function CamFX.Bind(Char)
		assert(typeof(Char) == "table", "Argument 1 must be a CharacterAdapter.")
		
		-- Unbind to prevent problems with multiple bindings.
		CamFX.Unbind()
		
		-- Reconnect.
		CurrentChar = Char
		Char.DeathEvent.Connect(OnDeath)
		Char.RespawnEvent.Connect(OnRespawn)
		
		IsAlive = true
	end
	
	CamFX.AddDisposalListener(CamFX.Unbind)
	
	return CamFX
end

return Deathcam]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018edb</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX6D894B6116A449DB8A9B8F003DED9FF0">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">DeathFX</string>
						<string name="ScriptGuid">{A2468E5E-65A1-482F-A365-261963D2F221}</string>
						<ProtectedString name="Source"><![CDATA[-- Provides an object that shows a death screen.
-- By udev2192

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local Adapters = RepModules:WaitForChild("Adapters")
local UtilRepModules = RepModules:WaitForChild("Utils")

local ClientRunner = script.Parent

local BlurScreen = require(ClientRunner:WaitForChild("BlurScreen"))
local Runtime = require(UtilRepModules:WaitForChild("Runtime"))

local DeathFX = {}

local CHAR_ADAPTER_CLASS_NAME = "CharacterAdapter"

function DeathFX.New(ObjCharAdapter: CharacterAdapter)
	assert(typeof(ObjCharAdapter) == "table" and ObjCharAdapter.TypeName == CHAR_ADAPTER_CLASS_NAME, "Argument 1 must be a CharacterAdapter.")
	
	local Obj = BlurScreen.New()
	Obj.Name = "DeathFX"
	
	-- If the death screen will flash on death.
	Obj.Enabled = true
	
	-- Internal callback connections
	local function OnDeath()
		if Obj.Enabled == true then
			Runtime.WaitForDur(Obj.FadeInAfter)
			Obj.FadeIn()
		end
	end
	
	ObjCharAdapter.DeathEvent.Connect(OnDeath)
	ObjCharAdapter.RespawnEvent.Connect(Obj.FadeOut)

	Obj.AddDisposalListener(function()
		ObjCharAdapter.DeathEvent.Disconnect(OnDeath)
		ObjCharAdapter.RespawnEvent.Disconnect(Obj.FadeOut)
	end)
	
	return Obj
end

return DeathFX]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018edc</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX36669172BB1E4E8BA1286EAA0908E55E">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">InteractiveRunner</string>
						<string name="ScriptGuid">{81A86999-214A-402C-96FF-FCD5B577F426}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Runs interactives (literally just LocalPartScript)
This is for demo/debug, interactives should be initialized
using other modules with custom implementation as needed

By udev2192
]]--

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")

local ZiplineService = script.Parent:WaitForChild("ZiplineService")

local Adapters = RepModules:WaitForChild("Adapters")
local Interactives = RepModules:WaitForChild("MapHandles"):WaitForChild("Interactives")
local Utils = RepModules:WaitForChild("Utils")

local InstAdapter = require(Adapters:WaitForChild("InstanceCollector"))
local Object = require(Utils:WaitForChild("Object"))

local PlayerAdapter = require(ZiplineService:WaitForChild("PlayerAdapter"))
local BaseInteractive = require(Interactives:WaitForChild("BaseInteractive"))

local InteractiveRunner = {}

InteractiveRunner.ValueName = "Interactive"

function InteractiveRunner.New()
	local Obj = InstAdapter.New()
	local Stored = {}
	
	local function ToggleInteractive(Inst, IsEnabled)
		if Inst.ClassName == BaseInteractive.ValueClassName then
			local Interact = Stored[Inst]

			if IsEnabled and Interact == nil then
				local InteractClass = BaseInteractive.GetByName(Inst.Value)

				if InteractClass then
					-- Initialize and store
					Stored[Inst] = InteractClass.New(Inst)
				end
			elseif Interact then
				Stored[Inst] = nil
				Interact.Dispose()
			end
		end
	end
	
	Obj.SearchId = InteractiveRunner.ValueName
	
	function Obj.ShutdownAll()
		for i, v in pairs(Stored) do
			v.Shutdown()
		end
	end
	
	function Obj.RunAll()
		for i, v in pairs(Stored) do
			v.OnInitialize.Fire()
			v.OnStart.Fire()
		end
	end
	
	function Obj.Clear()
		for i, v in pairs(Stored) do
			v.Dispose()
		end
		
		Stored = {}
	end

	Obj.OnDisposal = function()
		-- Dispose other stuff.
		Obj.Clear()
	end

	-- Look for ziplines
	Obj.InstanceFound = function(inst)
		ToggleInteractive(inst, true)
	end
	Obj.InstanceRemoved = function(inst)
		ToggleInteractive(inst, false)
	end
	
	return Obj
end

return InteractiveRunner]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">06409b499e43dfff01f0005b0002371d</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX3FAAC6D33DE741B79DDC2D3088597D66">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">GuiBuilds</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd200001887e</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXFBA001F768654AEEBFA84C9D239FFC28">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">SpeedTestMenu</string>
							<string name="ScriptGuid">{6F37B20B-B7D1-46BC-A08C-6549EB949AD1}</string>
							<ProtectedString name="Source"><![CDATA[--[[
A menu for measuring estimated internet speed.

By udev2192
]]--

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")

local Replicators = RepModules:WaitForChild("Replicators")

local SpeedTest = require(Replicators:WaitForChild("SpeedTest"))

local Components = game:GetService("ReplicatedStorage")
:WaitForChild("Modules")
:WaitForChild("Gui")
:WaitForChild("Components")

local BaseComponent = require(Components:WaitForChild("BaseComponent"))
local GridMenu = require(Components:WaitForChild("GridMenu"))
local IconButton = require(Components:WaitForChild("IconButton"))

local BaseReplicator = require(Replicators:WaitForChild("BaseReplicator"))
local Util = BaseComponent.GetUtils()

--RepModules, Replicators, Components = nil

local LocalPlayer = game:GetService("Players").LocalPlayer

local SpeedTestMenu = {}

function SpeedTestMenu.New()
	local Menu = GridMenu.New()
	local SpeedTester = SpeedTest.New()

	local IsCurrentlyTesting = false
	local IsAnimatingText = false
	local IsUpdatingTime = false
	local IsFadingIn = false
	
	local CurrentRequestId = 0
	local CurrentSecondsTimestamp = 0

	local CurrentColorTween

	-- Set timeout
	SpeedTester.Timeout = 3000

	Menu.ErrorColor = Color3.fromHSV(0, 0.75, 1)
	Menu.SuccessColor = Color3.fromHSV(0.4, 0.75, 1)
	Menu.MeasureButtonTextColor = Color3.fromHSV(0, 0, 1)
	Menu.MeasureButtonText = "Measure"
	Menu.StatusFadeDuration = 1
	Menu.DotsUpdateDelay = 0.1

	Menu.SetTitle("test your internet")
	Menu.Gui.Name = "PingTest"

	Menu.LastTimestamp = 0

	local StatsLabel = IconButton.New()
	local StatsLabelGui = StatsLabel.Gui

	StatsLabel.BackTransparency = 0.5

	StatsLabel.SetInputEnabled(false)
	StatsLabel.SetRichTextEnabled(true)

	StatsLabel.SetText("Press <i>measure</i> to start polling your internet speed")

	StatsLabelGui.Size = UDim2.new(0.8, 0, 0.45, 0)
	StatsLabelGui.Position = UDim2.new(0.5, 0, 0.275, 0)
	
	local TimeLabel: TextLabel = Util.CreateInstance("TextLabel",
		{
			AnchorPoint = Vector2.new(0.5, 0.5),
			Size = UDim2.new(0.8, 0, 0.05, 0),
			Position = UDim2.new(0.5, 0, 0.75, 0),
			
			BackgroundTransparency = 1,
			BorderSizePixel = 0,
			
			TextColor3 = Color3.fromRGB(255, 255, 255),
			Font = Enum.Font.Gotham,
			Text = "",
			TextScaled = true,
			TextStrokeTransparency = 1,
			
			Name = "CurrentTimeLabel",
			Parent = Menu.Gui
		}
	)

	local MeasureButton = IconButton.New()
	MeasureButton.SetText("Measure")

	local MeasureButtonLabel = MeasureButton.Gui
	MeasureButtonLabel.Size = UDim2.new(0.75, 0, 0.2, 0)
	MeasureButtonLabel.Position = UDim2.new(0.5, 0, 0.9, 0)
	MeasureButtonLabel = nil

	local MeasureButtonDisplay = MeasureButton.GetDisplayLabel()
	MeasureButtonDisplay.BackgroundColor3 = Color3.fromRGB(0, 0, 0)

	local function CancelColorFade()
		if CurrentColorTween ~= nil then
			CurrentColorTween:Destroy()
			CurrentColorTween = nil
		end
	end

	local function ResetStatusColor()
		CancelColorFade()
		CurrentColorTween = BaseComponent.FadeTextColor(MeasureButtonDisplay, Menu.MeasureButtonTextColor, Menu.StatusFadeDuration)
	end

	Menu.SetProperty("MeasureButtonTextColor", Menu.MeasureButtonTextColor, function(Color)
		MeasureButtonDisplay.TextColor3 = Color
	end)

	-- Event stuff
	SpeedTester.ResponseReceived.Connect(function(Response)
		if IsCurrentlyTesting == true then
			--print("response received from speed test")

			local Error = Response.Error
			local RequestId = tostring(Response.RequestId)
			local NextColor

			if Error == nil then
				StatsLabel.SetText("Total ping from replicator: " .. BaseReplicator.GetCurrentTime() - StatsLabel.LastTimestamp .. " ms"
					.. "\n Engine calculated ping: " .. (LocalPlayer:GetNetworkPing() * 1000) .. " ms"
					.. "\n Request ID: " .. RequestId
					.. "\n Data: " .. tostring(Response.Data[1])
				)
				NextColor = Menu.SuccessColor
			else
				StatsLabel.SetText(
					tostring(Error.Message) .. " (Request ID = " .. RequestId .. ")"
					.. "\nTry again in " .. string.format("%.2f", SpeedTester.CooldownRemaining) .. " seconds"
				)
				NextColor = Menu.ErrorColor
			end

			IsAnimatingText = false

			-- Delay is needed here to prevent problems caused by threading
			task.wait()

			CancelColorFade()
			MeasureButtonDisplay.MaxVisibleGraphemes = -1
			MeasureButtonDisplay.Text = Menu.MeasureButtonText
			MeasureButtonDisplay.TextColor3 = NextColor
			ResetStatusColor()

			IsCurrentlyTesting = false
		end
	end)

	MeasureButton.GetButton().Activated:Connect(function()
		if IsCurrentlyTesting == false then
			IsCurrentlyTesting = true
			IsAnimatingText = true

			--print("now testing speed")
			StatsLabel.SetText("Checking")

			-- Make the request
			CurrentRequestId += 1
			local LastTimestamp = BaseReplicator.GetCurrentTime()
			StatsLabel.LastTimestamp = LastTimestamp
			SpeedTester.Request(BaseReplicator.CreateRequestParams(
				1, -- request id
				true,
				LastTimestamp,
				nil
				)
			)

			-- Animate the button
			local Dots = 1
			MeasureButtonDisplay.MaxVisibleGraphemes = Dots
			MeasureButtonDisplay.Text = "..."

			while true do
				if IsCurrentlyTesting == true and IsAnimatingText == true then
					if Dots < 3 then
						Dots += 1
					else
						Dots = 1
					end

					MeasureButtonDisplay.MaxVisibleGraphemes = Dots
					task.wait(Menu.DotsUpdateDelay)
				else
					break
				end
			end
		end
	end)

	Menu.AddComponent(StatsLabel)
	Menu.AddComponent(MeasureButton)

	Menu.SetImage(
		Util.CreateInstance(("ImageLabel"), {
			AnchorPoint = Vector2.new(0.5, 0.5),
			Size = UDim2.new(1, 0, 1, 0),
			Position = UDim2.new(0.5, 0, 0.5, 0),

			BackgroundTransparency = 1,
			BorderSizePixel = 0,

			ScaleType = Enum.ScaleType.Crop,
			Image = "rbxassetid://6544983775"
		})
	)
	
	Menu.VisibleChanged.Connect(function(IsVisible: boolean)
		local Transparency = 0
		
		IsFadingIn = IsVisible
		if IsVisible then
			Transparency = 0
			
			if IsUpdatingTime == false then
				IsUpdatingTime = true
				
				task.spawn(function()
					while IsUpdatingTime do
						local Current = DateTime.now()
						local Seconds = Current.UnixTimestamp

						if Seconds > CurrentSecondsTimestamp then
							CurrentSecondsTimestamp = Seconds
							TimeLabel.Text = Current:ToIsoDate()
						end

						task.wait()
					end
				end)
			end
		else
			IsUpdatingTime = false
			Transparency = 1
		end
		
		local TweeningInfo = Menu.TweeningInfo
		if TweeningInfo then
			Util.Tween(TimeLabel, TweeningInfo, {TextTransparency = Transparency})
		end
	end)

	Menu.AddDisposalListener(function()
		SpeedTester.Dispose()
		IsUpdatingTime = false
	end)

	return Menu
end

return SpeedTestMenu]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eb1</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX7FE0112591F24C1180F6D898AA8588BC">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Healthbar</string>
							<string name="ScriptGuid">{924D78CC-16ED-4820-97A4-482F5D9C3E8C}</string>
							<ProtectedString name="Source"><![CDATA[--[[
A replacement for Roblox's original healthbar (which has been broken for almost a month)

Plus it's animated and doesn't do that red flash thing that might trigger users
with photosensitive epilepsy

Inspired by the healthbar currently being used in GreatBear's Noob Zone Towers

By udev2192
]]--

local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local TweenService = game:GetService("TweenService")

local BaseComponent = require(game:GetService("ReplicatedStorage")
	:WaitForChild("Modules")
	:WaitForChild("Gui")
	:WaitForChild("Components")
	:WaitForChild("BaseComponent")
)
local Util = BaseComponent.GetUtils()

local HealthLoseSound = script:WaitForChild("HealthLose")

local Healthbar = {}
Healthbar.__index = Healthbar

Healthbar.TextPrefix = ""
Healthbar.FullUDim = UDim.new(1, 0)
Healthbar.UIStrokeEnabled = false

function Healthbar.Lerp(a, b, t)
	return a + (b - a) * t
end

function Healthbar.RandomPercentage(Min, Max)
	return math.random(Min * 100, Max * 100) / 100
end

--[[
Toggles the default healthbar on or off.

Params:
Enabled <boolean> - Whether or not to use the default healthbar.

Returns:
<boolean> - If it was successful.
]]--
function Healthbar.ToggleDefault(Enabled)
	return pcall(function()
		StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Health, Enabled)
	end)
end

function Healthbar.New(ShowDefault)
	Healthbar.ToggleDefault(ShowDefault)

	local Bar = BaseComponent.New("Frame")

	-- For multiplying animation speed
	local DeltaMultiplier = Instance.new("NumberValue")
	DeltaMultiplier.Value = 1

	local OldMaxHealth = 100
	local OldHealth = OldMaxHealth
	
	local IsShaking = false

	local CurrentCircles = {}
	local HumanoidConnections = {}

	local CircleEffectRunner

	local HumanoidResponder
	local DeltaTween
	local OriginalShakePos

	local CurrentHumanoid
	
	Bar.TweeningInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	Bar.DeltaTweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)

	Bar.OutlineMinHealthColor = Color3.fromHSV(0, 0.75, 0.5)
	Bar.OutlineMaxHealthColor = Color3.fromHSV(0.3, 0.75, 0.5)

	Bar.BarMinHealthColor = Color3.fromHSV(0, 0.5, 0.85)
	Bar.BarMaxHealthColor = Color3.fromHSV(0.3, 0.5, 0.85)

	Bar.BackgroundColor = Color3.fromHSV(0.9, 0.9, 0.19)

	Bar.CircleMinTransparency = 0.5
	Bar.CircleMaxTransparency = 0.75
	Bar.CircleMinDiameter = 0.1
	Bar.CircleMaxDiameter = 0.35
	Bar.CircleMinSpeed = 0.25
	Bar.CircleMaxSpeed = 0.5
	Bar.CircleColor = Color3.new(1, 1, 1)

	--[[
	<number> - The delay between each circle creation in seconds
			   while the effect is running
	]]--
	Bar.CircleDelay = 0.2

	--[[
	<boolean> - Whether or not the healthbar will shake when health decreases
	]]--
	Bar.ShakeOnHealthLoss = false
	
	Bar.ShakeScaleOffset = 0.01
	Bar.PlayHealthLoseSound = true
	Bar.UseFlashbang = true

	local OutlineFrame = Bar.Gui
	OutlineFrame.Name = "Healthbar"
	OutlineFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	OutlineFrame.Size = UDim2.new(0.15, 0, 0.025, 0)
	OutlineFrame.Position = UDim2.new(0.85, 0, 0.025, 0)
	OutlineFrame.BackgroundTransparency = 1
	OutlineFrame.BorderSizePixel = 0
	OutlineFrame.ClipsDescendants = false

	Bar.CornerRadius = Healthbar.FullUDim
	
	-- Create a frame to use for the shake effect
	local ShakeFrame = OutlineFrame:Clone()
	ShakeFrame.Name = "HealthbarShakeFrame"
	ShakeFrame.Size = UDim2.new(1, 0, 1, 0)
	ShakeFrame.Position = UDim2.new(0.5, 0, 0.5, 0)

	--Bar.CornerRadius = Healthbar.FullUDim

	--HealthFrame.Size = UDim2.new(1, 0, 0.9, 0)
	--HealthFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	--HealthFrame.ZIndex = 2
	--HealthFrame.Parent = OutlineFrame

	-- Create the health frame's background
	local HealthBG = OutlineFrame:Clone()
	Util.ApplyProperties(HealthBG, {
		Name = "HealthBackground",
		Size = UDim2.new(1, 0, 1, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),
		ZIndex = 1,

		BackgroundTransparency = 0,
		BorderSizePixel = 0
	})
	
	-- Create the bar to use the original as an outline
	-- (this will be the one that displays the actual health)
	local HealthFrame = OutlineFrame:Clone()
	HealthFrame.Name = "HealthMeter"
	HealthFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	HealthFrame.Size = UDim2.new(1, 0, 1, 0)
	HealthFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	HealthFrame.BackgroundTransparency = 0
	HealthFrame.BorderSizePixel = 0
	HealthFrame.ZIndex = 2

	-- Create a frame for the circle animation
	local CircleFrame = Util.CreateInstance("Frame", {
		Name = "CirclesFrame",

		ClipsDescendants = true,

		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(0.9, 0, 0.9, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),

		BackgroundTransparency = 1,
		BorderSizePixel = 0,

		ZIndex = 3,

		Parent = OutlineFrame
	})

	-- Create the text thing that will actually display
	-- the health
	local HealthText = Util.CreateInstance("TextLabel", {
		Name = "HealthText",

		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(0.5, 0, 0.5, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),

		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		Text = Healthbar.TextPrefix .. OldHealth,

		TextStrokeTransparency = 1,
		Font = Enum.Font.GothamSemibold,

		ZIndex = 4
	})
	
	-- Set the UI parent here to prevent
	-- unintended cloning
	HealthText.Parent = ShakeFrame
	HealthFrame.Parent = ShakeFrame
	HealthBG.Parent = ShakeFrame
	ShakeFrame.Parent = OutlineFrame

	-- Use UIStroke to give it an outline
	local UIStroke
	if Healthbar.UIStrokeEnabled == true then
		UIStroke = Instance.new("UIStroke")
		UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
		UIStroke.Thickness = 2
		UIStroke.Transparency = 0
		UIStroke.Parent = HealthBG
	end

	function Bar.ResetColor()
		if UIStroke then
			UIStroke.Color = Bar.OutlineMaxHealthColor
		end

		HealthFrame.BackgroundColor3 = Bar.BarMaxHealthColor
		HealthBG.BackgroundColor3 = Bar.BackgroundColor
	end

	function Bar.ClearCircles()
		for i, v in pairs(CurrentCircles) do
			v.Circle:Destroy()
		end

		CurrentCircles = {}
	end

	function Bar.AddCircle()
		local Diameter = Healthbar.RandomPercentage(Bar.CircleMinDiameter, Bar.CircleMaxDiameter)
		local Circle = Util.CreateInstance("Frame", {
			AnchorPoint = Vector2.new(0.5, 0.5),
			Size = UDim2.new(Diameter, 0, Diameter, 0),
			Position = UDim2.new(0, 0, Healthbar.RandomPercentage(0, 1), 0),

			BackgroundTransparency = 1,
			BorderSizePixel = 0,

			BackgroundColor3 = Bar.CircleColor,

			Parent = CircleFrame
		})

		BaseComponent.AddCornerRadius(Circle, Healthbar.FullUDim)
		BaseComponent.AddAspectRatio(Circle, 1)

		table.insert(CurrentCircles, {
			Circle = Circle,
			XPosition = 0,
			Speed = Healthbar.RandomPercentage(Bar.CircleMinSpeed, Bar.CircleMaxSpeed),
			Transparency = Healthbar.RandomPercentage(Bar.CircleMinTransparency, Bar.CircleMaxTransparency)
		})
	end

	--[[
	Returns:
	<table> - A dictionary of the currently preferred health bar colors
	]]--
	function Bar.GetHealthbarColors()
		return {
			Meter = Bar.BarMinHealthColor:lerp(
				Bar.BarMaxHealthColor,
				math.min((Bar.Health or 1) / (Bar.MaxHealth or 1), 1)
			),

			Outline = Bar.OutlineMinHealthColor:lerp(
				Bar.OutlineMaxHealthColor,
				math.min((Bar.Health or 1) / (Bar.MaxHealth or 1), 1)
			)
		}
	end
	
	--[[
	Shakes the health bar
	]]--
	function Bar.Shake()
		DeltaMultiplier.Value = -2
		Util.Tween(DeltaMultiplier, Bar.DeltaTweenInfo, {Value = 1})

		-- Do the shake effect if enabled
		-- Since shaking is done until delta multiplier is
		-- greater than or equal to 0, don't run if
		-- it's still shaking

		-- Shaking is done by going in a rapid "square" rotation
		if IsShaking == false then
			IsShaking = true

			if OriginalShakePos == nil then
				OriginalShakePos = HealthBG.Position
			end

			local Offset = Bar.ShakeScaleOffset
			local Side = 1

			while IsShaking do
				local AnimMultiplier = DeltaMultiplier.Value

				if AnimMultiplier < 0 then

					local XMultiplier
					local YMultiplier

					if Side == 1 or Side == 2 then
						XMultiplier = -AnimMultiplier
					else
						XMultiplier = AnimMultiplier
					end

					if Side == 3 or Side == 4 then
						YMultiplier = -AnimMultiplier
					else
						YMultiplier = AnimMultiplier
					end

					if Side < 4 then
						Side += 1
					else
						Side = 1
					end

					-- Do offset
					ShakeFrame.Position = OriginalShakePos + UDim2.new(Offset * XMultiplier, 0, Offset * YMultiplier, 0)

					task.wait()
				else
					break
				end
			end

			HealthBG.Position = OriginalShakePos
			OriginalShakePos = nil

			IsShaking = false
		end
	end

	--[[
	Refreshes the health bar
	]]--
	function Bar.Refresh()
		local Health = Bar.Health
		local MaxHealth = Bar.MaxHealth

		if Health and MaxHealth and MaxHealth > 0 then
			local Percent = Health / MaxHealth
			local Colors = Bar.GetHealthbarColors()

			HealthText.Text = Healthbar.TextPrefix .. math.floor(Health)
			
			if Bar.UseFlashbang == true then
				HealthFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			end

			Util.Tween(HealthFrame, Bar.TweeningInfo, {
				Size = UDim2.new(Percent, 0, 1, 0),
				Position = UDim2.new(math.max(Percent / 2, 0), 0, 0.5, 0),
				BackgroundColor3 = Colors.Meter
			})

			if UIStroke then
				Util.Tween(UIStroke, Bar.TweeningInfo, {
					Color = Colors.Outline
				})
			end
		end
	end

	Bar.ResetColor()

	--[[
	<boolean> - Whether or not the circles effect is enabled
	]]--
	Bar.SetProperty("CirclesEnabled", false, function(Enabled)
		if Enabled then
			if CircleEffectRunner == nil then
				local Elapsed = 0
				local IsAnimating = false

				CircleEffectRunner = RunService.Heartbeat:Connect(function(Delta)
					if IsAnimating == false then
						IsAnimating = true

						local DeltaMultiplierValue = DeltaMultiplier.Value

						-- Only create new circles if they're going "forward"
						if DeltaMultiplierValue > 0 then
							Elapsed += Delta

							if Elapsed > Bar.CircleDelay then
								Elapsed = 0
								Bar.AddCircle()
							end
						end

						-- This is where the animation happens
						local Length = #CurrentCircles
						if Length > 0 then
							local AnimDelta = Delta * DeltaMultiplierValue
							--local CirclesToRemove = {}

							for i, v in pairs(CurrentCircles) do
								--local Current = v

								--if Current == nil or #CurrentCircles <= 0 then
								--	break
								--end

								local Circle = v.Circle

								local OldPos = Circle.Position
								local NewXPos = math.min(v.XPosition + (v.Speed * AnimDelta), 1)

								v.XPosition = NewXPos
								Circle.Position = UDim2.new(
									NewXPos,
									OldPos.X.Offset,
									OldPos.Y.Scale,
									OldPos.Y.Offset
								)

								if NewXPos < 1 and NewXPos > -2 then
									-- Full opacity is at halfway through the healthbar

									Circle.BackgroundTransparency = Healthbar.Lerp(v.Transparency, 1, math.abs(0.5 - NewXPos) / 0.5)
								else
									--table.insert(CirclesToRemove, i)
									Circle:Destroy()

									local Index = table.find(CurrentCircles, v)
									if Index ~= nil then
										table.remove(CurrentCircles, Index)
										--print("remove circle")
									end
								end
							end

							-- Remove after (to not disturb the loop)
							--for i, v in pairs(CirclesToRemove) do
							--	table.remove(CurrentCircles, v)
							--end
						end

						IsAnimating = false
					end
				end)
			end
		else
			if CircleEffectRunner then
				CircleEffectRunner:Disconnect()
				CircleEffectRunner = nil
			end

			Bar.ClearCircles()
		end
	end)

	local function SetHealthWithCheck(NewHealth, NewMaxHealth)
		local DoRefresh = false
		local DoShake = false
		
		if NewMaxHealth and NewMaxHealth ~= OldMaxHealth then
			OldMaxHealth = NewMaxHealth
			DoRefresh = true
		end
		
		if NewHealth and NewHealth ~= OldHealth then
			if NewHealth < OldHealth then
				if Bar.ShakeOnHealthLoss == true then
					DoShake = true
				end
				
				if HealthLoseSound and Bar.PlayHealthLoseSound == true then
					HealthLoseSound:Play()
				end
			end
			
			OldHealth = NewHealth
			DoRefresh = true
		end
		
		if DoRefresh then
			Bar.Refresh()
		end
		
		if DoShake then
			task.spawn(Bar.Shake)
		end
		
		--if NewHealth and NewHealth ~= OldHealth then
		--	OldMaxHealth = NewMaxHealth
		--	--Bar.MaxHealth = NewMaxHealth

		--	DoRefresh = true
			
		--	if NewHealth < OldHealth then
				
		--	end

		--	OldHealth = NewHealth
		--	Bar.Health = NewHealth
			
		--	DoRefresh = true
		--end
	end
	
	local function DisconnectHumanoidEvents()
		for i, v in pairs(HumanoidConnections) do
			v:Disconnect()
		end
		
		HumanoidConnections = {}
	end

	--[[
	<number> - Value to use as max health
	]]--
	Bar.SetProperty("MaxHealth", OldMaxHealth, function(NewMax)
		SetHealthWithCheck(nil, NewMax)
	end)

	--[[
	<number> - Value to use as current health
	]]--
	Bar.SetProperty("Health", OldHealth, function(Health)
		SetHealthWithCheck(Health, nil)
	end)

	--[[
	<Humanoid> - The humanoid to display health for
	]]--
	Bar.SetProperty("Humanoid", nil, function(Humanoid: Humanoid)
		Healthbar.ToggleDefault(ShowDefault)

		if Humanoid == nil then
			DisconnectHumanoidEvents()

			CurrentHumanoid = nil
		else
			if Humanoid ~= CurrentHumanoid then
				CurrentHumanoid = Humanoid
				Bar.Health = Humanoid.Health
				Bar.MaxHealth = Humanoid.MaxHealth

				DisconnectHumanoidEvents()
				table.insert(HumanoidConnections, Humanoid.HealthChanged:Connect(function(Health)
					--SetHealthWithCheck(Health, nil)
					Bar.Health = Health
				end))
				table.insert(HumanoidConnections, Humanoid:GetPropertyChangedSignal("MaxHealth"):Connect(function(MaxHealth)
					--SetHealthWithCheck(nil, MaxHealth)
					Bar.MaxHealth = MaxHealth
				end))
			end
		end
	end)

	Bar.AddDisposalListener(function()
		Bar.CirclesEnabled = false
		Bar.Humanoid = nil
		
		IsShaking = false

		DeltaMultiplier:Destroy()
	end)

	return Bar
end

return Healthbar]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">616d7e113bd3ed1901b711b1000246ac</UniqueId>
						</Properties>
						<Item class="Sound" referent="RBX687EA9CBD3F344F58C2D276C7D6A8A22">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="EmitterSize">10</float>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">HealthLose</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxassetid://12222106</url></Content>
								<int64 name="SourceAssetId">12222106</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<UniqueId name="UniqueId">73a7eb75b94cd0340234c12b000bab2c</UniqueId>
								<float name="Volume">0.5</float>
								<float name="xmlRead_MaxDistance_3">10000</float>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX0518B6BD2B6F4A48AC861CAF77173F89">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">RandomTextwall1</string>
							<string name="ScriptGuid">{6E14E133-741C-479D-B65C-D77F1D8FD50E}</string>
							<ProtectedString name="Source"><![CDATA[--[[
A menu for measuring estimated internet speed.

By udev2192
]]--

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")

local Replicators = RepModules:WaitForChild("Replicators")

local SpeedTest = require(Replicators:WaitForChild("SpeedTest"))

local Components = game:GetService("ReplicatedStorage")
:WaitForChild("Modules")
:WaitForChild("Gui")
:WaitForChild("Components")

local BaseComponent = require(Components:WaitForChild("BaseComponent"))
local GridMenu = require(Components:WaitForChild("GridMenu"))
local IconButton = require(Components:WaitForChild("IconButton"))

local Util = BaseComponent.GetUtils()

RepModules, Replicators, Components = nil

local TextwallMenu = {}

function TextwallMenu.New()
	local Menu = GridMenu.New()
	Menu.IsUsingGrid = true
	Menu.BackImageTransparency = 0.75
	Menu.SetTitle("information")
	Menu.Gui.Size = UDim2.new(0.5, 0, 0.5, 0)
	Menu.Gui.ZIndex = 5

	Menu.BackTransparency = 0.5
	Menu.Rows = 1
	Menu.Columns = 1
	Menu.ContentPadding = UDim2.new(0, 0, 0, 0)
	Menu.UpdateLayout()

	local SecondaryMenuInfo = IconButton.New(
		[[<b>SOFTLOCKED</b>
		A bloated attempt at a tower fangame.
		
		This game has a lot of bugs!
		
		<b>Why did you make this?</b>
		idk
		
		Background comes from Obby and Glitching Practice since I'm too lazy to upload a new background.
		]])

	SecondaryMenuInfo.BackTransparency = 0.75
	SecondaryMenuInfo.SetRichTextEnabled(true)
	SecondaryMenuInfo.SetInputEnabled(false)
	Menu.AddComponent(SecondaryMenuInfo)
	
	Menu.SetImage(
		Util.CreateInstance(("ImageLabel"), {
			AnchorPoint = Vector2.new(0.5, 0.5),
			Size = UDim2.new(1, 0, 1, 0),
			Position = UDim2.new(0.5, 0, 0.5, 0),

			BackgroundTransparency = 1,
			BorderSizePixel = 0,

			ScaleType = Enum.ScaleType.Crop,
			Image = "rbxassetid://6401417348"
		})
	)

	return Menu
end

return TextwallMenu]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">5ded3a655811705901aa3b5200089649</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX25015F2FC4A4422695A22F15D24B7B3D">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Runners</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">079dd8a1bab63e0a024846cb00231fdf</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX69F1FC93CB9042208A202ABACD3241D2">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Portals</string>
							<string name="ScriptGuid">{7C754A15-9499-419C-ABA2-F7DF43DB5106}</string>
							<ProtectedString name="Source"><![CDATA[--[[
For making jtoh-style portals work

Names in the "Portals" model should match with PortalData

By udev2192
]]--

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")
local Utils = RepModules:WaitForChild("Utils")
local MapHandles = RepModules:WaitForChild("MapHandles")

local LocalPlayer = game:GetService("Players").LocalPlayer

local Object = require(
	Utils:WaitForChild("Object")
)
local TimeWaiter = require(Utils:WaitForChild("TimeWaiter"))
local TweenGroup = require(Utils:WaitForChild("TweenGroup"))

local MapLoader = require(MapHandles:WaitForChild("MapLoader"))
local MapLoadGui = require(
	MapHandles
	:WaitForChild("Gui")
	:WaitForChild("MapLoad")
)
local MapLoadPrompt = require(
	MapHandles
	:WaitForChild("Gui")
	:WaitForChild("MapPrompt")
)

local BaseComponent = require(
	RepModules
	:WaitForChild("Gui")
	:WaitForChild("Components")
	:WaitForChild("BaseComponent")
)

local Portals = {}
Portals.__index = Portals
Portals.ClassName = script.Name

Portals.TeleportPartName = "Teleport"

local PortalModel = workspace:WaitForChild("Portals")
assert(typeof(PortalModel) == "Instance", "Portals model is missing from Workspace.")

local TeleportSound = script:WaitForChild("TeleportSound")

--[[
Creates a SurfaceGui with a TextLabel for portal information

Returns:
<TextLabel> - The text label created
]]--
function Portals.CreateTextLabel(): TextLabel
	local Label: TextLabel = Instance.new("TextLabel")
	Label.AnchorPoint = Vector2.new(0.5, 0.5)
	Label.Size = UDim2.new(1, 0, 1, 0)
	Label.Position = UDim2.new(0.5, 0, 0.5, 0)
	Label.Font = Enum.Font.Cartoon
	Label.BackgroundTransparency = 1
	Label.BorderSizePixel = 0
	Label.TextScaled = true
	
	return Label
end

--[[
Constructs a new instance of the portal runner

Params:
ScreenGui <ScreenGui> - The screen gui to apply a loading screen to
NotifKit <NotifierKit> - The notifier kit to use in case an error happens
]]--
function Portals.New(ScreenGui: ScreenGui, NotifKit: {})
	local Runner = Object.New(Portals.ClassName)
	local Gui = MapLoadGui.New()
	local Loader = MapLoader.ClientCreate(ScreenGui)
	local Prompt = MapLoadPrompt.New(Loader)
	local Tweens = TweenGroup.New()
	
	local MusicPlayer = Loader.MusicPlayer
	
	Gui.Replicator = Loader
	Portals.Prompt = Prompt
	
	local IsLoading = false
	
	local TouchConnection: RBXScriptConnection
	local SpawnConnection: RBXScriptConnection
	local DeathConnection: RBXScriptConnection
	
	local FadeFrame: Frame = Instance.new("Frame")
	FadeFrame.Visible = false
	FadeFrame.Name = "PortalRunnerFadeFrame"
	FadeFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	FadeFrame.Size = UDim2.new(1, 0, 1, 0)
	FadeFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	FadeFrame.BackgroundTransparency = 1
	FadeFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	
	Runner.FadeTweenInfo = TweenInfo.new(Gui.TweeningInfo.Time, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
	Runner.ErrorColor = Color3.fromRGB(220, 0, 0)
	
	function Runner.HideFadeFrame()
		Tweens.KillAll()
		Tweens.Play(FadeFrame, Gui.TweeningInfo, {
			BackgroundTransparency = 1
		}, nil, function()
			FadeFrame.Visible = false
		end)
	end
	
	local function OnLoadEnd()
		Runner.HideFadeFrame()
		IsLoading = false
	end
	
	Prompt.VisibleChanged.Connect(function(IsVisible)
		if not IsVisible then
			task.wait(Prompt.TweeningInfo.Time)
			
			if Prompt.Gui.Visible == false then
				OnLoadEnd()
			end
		end
	end)
	
	local function OnError(Message: string)
		assert(typeof(Message) == "string", "Argument 1 must be a string")
		
		NotifKit.NotifyText(Message, Runner.ErrorColor)
		OnLoadEnd()
	end
	
	local function OnTouch(OtherPart: BasePart)
		if IsLoading == false and Loader.IsPlayingMap() == false and Loader.IsInWinPlace() == false then
			if OtherPart.Name == Portals.TeleportPartName then
				local TouchedPortal = OtherPart.Parent
				if TouchedPortal and TouchedPortal.Parent == PortalModel then
					if not IsLoading then
						IsLoading = true
						Tweens.KillAll()

						TeleportSound:Play()
						--FadeFrame.Visible = true
						--Tweens.Play(FadeFrame, Runner.FadeTweenInfo, {
						--	BackgroundTransparency = 0
						--}, nil, function()
						--	Gui.LoadMap(PortalModel.Name)
						--end)
						Prompt.LoadMap(TouchedPortal.Name)
					end
				end
			end
		end
	end
	
	local function DisconnectVisibleChanged()
		
	end
	
	local function ConnectVisibleChanged()
		
	end
	
	local function DisconnectTouch()
		if TouchConnection then
			TouchConnection:Disconnect()
			TouchConnection = nil
		end
	end
	
	local function DisconnectDeath()
		if DeathConnection then
			DeathConnection:Disconnect()
			DeathConnection = nil
		end
	end
	
	local function ConnectTouch(Char: Model)
		local RootPart: BasePart = Char:WaitForChild("HumanoidRootPart")
		
		if RootPart then
			if TouchConnection == nil then
				TouchConnection = RootPart.Touched:Connect(OnTouch)
			end
		end
	end
	
	local function ConnectDeath(Char: Model)
		local Humanoid: Humanoid = Char:WaitForChild("Humanoid")
		
		if Humanoid and DeathConnection == nil then
			DeathConnection = Humanoid.HealthChanged:Connect(function(Health)
				if Health <= 0 then
					DisconnectDeath()
					DisconnectTouch()

					MusicPlayer.MainSound = nil
					MusicPlayer.PlayMusicZones = false

					if IsLoading then
						Loader.CancelLoad()
						Loader.CancelStart()
					end
				end
			end)
		end
	end
	
	local function OnSpawn(Char: Model)
		if Loader.IsPlayingMap() then
			Loader.EndMap(false)
		end
		
		if Char and TouchConnection == nil then
			DisconnectTouch()
			DisconnectDeath()
			ConnectTouch(Char)
			ConnectDeath(Char)
			
			Loader.ExitWinPlace()
			
			MusicPlayer.MusicZoneHitbox = Char:WaitForChild("HumanoidRootPart")
			MusicPlayer.PlayMusicZones = true
			
			local LobbyMainMusic = Loader.LobbyMainMusic
			if MusicPlayer.MainSound ~= LobbyMainMusic then
				MusicPlayer.MainSound = LobbyMainMusic
			end
		end
	end
	
	function Runner.GetLoader()
		return Loader
	end
	
	Loader.OnLoadError.Connect(OnError)
	Loader.OnMapBegin.Connect(function()
		--DisconnectTouch()
		OnLoadEnd()
	end)
	Loader.OnMapEnd.Connect(function()
		local Char = LocalPlayer.Character
		
		if Char and TouchConnection == nil then
			ConnectTouch(Char)
		end
	end)
	
	local InitCharacter = LocalPlayer.Character
	if InitCharacter then
		task.spawn(OnSpawn, InitCharacter)
	end
	SpawnConnection = LocalPlayer.CharacterAdded:Connect(OnSpawn)
	
	--local ValidTeleports = {}
	
	--for i, v in pairs(PortalData) do
	--	local Portal = PortalModel:WaitForChild(i)
		
	--	if Portal then
	--		--local NameBox: BasePart = Portal:WaitForChild("Name")
	--		--local Teleport: BasePart = Portal:WaitForChild("Teleport")
	--		--local CreatorsBox: BasePart = Portal:WaitForChild("Creators")
	--		--local Particles: ParticleEmitter = Portal:WaitForChild("Particles")
			
	--		--if NameBox and Teleport and CreatorsBox then
	--		--	table.insert(ValidTeleports, Teleport)
				
	--		--	local Diff = v.Difficulty
	--		--	local DiffColor = Diff.Color
	--		--	Teleport.Color = DiffColor
	--		--	Particles.Color = ColorSequence.new(DiffColor)
	--		--end
			
	--		local Teleport = Portal:WaitForChild("Teleports")
	--	end
	--end
	
	FadeFrame.ZIndex = 1
	Gui.Gui.ZIndex = 2
	FadeFrame.Parent = ScreenGui
	Gui.Gui.Parent = ScreenGui
	
	Loader.TimerGui.Parent = ScreenGui
	Prompt.PlayFadeScreen.Parent = ScreenGui
	Prompt.Gui.Parent = ScreenGui
	
	Runner.OnDisposal = function()
		if SpawnConnection then
			SpawnConnection:Disconnect()
			SpawnConnection = nil
		end
		
		if TouchConnection then
			TouchConnection:Disconnect()
			TouchConnection = nil
		end
		
		Gui.Dispose()
		Tweens.Dispose()
		FadeFrame:Destroy()
	end
	
	return Runner
end

return Portals]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">079dd8a1bab63e0a024846cb00231feb</UniqueId>
						</Properties>
						<Item class="Sound" referent="RBX943D534D2FA242A7847763EA808CB1D1">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="EmitterSize">10</float>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">TeleportSound</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxassetid://1253908460</url></Content>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<UniqueId name="UniqueId">079dd8a1bab63e0a024846cb00232146</UniqueId>
								<float name="Volume">0.5</float>
								<float name="xmlRead_MaxDistance_3">10000</float>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX7D1666BFDF19427A8037A21CDC78B3F5">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Archive</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018888</UniqueId>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX145A0A561B6F40B1A0A7DE5E172C0149">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">GameStorage</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">43dfcf0d2a77091f023458a10012b3ea</UniqueId>
			</Properties>
			<Item class="Folder" referent="RBX1790032D917F4EF4A77D835DF10871E6">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Maps</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">43dfcf0d2a77091f023458a10012b3f6</UniqueId>
				</Properties>
				<Item class="Model" referent="RBX91D8C012C369461DB9D9910EE8528017">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="ModelStreamingMode">0</token>
						<string name="Name">ExampleTower</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca0f</UniqueId>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>-25.9119225</X>
								<Y>34.5926514</Y>
								<Z>233.016602</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="Folder" referent="RBXE3CBFE659030461CBDF1ED48A0037D74">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Detail</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca10</UniqueId>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBX61459A9B438F46DF9740015CEB94172B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Platforms</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca11</UniqueId>
						</Properties>
					</Item>
					<Item class="Configuration" referent="RBX292210A8D009431584CCD49A53040A5F">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Config</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca15</UniqueId>
						</Properties>
						<Item class="Sound" referent="RBXD739A48088D146D68A27F0BA4F391986">
							<Properties>
								<BinaryString name="AttributesSerialize"><![CDATA[AwAAAAsAAABBdHRyaWJ1dGlvbgIiAAAAQmVlIFN3YXJtIFNpbXVsYXRvciBPU1QgLSBTdGlj
a2J1ZwkAAABTdGFydFRpbWUFAAAAAAwAAABUYXJnZXRWb2x1bWUGAAAAAAAA4D8=]]></BinaryString>
								<float name="EmitterSize">10</float>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">true</bool>
								<string name="Name">MainBGM</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxassetid://2562631515</url></Content>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca16</UniqueId>
								<float name="Volume">0.5</float>
								<float name="xmlRead_MaxDistance_3">10000</float>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX7DA521E479A44A0CB71666B39F466501">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Liquids</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca17</UniqueId>
						</Properties>
						<Item class="Part" referent="RBXA9F5D50937D1457784EE36DC8E6A419E">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-12.9119205</X>
									<Y>18.5000038</Y>
									<Z>288.516602</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">false</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4278212095</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">_Liquid1</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca18</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>16</X>
									<Y>32</Y>
									<Z>15</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX81E88278855444FE9935C7BF0BCDE5C7">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-12.4119205</X>
									<Y>15.5000038</Y>
									<Z>298.516602</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">false</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4294901760</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">_Liquid4</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca19</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>15</X>
									<Y>26</Y>
									<Z>15</Z>
								</Vector3>
							</Properties>
							<Item class="StringValue" referent="RBX30C89EBA3E7742B9B592366F585BC20D">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">State</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca1a</UniqueId>
									<string name="Value">lava</string>
								</Properties>
							</Item>
						</Item>
						<Item class="Part" referent="RBX181E28EA057745DF8E88D0C2B290D2D9">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-3.41192102</X>
									<Y>21.0000038</Y>
									<Z>293.516602</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">false</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4284193356</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">_Liquid2</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca1b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>15</X>
									<Y>37</Y>
									<Z>15</Z>
								</Vector3>
							</Properties>
							<Item class="StringValue" referent="RBX4E5685EAED414C98AC333AB66A053C68">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">State</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca1c</UniqueId>
									<string name="Value">acid</string>
								</Properties>
							</Item>
						</Item>
						<Item class="Part" referent="RBX9F9A2159157843EB8E755214D5A2DF51">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-8.41192055</X>
									<Y>39.0000038</Y>
									<Z>295.016602</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">false</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4289331370</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">_Liquid3</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca1d</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>15</X>
									<Y>73</Y>
									<Z>18</Z>
								</Vector3>
							</Properties>
							<Item class="StringValue" referent="RBX08F9F39F753B4274BA173017194DAD77">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">State</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca1e</UniqueId>
									<string name="Value">acid</string>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Folder" referent="RBXF3585A88ABA14282AE5176741726198A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Interactives</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca1f</UniqueId>
						</Properties>
						<Item class="Model" referent="RBXF3E99C62DA00493683095EBDD073A205">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">_MusicZoneTest</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca36</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-85.5</X>
										<Y>11.9184513</Y>
										<Z>290.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Folder" referent="RBX5F0FB0B418B74F589EF2258E5B5D0A4F">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Parts</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca37</UniqueId>
								</Properties>
								<Item class="Part" referent="RBX7E0528870A7E434C9341E7AE634E6CC8">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">0</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">0</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-85.5</X>
											<Y>11.9184513</Y>
											<Z>290.5</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">false</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">true</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4294830733</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">0</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">0</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Part</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">0</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">0</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0.5</float>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca38</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>11</X>
											<Y>21</Y>
											<Z>17</Z>
										</Vector3>
									</Properties>
								</Item>
								<Item class="Part" referent="RBX12FE219F1BAF44A7B200536E4787D704">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">0</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">0</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-85.5</X>
											<Y>6.91845131</Y>
											<Z>307.5</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">false</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">true</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4294830733</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">0</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">0</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Part</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">0</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">0</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0.5</float>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca39</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>11</X>
											<Y>11</Y>
											<Z>11</Z>
										</Vector3>
									</Properties>
								</Item>
							</Item>
							<Item class="Sound" referent="RBX5B9E3A4E27B64377BB56202E7A11319C">
								<Properties>
									<BinaryString name="AttributesSerialize">AgAAAAgAAABQcmlvcml0eQUAAAAACQAAAFN0YXJ0VGltZQUAAAAA</BinaryString>
									<float name="EmitterSize">10</float>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">true</bool>
									<string name="Name">Sound</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://1841447627</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca3a</UniqueId>
									<float name="Volume">1</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBX771E25A459BF4A4EBDAEBC2993802C1B">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">_MusicZoneTest</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca3b</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-85.5</X>
										<Y>11.9184513</Y>
										<Z>290.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Folder" referent="RBX3E5BCB2F167C4252BD117CAB13FEA30C">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Parts</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca3c</UniqueId>
								</Properties>
								<Item class="Part" referent="RBX47067F4E8D19499F9F6B7C2A91178696">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">0</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">0</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-87</X>
											<Y>8.41845131</Y>
											<Z>290.5</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">false</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">true</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4294901760</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">0</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">0</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Part</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">0</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">0</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0.5</float>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca3d</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>24</X>
											<Y>14</Y>
											<Z>5</Z>
										</Vector3>
									</Properties>
								</Item>
							</Item>
							<Item class="Sound" referent="RBX7EC53BFEBE1C4F2BA6F7CD139A177E9F">
								<Properties>
									<BinaryString name="AttributesSerialize">AgAAAAgAAABQcmlvcml0eQYAAAAAAADwPwkAAABTdGFydFRpbWUFAAAAAA==</BinaryString>
									<float name="EmitterSize">10</float>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">true</bool>
									<string name="Name">Sound</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://6065418936</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca3e</UniqueId>
									<float name="Volume">1</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBX6F1531146FF9469889880B3A449A3274">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">PhysicsGroup</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca3f</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-43.5</X>
										<Y>1.5</Y>
										<Z>675</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Folder" referent="RBX9082CFBEB7BD438CB92E12BA93DF8530">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Parts</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca40</UniqueId>
								</Properties>
								<Item class="Model" referent="RBXCA4894A1F97D4BEEB43E451288AE9FE1">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<token name="LevelOfDetail">0</token>
										<CoordinateFrame name="ModelMeshCFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
										<Vector3 name="ModelMeshSize">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="ModelStreamingMode">0</token>
										<string name="Name">Lever</string>
										<bool name="NeedsPivotMigration">false</bool>
										<Ref name="PrimaryPart">null</Ref>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca41</UniqueId>
										<OptionalCoordinateFrame name="WorldPivotData">
											<CFrame>
												<X>-43.5</X>
												<Y>9.5</Y>
												<Z>671</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CFrame>
										</OptionalCoordinateFrame>
									</Properties>
									<Item class="Part" referent="RBXD392EA7E8AD24E2187147A16033B8D5F">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>-43.5</X>
												<Y>9.5</Y>
												<Z>671</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<bool name="CanCollide">false</bool>
											<bool name="CanQuery">false</bool>
											<bool name="CanTouch">false</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">Anchor</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">1</float>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca42</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>1</X>
												<Y>1</Y>
												<Z>1</Z>
											</Vector3>
										</Properties>
										<Item class="Attachment" referent="RBX93A2FFBC5E4E40E8AACFD8B9E8857105">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>-4.37113883e-08</R00>
													<R01>0</R01>
													<R02>-1</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>1</R20>
													<R21>0</R21>
													<R22>-4.37113883e-08</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">AnchorAttach</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca43</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="HingeConstraint" referent="RBXD67B607D740B46E79805790EF1CBEEC3">
											<Properties>
												<token name="ActuatorType">1</token>
												<float name="AngularResponsiveness">45</float>
												<float name="AngularSpeed">0</float>
												<float name="AngularVelocity">5</float>
												<Ref name="Attachment0">RBX93A2FFBC5E4E40E8AACFD8B9E8857105</Ref>
												<Ref name="Attachment1">RBX636822C484404F8C9F47DDC905A603EC</Ref>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<int name="Color">1009</int>
												<bool name="Enabled">true</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<bool name="LimitsEnabled">false</bool>
												<float name="LowerAngle">-45</float>
												<float name="MotorMaxAcceleration">INF</float>
												<float name="MotorMaxTorque">0</float>
												<string name="Name">HingeConstraint</string>
												<float name="Radius">0.150000006</float>
												<float name="Restitution">0</float>
												<float name="ServoMaxTorque">0</float>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TargetAngle">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca44</UniqueId>
												<float name="UpperAngle">45</float>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
									</Item>
									<Item class="Part" referent="RBX5F16FAA70CDC492DB0043575344D26DD">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"><![CDATA[BAAAAAsAAABJc0Nsb2Nrd2lzZQMBDQAAAFBoeXNpY3NSYWRpdXMGAAAAAAAAOUAMAAAAUm90
YXRpb25UaW1lBgAAAAAAAAhADgAAAFNpbXVsYXRlT25Mb2FkAwE=]]></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>-43.5</X>
												<Y>9.5</Y>
												<Z>671</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<bool name="CanCollide">true</bool>
											<bool name="CanQuery">true</bool>
											<bool name="CanTouch">true</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">SpinningPart</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca45</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>15</X>
												<Y>1</Y>
												<Z>2</Z>
											</Vector3>
										</Properties>
										<Item class="Attachment" referent="RBX636822C484404F8C9F47DDC905A603EC">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>-4.37113883e-08</R00>
													<R01>0</R01>
													<R02>-1</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>1</R20>
													<R21>0</R21>
													<R22>-4.37113883e-08</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">SpinAttach</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca46</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="NoCollisionConstraint" referent="RBX56FC2D6E25134438AB33C2E7DCCBA450">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="Enabled">true</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">NoCollisionConstraint</string>
												<Ref name="Part0">RBX5F16FAA70CDC492DB0043575344D26DD</Ref>
												<Ref name="Part1">RBXA681D1FC607D429D9A28BC10673CC34A</Ref>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca47</UniqueId>
											</Properties>
										</Item>
										<Item class="NoCollisionConstraint" referent="RBX2ECA202B002C46FFA7F5FEF81BC936AA">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="Enabled">true</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">NoCollisionConstraint</string>
												<Ref name="Part0">RBX5F16FAA70CDC492DB0043575344D26DD</Ref>
												<Ref name="Part1">RBX0A69912B342E40B294A0D4054457EDB1</Ref>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca48</UniqueId>
											</Properties>
										</Item>
									</Item>
									<Item class="Model" referent="RBXCD21812CE57E4F38BD3A6B55F13398F1">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<token name="LevelOfDetail">0</token>
											<CoordinateFrame name="ModelMeshCFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
											<Vector3 name="ModelMeshSize">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="ModelStreamingMode">0</token>
											<string name="Name">Detail</string>
											<bool name="NeedsPivotMigration">false</bool>
											<Ref name="PrimaryPart">null</Ref>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca49</UniqueId>
											<OptionalCoordinateFrame name="WorldPivotData">
												<CFrame>
													<X>-43.5</X>
													<Y>6.00000906</Y>
													<Z>671</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-1.00000012</R20>
													<R21>0</R21>
													<R22>5.96046448e-08</R22>
												</CFrame>
											</OptionalCoordinateFrame>
										</Properties>
										<Item class="Part" referent="RBXA681D1FC607D429D9A28BC10673CC34A">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>9.50001907</Y>
													<Z>671</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-1.00000012</R20>
													<R21>0</R21>
													<R22>5.96046448e-08</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4291677645</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca4a</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>4</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBX0A69912B342E40B294A0D4054457EDB1">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>9.50001907</Y>
													<Z>671</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-1.00000012</R20>
													<R21>0</R21>
													<R22>5.96046448e-08</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4288651692</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca4b</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>8</X>
													<Y>1</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBXA0D141C6607D4C12B32AB0FFD7FB6738">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>9.50001907</Y>
													<Z>675</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-1.00000012</R20>
													<R21>0</R21>
													<R22>5.96046448e-08</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4291480529</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca4c</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">0</token>
												<Vector3 name="size">
													<X>2</X>
													<Y>2</Y>
													<Z>2</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBX4EDF9C8B4AFA44CA8078699D586ABC0A">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>9.50001907</Y>
													<Z>667</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-1.00000012</R20>
													<R21>0</R21>
													<R22>5.96046448e-08</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4291480529</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca4d</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">0</token>
												<Vector3 name="size">
													<X>2</X>
													<Y>2</Y>
													<Z>2</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBX14B74CC7E40A42119B1A35F5756E0F48">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>5.49999952</Y>
													<Z>675</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>1.00000012</R10>
													<R11>0</R11>
													<R12>-5.96046448e-08</R12>
													<R20>0</R20>
													<R21>1</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca4e</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>9</X>
													<Y>1</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBX4FEFD15F28E9449E8D3FF8C466AF059E">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>5.49999952</Y>
													<Z>667</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>1.00000012</R10>
													<R11>0</R11>
													<R12>-5.96046448e-08</R12>
													<R20>0</R20>
													<R21>1</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca4f</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>9</X>
													<Y>1</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBXC0C6329F008B4E2E9E60D1D9D78E8F9B">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>1.49999905</Y>
													<Z>675</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>1.00000012</R10>
													<R11>0</R11>
													<R12>-5.96046448e-08</R12>
													<R20>0</R20>
													<R21>1</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca50</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBX7542BA63528F4F17A81A8C086A9E45F5">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>1.49999905</Y>
													<Z>667</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>1.00000012</R10>
													<R11>0</R11>
													<R12>-5.96046448e-08</R12>
													<R20>0</R20>
													<R21>1</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca51</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Model" referent="RBX754A4B4421E4497AB5D8C115B12EEE5E">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<token name="LevelOfDetail">0</token>
										<CoordinateFrame name="ModelMeshCFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
										<Vector3 name="ModelMeshSize">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="ModelStreamingMode">0</token>
										<string name="Name">Spinner</string>
										<bool name="NeedsPivotMigration">false</bool>
										<Ref name="PrimaryPart">null</Ref>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca52</UniqueId>
										<OptionalCoordinateFrame name="WorldPivotData">
											<CFrame>
												<X>-43.5</X>
												<Y>9.5</Y>
												<Z>657</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CFrame>
										</OptionalCoordinateFrame>
									</Properties>
									<Item class="Part" referent="RBXA79FD7A349E8433EB57A8FCB931019EA">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>-43.5</X>
												<Y>9.5</Y>
												<Z>656.5</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<bool name="CanCollide">false</bool>
											<bool name="CanQuery">false</bool>
											<bool name="CanTouch">false</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">Anchor</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">1</float>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca53</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>1</X>
												<Y>1</Y>
												<Z>1</Z>
											</Vector3>
										</Properties>
										<Item class="Attachment" referent="RBX16C996592CB54305ACA76D3CA665DD14">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>-4.37113883e-08</R00>
													<R01>-1</R01>
													<R02>0</R02>
													<R10>1</R10>
													<R11>-4.37113883e-08</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">AnchorAttach</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca54</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="HingeConstraint" referent="RBXB7746EE6ADB6482782620A099A1D65F9">
											<Properties>
												<token name="ActuatorType">1</token>
												<float name="AngularResponsiveness">45</float>
												<float name="AngularSpeed">0</float>
												<float name="AngularVelocity">2.5</float>
												<Ref name="Attachment0">RBX16C996592CB54305ACA76D3CA665DD14</Ref>
												<Ref name="Attachment1">RBX8C4DE4B5B6AE4545A3FE6CA15B7E4DE0</Ref>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<int name="Color">1009</int>
												<bool name="Enabled">true</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<bool name="LimitsEnabled">false</bool>
												<float name="LowerAngle">-45</float>
												<float name="MotorMaxAcceleration">INF</float>
												<float name="MotorMaxTorque">INF</float>
												<string name="Name">HingeConstraint</string>
												<float name="Radius">0.150000006</float>
												<float name="Restitution">0</float>
												<float name="ServoMaxTorque">0</float>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TargetAngle">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca55</UniqueId>
												<float name="UpperAngle">45</float>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
									</Item>
									<Item class="Part" referent="RBX4C5FD6AB681C4C38830D70810639BE5E">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"><![CDATA[BAAAAAsAAABJc0Nsb2Nrd2lzZQMBDQAAAFBoeXNpY3NSYWRpdXMGAAAAAAAAOUAMAAAAUm90
YXRpb25UaW1lBgAAAAAAAAhADgAAAFNpbXVsYXRlT25Mb2FkAwE=]]></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>-43.5</X>
												<Y>9.5</Y>
												<Z>656.5</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<bool name="CanCollide">true</bool>
											<bool name="CanQuery">true</bool>
											<bool name="CanTouch">true</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">SpinningPart</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca56</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>15</X>
												<Y>1</Y>
												<Z>3</Z>
											</Vector3>
										</Properties>
										<Item class="Attachment" referent="RBX8C4DE4B5B6AE4545A3FE6CA15B7E4DE0">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>-4.37113883e-08</R00>
													<R01>-1</R01>
													<R02>0</R02>
													<R10>1</R10>
													<R11>-4.37113883e-08</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">SpinAttach</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca57</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="Trail" referent="RBX4C138407D9AF4C18A7E3BC6EE90D5454">
											<Properties>
												<Ref name="Attachment0">RBXBB46C51DBE564998BCEFA7517FCB0158</Ref>
												<Ref name="Attachment1">RBXDD0FC41ACBCE41739F4D5428A69D1B02</Ref>
												<BinaryString name="AttributesSerialize">AQAAAA4AAABTaG93T25TaW11bGF0ZQMB</BinaryString>
												<float name="Brightness">2</float>
												<ColorSequence name="Color">0 0.54902 0.356863 0.623529 0 1 0.54902 0.356863 0.623529 0 </ColorSequence>
												<bool name="Enabled">true</bool>
												<bool name="FaceCamera">false</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="Lifetime">0.5</float>
												<float name="LightEmission">0</float>
												<float name="LightInfluence">0</float>
												<float name="MaxLength">10</float>
												<float name="MinLength">0</float>
												<string name="Name">Trail</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<Content name="Texture"><null></null></Content>
												<float name="TextureLength">1</float>
												<token name="TextureMode">2</token>
												<NumberSequence name="Transparency">0 0.5 0 1 1 0 </NumberSequence>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca58</UniqueId>
												<NumberSequence name="WidthScale">0 1 0 1 1 0 </NumberSequence>
											</Properties>
										</Item>
										<Item class="Attachment" referent="RBXBB46C51DBE564998BCEFA7517FCB0158">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-4.5</X>
													<Y>0</Y>
													<Z>-1.5</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">TrailAttach1</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca59</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="Attachment" referent="RBXDD0FC41ACBCE41739F4D5428A69D1B02">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-7.5</X>
													<Y>0</Y>
													<Z>-1.5</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">TrailAttach2</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca5a</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="Attachment" referent="RBXDB49BFE0706C4993ADE43BE2CA8612AC">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>4.5</X>
													<Y>0</Y>
													<Z>1.5</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">TrailAttach4</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca5b</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="Attachment" referent="RBX7BAF14C9D78447A4BF3304A9996A4B2B">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>7.5</X>
													<Y>0</Y>
													<Z>1.5</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">TrailAttach3</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca5c</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="Trail" referent="RBX6A053F924389416A9F032004A9AD8632">
											<Properties>
												<Ref name="Attachment0">RBX7BAF14C9D78447A4BF3304A9996A4B2B</Ref>
												<Ref name="Attachment1">RBXDB49BFE0706C4993ADE43BE2CA8612AC</Ref>
												<BinaryString name="AttributesSerialize">AQAAAA4AAABTaG93T25TaW11bGF0ZQMB</BinaryString>
												<float name="Brightness">2</float>
												<ColorSequence name="Color">0 0.54902 0.356863 0.623529 0 1 0.54902 0.356863 0.623529 0 </ColorSequence>
												<bool name="Enabled">true</bool>
												<bool name="FaceCamera">false</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="Lifetime">0.5</float>
												<float name="LightEmission">0</float>
												<float name="LightInfluence">0</float>
												<float name="MaxLength">10</float>
												<float name="MinLength">0</float>
												<string name="Name">Trail</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<Content name="Texture"><null></null></Content>
												<float name="TextureLength">1</float>
												<token name="TextureMode">2</token>
												<NumberSequence name="Transparency">0 0.5 0 1 1 0 </NumberSequence>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca5d</UniqueId>
												<NumberSequence name="WidthScale">0 1 0 1 1 0 </NumberSequence>
											</Properties>
										</Item>
										<Item class="NoCollisionConstraint" referent="RBX2EEFC31E4E9E4BA8824F6F1C3BBC0CE1">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="Enabled">true</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">NoCollisionConstraint</string>
												<Ref name="Part0">RBX4C5FD6AB681C4C38830D70810639BE5E</Ref>
												<Ref name="Part1">RBX73DBF739CBCC4B3BBCD0EB0FC74BBA3E</Ref>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca5e</UniqueId>
											</Properties>
										</Item>
									</Item>
									<Item class="Model" referent="RBXDFCB76F694974E5989F41D3461AC0F84">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<token name="LevelOfDetail">0</token>
											<CoordinateFrame name="ModelMeshCFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
											<Vector3 name="ModelMeshSize">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="ModelStreamingMode">0</token>
											<string name="Name">Detail</string>
											<bool name="NeedsPivotMigration">false</bool>
											<Ref name="PrimaryPart">null</Ref>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca5f</UniqueId>
											<OptionalCoordinateFrame name="WorldPivotData">
												<CFrame>
													<X>-43.5</X>
													<Y>6.00000906</Y>
													<Z>657</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-1.00000012</R20>
													<R21>0</R21>
													<R22>5.96046448e-08</R22>
												</CFrame>
											</OptionalCoordinateFrame>
										</Properties>
										<Item class="Part" referent="RBXA4EE14417A784741AC1C0E2ED5F189C3">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>4.50001907</Y>
													<Z>656.5</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca60</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>7</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBX73DBF739CBCC4B3BBCD0EB0FC74BBA3E">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5000038</X>
													<Y>9.50001907</Y>
													<Z>656.5</Z>
													<R00>0</R00>
													<R01>-1</R01>
													<R02>0</R02>
													<R10>1</R10>
													<R11>0</R11>
													<R12>-0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca61</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>3</X>
													<Y>5</Y>
													<Z>5</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBXD01CAD8488204956A0B82501995C6E7C">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>3.5</Y>
													<Z>655.5</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca62</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>5</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBX3662414EB67347CE9B7C6C8A7DFD3E00">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>3.5</Y>
													<Z>657.5</Z>
													<R00>-1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>-1</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca63</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>5</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBXB2593299132446EB8C9AE1621EADB3F4">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-42.5</X>
													<Y>3.5</Y>
													<Z>656.5</Z>
													<R00>0</R00>
													<R01>0</R01>
													<R02>-1</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>1</R20>
													<R21>0</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca64</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>5</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBX5C17219991F1421FB8AE537B9B783317">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-44.5</X>
													<Y>3.5</Y>
													<Z>656.5</Z>
													<R00>0</R00>
													<R01>0</R01>
													<R02>1</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>-0</R12>
													<R20>-1</R20>
													<R21>0</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca65</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>5</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBX07EC142CE23C48079607F3D6AE4BED62">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>3</Y>
													<Z>655</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca66</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>4</Y>
													<Z>2</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBXD49AE23CFCAF4C74AD653C515F99E62E">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-42</X>
													<Y>3</Y>
													<Z>656.5</Z>
													<R00>0</R00>
													<R01>0</R01>
													<R02>-1</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>1</R20>
													<R21>0</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca67</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>4</Y>
													<Z>2</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBXF7C1E622495B4E8CB89D5FDD1588CBCF">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>3</Y>
													<Z>658</Z>
													<R00>-1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>-1</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca68</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>4</Y>
													<Z>2</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBX8F79B630ED4E46F29E460226F9D19383">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-45</X>
													<Y>3</Y>
													<Z>656.5</Z>
													<R00>0</R00>
													<R01>0</R01>
													<R02>1</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>-0</R12>
													<R20>-1</R20>
													<R21>0</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca69</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>4</Y>
													<Z>2</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBXE070B971988740689569FB3708F11206">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-45.5</X>
													<Y>2.5</Y>
													<Z>656.5</Z>
													<R00>0</R00>
													<R01>0</R01>
													<R02>1</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>-0</R12>
													<R20>-1</R20>
													<R21>0</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca6a</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBXE3A64262524441CE85A4849AA96CBE07">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>2.5</Y>
													<Z>654.5</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca6b</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBXB1509C1E5FAA4AB5B917AB63CE8F3416">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-41.5</X>
													<Y>2.5</Y>
													<Z>656.5</Z>
													<R00>0</R00>
													<R01>0</R01>
													<R02>-1</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>1</R20>
													<R21>0</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca6c</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBXF94C99AD50AC46B08097E8E3D14D6130">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5</X>
													<Y>2.5</Y>
													<Z>658.5</Z>
													<R00>-1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>-1</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca6d</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBX86B0753EDB40452D952425C79700C6AC">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-43.5000038</X>
													<Y>9.50001907</Y>
													<Z>656.5</Z>
													<R00>0</R00>
													<R01>-1</R01>
													<R02>0</R02>
													<R10>1</R10>
													<R11>0</R11>
													<R12>-0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<bool name="CanCollide">false</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4290019583</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">288</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Light</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca6e</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>3.20000005</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
											<Item class="Beam" referent="RBXC695A2DF8836495E80DB2CCCA25B0AD8">
												<Properties>
													<Ref name="Attachment0">RBX87C7688CBFD44F1683AACFCFABD3BF8C</Ref>
													<Ref name="Attachment1">RBXF27AAF7F9F044BA798E66C3FDD3D5A9B</Ref>
													<BinaryString name="AttributesSerialize">AQAAAA4AAABTaG93T25TaW11bGF0ZQMB</BinaryString>
													<float name="Brightness">2</float>
													<ColorSequence name="Color">0 0.705882 0.501961 1 0 1 0.705882 0.501961 1 0 </ColorSequence>
													<float name="CurveSize0">0</float>
													<float name="CurveSize1">0</float>
													<bool name="Enabled">true</bool>
													<bool name="FaceCamera">true</bool>
													<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
													<float name="LightEmission">1</float>
													<float name="LightInfluence">0</float>
													<string name="Name">Beam</string>
													<int name="Segments">10</int>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<Content name="Texture"><null></null></Content>
													<float name="TextureLength">1</float>
													<token name="TextureMode">0</token>
													<float name="TextureSpeed">1</float>
													<NumberSequence name="Transparency">0 0 0 1 1 0 </NumberSequence>
													<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca6f</UniqueId>
													<float name="Width0">3</float>
													<float name="Width1">5</float>
													<float name="ZOffset">0</float>
												</Properties>
											</Item>
											<Item class="Attachment" referent="RBXF27AAF7F9F044BA798E66C3FDD3D5A9B">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>5.5</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
													<string name="Name">Attachment1</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca70</UniqueId>
													<bool name="Visible">false</bool>
												</Properties>
											</Item>
											<Item class="Attachment" referent="RBX87C7688CBFD44F1683AACFCFABD3BF8C">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>1.5</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
													<string name="Name">Attachment0</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca71</UniqueId>
													<bool name="Visible">false</bool>
												</Properties>
											</Item>
											<Item class="ParticleEmitter" referent="RBX469D8DFA772C475D991A36BAD42DE486">
												<Properties>
													<Vector3 name="Acceleration">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
													</Vector3>
													<BinaryString name="AttributesSerialize">AQAAAA4AAABTaG93T25TaW11bGF0ZQMB</BinaryString>
													<float name="Brightness">3</float>
													<ColorSequence name="Color">0 0.705882 0.501961 1 0 1 0.705882 0.501961 1 0 </ColorSequence>
													<float name="Drag">0</float>
													<token name="EmissionDirection">0</token>
													<bool name="Enabled">true</bool>
													<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
													<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
													<token name="FlipbookLayout">0</token>
													<token name="FlipbookMode">0</token>
													<bool name="FlipbookStartRandom">false</bool>
													<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
													<NumberRange name="Lifetime">5 10 </NumberRange>
													<float name="LightEmission">0.25</float>
													<float name="LightInfluence">0</float>
													<bool name="LockedToPart">false</bool>
													<string name="Name">ParticleEmitter</string>
													<token name="Orientation">0</token>
													<float name="Rate">20</float>
													<NumberRange name="RotSpeed">0 0 </NumberRange>
													<NumberRange name="Rotation">0 0 </NumberRange>
													<token name="Shape">2</token>
													<token name="ShapeInOut">0</token>
													<float name="ShapePartial">1</float>
													<token name="ShapeStyle">0</token>
													<NumberSequence name="Size">0 0.05 0 1 0 0 </NumberSequence>
													<int64 name="SourceAssetId">-1</int64>
													<NumberRange name="Speed">1 1 </NumberRange>
													<Vector2 name="SpreadAngle">
														<X>30</X>
														<Y>30</Y>
													</Vector2>
													<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
													<BinaryString name="Tags"></BinaryString>
													<Content name="Texture"><url>rbxasset://textures/particles/sparkles_main.dds</url></Content>
													<float name="TimeScale">1</float>
													<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
													<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca72</UniqueId>
													<float name="VelocityInheritance">0</float>
													<float name="ZOffset">0</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Highlight" referent="RBX5506943BE007449CB23DBA5621409505">
										<Properties>
											<Ref name="Adornee">null</Ref>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<token name="DepthMode">1</token>
											<bool name="Enabled">true</bool>
											<Color3 name="FillColor">
												<R>1</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<float name="FillTransparency">0.5</float>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Highlight</string>
											<Color3 name="OutlineColor">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="OutlineTransparency">0</float>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f000bc61d</UniqueId>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="StringValue" referent="RBX5C3B981ADF2F4F53A09BC54109885897">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Interactive</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca96</UniqueId>
									<string name="Value">PhysicsGroup</string>
								</Properties>
							</Item>
							<Item class="Folder" referent="RBX2268F04190734118B516480421461C2A">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">SimulateZone</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca97</UniqueId>
								</Properties>
								<Item class="Part" referent="RBX23C80CB443634121A953ED18C7978055">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">0</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">0</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-43.5</X>
											<Y>13.5</Y>
											<Z>665</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">false</bool>
										<bool name="CanQuery">false</bool>
										<bool name="CanTouch">false</bool>
										<bool name="CastShadow">true</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">0</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">0</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Part</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">0</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">0</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">1</float>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca98</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>17</X>
											<Y>25</Y>
											<Z>26</Z>
										</Vector3>
									</Properties>
									<Item class="SelectionBox" referent="RBX12A0CCEE4DAD42A298A598E919576740">
										<Properties>
											<Ref name="Adornee">RBX23C80CB443634121A953ED18C7978055</Ref>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LineThickness">0.150000006</float>
											<string name="Name">SelectionBox</string>
											<int64 name="SourceAssetId">-1</int64>
											<Color3 name="SurfaceColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="SurfaceTransparency">1</float>
											<BinaryString name="Tags"></BinaryString>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca99</UniqueId>
											<bool name="Visible">true</bool>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Part" referent="RBXE6F33B43E29D4CC885BA8B3EABC303BA">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">4</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-54</X>
									<Y>19</Y>
									<Z>318</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">800</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Wall</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca9c</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>18</X>
									<Y>34</Y>
									<Z>1.5</Z>
								</Vector3>
							</Properties>
							<Item class="Beam" referent="RBXE38F49347AC144618A4E7DFF7AD1926D">
								<Properties>
									<Ref name="Attachment0">RBXE89388915D514290A3E7BD4F3C41AE42</Ref>
									<Ref name="Attachment1">RBXC78998FFFD0B4BDFB42D9A4EA4B6CDC4</Ref>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="Brightness">1</float>
									<ColorSequence name="Color">0 0 0 0 0 1 0 0 0 0 </ColorSequence>
									<float name="CurveSize0">0</float>
									<float name="CurveSize1">0</float>
									<bool name="Enabled">true</bool>
									<bool name="FaceCamera">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LightEmission">0</float>
									<float name="LightInfluence">1</float>
									<string name="Name">Beam</string>
									<int name="Segments">10</int>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>rbxassetid://6555558292</url></Content>
									<float name="TextureLength">12</float>
									<token name="TextureMode">2</token>
									<float name="TextureSpeed">-1.5</float>
									<NumberSequence name="Transparency">0 0.5 0 1 0.5 0 </NumberSequence>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca9d</UniqueId>
									<float name="Width0">12</float>
									<float name="Width1">12</float>
									<float name="ZOffset">0</float>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBXC78998FFFD0B4BDFB42D9A4EA4B6CDC4">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0.013974607</X>
										<Y>-17.1913548</Y>
										<Z>0.860200882</Z>
										<R00>-8.74227766e-08</R00>
										<R01>1</R01>
										<R02>3.82137093e-15</R02>
										<R10>-4.37113883e-08</R10>
										<R11>0</R11>
										<R12>-1</R12>
										<R20>-1</R20>
										<R21>-8.74227766e-08</R21>
										<R22>4.37113883e-08</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Mid_Bot</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca9e</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBXE89388915D514290A3E7BD4F3C41AE42">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0.0139715075</X>
										<Y>16.922348</Y>
										<Z>0.860200882</Z>
										<R00>-8.74227766e-08</R00>
										<R01>1</R01>
										<R02>3.82137093e-15</R02>
										<R10>-4.37113883e-08</R10>
										<R11>0</R11>
										<R12>-1</R12>
										<R20>-1</R20>
										<R21>-8.74227766e-08</R21>
										<R22>4.37113883e-08</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Mid_Top</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dca9f</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="Beam" referent="RBX1C8DE0D82E82417FA1D0EA112AF9F551">
								<Properties>
									<Ref name="Attachment0">RBXCB4133438B3B42149BC005E7750A6D6B</Ref>
									<Ref name="Attachment1">RBXE071DA8D4E394D3E9D7D6AA2AB08BA84</Ref>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="Brightness">1</float>
									<ColorSequence name="Color">0 0.529412 1 0.529412 0 1 0.529412 1 0.529412 0 </ColorSequence>
									<float name="CurveSize0">0</float>
									<float name="CurveSize1">0</float>
									<bool name="Enabled">true</bool>
									<bool name="FaceCamera">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LightEmission">0.25</float>
									<float name="LightInfluence">0</float>
									<string name="Name">Side0</string>
									<int name="Segments">10</int>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>http://www.roblox.com/asset/?id=6399401493</url></Content>
									<float name="TextureLength">2</float>
									<token name="TextureMode">2</token>
									<float name="TextureSpeed">-4</float>
									<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaa0</UniqueId>
									<float name="Width0">2</float>
									<float name="Width1">2</float>
									<float name="ZOffset">0</float>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBXE071DA8D4E394D3E9D7D6AA2AB08BA84">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>-7.00467634</X>
										<Y>-17.2515717</Y>
										<Z>0.837678909</Z>
										<R00>4.90099801e-08</R00>
										<R01>-1</R01>
										<R02>-3.67926418e-08</R02>
										<R10>-1.50818096e-08</R10>
										<R11>-3.67926418e-08</R11>
										<R12>1</R12>
										<R20>-1</R20>
										<R21>-4.90099801e-08</R21>
										<R22>-1.50818114e-08</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Side0_Bot</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaa1</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBXCB4133438B3B42149BC005E7750A6D6B">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>-7.00466204</X>
										<Y>16.8035431</Y>
										<Z>0.837678909</Z>
										<R00>4.90099836e-08</R00>
										<R01>-1</R01>
										<R02>-7.03650382e-09</R02>
										<R10>-1.39090623e-08</R10>
										<R11>-7.03650471e-09</R11>
										<R12>1</R12>
										<R20>-1</R20>
										<R21>-4.90099836e-08</R21>
										<R22>-1.39090623e-08</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Side0_Top</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaa2</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="Beam" referent="RBX03E76151373D41149F315A528380D4AE">
								<Properties>
									<Ref name="Attachment0">RBXCD6DDBA1BA6149E0A8C85B463CB18CF8</Ref>
									<Ref name="Attachment1">RBXC5D8E9E62BB14632A4A1749778E6B8D4</Ref>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="Brightness">1</float>
									<ColorSequence name="Color">0 0.529412 1 0.529412 0 1 0.529412 1 0.529412 0 </ColorSequence>
									<float name="CurveSize0">0</float>
									<float name="CurveSize1">0</float>
									<bool name="Enabled">true</bool>
									<bool name="FaceCamera">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LightEmission">0.25</float>
									<float name="LightInfluence">0</float>
									<string name="Name">Side1</string>
									<int name="Segments">10</int>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>http://www.roblox.com/asset/?id=6399401493</url></Content>
									<float name="TextureLength">2</float>
									<token name="TextureMode">2</token>
									<float name="TextureSpeed">-4</float>
									<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaa3</UniqueId>
									<float name="Width0">2</float>
									<float name="Width1">2</float>
									<float name="ZOffset">0</float>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBXC5D8E9E62BB14632A4A1749778E6B8D4">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>7.00895691</X>
										<Y>-17.0569382</Y>
										<Z>0.837690353</Z>
										<R00>4.90099801e-08</R00>
										<R01>-1</R01>
										<R02>-6.65950282e-08</R02>
										<R10>-1.50818025e-08</R10>
										<R11>-6.65950282e-08</R11>
										<R12>1</R12>
										<R20>-1</R20>
										<R21>-4.90099801e-08</R21>
										<R22>-1.5081806e-08</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Side1_Bot</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaa4</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBXCD6DDBA1BA6149E0A8C85B463CB18CF8">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>7.00896168</X>
										<Y>16.8035431</Y>
										<Z>0.837678909</Z>
										<R00>4.90099836e-08</R00>
										<R01>-1</R01>
										<R02>-3.68388839e-08</R02>
										<R10>-1.39090535e-08</R10>
										<R11>-3.68388839e-08</R11>
										<R12>1</R12>
										<R20>-1</R20>
										<R21>-4.90099836e-08</R21>
										<R22>-1.39090552e-08</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Side1_Top</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaa5</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="StringValue" referent="RBXD6B5E4A0B37E44A584A9079C52405034">
								<Properties>
									<BinaryString name="AttributesSerialize"><![CDATA[BgAAAAsAAABCb3VuY2VQb3dlcgYAAAAAAEBQQAwAAABHcmFiQ29vbGRvd24GMzMzMzMzwz8J
AAAASXNFbmFibGVkAwEKAAAASnVtcEhlaWdodAYAAAAAAEBQQA4AAABMYXVuY2hEdXJhdGlv
bgaamZmZmZnJPw0AAABTdGlja0R1cmF0aW9uBgAAAAAAABRA]]></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Interactive</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaa6</UniqueId>
									<string name="Value">StickyWall</string>
								</Properties>
							</Item>
						</Item>
						<Item class="Part" referent="RBX0043750AD8414C19A2CE97855546A8FF">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">4</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-54</X>
									<Y>19</Y>
									<Z>305</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">800</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Wall</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaa7</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>18</X>
									<Y>34</Y>
									<Z>1.5</Z>
								</Vector3>
							</Properties>
							<Item class="Beam" referent="RBXAE992CBF57284999A0A5478C167DB369">
								<Properties>
									<Ref name="Attachment0">RBX58C2A5FA35A84C3688242066B75B6B01</Ref>
									<Ref name="Attachment1">RBX7EEB9E7D19EF42068294BB3765BAC66C</Ref>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="Brightness">1</float>
									<ColorSequence name="Color">0 0 0 0 0 1 0 0 0 0 </ColorSequence>
									<float name="CurveSize0">0</float>
									<float name="CurveSize1">0</float>
									<bool name="Enabled">true</bool>
									<bool name="FaceCamera">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LightEmission">0</float>
									<float name="LightInfluence">1</float>
									<string name="Name">Beam</string>
									<int name="Segments">10</int>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>rbxassetid://6555558292</url></Content>
									<float name="TextureLength">12</float>
									<token name="TextureMode">2</token>
									<float name="TextureSpeed">-1.5</float>
									<NumberSequence name="Transparency">0 0.5 0 1 0.5 0 </NumberSequence>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaa8</UniqueId>
									<float name="Width0">12</float>
									<float name="Width1">12</float>
									<float name="ZOffset">0</float>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBX7EEB9E7D19EF42068294BB3765BAC66C">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0.013974607</X>
										<Y>-17.1913548</Y>
										<Z>0.860200882</Z>
										<R00>-8.74227766e-08</R00>
										<R01>1</R01>
										<R02>3.82137093e-15</R02>
										<R10>-4.37113883e-08</R10>
										<R11>0</R11>
										<R12>-1</R12>
										<R20>-1</R20>
										<R21>-8.74227766e-08</R21>
										<R22>4.37113883e-08</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Mid_Bot</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaa9</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBX58C2A5FA35A84C3688242066B75B6B01">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0.0139715075</X>
										<Y>16.922348</Y>
										<Z>0.860200882</Z>
										<R00>-8.74227766e-08</R00>
										<R01>1</R01>
										<R02>3.82137093e-15</R02>
										<R10>-4.37113883e-08</R10>
										<R11>0</R11>
										<R12>-1</R12>
										<R20>-1</R20>
										<R21>-8.74227766e-08</R21>
										<R22>4.37113883e-08</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Mid_Top</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaaa</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="Beam" referent="RBXC54F9C502778422599D294D0697FF54D">
								<Properties>
									<Ref name="Attachment0">RBX8F2F7E4F5BBE4DB1861F9B8F80849514</Ref>
									<Ref name="Attachment1">RBXDFF9555849524D42864BAEC30B64EF7A</Ref>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="Brightness">1</float>
									<ColorSequence name="Color">0 0.529412 1 0.529412 0 1 0.529412 1 0.529412 0 </ColorSequence>
									<float name="CurveSize0">0</float>
									<float name="CurveSize1">0</float>
									<bool name="Enabled">true</bool>
									<bool name="FaceCamera">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LightEmission">0.25</float>
									<float name="LightInfluence">0</float>
									<string name="Name">Side0</string>
									<int name="Segments">10</int>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>http://www.roblox.com/asset/?id=6399401493</url></Content>
									<float name="TextureLength">2</float>
									<token name="TextureMode">2</token>
									<float name="TextureSpeed">-4</float>
									<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaab</UniqueId>
									<float name="Width0">2</float>
									<float name="Width1">2</float>
									<float name="ZOffset">0</float>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBXDFF9555849524D42864BAEC30B64EF7A">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>-7.00467634</X>
										<Y>-17.2515717</Y>
										<Z>0.837678909</Z>
										<R00>4.90099801e-08</R00>
										<R01>-1</R01>
										<R02>-3.67926418e-08</R02>
										<R10>-1.50818096e-08</R10>
										<R11>-3.67926418e-08</R11>
										<R12>1</R12>
										<R20>-1</R20>
										<R21>-4.90099801e-08</R21>
										<R22>-1.50818114e-08</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Side0_Bot</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaac</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBX8F2F7E4F5BBE4DB1861F9B8F80849514">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>-7.00466204</X>
										<Y>16.8035431</Y>
										<Z>0.837678909</Z>
										<R00>4.90099836e-08</R00>
										<R01>-1</R01>
										<R02>-7.03650382e-09</R02>
										<R10>-1.39090623e-08</R10>
										<R11>-7.03650471e-09</R11>
										<R12>1</R12>
										<R20>-1</R20>
										<R21>-4.90099836e-08</R21>
										<R22>-1.39090623e-08</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Side0_Top</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaad</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="Beam" referent="RBXC5D1442C16D843858ADB9B2C0DCF5039">
								<Properties>
									<Ref name="Attachment0">RBXB7433A59068C4F67AB0A56A0FA015B55</Ref>
									<Ref name="Attachment1">RBX35B0B7B56CA34629AA6E828AA4D2005C</Ref>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="Brightness">1</float>
									<ColorSequence name="Color">0 0.529412 1 0.529412 0 1 0.529412 1 0.529412 0 </ColorSequence>
									<float name="CurveSize0">0</float>
									<float name="CurveSize1">0</float>
									<bool name="Enabled">true</bool>
									<bool name="FaceCamera">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LightEmission">0.25</float>
									<float name="LightInfluence">0</float>
									<string name="Name">Side1</string>
									<int name="Segments">10</int>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>http://www.roblox.com/asset/?id=6399401493</url></Content>
									<float name="TextureLength">2</float>
									<token name="TextureMode">2</token>
									<float name="TextureSpeed">-4</float>
									<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaae</UniqueId>
									<float name="Width0">2</float>
									<float name="Width1">2</float>
									<float name="ZOffset">0</float>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBX35B0B7B56CA34629AA6E828AA4D2005C">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>7.00895691</X>
										<Y>-17.0569382</Y>
										<Z>0.837690353</Z>
										<R00>4.90099801e-08</R00>
										<R01>-1</R01>
										<R02>-6.65950282e-08</R02>
										<R10>-1.50818025e-08</R10>
										<R11>-6.65950282e-08</R11>
										<R12>1</R12>
										<R20>-1</R20>
										<R21>-4.90099801e-08</R21>
										<R22>-1.5081806e-08</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Side1_Bot</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaaf</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBXB7433A59068C4F67AB0A56A0FA015B55">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>7.00896168</X>
										<Y>16.8035431</Y>
										<Z>0.837678909</Z>
										<R00>4.90099836e-08</R00>
										<R01>-1</R01>
										<R02>-3.68388839e-08</R02>
										<R10>-1.39090535e-08</R10>
										<R11>-3.68388839e-08</R11>
										<R12>1</R12>
										<R20>-1</R20>
										<R21>-4.90099836e-08</R21>
										<R22>-1.39090552e-08</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Side1_Top</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcab0</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="StringValue" referent="RBX840DACD28C6841F88891DBD742EC75B4">
								<Properties>
									<BinaryString name="AttributesSerialize"><![CDATA[BgAAAAsAAABCb3VuY2VQb3dlcgYAAAAAAEBQQAwAAABHcmFiQ29vbGRvd24GMzMzMzMzwz8J
AAAASXNFbmFibGVkAwEKAAAASnVtcEhlaWdodAYAAAAAAEBQQA4AAABMYXVuY2hEdXJhdGlv
bgaamZmZmZnJPw0AAABTdGlja0R1cmF0aW9uBgAAAAAAABRA]]></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Interactive</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcab1</UniqueId>
									<string name="Value">StickyWall</string>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBX4E1ABDDE19EC4266913C6C2657BE6340">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">HealthChanger</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaca</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-56</X>
										<Y>1.99996948</Y>
										<Z>673</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="StringValue" referent="RBX745889FE196B4D949F2662231F7DDCF7">
								<Properties>
									<BinaryString name="AttributesSerialize"><![CDATA[AwAAAA8AAABEZXRlY3Rpb25SYWRpdXMGAAAAAAAALEAJAAAASW5jcmVtZW50BgAAAAAAABTA
CwAAAFJlcGVhdERlbGF5BgAAAAAAAPA/]]></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Interactive</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcacb</UniqueId>
									<string name="Value">HealthChanger</string>
								</Properties>
							</Item>
							<Item class="Folder" referent="RBX018C1595FABB46D8ABFBB70DE538BAD0">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Parts</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcacc</UniqueId>
								</Properties>
								<Item class="Part" referent="RBX55ACC6900CFD47D0A0804BEB0BFAEC15">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">3</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">3</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-56</X>
											<Y>1.99996948</Y>
											<Z>673</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">true</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">true</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">3</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">3</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">832</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Killbrick</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">3</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">3</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcacd</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>2</X>
											<Y>2</Y>
											<Z>10</Z>
										</Vector3>
									</Properties>
									<Item class="ParticleEmitter" referent="RBXBDBF480D381F498487883E25EE0BA46B">
										<Properties>
											<Vector3 name="Acceleration">
												<X>0</X>
												<Y>0.5</Y>
												<Z>0</Z>
											</Vector3>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="Brightness">2</float>
											<ColorSequence name="Color">0 0.639216 0.635294 0.647059 0 1 0.639216 0.635294 0.647059 0 </ColorSequence>
											<float name="Drag">0</float>
											<token name="EmissionDirection">1</token>
											<bool name="Enabled">true</bool>
											<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
											<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
											<token name="FlipbookLayout">0</token>
											<token name="FlipbookMode">0</token>
											<bool name="FlipbookStartRandom">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<NumberRange name="Lifetime">2 5 </NumberRange>
											<float name="LightEmission">0</float>
											<float name="LightInfluence">0</float>
											<bool name="LockedToPart">false</bool>
											<string name="Name">ParticleEmitter</string>
											<token name="Orientation">0</token>
											<float name="Rate">2</float>
											<NumberRange name="RotSpeed">-150 150 </NumberRange>
											<NumberRange name="Rotation">0 0 </NumberRange>
											<token name="Shape">0</token>
											<token name="ShapeInOut">0</token>
											<float name="ShapePartial">1</float>
											<token name="ShapeStyle">0</token>
											<NumberSequence name="Size">0 1 0 1 1 0 </NumberSequence>
											<int64 name="SourceAssetId">-1</int64>
											<NumberRange name="Speed">2 2 </NumberRange>
											<Vector2 name="SpreadAngle">
												<X>360</X>
												<Y>360</Y>
											</Vector2>
											<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>rbxassetid://116729942</url></Content>
											<float name="TimeScale">1</float>
											<NumberSequence name="Transparency">0 0 0 0.642137 0 0 0.90121 0.354651 0 1 1 0 </NumberSequence>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcace</UniqueId>
											<float name="VelocityInheritance">0</float>
											<float name="ZOffset">0</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Model" referent="RBXDF97B4817A414332AA3E5D351805FDE5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">BubbleSpawn</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcad0</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-30</X>
										<Y>27.25</Y>
										<Z>666.75</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBX7658177FA8904E26902FB2058D6C7503">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-30</X>
										<Y>6</Y>
										<Z>676</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">false</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4285438410</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">288</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Hitbox</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.75</float>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcad1</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">0</token>
									<Vector3 name="size">
										<X>4</X>
										<Y>4</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
								<Item class="ParticleEmitter" referent="RBX720690DFC32949BBB340AF58C18DA281">
									<Properties>
										<Vector3 name="Acceleration">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="Brightness">3</float>
										<ColorSequence name="Color">0 0.333333 0.666667 1 0 1 0.333333 0.666667 1 0 </ColorSequence>
										<float name="Drag">0</float>
										<token name="EmissionDirection">1</token>
										<bool name="Enabled">true</bool>
										<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
										<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
										<token name="FlipbookLayout">0</token>
										<token name="FlipbookMode">0</token>
										<bool name="FlipbookStartRandom">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<NumberRange name="Lifetime">0.9 1 </NumberRange>
										<float name="LightEmission">1</float>
										<float name="LightInfluence">0</float>
										<bool name="LockedToPart">false</bool>
										<string name="Name">Intro</string>
										<token name="Orientation">0</token>
										<float name="Rate">25</float>
										<NumberRange name="RotSpeed">0 0 </NumberRange>
										<NumberRange name="Rotation">0 0 </NumberRange>
										<token name="Shape">1</token>
										<token name="ShapeInOut">0</token>
										<float name="ShapePartial">1</float>
										<token name="ShapeStyle">1</token>
										<NumberSequence name="Size">0 0.1 0 1 0 0 </NumberSequence>
										<int64 name="SourceAssetId">-1</int64>
										<NumberRange name="Speed">1.9 2 </NumberRange>
										<Vector2 name="SpreadAngle">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
										<BinaryString name="Tags"></BinaryString>
										<Content name="Texture"><url>rbxasset://textures/particles/sparkles_main.dds</url></Content>
										<float name="TimeScale">1</float>
										<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
										<UniqueId name="UniqueId">59a47a146e61f62b02da6433000bdfe6</UniqueId>
										<float name="VelocityInheritance">0</float>
										<float name="ZOffset">0</float>
									</Properties>
								</Item>
							</Item>
							<Item class="Folder" referent="RBX567DBE2950DC4D788F3CAF4388ED48BE">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Points</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcad2</UniqueId>
								</Properties>
								<Item class="Part" referent="RBXEDDFE45798254E599BDDB8BE6210765B">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">0</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">0</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-30</X>
											<Y>53</Y>
											<Z>676</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">false</bool>
										<bool name="CanQuery">false</bool>
										<bool name="CanTouch">false</bool>
										<bool name="CastShadow">true</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">0</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">0</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">3</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">0</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">0</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">1</float>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcad3</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>1</X>
											<Y>1</Y>
											<Z>1</Z>
										</Vector3>
									</Properties>
								</Item>
								<Item class="Part" referent="RBX6575FB2C2E0D421BAC3024CA66CF6A93">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">0</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">0</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-30</X>
											<Y>4</Y>
											<Z>656</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">false</bool>
										<bool name="CanQuery">false</bool>
										<bool name="CanTouch">false</bool>
										<bool name="CastShadow">true</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">0</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">0</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">2</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">0</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">0</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">1</float>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcad4</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>1</X>
											<Y>1</Y>
											<Z>1</Z>
										</Vector3>
									</Properties>
								</Item>
								<Item class="Part" referent="RBX14397170929C474285F0C581DA3D2191">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">0</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">0</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-30</X>
											<Y>6</Y>
											<Z>676</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">false</bool>
										<bool name="CanQuery">false</bool>
										<bool name="CanTouch">false</bool>
										<bool name="CastShadow">true</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">0</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">0</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">1</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">0</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">0</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">1</float>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcad5</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>1</X>
											<Y>1</Y>
											<Z>1</Z>
										</Vector3>
									</Properties>
								</Item>
								<Item class="Part" referent="RBXF562E10D6FDC4607B520ECAFB9921AC2">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">0</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">0</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-30</X>
											<Y>53</Y>
											<Z>656</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">false</bool>
										<bool name="CanQuery">false</bool>
										<bool name="CanTouch">false</bool>
										<bool name="CastShadow">true</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">0</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">0</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">4</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">0</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">0</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">1</float>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcad6</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>1</X>
											<Y>1</Y>
											<Z>1</Z>
										</Vector3>
									</Properties>
								</Item>
							</Item>
							<Item class="StringValue" referent="RBX56FE278F5CEB4F678BD5448467793D86">
								<Properties>
									<BinaryString name="AttributesSerialize"><![CDATA[BAAAAA8AAABBdXRvTnVtU2VnbWVudHMDAAYAAABEZWdyZWUGAAAAAAAACEALAAAATnVtU2Vn
bWVudHMGAAAAAABAb0ANAAAAU3RvcHNWZWxvY2l0eQMB]]></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Interactive</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcad7</UniqueId>
									<string name="Value">Bubble</string>
								</Properties>
								<Item class="ModuleScript" referent="RBX99EFD3337DEB4747974C29C8127C5060">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<Content name="LinkedSource"><null></null></Content>
										<string name="Name">BubbleProperties</string>
										<string name="ScriptGuid">{3388B8A5-CF60-4BF6-A4EA-B9EB51436807}</string>
										<ProtectedString name="Source"><![CDATA[return {
	CarryTweenInfo = TweenInfo.new(3, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
}]]></ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcad8</UniqueId>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Folder" referent="RBXE8857A009C4D4622ACB112D63AA79542">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Music</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb7d</UniqueId>
							</Properties>
							<Item class="Model" referent="RBXBDBAE5921A2F45D38DF1AD018E1AC49F">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<token name="LevelOfDetail">0</token>
									<CoordinateFrame name="ModelMeshCFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
									<Vector3 name="ModelMeshSize">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="ModelStreamingMode">0</token>
									<string name="Name">_MusicZone_F1</string>
									<bool name="NeedsPivotMigration">false</bool>
									<Ref name="PrimaryPart">null</Ref>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb7e</UniqueId>
									<OptionalCoordinateFrame name="WorldPivotData">
										<CFrame>
											<X>-34</X>
											<Y>90</Y>
											<Z>582</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CFrame>
									</OptionalCoordinateFrame>
								</Properties>
								<Item class="Folder" referent="RBX8288CAC332FA41548A8605389BCA575D">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">Parts</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb7f</UniqueId>
									</Properties>
									<Item class="Part" referent="RBXFE5A15DC85044BB186C61C7F9782FBA8">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>-34</X>
												<Y>51</Y>
												<Z>582</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<bool name="CanCollide">false</bool>
											<bool name="CanQuery">true</bool>
											<bool name="CanTouch">true</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">Part</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">1</float>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb80</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>250</X>
												<Y>100</Y>
												<Z>250</Z>
											</Vector3>
										</Properties>
									</Item>
								</Item>
								<Item class="Sound" referent="RBX18EAA9C1921B4F1B8AD4AC29180E90AE">
									<Properties>
										<BinaryString name="AttributesSerialize"><![CDATA[BAAAAAsAAABBdHRyaWJ1dGlvbgI9AAAAS1BNIE1haW4gU2VyaWVzIC0gUFJFU1NVUkUgQ09P
S0VSIDMgLSBNYXNzaXZlIFNlbGVjdG9yIDYwIChhKQgAAABQcmlvcml0eQUAAAAACQAAAFN0
YXJ0VGltZQYAAAAAAAAAAAwAAABUYXJnZXRWb2x1bWUGAAAAAAAA8D8=]]></BinaryString>
										<float name="EmitterSize">10</float>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">true</bool>
										<string name="Name">Sound</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">1</float>
										<bool name="Playing">false</bool>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>rbxassetid://1840715047</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb81</UniqueId>
										<float name="Volume">1</float>
										<float name="xmlRead_MaxDistance_3">10000</float>
									</Properties>
								</Item>
							</Item>
							<Item class="Model" referent="RBX319FEFBDD0AF4FFEAC6405041A234034">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<token name="LevelOfDetail">0</token>
									<CoordinateFrame name="ModelMeshCFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
									<Vector3 name="ModelMeshSize">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="ModelStreamingMode">0</token>
									<string name="Name">_MusicZone_F2_to_3</string>
									<bool name="NeedsPivotMigration">false</bool>
									<Ref name="PrimaryPart">null</Ref>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb82</UniqueId>
									<OptionalCoordinateFrame name="WorldPivotData">
										<CFrame>
											<X>-34</X>
											<Y>190</Y>
											<Z>582</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CFrame>
									</OptionalCoordinateFrame>
								</Properties>
								<Item class="Folder" referent="RBX746393928A81456EA05D692F6928EFA8">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">Parts</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb83</UniqueId>
									</Properties>
									<Item class="Part" referent="RBX7D8F27F2978D441ABA623DD90004FEF4">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>-34</X>
												<Y>201</Y>
												<Z>582</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<bool name="CanCollide">false</bool>
											<bool name="CanQuery">true</bool>
											<bool name="CanTouch">true</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">Part</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">1</float>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb84</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>250</X>
												<Y>200</Y>
												<Z>250</Z>
											</Vector3>
										</Properties>
									</Item>
								</Item>
								<Item class="Sound" referent="RBXD5DA21382F0640B2A8F0AA08437177F4">
									<Properties>
										<BinaryString name="AttributesSerialize"><![CDATA[BAAAAAsAAABBdHRyaWJ1dGlvbgI5AAAAU29ub3RvbiBWYW5ndWFyZCAtIEZSRU5DSCBFTEVD
VFJPIFBPV0VSIC0gUm9ib3RpYyBEYW5jZSBDCAAAAFByaW9yaXR5BQAAAAAJAAAAU3RhcnRU
aW1lBgAAAAAAAAAADAAAAFRhcmdldFZvbHVtZQYAAAAAAADwPw==]]></BinaryString>
										<float name="EmitterSize">10</float>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">true</bool>
										<string name="Name">Sound</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">1</float>
										<bool name="Playing">false</bool>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>rbxassetid://1847853099</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb85</UniqueId>
										<float name="Volume">1</float>
										<float name="xmlRead_MaxDistance_3">10000</float>
									</Properties>
								</Item>
							</Item>
							<Item class="Model" referent="RBX945233F420324BDDB5837F79986549BA">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<token name="LevelOfDetail">0</token>
									<CoordinateFrame name="ModelMeshCFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
									<Vector3 name="ModelMeshSize">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="ModelStreamingMode">0</token>
									<string name="Name">_MusicZone_F4_to_5</string>
									<bool name="NeedsPivotMigration">false</bool>
									<Ref name="PrimaryPart">null</Ref>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ea3b1</UniqueId>
									<OptionalCoordinateFrame name="WorldPivotData">
										<CFrame>
											<X>-34</X>
											<Y>190</Y>
											<Z>582</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CFrame>
									</OptionalCoordinateFrame>
								</Properties>
								<Item class="Folder" referent="RBX2EE9EE44E6534080BE709D398E63808E">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">Parts</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ea3b2</UniqueId>
									</Properties>
									<Item class="Part" referent="RBXA26B95B473284BA888AD35545CBC5DF3">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>-34</X>
												<Y>401</Y>
												<Z>582</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<bool name="CanCollide">false</bool>
											<bool name="CanQuery">true</bool>
											<bool name="CanTouch">true</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">Part</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">1</float>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ea3b3</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>250</X>
												<Y>200</Y>
												<Z>250</Z>
											</Vector3>
										</Properties>
									</Item>
								</Item>
								<Item class="Sound" referent="RBX14562BA8CC534E11ADBDACCABC2A9361">
									<Properties>
										<BinaryString name="AttributesSerialize"><![CDATA[BAAAAAsAAABBdHRyaWJ1dGlvbgIZAAAAQmFkIENvbXB1dGVyIC0gRGVzdHJveSBNZQgAAABQ
cmlvcml0eQUAAAAACQAAAFN0YXJ0VGltZQYAAAAAAAAAAAwAAABUYXJnZXRWb2x1bWUGAAAA
AAAA8D8=]]></BinaryString>
										<float name="EmitterSize">10</float>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">true</bool>
										<string name="Name">Sound</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">1</float>
										<bool name="Playing">false</bool>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>rbxassetid://7023617400</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ea3b4</UniqueId>
										<float name="Volume">1</float>
										<float name="xmlRead_MaxDistance_3">10000</float>
									</Properties>
								</Item>
							</Item>
							<Item class="Model" referent="RBXAC494DADD9A24A51AFDA3F05CB5BF73D">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<token name="LevelOfDetail">0</token>
									<CoordinateFrame name="ModelMeshCFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
									<Vector3 name="ModelMeshSize">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="ModelStreamingMode">0</token>
									<string name="Name">_MusicZone_F6_to_7</string>
									<bool name="NeedsPivotMigration">false</bool>
									<Ref name="PrimaryPart">null</Ref>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ea986</UniqueId>
									<OptionalCoordinateFrame name="WorldPivotData">
										<CFrame>
											<X>-34</X>
											<Y>190</Y>
											<Z>582</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CFrame>
									</OptionalCoordinateFrame>
								</Properties>
								<Item class="Folder" referent="RBX867FEE9B75E44164BF077054959F68B5">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">Parts</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ea987</UniqueId>
									</Properties>
									<Item class="Part" referent="RBX3731CFC14D314B8F8A4FF8E7629864AD">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>-34</X>
												<Y>601</Y>
												<Z>582</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<bool name="CanCollide">false</bool>
											<bool name="CanQuery">true</bool>
											<bool name="CanTouch">true</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">Part</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">1</float>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ea988</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>250</X>
												<Y>200</Y>
												<Z>250</Z>
											</Vector3>
										</Properties>
									</Item>
								</Item>
								<Item class="Sound" referent="RBX36E2B93C10A34A5F8A3F63F90343A627">
									<Properties>
										<BinaryString name="AttributesSerialize"><![CDATA[BAAAAAsAAABBdHRyaWJ1dGlvbgIiAAAAV1JMRCAmIEtlZXBzYWtlIC0gV2lzaGZ1bCBUaGlu
a2luZwgAAABQcmlvcml0eQUAAAAACQAAAFN0YXJ0VGltZQYAAAAAAAAAAAwAAABUYXJnZXRW
b2x1bWUGAAAAAAAA8D8=]]></BinaryString>
										<float name="EmitterSize">10</float>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">true</bool>
										<string name="Name">Sound</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">1</float>
										<bool name="Playing">false</bool>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>rbxassetid://7029099738</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002ea989</UniqueId>
										<float name="Volume">1</float>
										<float name="xmlRead_MaxDistance_3">10000</float>
									</Properties>
								</Item>
							</Item>
							<Item class="Model" referent="RBX22AE2328E64F4AB1A4DF7A028807C280">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<token name="LevelOfDetail">0</token>
									<CoordinateFrame name="ModelMeshCFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
									<Vector3 name="ModelMeshSize">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="ModelStreamingMode">0</token>
									<string name="Name">_MusicZone_F8_to_9</string>
									<bool name="NeedsPivotMigration">false</bool>
									<Ref name="PrimaryPart">null</Ref>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002eb08f</UniqueId>
									<OptionalCoordinateFrame name="WorldPivotData">
										<CFrame>
											<X>-34</X>
											<Y>190</Y>
											<Z>582</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CFrame>
									</OptionalCoordinateFrame>
								</Properties>
								<Item class="Folder" referent="RBXE31DBA3B60164431977C186C3158D1A1">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">Parts</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002eb090</UniqueId>
									</Properties>
									<Item class="Part" referent="RBXBF78F9CE99C44C2993B0A9E0130AEB04">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>-34</X>
												<Y>801</Y>
												<Z>582</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<bool name="CanCollide">false</bool>
											<bool name="CanQuery">true</bool>
											<bool name="CanTouch">true</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">Part</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">1</float>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002eb091</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>250</X>
												<Y>200</Y>
												<Z>250</Z>
											</Vector3>
										</Properties>
									</Item>
								</Item>
								<Item class="Sound" referent="RBXD484E410F2284D548EFA018DF52BFED1">
									<Properties>
										<BinaryString name="AttributesSerialize"><![CDATA[BAAAAAsAAABBdHRyaWJ1dGlvbgIoAAAAU2VsZWN0ZWQgU291bmQgLSBUZWNoLURhbmNlIC0g
RmFzdCBUaW1lcggAAABQcmlvcml0eQUAAAAACQAAAFN0YXJ0VGltZQYAAAAAAAAAAAwAAABU
YXJnZXRWb2x1bWUGAAAAAAAA8D8=]]></BinaryString>
										<float name="EmitterSize">10</float>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">true</bool>
										<string name="Name">Sound</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">1</float>
										<bool name="Playing">false</bool>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>rbxassetid://1844639702</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002eb092</UniqueId>
										<float name="Volume">1</float>
										<float name="xmlRead_MaxDistance_3">10000</float>
									</Properties>
								</Item>
							</Item>
							<Item class="Model" referent="RBX870F44490A3D47FDB219B3E5A4862873">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<token name="LevelOfDetail">0</token>
									<CoordinateFrame name="ModelMeshCFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
									<Vector3 name="ModelMeshSize">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="ModelStreamingMode">0</token>
									<string name="Name">_MusicZone_F10</string>
									<bool name="NeedsPivotMigration">false</bool>
									<Ref name="PrimaryPart">null</Ref>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002eb1f8</UniqueId>
									<OptionalCoordinateFrame name="WorldPivotData">
										<CFrame>
											<X>-34</X>
											<Y>190</Y>
											<Z>582</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CFrame>
									</OptionalCoordinateFrame>
								</Properties>
								<Item class="Folder" referent="RBX715AF2F18A2A4EB7811255678D1B3855">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">Parts</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002eb1f9</UniqueId>
									</Properties>
									<Item class="Part" referent="RBXBA57A857ECDE41BBBE3D2EA6E88A0FCF">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>-34</X>
												<Y>1001</Y>
												<Z>582</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<bool name="CanCollide">false</bool>
											<bool name="CanQuery">true</bool>
											<bool name="CanTouch">true</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">Part</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">1</float>
											<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002eb1fa</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>250</X>
												<Y>200</Y>
												<Z>250</Z>
											</Vector3>
										</Properties>
									</Item>
								</Item>
								<Item class="Sound" referent="RBX28B9657B2B424DA1B4EAF6F4846811D8">
									<Properties>
										<BinaryString name="AttributesSerialize"><![CDATA[BAAAAAsAAABBdHRyaWJ1dGlvbgINAAAAQmVuc2xleSAtIFZleAgAAABQcmlvcml0eQUAAAAA
CQAAAFN0YXJ0VGltZQYAAAAAAAAAAAwAAABUYXJnZXRWb2x1bWUGAAAAAAAA8D8=]]></BinaryString>
										<float name="EmitterSize">10</float>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">true</bool>
										<string name="Name">Sound</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">1</float>
										<bool name="Playing">false</bool>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>rbxassetid://7023635858</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002eb1fb</UniqueId>
										<float name="Volume">1</float>
										<float name="xmlRead_MaxDistance_3">10000</float>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Model" referent="RBX779F3FA50C154481920B5962B41B0D99">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">PhysicsGroup</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffb0</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>8.5</X>
										<Y>1.5</Y>
										<Z>675</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Folder" referent="RBX6E4D55B81D4D4EAFA59AF7AEA578ED66">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Parts</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffb1</UniqueId>
								</Properties>
								<Item class="Model" referent="RBXA1E91301FCAF46F8BF640B42698C59BD">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<token name="LevelOfDetail">0</token>
										<CoordinateFrame name="ModelMeshCFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
										<Vector3 name="ModelMeshSize">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="ModelStreamingMode">0</token>
										<string name="Name">Lever</string>
										<bool name="NeedsPivotMigration">false</bool>
										<Ref name="PrimaryPart">null</Ref>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffb2</UniqueId>
										<OptionalCoordinateFrame name="WorldPivotData">
											<CFrame>
												<X>8.5</X>
												<Y>9.5</Y>
												<Z>671</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CFrame>
										</OptionalCoordinateFrame>
									</Properties>
									<Item class="Part" referent="RBXB44D20BCE6A8425E990B8B35BBC28EEF">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>8.5</X>
												<Y>9.5</Y>
												<Z>671</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<bool name="CanCollide">false</bool>
											<bool name="CanQuery">false</bool>
											<bool name="CanTouch">false</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">Anchor</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">1</float>
											<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffb3</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>1</X>
												<Y>1</Y>
												<Z>1</Z>
											</Vector3>
										</Properties>
										<Item class="Attachment" referent="RBX5F1B99A6F0294D30A9F96FE55538FA91">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>-4.37113883e-08</R00>
													<R01>0</R01>
													<R02>-1</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>1</R20>
													<R21>0</R21>
													<R22>-4.37113883e-08</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">AnchorAttach</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffb4</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="HingeConstraint" referent="RBX9629C17203F843AC899CA9D6331EC5AC">
											<Properties>
												<token name="ActuatorType">1</token>
												<float name="AngularResponsiveness">45</float>
												<float name="AngularSpeed">0</float>
												<float name="AngularVelocity">5</float>
												<Ref name="Attachment0">RBX5F1B99A6F0294D30A9F96FE55538FA91</Ref>
												<Ref name="Attachment1">RBXA24F3034AD5F4DF78EBE0FE75184144E</Ref>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<int name="Color">1009</int>
												<bool name="Enabled">true</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<bool name="LimitsEnabled">false</bool>
												<float name="LowerAngle">-45</float>
												<float name="MotorMaxAcceleration">INF</float>
												<float name="MotorMaxTorque">0</float>
												<string name="Name">HingeConstraint</string>
												<float name="Radius">0.150000006</float>
												<float name="Restitution">0</float>
												<float name="ServoMaxTorque">0</float>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TargetAngle">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffb5</UniqueId>
												<float name="UpperAngle">45</float>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
									</Item>
									<Item class="Part" referent="RBX673D713F2D08453F8B509C6B86529297">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"><![CDATA[BAAAAAsAAABJc0Nsb2Nrd2lzZQMBDQAAAFBoeXNpY3NSYWRpdXMGAAAAAAAAOUAMAAAAUm90
YXRpb25UaW1lBgAAAAAAAAhADgAAAFNpbXVsYXRlT25Mb2FkAwE=]]></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>8.5</X>
												<Y>9.5</Y>
												<Z>671</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<bool name="CanCollide">true</bool>
											<bool name="CanQuery">true</bool>
											<bool name="CanTouch">true</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">SpinningPart</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffb6</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>15</X>
												<Y>1</Y>
												<Z>2</Z>
											</Vector3>
										</Properties>
										<Item class="Attachment" referent="RBXA24F3034AD5F4DF78EBE0FE75184144E">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>-4.37113883e-08</R00>
													<R01>0</R01>
													<R02>-1</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>1</R20>
													<R21>0</R21>
													<R22>-4.37113883e-08</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">SpinAttach</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffb7</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="NoCollisionConstraint" referent="RBXDE63A6088215477A8D9552BC845FB69D">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="Enabled">true</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">NoCollisionConstraint</string>
												<Ref name="Part0">RBX673D713F2D08453F8B509C6B86529297</Ref>
												<Ref name="Part1">RBXA2AF6757091E4D33AC88A42C3C456D74</Ref>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffb8</UniqueId>
											</Properties>
										</Item>
										<Item class="NoCollisionConstraint" referent="RBX65A3898E2A9140AE81CA284D7C09445D">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="Enabled">true</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">NoCollisionConstraint</string>
												<Ref name="Part0">RBX673D713F2D08453F8B509C6B86529297</Ref>
												<Ref name="Part1">RBX3C913512143D419FAA402F17F9DDFCE0</Ref>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffb9</UniqueId>
											</Properties>
										</Item>
									</Item>
									<Item class="Model" referent="RBX4B1102AAECA24A75AEA3BD39D5B6FB21">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<token name="LevelOfDetail">0</token>
											<CoordinateFrame name="ModelMeshCFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
											<Vector3 name="ModelMeshSize">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="ModelStreamingMode">0</token>
											<string name="Name">Detail</string>
											<bool name="NeedsPivotMigration">false</bool>
											<Ref name="PrimaryPart">null</Ref>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffba</UniqueId>
											<OptionalCoordinateFrame name="WorldPivotData">
												<CFrame>
													<X>8.5</X>
													<Y>6.00000906</Y>
													<Z>671</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-1.00000012</R20>
													<R21>0</R21>
													<R22>5.96046448e-08</R22>
												</CFrame>
											</OptionalCoordinateFrame>
										</Properties>
										<Item class="Part" referent="RBXA2AF6757091E4D33AC88A42C3C456D74">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>8.5</X>
													<Y>9.50001907</Y>
													<Z>671</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-1.00000012</R20>
													<R21>0</R21>
													<R22>5.96046448e-08</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4291677645</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffbb</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>4</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBX3C913512143D419FAA402F17F9DDFCE0">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>8.5</X>
													<Y>9.50001907</Y>
													<Z>671</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-1.00000012</R20>
													<R21>0</R21>
													<R22>5.96046448e-08</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4288651692</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffbc</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>8</X>
													<Y>1</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBXE3BDF119151246958C78349F4C6FB483">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>8.5</X>
													<Y>9.50001907</Y>
													<Z>675</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-1.00000012</R20>
													<R21>0</R21>
													<R22>5.96046448e-08</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4291480529</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffbd</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">0</token>
												<Vector3 name="size">
													<X>2</X>
													<Y>2</Y>
													<Z>2</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBXCE4AD3BF641A403D91BA6F717B622B68">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>8.5</X>
													<Y>9.50001907</Y>
													<Z>667</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-1.00000012</R20>
													<R21>0</R21>
													<R22>5.96046448e-08</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4291480529</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffbe</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">0</token>
												<Vector3 name="size">
													<X>2</X>
													<Y>2</Y>
													<Z>2</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBX555C6D8BF21E4C979CFAE9FC16EF8DFC">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>8.5</X>
													<Y>5.49999952</Y>
													<Z>675</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>1.00000012</R10>
													<R11>0</R11>
													<R12>-5.96046448e-08</R12>
													<R20>0</R20>
													<R21>1</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffbf</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>9</X>
													<Y>1</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBXE1541D17888E4A1D99614A4B94277285">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>8.5</X>
													<Y>5.49999952</Y>
													<Z>667</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>1.00000012</R10>
													<R11>0</R11>
													<R12>-5.96046448e-08</R12>
													<R20>0</R20>
													<R21>1</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffc0</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>9</X>
													<Y>1</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBXBB9E5CB642D345B3A30897BDA597CE4E">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>8.5</X>
													<Y>1.49999905</Y>
													<Z>675</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>1.00000012</R10>
													<R11>0</R11>
													<R12>-5.96046448e-08</R12>
													<R20>0</R20>
													<R21>1</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffc1</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBX1FA86F87C3954EA7864DD55ED15A8E58">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>8.5</X>
													<Y>1.49999905</Y>
													<Z>667</Z>
													<R00>5.96046448e-08</R00>
													<R01>0</R01>
													<R02>1.00000012</R02>
													<R10>1.00000012</R10>
													<R11>0</R11>
													<R12>-5.96046448e-08</R12>
													<R20>0</R20>
													<R21>1</R21>
													<R22>0</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffc2</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Model" referent="RBX7E396C01AF5F467D95831912CBE09BC2">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<token name="LevelOfDetail">0</token>
										<CoordinateFrame name="ModelMeshCFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
										<Vector3 name="ModelMeshSize">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="ModelStreamingMode">0</token>
										<string name="Name">Spinner</string>
										<bool name="NeedsPivotMigration">false</bool>
										<Ref name="PrimaryPart">null</Ref>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffc3</UniqueId>
										<OptionalCoordinateFrame name="WorldPivotData">
											<CFrame>
												<X>0.0307338238</X>
												<Y>20.5</Y>
												<Z>584.304443</Z>
												<R00>0.923879504</R00>
												<R01>0</R01>
												<R02>-0.382683456</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0.382683456</R20>
												<R21>0</R21>
												<R22>0.923879504</R22>
											</CFrame>
										</OptionalCoordinateFrame>
									</Properties>
									<Item class="Part" referent="RBX71E6ABC0405E48B9BB9913E1A3A63E07">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>0.222079039</X>
												<Y>20.5</Y>
												<Z>583.842529</Z>
												<R00>0.923879504</R00>
												<R01>0</R01>
												<R02>-0.382683456</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0.382683456</R20>
												<R21>0</R21>
												<R22>0.923879504</R22>
											</CoordinateFrame>
											<bool name="CanCollide">false</bool>
											<bool name="CanQuery">false</bool>
											<bool name="CanTouch">false</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">Anchor</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">1</float>
											<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffc4</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>1</X>
												<Y>1</Y>
												<Z>1</Z>
											</Vector3>
										</Properties>
										<Item class="Attachment" referent="RBX02BBF4D383C4498BA474E08C25371501">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>-4.37113883e-08</R00>
													<R01>-1</R01>
													<R02>0</R02>
													<R10>1</R10>
													<R11>-4.37113883e-08</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">AnchorAttach</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffc5</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="HingeConstraint" referent="RBX1A19B0BF9824489284B3B6163A85E830">
											<Properties>
												<token name="ActuatorType">1</token>
												<float name="AngularResponsiveness">45</float>
												<float name="AngularSpeed">0</float>
												<float name="AngularVelocity">2.5</float>
												<Ref name="Attachment0">RBX02BBF4D383C4498BA474E08C25371501</Ref>
												<Ref name="Attachment1">RBXDD66759ABCFC43688D82E2419BE3D71B</Ref>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<int name="Color">1009</int>
												<bool name="Enabled">true</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<bool name="LimitsEnabled">false</bool>
												<float name="LowerAngle">-45</float>
												<float name="MotorMaxAcceleration">INF</float>
												<float name="MotorMaxTorque">INF</float>
												<string name="Name">HingeConstraint</string>
												<float name="Radius">0.150000006</float>
												<float name="Restitution">0</float>
												<float name="ServoMaxTorque">0</float>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TargetAngle">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffc6</UniqueId>
												<float name="UpperAngle">45</float>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
									</Item>
									<Item class="Part" referent="RBX9DFD2F33CD9B46BD968CF68BDDA9DC82">
										<Properties>
											<bool name="Anchored">true</bool>
											<BinaryString name="AttributesSerialize"><![CDATA[BAAAAAsAAABJc0Nsb2Nrd2lzZQMBDQAAAFBoeXNpY3NSYWRpdXMGAAAAAAAAOUAMAAAAUm90
YXRpb25UaW1lBgAAAAAAAAhADgAAAFNpbXVsYXRlT25Mb2FkAwE=]]></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">3</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">3</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>0.222079039</X>
												<Y>20.5</Y>
												<Z>583.842529</Z>
												<R00>0.923879504</R00>
												<R01>0</R01>
												<R02>-0.382683456</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0.382683456</R20>
												<R21>0</R21>
												<R22>0.923879504</R22>
											</CoordinateFrame>
											<bool name="CanCollide">true</bool>
											<bool name="CanQuery">true</bool>
											<bool name="CanTouch">true</bool>
											<bool name="CastShadow">true</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">3</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">3</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">SpinningPart</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">3</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">3</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffc7</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>15</X>
												<Y>1</Y>
												<Z>3</Z>
											</Vector3>
										</Properties>
										<Item class="Attachment" referent="RBXDD66759ABCFC43688D82E2419BE3D71B">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>-4.37113883e-08</R00>
													<R01>-1</R01>
													<R02>0</R02>
													<R10>1</R10>
													<R11>-4.37113883e-08</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">SpinAttach</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffc8</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="Trail" referent="RBXA6C045AC83FA4B038DF06F4BB13F669D">
											<Properties>
												<Ref name="Attachment0">RBXC0FD270D26734BBA89B7BC47FE47ADC0</Ref>
												<Ref name="Attachment1">RBXD4DDE9EFF8964970AD68DA5A6C2C83C5</Ref>
												<BinaryString name="AttributesSerialize">AQAAAA4AAABTaG93T25TaW11bGF0ZQMB</BinaryString>
												<float name="Brightness">2</float>
												<ColorSequence name="Color">0 0.54902 0.356863 0.623529 0 1 0.54902 0.356863 0.623529 0 </ColorSequence>
												<bool name="Enabled">true</bool>
												<bool name="FaceCamera">false</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="Lifetime">0.5</float>
												<float name="LightEmission">0</float>
												<float name="LightInfluence">0</float>
												<float name="MaxLength">10</float>
												<float name="MinLength">0</float>
												<string name="Name">Trail</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<Content name="Texture"><null></null></Content>
												<float name="TextureLength">1</float>
												<token name="TextureMode">2</token>
												<NumberSequence name="Transparency">0 0.5 0 1 1 0 </NumberSequence>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffc9</UniqueId>
												<NumberSequence name="WidthScale">0 1 0 1 1 0 </NumberSequence>
											</Properties>
										</Item>
										<Item class="Attachment" referent="RBXC0FD270D26734BBA89B7BC47FE47ADC0">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-4.5</X>
													<Y>0</Y>
													<Z>-1.5</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">TrailAttach1</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffca</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="Attachment" referent="RBXD4DDE9EFF8964970AD68DA5A6C2C83C5">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-7.5</X>
													<Y>0</Y>
													<Z>-1.5</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">TrailAttach2</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffcb</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="Attachment" referent="RBX71675D92D9D44BBBB15E8D6DBEC793CB">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>4.5</X>
													<Y>0</Y>
													<Z>1.5</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">TrailAttach4</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffcc</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="Attachment" referent="RBXC61092C2E15448878C1E031065B7C0BB">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>7.5</X>
													<Y>0</Y>
													<Z>1.5</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">TrailAttach3</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffcd</UniqueId>
												<bool name="Visible">false</bool>
											</Properties>
										</Item>
										<Item class="Trail" referent="RBXA9A26116AE104CE09EEF10DBE9F695AE">
											<Properties>
												<Ref name="Attachment0">RBXC61092C2E15448878C1E031065B7C0BB</Ref>
												<Ref name="Attachment1">RBX71675D92D9D44BBBB15E8D6DBEC793CB</Ref>
												<BinaryString name="AttributesSerialize">AQAAAA4AAABTaG93T25TaW11bGF0ZQMB</BinaryString>
												<float name="Brightness">2</float>
												<ColorSequence name="Color">0 0.54902 0.356863 0.623529 0 1 0.54902 0.356863 0.623529 0 </ColorSequence>
												<bool name="Enabled">true</bool>
												<bool name="FaceCamera">false</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="Lifetime">0.5</float>
												<float name="LightEmission">0</float>
												<float name="LightInfluence">0</float>
												<float name="MaxLength">10</float>
												<float name="MinLength">0</float>
												<string name="Name">Trail</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<Content name="Texture"><null></null></Content>
												<float name="TextureLength">1</float>
												<token name="TextureMode">2</token>
												<NumberSequence name="Transparency">0 0.5 0 1 1 0 </NumberSequence>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffce</UniqueId>
												<NumberSequence name="WidthScale">0 1 0 1 1 0 </NumberSequence>
											</Properties>
										</Item>
										<Item class="NoCollisionConstraint" referent="RBX89C59742E4124DFFAE0B53097BE64FCB">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="Enabled">true</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<string name="Name">NoCollisionConstraint</string>
												<Ref name="Part0">RBX9DFD2F33CD9B46BD968CF68BDDA9DC82</Ref>
												<Ref name="Part1">RBXE85B0BEB4E8F48BCBE3C311C2F4EA06D</Ref>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffcf</UniqueId>
											</Properties>
										</Item>
									</Item>
									<Item class="Model" referent="RBXD186A1D530C6490E84D36C88E626C0A2">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<token name="LevelOfDetail">0</token>
											<CoordinateFrame name="ModelMeshCFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
											<Vector3 name="ModelMeshSize">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="ModelStreamingMode">0</token>
											<string name="Name">Detail</string>
											<bool name="NeedsPivotMigration">false</bool>
											<Ref name="PrimaryPart">null</Ref>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffd0</UniqueId>
											<OptionalCoordinateFrame name="WorldPivotData">
												<CFrame>
													<X>0.0307338238</X>
													<Y>17.0000095</Y>
													<Z>584.304443</Z>
													<R00>0.382683575</R00>
													<R01>0</R01>
													<R02>0.923879623</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-0.923879623</R20>
													<R21>0</R21>
													<R22>0.382683575</R22>
												</CFrame>
											</OptionalCoordinateFrame>
										</Properties>
										<Item class="Part" referent="RBX8B2C6C84C3994457BF3771C8188B571A">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>0.222079039</X>
													<Y>10.0000191</Y>
													<Z>583.842529</Z>
													<R00>0.923879504</R00>
													<R01>0</R01>
													<R02>-0.382683456</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0.382683456</R20>
													<R21>0</R21>
													<R22>0.923879504</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffd1</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>18</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBXE85B0BEB4E8F48BCBE3C311C2F4EA06D">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>0.222079039</X>
													<Y>20.5000191</Y>
													<Z>583.842529</Z>
													<R00>0</R00>
													<R01>-0.923879504</R01>
													<R02>-0.382683456</R02>
													<R10>1</R10>
													<R11>0</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>-0.382683456</R21>
													<R22>0.923879504</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Part</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffd2</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>3</X>
													<Y>5</Y>
													<Z>5</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBX5E53C36430FE4A1591943AE8E9DBB2F1">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>0.60475421</X>
													<Y>14.5</Y>
													<Z>582.91864</Z>
													<R00>0.923879504</R00>
													<R01>0</R01>
													<R02>-0.382683456</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0.382683456</R20>
													<R21>0</R21>
													<R22>0.923879504</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffd3</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>5</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBX0E35C1CC60924A97899E19365DD63009">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-0.160611391</X>
													<Y>14.5</Y>
													<Z>584.766357</Z>
													<R00>-0.923879504</R00>
													<R01>0</R01>
													<R02>0.382683456</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-0.382683456</R20>
													<R21>0</R21>
													<R22>-0.923879504</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffd4</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>5</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBXC31F1D1DB10C478C8AB5F82E2B7A33F3">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>1.14595294</X>
													<Y>14.5</Y>
													<Z>584.22522</Z>
													<R00>-0.382683456</R00>
													<R01>0</R01>
													<R02>-0.923879504</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0.923879504</R20>
													<R21>0</R21>
													<R22>-0.382683456</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffd5</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>5</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBXDE95D40E194F412DAF6158D876AEA0BD">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-0.701794922</X>
													<Y>14.5</Y>
													<Z>583.459839</Z>
													<R00>0.382683456</R00>
													<R01>0</R01>
													<R02>0.923879504</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-0.923879504</R20>
													<R21>0</R21>
													<R22>0.382683456</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffd6</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>5</Y>
													<Z>1</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBX0098EE3C5A814E1BBB5604DAED082DB8">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>0.796099424</X>
													<Y>14</Y>
													<Z>582.456665</Z>
													<R00>0.923879504</R00>
													<R01>0</R01>
													<R02>-0.382683456</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0.382683456</R20>
													<R21>0</R21>
													<R22>0.923879504</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffd7</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>4</Y>
													<Z>2</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBX8EC9143322334C488E21E67A7EBD7FAC">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>1.60789752</X>
													<Y>14</Y>
													<Z>584.416565</Z>
													<R00>-0.382683456</R00>
													<R01>0</R01>
													<R02>-0.923879504</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0.923879504</R20>
													<R21>0</R21>
													<R22>-0.382683456</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffd8</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>4</Y>
													<Z>2</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBX0C7EB740186A4AEB9C6985356B6BFDA8">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-0.351956606</X>
													<Y>14</Y>
													<Z>585.228333</Z>
													<R00>-0.923879504</R00>
													<R01>0</R01>
													<R02>0.382683456</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-0.382683456</R20>
													<R21>0</R21>
													<R22>-0.923879504</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffd9</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>4</Y>
													<Z>2</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBX4097751757B34E4DBC1C61B29F6263DA">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-1.16373944</X>
													<Y>14</Y>
													<Z>583.268494</Z>
													<R00>0.382683456</R00>
													<R01>0</R01>
													<R02>0.923879504</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-0.923879504</R20>
													<R21>0</R21>
													<R22>0.382683456</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffda</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>4</Y>
													<Z>2</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBXA5876022E79348CBA15342D5B1F6E591">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-1.62568378</X>
													<Y>13.5</Y>
													<Z>583.077148</Z>
													<R00>0.382683456</R00>
													<R01>0</R01>
													<R02>0.923879504</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-0.923879504</R20>
													<R21>0</R21>
													<R22>0.382683456</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffdb</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBX1613F586708848AFB1A6BD4150B547CE">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>0.987444639</X>
													<Y>13.5</Y>
													<Z>581.994751</Z>
													<R00>0.923879504</R00>
													<R01>0</R01>
													<R02>-0.382683456</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0.382683456</R20>
													<R21>0</R21>
													<R22>0.923879504</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffdc</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBX0C04CD6029A5420DAAD04774BEA28EFC">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>2.0698421</X>
													<Y>13.5</Y>
													<Z>584.60791</Z>
													<R00>-0.382683456</R00>
													<R01>0</R01>
													<R02>-0.923879504</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0.923879504</R20>
													<R21>0</R21>
													<R22>-0.382683456</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffdd</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="WedgePart" referent="RBX9068A794280946778FAE29A09603468D">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>-0.543301821</X>
													<Y>13.5</Y>
													<Z>585.690247</Z>
													<R00>-0.923879504</R00>
													<R01>0</R01>
													<R02>0.382683456</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>-0.382683456</R20>
													<R21>0</R21>
													<R22>-0.923879504</R22>
												</CoordinateFrame>
												<bool name="CanCollide">true</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">256</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Wedge</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffde</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<Vector3 name="size">
													<X>1</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
										</Item>
										<Item class="Part" referent="RBX93D07D38CB1545348C6FF72844F3AF3B">
											<Properties>
												<bool name="Anchored">true</bool>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<float name="BackParamA">-0.5</float>
												<float name="BackParamB">0.5</float>
												<token name="BackSurface">3</token>
												<token name="BackSurfaceInput">0</token>
												<float name="BottomParamA">-0.5</float>
												<float name="BottomParamB">0.5</float>
												<token name="BottomSurface">3</token>
												<token name="BottomSurfaceInput">0</token>
												<CoordinateFrame name="CFrame">
													<X>0.222079039</X>
													<Y>20.5000191</Y>
													<Z>583.842529</Z>
													<R00>0</R00>
													<R01>-0.923879504</R01>
													<R02>-0.382683456</R02>
													<R10>1</R10>
													<R11>0</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>-0.382683456</R21>
													<R22>0.923879504</R22>
												</CoordinateFrame>
												<bool name="CanCollide">false</bool>
												<bool name="CanQuery">true</bool>
												<bool name="CanTouch">true</bool>
												<bool name="CastShadow">true</bool>
												<string name="CollisionGroup">Default</string>
												<int name="CollisionGroupId">0</int>
												<Color3uint8 name="Color3uint8">4290019583</Color3uint8>
												<PhysicalProperties name="CustomPhysicalProperties">
													<CustomPhysics>false</CustomPhysics>
												</PhysicalProperties>
												<float name="FrontParamA">-0.5</float>
												<float name="FrontParamB">0.5</float>
												<token name="FrontSurface">3</token>
												<token name="FrontSurfaceInput">0</token>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<float name="LeftParamA">-0.5</float>
												<float name="LeftParamB">0.5</float>
												<token name="LeftSurface">3</token>
												<token name="LeftSurfaceInput">0</token>
												<bool name="Locked">false</bool>
												<bool name="Massless">false</bool>
												<token name="Material">288</token>
												<string name="MaterialVariantSerialized"></string>
												<string name="Name">Light</string>
												<CoordinateFrame name="PivotOffset">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<float name="Reflectance">0</float>
												<float name="RightParamA">-0.5</float>
												<float name="RightParamB">0.5</float>
												<token name="RightSurface">3</token>
												<token name="RightSurfaceInput">0</token>
												<int name="RootPriority">0</int>
												<Vector3 name="RotVelocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="TopParamA">-0.5</float>
												<float name="TopParamB">0.5</float>
												<token name="TopSurface">3</token>
												<token name="TopSurfaceInput">0</token>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffdf</UniqueId>
												<Vector3 name="Velocity">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
												</Vector3>
												<token name="formFactorRaw">1</token>
												<token name="shape">2</token>
												<Vector3 name="size">
													<X>3.20000005</X>
													<Y>3</Y>
													<Z>3</Z>
												</Vector3>
											</Properties>
											<Item class="Beam" referent="RBX6A52815FFD824294B659FC84CD201C55">
												<Properties>
													<Ref name="Attachment0">RBX1802F85A6FB24E1D89ACEC42141333A6</Ref>
													<Ref name="Attachment1">RBXA9698358A43D44DDA207B2762E7EC69B</Ref>
													<BinaryString name="AttributesSerialize">AQAAAA4AAABTaG93T25TaW11bGF0ZQMB</BinaryString>
													<float name="Brightness">2</float>
													<ColorSequence name="Color">0 0.705882 0.501961 1 0 1 0.705882 0.501961 1 0 </ColorSequence>
													<float name="CurveSize0">0</float>
													<float name="CurveSize1">0</float>
													<bool name="Enabled">true</bool>
													<bool name="FaceCamera">true</bool>
													<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
													<float name="LightEmission">1</float>
													<float name="LightInfluence">0</float>
													<string name="Name">Beam</string>
													<int name="Segments">10</int>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<Content name="Texture"><null></null></Content>
													<float name="TextureLength">1</float>
													<token name="TextureMode">0</token>
													<float name="TextureSpeed">1</float>
													<NumberSequence name="Transparency">0 0 0 1 1 0 </NumberSequence>
													<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffe0</UniqueId>
													<float name="Width0">3</float>
													<float name="Width1">5</float>
													<float name="ZOffset">0</float>
												</Properties>
											</Item>
											<Item class="Attachment" referent="RBXA9698358A43D44DDA207B2762E7EC69B">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>5.5</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
													<string name="Name">Attachment1</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffe1</UniqueId>
													<bool name="Visible">false</bool>
												</Properties>
											</Item>
											<Item class="Attachment" referent="RBX1802F85A6FB24E1D89ACEC42141333A6">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>1.5</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
													<string name="Name">Attachment0</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffe2</UniqueId>
													<bool name="Visible">false</bool>
												</Properties>
											</Item>
											<Item class="ParticleEmitter" referent="RBX79E5729005E34D79A5559292AD0E4554">
												<Properties>
													<Vector3 name="Acceleration">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
													</Vector3>
													<BinaryString name="AttributesSerialize">AQAAAA4AAABTaG93T25TaW11bGF0ZQMB</BinaryString>
													<float name="Brightness">3</float>
													<ColorSequence name="Color">0 0.705882 0.501961 1 0 1 0.705882 0.501961 1 0 </ColorSequence>
													<float name="Drag">0</float>
													<token name="EmissionDirection">0</token>
													<bool name="Enabled">true</bool>
													<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
													<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
													<token name="FlipbookLayout">0</token>
													<token name="FlipbookMode">0</token>
													<bool name="FlipbookStartRandom">false</bool>
													<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
													<NumberRange name="Lifetime">5 10 </NumberRange>
													<float name="LightEmission">0.25</float>
													<float name="LightInfluence">0</float>
													<bool name="LockedToPart">false</bool>
													<string name="Name">ParticleEmitter</string>
													<token name="Orientation">0</token>
													<float name="Rate">20</float>
													<NumberRange name="RotSpeed">0 0 </NumberRange>
													<NumberRange name="Rotation">0 0 </NumberRange>
													<token name="Shape">2</token>
													<token name="ShapeInOut">0</token>
													<float name="ShapePartial">1</float>
													<token name="ShapeStyle">0</token>
													<NumberSequence name="Size">0 0.05 0 1 0 0 </NumberSequence>
													<int64 name="SourceAssetId">-1</int64>
													<NumberRange name="Speed">1 1 </NumberRange>
													<Vector2 name="SpreadAngle">
														<X>30</X>
														<Y>30</Y>
													</Vector2>
													<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
													<BinaryString name="Tags"></BinaryString>
													<Content name="Texture"><url>rbxasset://textures/particles/sparkles_main.dds</url></Content>
													<float name="TimeScale">1</float>
													<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
													<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffe3</UniqueId>
													<float name="VelocityInheritance">0</float>
													<float name="ZOffset">0</float>
												</Properties>
											</Item>
										</Item>
									</Item>
								</Item>
							</Item>
							<Item class="StringValue" referent="RBX4013ECCA5D1A4AE5BBE12B892D783FEC">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Interactive</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffe4</UniqueId>
									<string name="Value">PhysicsGroup</string>
								</Properties>
							</Item>
							<Item class="Folder" referent="RBX77EE0AAA13714DC5ACE82F1562E27FCB">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">SimulateZone</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffe5</UniqueId>
								</Properties>
								<Item class="Part" referent="RBX219DC6E82CDE469195EE975AE9778F74">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">0</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">0</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-37</X>
											<Y>53.9999962</Y>
											<Z>579</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">false</bool>
										<bool name="CanQuery">false</bool>
										<bool name="CanTouch">false</bool>
										<bool name="CastShadow">true</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">0</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">0</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Part</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">0</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">0</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">1</float>
										<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffe6</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>108</X>
											<Y>106</Y>
											<Z>118</Z>
										</Vector3>
									</Properties>
									<Item class="SelectionBox" referent="RBX465C7696EF734887B9AA271D6DCBBFAD">
										<Properties>
											<Ref name="Adornee">RBX219DC6E82CDE469195EE975AE9778F74</Ref>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LineThickness">0.150000006</float>
											<string name="Name">SelectionBox</string>
											<int64 name="SourceAssetId">-1</int64>
											<Color3 name="SurfaceColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="SurfaceTransparency">1</float>
											<BinaryString name="Tags"></BinaryString>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016ffe7</UniqueId>
											<bool name="Visible">true</bool>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Model" referent="RBX3625519BFEFD4BBD8F01CF16FEE2AA35">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Button</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">RBX218B4E5C02CF4C239580A9BC97817FF5</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc852</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-68.9674072</X>
										<Y>1.50058603</Y>
										<Z>676</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBX218B4E5C02CF4C239580A9BC97817FF5">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-64</X>
										<Y>1.5</Y>
										<Z>670</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">false</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284177769</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc853</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>4</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBX5279B465AA2745E29F8E6C8430917AC7">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">ClientObject</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc85c</UniqueId>
									<bool name="Value">false</bool>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBX45D03E1D516A410FACFCCCB5BDF6B850">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Pressed</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc85d</UniqueId>
									<bool name="Value">false</bool>
								</Properties>
							</Item>
							<Item class="NumberValue" referent="RBXAFA2B13F83714870BA9A2FF5A1809F23">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Timer</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc85e</UniqueId>
									<double name="Value">0</double>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBX1257C23FC6994A3FA8589EC93BF3BC64">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Invert</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc85f</UniqueId>
									<bool name="Value">false</bool>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBX524CDC98CBDA42708CA3930CA4D4D683">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">SupportPushboxes</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc860</UniqueId>
									<bool name="Value">true</bool>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBX3E61114F31F1485CB2DE3A6B8D166A0B">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">SupportPlayers</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc861</UniqueId>
									<bool name="Value">true</bool>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBX59A46244CE17416FA5ED70FEF9EDD27B">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">SupportBalloons</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc862</UniqueId>
									<bool name="Value">true</bool>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBX2DEBD00040F84C1FB61A760C09FFD8DA">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">ColorSpecific</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc863</UniqueId>
									<bool name="Value">false</bool>
								</Properties>
							</Item>
							<Item class="Folder" referent="RBX76AA767FC86A4972B3F337B047E7AEE2">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Activators</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bd850</UniqueId>
								</Properties>
								<Item class="Part" referent="RBX536E2E2D64A947BCBE724B29F8BB9F4F">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"><![CDATA[BAAAAA0AAABBY3RpdmF0b3JNb3ZlEQAAAAAAAEC/AAAAAA0AAABBZGRlZER1cmF0aW9uBgAA
AAAAAAhACQAAAFBsYXlTb3VuZAMBBwAAAFVzZU5lb24DAQ==]]></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">0</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">0</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-64</X>
											<Y>2.5</Y>
											<Z>670</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">true</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">false</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4294298928</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">0</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">0</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">1088</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Part</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">0</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">0</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc854</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>3</X>
											<Y>1</Y>
											<Z>3</Z>
										</Vector3>
									</Properties>
									<Item class="ModuleScript" referent="RBX993491BFF37C45CC86E2ACBB2D3FE1AD">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<Content name="LinkedSource"><null></null></Content>
											<string name="Name">ClientObjectScript</string>
											<string name="ScriptGuid">{B1FCC8BD-CCF4-4281-AAAD-3167B13874D7}</string>
											<ProtectedString name="Source"><![CDATA[local p=script.Parent.Parent
local plr=game.Players.LocalPlayer
local unpressedcf=script.Parent.CFrame
local pressedcf=unpressedcf*CFrame.new(0,-script.Parent.Size.Y*.75,0)
local ts=game:GetService'TweenService'
local invert=p:FindFirstChild'Invert' and p.Invert.Value
local ch=0
function tween(part,time,inf)
	local tweeninf=TweenInfo.new(
		time,
		Enum.EasingStyle.Linear,
		Enum.EasingDirection.Out
	)
	local tw=ts:Create(part,tweeninf,inf)
	tw:Play()
end
function update(v)
	local truev=v
	if invert then v=not v end
	local invertedbutton
	local pressedbutton
	for n,b in pairs(_G.Buttons[script.Parent.Color]) do
		if n~='Active' then
			local isinvert=b:FindFirstChild'Invert' and b.Invert.Value
			local ispressed=b:FindFirstChild'Pressed' and b.Pressed.Value
			if ispressed then pressedbutton=true end
			if isinvert and ispressed then invertedbutton=true end
			local invertfactor=isinvert and not ispressed
		end
	end
	if not invert and (pressedbutton and not truev) then return end
	if not pressedbutton and invert then return end
	if invertedbutton and not invert then return end
	for _,pl in pairs(p.Parent:GetDescendants()) do
		if pl:IsA'BasePart' then
			local v=v
			local c=pl.Color
			local co=pl:FindFirstChild'ColorOverride'
			if co then
				c=co.Value
			end
			c=Color3.fromRGB(math.floor(c.r*255 + 0.5),math.floor(c.g*255 + 0.5),math.floor(c.b*255 + 0.5))
			if pl:FindFirstChild'Invert' then v=not v end
			local function asfd()
				for _,d in pairs(pl:GetDescendants()) do
					if d:IsA'ParticleEmitter' then
						d.Enabled=v
					end
					if d:IsA'Decal' or d:IsA'Texture' then
						tween(d,.3,{Transparency=(v and 0 or (pl:FindFirstChild'FullHide' and 1 or .6))})
					end
					if d.Name=='Activated' and d:IsA'BoolValue' then
						d.Value=v
					end
				end
			end
			local samecolor=c==Color3.fromRGB(math.floor(script.Parent.Color.r*255 + 0.5),math.floor(script.Parent.Color.g*255 + 0.5),math.floor(script.Parent.Color.b*255 + 0.5))
			if (pl.Name=='ButtonActivatedPlatform' or pl:FindFirstChild("ButtonActivated") ~= nil) and samecolor then
				asfd()
				if not pl:FindFirstChild"IgnoreCanCollide" and not pl:FindFirstChild"IgnoreAll" then
					pl.CanCollide=v
				end
				if not pl:FindFirstChild"IgnoreTransparency" and not pl:FindFirstChild"IgnoreAll" then
					tween(pl,.3,{Transparency=(v and 0 or (pl:FindFirstChild'FullHide' and 1 or .6))})
				end
			end
		end
	end
end
return function()
	local pr=p:WaitForChild'Pressed'
	local snd=script.Parent:WaitForChild'Press'
	update(false)
	pr.Changed:Connect(function(v)
		ch=ch+1
		script.Parent.Material=v and 'Neon' or 'Metal'
		if script.Parent.Anchored then
			tween(script.Parent,1,{CFrame=(v and pressedcf or unpressedcf)})
		end
		if v then snd:Play() end
		update(v)
	end)
	script.Parent.Touched:Connect(function(t)
		local h=t.Parent:FindFirstChild'Humanoid'
		local yesplr=p.SupportPlayers.Value and h and game.Players:GetPlayerFromCharacter(t.Parent)==plr
		local yesbox=p.SupportPushboxes.Value and t.Name=='Pushbox' and not (p.ColorSpecific.Value and t.Color ~= script.Parent.Color)
		local yesbal=p.SupportBalloons.Value and 
			t.Name == "Part" and t.Material == Enum.Material.Neon and t:FindFirstChild("BodyVelocity") and not (p.ColorSpecific.Value and t.Color ~= script.Parent.Color)
		if (yesplr or yesbox or yesbal) and not pr.Value then
			pr.Value=true
			if p:FindFirstChild('Timer') and p.Timer.Value>0.01 then
				local pre=ch
				local sg=Instance.new('SurfaceGui')
				sg.Face='Top'
				sg.CanvasSize=Vector2.new(100,100)
				local txt=Instance.new('TextLabel',sg)
				txt.BackgroundTransparency=1
				local c=script.Parent.Color
				txt.Size=UDim2.new(1,0,1,0)
				txt.BackgroundTransparency=1
				txt.TextColor3=Color3.new(1-c.r,1-c.g,1-c.b)
				txt.TextScaled=true
				txt.Text=p.Timer.Value
				if _G.AttachTimer then
					_G:AttachTimer(script.Parent,txt)
				end
				sg.Parent=script.Parent
				for i=p.Timer.Value,1,-1 do
					if ch~=pre then break end
					txt.Text=i
					wait(1)
				end
				sg:Destroy()
				if ch==pre then pr.Value=false end
			end
		end
	end)
end]]></ProtectedString>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc855</UniqueId>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBX4E4052DCBE1C4F80A473F7200228FC8A">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">1</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc856</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBX0C44BBBE13D44DD69444DA2A1A693D53">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc857</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBX42AE6420635E45FB9060CA1D3D458EAD">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">5</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc858</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBX066C8FAF1B1F480A803F6D1585378F11">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">2</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc859</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBX81C4D53C815A4B81975EE1B45252A299">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">3</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc85a</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Sound" referent="RBX5BD1D25554D04487987A808EAA6F1DAF">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="EmitterSize">10</float>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<NumberRange name="LoopRegion">0 60000 </NumberRange>
											<bool name="Looped">false</bool>
											<string name="Name">PressSound</string>
											<bool name="PlayOnRemove">false</bool>
											<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
											<bool name="PlaybackRegionsEnabled">false</bool>
											<float name="PlaybackSpeed">1</float>
											<bool name="Playing">false</bool>
											<token name="RollOffMode">0</token>
											<Ref name="SoundGroup">null</Ref>
											<Content name="SoundId"><url>rbxasset://sounds/button.wav</url></Content>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<double name="TimePosition">0</double>
											<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bc85b</UniqueId>
											<float name="Volume">0.5</float>
											<float name="xmlRead_MaxDistance_3">10000</float>
										</Properties>
									</Item>
								</Item>
								<Item class="Part" referent="RBX53809AD60CDF4E7893374C27E00C92AF">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"><![CDATA[BAAAAA0AAABBY3RpdmF0b3JNb3ZlEQAAAAAAAEC/AAAAAA0AAABBZGRlZER1cmF0aW9uBgAA
AAAAAAhACQAAAFBsYXlTb3VuZAMBBwAAAFVzZU5lb24DAQ==]]></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">0</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">0</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-78</X>
											<Y>2.5</Y>
											<Z>670</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">true</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">false</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4294298928</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">0</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">0</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">1088</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Part</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">0</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">0</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">0b19dc010bbf745b02da421b00575c51</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>3</X>
											<Y>1</Y>
											<Z>3</Z>
										</Vector3>
									</Properties>
									<Item class="ModuleScript" referent="RBX789A972F616A4ADABB7DEF46024B0A02">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<Content name="LinkedSource"><null></null></Content>
											<string name="Name">ClientObjectScript</string>
											<string name="ScriptGuid">{67D318AD-98AC-40C2-B70C-EE634C966B5D}</string>
											<ProtectedString name="Source"><![CDATA[local p=script.Parent.Parent
local plr=game.Players.LocalPlayer
local unpressedcf=script.Parent.CFrame
local pressedcf=unpressedcf*CFrame.new(0,-script.Parent.Size.Y*.75,0)
local ts=game:GetService'TweenService'
local invert=p:FindFirstChild'Invert' and p.Invert.Value
local ch=0
function tween(part,time,inf)
	local tweeninf=TweenInfo.new(
		time,
		Enum.EasingStyle.Linear,
		Enum.EasingDirection.Out
	)
	local tw=ts:Create(part,tweeninf,inf)
	tw:Play()
end
function update(v)
	local truev=v
	if invert then v=not v end
	local invertedbutton
	local pressedbutton
	for n,b in pairs(_G.Buttons[script.Parent.Color]) do
		if n~='Active' then
			local isinvert=b:FindFirstChild'Invert' and b.Invert.Value
			local ispressed=b:FindFirstChild'Pressed' and b.Pressed.Value
			if ispressed then pressedbutton=true end
			if isinvert and ispressed then invertedbutton=true end
			local invertfactor=isinvert and not ispressed
		end
	end
	if not invert and (pressedbutton and not truev) then return end
	if not pressedbutton and invert then return end
	if invertedbutton and not invert then return end
	for _,pl in pairs(p.Parent:GetDescendants()) do
		if pl:IsA'BasePart' then
			local v=v
			local c=pl.Color
			local co=pl:FindFirstChild'ColorOverride'
			if co then
				c=co.Value
			end
			c=Color3.fromRGB(math.floor(c.r*255 + 0.5),math.floor(c.g*255 + 0.5),math.floor(c.b*255 + 0.5))
			if pl:FindFirstChild'Invert' then v=not v end
			local function asfd()
				for _,d in pairs(pl:GetDescendants()) do
					if d:IsA'ParticleEmitter' then
						d.Enabled=v
					end
					if d:IsA'Decal' or d:IsA'Texture' then
						tween(d,.3,{Transparency=(v and 0 or (pl:FindFirstChild'FullHide' and 1 or .6))})
					end
					if d.Name=='Activated' and d:IsA'BoolValue' then
						d.Value=v
					end
				end
			end
			local samecolor=c==Color3.fromRGB(math.floor(script.Parent.Color.r*255 + 0.5),math.floor(script.Parent.Color.g*255 + 0.5),math.floor(script.Parent.Color.b*255 + 0.5))
			if (pl.Name=='ButtonActivatedPlatform' or pl:FindFirstChild("ButtonActivated") ~= nil) and samecolor then
				asfd()
				if not pl:FindFirstChild"IgnoreCanCollide" and not pl:FindFirstChild"IgnoreAll" then
					pl.CanCollide=v
				end
				if not pl:FindFirstChild"IgnoreTransparency" and not pl:FindFirstChild"IgnoreAll" then
					tween(pl,.3,{Transparency=(v and 0 or (pl:FindFirstChild'FullHide' and 1 or .6))})
				end
			end
		end
	end
end
return function()
	local pr=p:WaitForChild'Pressed'
	local snd=script.Parent:WaitForChild'Press'
	update(false)
	pr.Changed:Connect(function(v)
		ch=ch+1
		script.Parent.Material=v and 'Neon' or 'Metal'
		if script.Parent.Anchored then
			tween(script.Parent,1,{CFrame=(v and pressedcf or unpressedcf)})
		end
		if v then snd:Play() end
		update(v)
	end)
	script.Parent.Touched:Connect(function(t)
		local h=t.Parent:FindFirstChild'Humanoid'
		local yesplr=p.SupportPlayers.Value and h and game.Players:GetPlayerFromCharacter(t.Parent)==plr
		local yesbox=p.SupportPushboxes.Value and t.Name=='Pushbox' and not (p.ColorSpecific.Value and t.Color ~= script.Parent.Color)
		local yesbal=p.SupportBalloons.Value and 
			t.Name == "Part" and t.Material == Enum.Material.Neon and t:FindFirstChild("BodyVelocity") and not (p.ColorSpecific.Value and t.Color ~= script.Parent.Color)
		if (yesplr or yesbox or yesbal) and not pr.Value then
			pr.Value=true
			if p:FindFirstChild('Timer') and p.Timer.Value>0.01 then
				local pre=ch
				local sg=Instance.new('SurfaceGui')
				sg.Face='Top'
				sg.CanvasSize=Vector2.new(100,100)
				local txt=Instance.new('TextLabel',sg)
				txt.BackgroundTransparency=1
				local c=script.Parent.Color
				txt.Size=UDim2.new(1,0,1,0)
				txt.BackgroundTransparency=1
				txt.TextColor3=Color3.new(1-c.r,1-c.g,1-c.b)
				txt.TextScaled=true
				txt.Text=p.Timer.Value
				if _G.AttachTimer then
					_G:AttachTimer(script.Parent,txt)
				end
				sg.Parent=script.Parent
				for i=p.Timer.Value,1,-1 do
					if ch~=pre then break end
					txt.Text=i
					wait(1)
				end
				sg:Destroy()
				if ch==pre then pr.Value=false end
			end
		end
	end)
end]]></ProtectedString>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">0b19dc010bbf745b02da421b00575c52</UniqueId>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBXF82ED672ADC64A2B8EF1596A41B70095">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">1</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">0b19dc010bbf745b02da421b00575c53</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBXF54D9EEBC7A045E58D114C1466DEF9B1">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">0b19dc010bbf745b02da421b00575c54</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBXB1F55C473FCA446884D1A58DA09C23C1">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">5</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">0b19dc010bbf745b02da421b00575c55</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBXAEE7A4C280364E32849CFF8E7D47E01E">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">2</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">0b19dc010bbf745b02da421b00575c56</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBX32EECC4817BC4EE783FB2B11498D6E97">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">3</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">0b19dc010bbf745b02da421b00575c57</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Sound" referent="RBXA824FC4036C84E4BB334858C25D23CC5">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="EmitterSize">10</float>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<NumberRange name="LoopRegion">0 60000 </NumberRange>
											<bool name="Looped">false</bool>
											<string name="Name">PressSound</string>
											<bool name="PlayOnRemove">false</bool>
											<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
											<bool name="PlaybackRegionsEnabled">false</bool>
											<float name="PlaybackSpeed">1</float>
											<bool name="Playing">false</bool>
											<token name="RollOffMode">0</token>
											<Ref name="SoundGroup">null</Ref>
											<Content name="SoundId"><url>rbxasset://sounds/button.wav</url></Content>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<double name="TimePosition">0</double>
											<UniqueId name="UniqueId">0b19dc010bbf745b02da421b00575c58</UniqueId>
											<float name="Volume">0.5</float>
											<float name="xmlRead_MaxDistance_3">10000</float>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="StringValue" referent="RBXB1AAFFDE60244ED29ACAFB13D74F2D86">
								<Properties>
									<BinaryString name="AttributesSerialize">AgAAAAUAAABDb2xvcg/29XU/zs1NP8HAQD4EAAAAVGltZQYAAAAAAAAIQA==</BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Interactive</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000befb1</UniqueId>
									<string name="Value">Button</string>
								</Properties>
							</Item>
							<Item class="Folder" referent="RBX9F26ED7B3C874B2E9DBA3A61B29AD333">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Deactivators</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bf668</UniqueId>
								</Properties>
								<Item class="Part" referent="RBXBBDFF779633540D886E7BDAF0A9D7DE9">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">3</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">3</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-71</X>
											<Y>1.5</Y>
											<Z>670</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">true</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">false</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4284177769</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">3</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">3</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Part</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">3</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">3</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bf340</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>4</X>
											<Y>1</Y>
											<Z>4</Z>
										</Vector3>
									</Properties>
									<Item class="SelectionBox" referent="RBX7D25179E8BD045C49103B4D991E8743B">
										<Properties>
											<Ref name="Adornee">RBXBBDFF779633540D886E7BDAF0A9D7DE9</Ref>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LineThickness">0.150000006</float>
											<string name="Name">SelectionBox</string>
											<int64 name="SourceAssetId">-1</int64>
											<Color3 name="SurfaceColor3">
												<R>0.0509803966</R>
												<G>0.411764741</G>
												<B>0.674509823</B>
											</Color3>
											<float name="SurfaceTransparency">1</float>
											<BinaryString name="Tags"></BinaryString>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bf6e6</UniqueId>
											<bool name="Visible">true</bool>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Folder" referent="RBX6BA5DFBB6B9C4F98A038AA9F7EBD4658">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">AffectedParts</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bf91a</UniqueId>
								</Properties>
								<Item class="Part" referent="RBXB2E77477852E4C9A88D4142EE9EB4888">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize">AQAAAAoAAABCdXR0b25Nb3ZlEQAAAAAAACBBAAAAAA==</BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">3</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">3</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-63</X>
											<Y>2</Y>
											<Z>676</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">true</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">false</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4294298928</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">3</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">3</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Move</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">3</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">3</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f000bfaac</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>2</X>
											<Y>2</Y>
											<Z>2</Z>
										</Vector3>
									</Properties>
								</Item>
								<Item class="Part" referent="RBX2A91006AECAF4F67903DAE71E6DE07A4">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize">AQAAAAwAAABCdXR0b25Sb3RhdGURAAA0QgAANEIAADRC</BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">3</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">3</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-67</X>
											<Y>2</Y>
											<Z>676</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">true</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">false</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4294298928</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">3</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">3</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Rotate</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">3</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">3</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f008beca1</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>2</X>
											<Y>2</Y>
											<Z>2</Z>
										</Vector3>
									</Properties>
								</Item>
								<Item class="Part" referent="RBX8597EE5FB4A845D689C212D8D38418A5">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"><![CDATA[BQAAAAoAAABCdXR0b25Nb3ZlEQAAAAAAAIDAAAAAAAwAAABPZmZDb2xsaXNpb24DAA8AAABP
ZmZUcmFuc3BhcmVuY3kGAAAAAAAA6D8LAAAAT25Db2xsaXNpb24DAQ4AAABPblRyYW5zcGFy
ZW5jeQUAAAAA]]></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">3</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">3</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-71</X>
											<Y>6</Y>
											<Z>676</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">true</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">false</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4294298928</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">3</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">3</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Multi</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">3</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">3</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">26d4d768d3c374fe02aac98f008bf486</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>2</X>
											<Y>2</Y>
											<Z>2</Z>
										</Vector3>
									</Properties>
								</Item>
							</Item>
							<Item class="Part" referent="RBX2C3E66A84FE247B6B58476BAC69B066C">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-78</X>
										<Y>1.5</Y>
										<Z>670</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">false</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284177769</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">0b19dc010bbf745b02da421b00575c50</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>4</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBX9BB21955E6B34BB29F0158E32B60D8B8">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Button_F1</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">RBX00A23F844A244CF782AE6794D72038CE</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0035300f</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-12</X>
										<Y>6.5</Y>
										<Z>605</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBX00A23F844A244CF782AE6794D72038CE">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-18.7720356</X>
										<Y>16.5</Y>
										<Z>601.879517</Z>
										<R00>0.923879504</R00>
										<R01>0</R01>
										<R02>-0.382683456</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0.382683456</R20>
										<R21>0</R21>
										<R22>0.923879504</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">false</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353010</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>4</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBXE3B36EFB658643258B178565CDCF1C75">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">ClientObject</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353011</UniqueId>
									<bool name="Value">false</bool>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBX2F35DD43FB754DE1B622717834DDFF9B">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Pressed</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353012</UniqueId>
									<bool name="Value">false</bool>
								</Properties>
							</Item>
							<Item class="NumberValue" referent="RBXB2939A14BB7E4D85BF141942C525FC45">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Timer</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353013</UniqueId>
									<double name="Value">0</double>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBX3C9BBEDA12C6462CBF77FC703DC28B55">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Invert</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353014</UniqueId>
									<bool name="Value">false</bool>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBX7D9B257937444F4F9E05DF3200B85F66">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">SupportPushboxes</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353015</UniqueId>
									<bool name="Value">true</bool>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBX9850C6CD6F114A9086EBDD13D334E26B">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">SupportPlayers</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353016</UniqueId>
									<bool name="Value">true</bool>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBX5BC1C90FF8684E52860ACE907AEEF5D1">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">SupportBalloons</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353017</UniqueId>
									<bool name="Value">true</bool>
								</Properties>
							</Item>
							<Item class="BoolValue" referent="RBXBA951E2FA1EF41C1AB7D8B8BA086E25D">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">ColorSpecific</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353018</UniqueId>
									<bool name="Value">false</bool>
								</Properties>
							</Item>
							<Item class="Folder" referent="RBX73973051129B428BA8C65F2C1541108C">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Activators</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353019</UniqueId>
								</Properties>
								<Item class="Part" referent="RBXB055BBC2755940D288900A6D41C1E47B">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"><![CDATA[AwAAAA0AAABBY3RpdmF0b3JNb3ZlEQAAAAAAAEC/AAAAAAkAAABQbGF5U291bmQDAQcAAABV
c2VOZW9uAwE=]]></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">0</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">0</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-18.7720356</X>
											<Y>17.5</Y>
											<Z>601.879517</Z>
											<R00>0.923879504</R00>
											<R01>0</R01>
											<R02>-0.382683456</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0.382683456</R20>
											<R21>0</R21>
											<R22>0.923879504</R22>
										</CoordinateFrame>
										<bool name="CanCollide">true</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">false</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">0</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">0</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">1088</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Part</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">0</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">0</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0035301a</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>3</X>
											<Y>1</Y>
											<Z>3</Z>
										</Vector3>
									</Properties>
									<Item class="ModuleScript" referent="RBX0E18FE82EBF441708E1DC6EB8095C7C1">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<Content name="LinkedSource"><null></null></Content>
											<string name="Name">ClientObjectScript</string>
											<string name="ScriptGuid">{566677D2-0521-49FE-AB2D-4812234DB588}</string>
											<ProtectedString name="Source"><![CDATA[local p=script.Parent.Parent
local plr=game.Players.LocalPlayer
local unpressedcf=script.Parent.CFrame
local pressedcf=unpressedcf*CFrame.new(0,-script.Parent.Size.Y*.75,0)
local ts=game:GetService'TweenService'
local invert=p:FindFirstChild'Invert' and p.Invert.Value
local ch=0
function tween(part,time,inf)
	local tweeninf=TweenInfo.new(
		time,
		Enum.EasingStyle.Linear,
		Enum.EasingDirection.Out
	)
	local tw=ts:Create(part,tweeninf,inf)
	tw:Play()
end
function update(v)
	local truev=v
	if invert then v=not v end
	local invertedbutton
	local pressedbutton
	for n,b in pairs(_G.Buttons[script.Parent.Color]) do
		if n~='Active' then
			local isinvert=b:FindFirstChild'Invert' and b.Invert.Value
			local ispressed=b:FindFirstChild'Pressed' and b.Pressed.Value
			if ispressed then pressedbutton=true end
			if isinvert and ispressed then invertedbutton=true end
			local invertfactor=isinvert and not ispressed
		end
	end
	if not invert and (pressedbutton and not truev) then return end
	if not pressedbutton and invert then return end
	if invertedbutton and not invert then return end
	for _,pl in pairs(p.Parent:GetDescendants()) do
		if pl:IsA'BasePart' then
			local v=v
			local c=pl.Color
			local co=pl:FindFirstChild'ColorOverride'
			if co then
				c=co.Value
			end
			c=Color3.fromRGB(math.floor(c.r*255 + 0.5),math.floor(c.g*255 + 0.5),math.floor(c.b*255 + 0.5))
			if pl:FindFirstChild'Invert' then v=not v end
			local function asfd()
				for _,d in pairs(pl:GetDescendants()) do
					if d:IsA'ParticleEmitter' then
						d.Enabled=v
					end
					if d:IsA'Decal' or d:IsA'Texture' then
						tween(d,.3,{Transparency=(v and 0 or (pl:FindFirstChild'FullHide' and 1 or .6))})
					end
					if d.Name=='Activated' and d:IsA'BoolValue' then
						d.Value=v
					end
				end
			end
			local samecolor=c==Color3.fromRGB(math.floor(script.Parent.Color.r*255 + 0.5),math.floor(script.Parent.Color.g*255 + 0.5),math.floor(script.Parent.Color.b*255 + 0.5))
			if (pl.Name=='ButtonActivatedPlatform' or pl:FindFirstChild("ButtonActivated") ~= nil) and samecolor then
				asfd()
				if not pl:FindFirstChild"IgnoreCanCollide" and not pl:FindFirstChild"IgnoreAll" then
					pl.CanCollide=v
				end
				if not pl:FindFirstChild"IgnoreTransparency" and not pl:FindFirstChild"IgnoreAll" then
					tween(pl,.3,{Transparency=(v and 0 or (pl:FindFirstChild'FullHide' and 1 or .6))})
				end
			end
		end
	end
end
return function()
	local pr=p:WaitForChild'Pressed'
	local snd=script.Parent:WaitForChild'Press'
	update(false)
	pr.Changed:Connect(function(v)
		ch=ch+1
		script.Parent.Material=v and 'Neon' or 'Metal'
		if script.Parent.Anchored then
			tween(script.Parent,1,{CFrame=(v and pressedcf or unpressedcf)})
		end
		if v then snd:Play() end
		update(v)
	end)
	script.Parent.Touched:Connect(function(t)
		local h=t.Parent:FindFirstChild'Humanoid'
		local yesplr=p.SupportPlayers.Value and h and game.Players:GetPlayerFromCharacter(t.Parent)==plr
		local yesbox=p.SupportPushboxes.Value and t.Name=='Pushbox' and not (p.ColorSpecific.Value and t.Color ~= script.Parent.Color)
		local yesbal=p.SupportBalloons.Value and 
			t.Name == "Part" and t.Material == Enum.Material.Neon and t:FindFirstChild("BodyVelocity") and not (p.ColorSpecific.Value and t.Color ~= script.Parent.Color)
		if (yesplr or yesbox or yesbal) and not pr.Value then
			pr.Value=true
			if p:FindFirstChild('Timer') and p.Timer.Value>0.01 then
				local pre=ch
				local sg=Instance.new('SurfaceGui')
				sg.Face='Top'
				sg.CanvasSize=Vector2.new(100,100)
				local txt=Instance.new('TextLabel',sg)
				txt.BackgroundTransparency=1
				local c=script.Parent.Color
				txt.Size=UDim2.new(1,0,1,0)
				txt.BackgroundTransparency=1
				txt.TextColor3=Color3.new(1-c.r,1-c.g,1-c.b)
				txt.TextScaled=true
				txt.Text=p.Timer.Value
				if _G.AttachTimer then
					_G:AttachTimer(script.Parent,txt)
				end
				sg.Parent=script.Parent
				for i=p.Timer.Value,1,-1 do
					if ch~=pre then break end
					txt.Text=i
					wait(1)
				end
				sg:Destroy()
				if ch==pre then pr.Value=false end
			end
		end
	end)
end]]></ProtectedString>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0035301b</UniqueId>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBXBA9C65CF417748E0870EBCF42DEA809B">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">1</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0035301c</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBXAA8B91CF39874585AEEFE6027417C464">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0035301d</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBX94203E169A4D4343AB8C0DFBBF19C724">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">5</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0035301e</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBX80CE09B07ED6470C84812936FA0A32D7">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">2</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0035301f</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Decal" referent="RBX453AB07DE16D4810A1C8BBAEDE283533">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<Color3 name="Color3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="Face">3</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">Decal</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>http://www.roblox.com/asset/?id=2528354731</url></Content>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353020</UniqueId>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Sound" referent="RBX55D8D97D9FBA4C9D8C4A3373DD68DA22">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="EmitterSize">10</float>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<NumberRange name="LoopRegion">0 60000 </NumberRange>
											<bool name="Looped">false</bool>
											<string name="Name">PressSound</string>
											<bool name="PlayOnRemove">false</bool>
											<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
											<bool name="PlaybackRegionsEnabled">false</bool>
											<float name="PlaybackSpeed">1</float>
											<bool name="Playing">false</bool>
											<token name="RollOffMode">0</token>
											<Ref name="SoundGroup">null</Ref>
											<Content name="SoundId"><url>rbxasset://sounds/button.wav</url></Content>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<double name="TimePosition">0</double>
											<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353021</UniqueId>
											<float name="Volume">0.5</float>
											<float name="xmlRead_MaxDistance_3">10000</float>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="StringValue" referent="RBXFE4030271EB0461FB62BA2325C8843E7">
								<Properties>
									<BinaryString name="AttributesSerialize">AgAAAAUAAABDb2xvcg+NjAw/t7a2PqCfHz8EAAAAVGltZQYAAAAAAADwvw==</BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Interactive</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353022</UniqueId>
									<string name="Value">Button</string>
								</Properties>
							</Item>
							<Item class="Folder" referent="RBXE6593CBC033243979ECA979E63613DF0">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Deactivators</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353023</UniqueId>
								</Properties>
								<Item class="Part" referent="RBXA29C80DB1518437BA0CF8207D6A2FDEB">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">3</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">3</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-34</X>
											<Y>1.49996948</Y>
											<Z>582</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">false</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">true</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4290019583</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">3</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">3</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">288</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Killbrick</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">3</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">3</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">1</float>
										<UniqueId name="UniqueId">087e2978515769de02adb9cc00140876</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>100</X>
											<Y>1</Y>
											<Z>100</Z>
										</Vector3>
									</Properties>
									<Item class="ParticleEmitter" referent="RBXEA060C81391B4245A0040054EFDFB0CA">
										<Properties>
											<Vector3 name="Acceleration">
												<X>0</X>
												<Y>0.5</Y>
												<Z>0</Z>
											</Vector3>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="Brightness">5</float>
											<ColorSequence name="Color">0 0.705882 0.501961 1 0 1 0.705882 0.501961 1 0 </ColorSequence>
											<float name="Drag">0</float>
											<token name="EmissionDirection">1</token>
											<bool name="Enabled">false</bool>
											<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
											<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
											<token name="FlipbookLayout">0</token>
											<token name="FlipbookMode">0</token>
											<bool name="FlipbookStartRandom">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<NumberRange name="Lifetime">2 5 </NumberRange>
											<float name="LightEmission">1</float>
											<float name="LightInfluence">0</float>
											<bool name="LockedToPart">false</bool>
											<string name="Name">ParticleEmitter</string>
											<token name="Orientation">0</token>
											<float name="Rate">2</float>
											<NumberRange name="RotSpeed">0 0 </NumberRange>
											<NumberRange name="Rotation">0 360 </NumberRange>
											<token name="Shape">0</token>
											<token name="ShapeInOut">0</token>
											<float name="ShapePartial">1</float>
											<token name="ShapeStyle">0</token>
											<NumberSequence name="Size">0 1 0 1 0 0 </NumberSequence>
											<int64 name="SourceAssetId">-1</int64>
											<NumberRange name="Speed">5 5 </NumberRange>
											<Vector2 name="SpreadAngle">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>rbxassetid://116729942</url></Content>
											<float name="TimeScale">1</float>
											<NumberSequence name="Transparency">0 0 0 0.642137 0 0 0.90121 0.354651 0 1 1 0 </NumberSequence>
											<UniqueId name="UniqueId">087e2978515769de02adb9cc00140877</UniqueId>
											<float name="VelocityInheritance">0</float>
											<float name="ZOffset">0</float>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Folder" referent="RBX7E2C27337A584C08ADAAFE013922EAC9">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">AffectedParts</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00353026</UniqueId>
								</Properties>
								<Item class="Part" referent="RBX6F6ABE1E90AF46929FD44E623BAC96CA">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize">AQAAAAoAAABCdXR0b25Nb3ZlEQAAoMAAAAAAAAAAAA==</BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">4</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">4</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-18.7716408</X>
											<Y>14.5</Y>
											<Z>601.879089</Z>
											<R00>0.923879504</R00>
											<R01>0</R01>
											<R02>-0.382683456</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0.382683456</R20>
											<R21>0</R21>
											<R22>0.923879504</R22>
										</CoordinateFrame>
										<bool name="CanCollide">true</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">false</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">4</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">4</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Move</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">4</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">4</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c003686f9</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>4</X>
											<Y>1</Y>
											<Z>4</Z>
										</Vector3>
									</Properties>
								</Item>
								<Item class="Part" referent="RBX2158364DD25A494D984787A95A6DA7C5">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize">AQAAAAoAAABCdXR0b25Nb3ZlEQAAAAAAADBBAAAAAA==</BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">4</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">4</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-49.5</X>
											<Y>18.5</Y>
											<Z>537.5</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">true</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">false</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">4</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">4</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">256</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Move</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">4</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">4</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f00144365</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>5</X>
											<Y>5</Y>
											<Z>5</Z>
										</Vector3>
									</Properties>
									<Item class="Part" referent="RBXCFCD1AEBB2F44DE9861CB3C75EE50B04">
										<Properties>
											<bool name="Anchored">false</bool>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="BackParamA">-0.5</float>
											<float name="BackParamB">0.5</float>
											<token name="BackSurface">4</token>
											<token name="BackSurfaceInput">0</token>
											<float name="BottomParamA">-0.5</float>
											<float name="BottomParamB">0.5</float>
											<token name="BottomSurface">4</token>
											<token name="BottomSurfaceInput">0</token>
											<CoordinateFrame name="CFrame">
												<X>-49.5</X>
												<Y>23.5</Y>
												<Z>537.5</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<bool name="CanCollide">true</bool>
											<bool name="CanQuery">true</bool>
											<bool name="CanTouch">true</bool>
											<bool name="CastShadow">false</bool>
											<string name="CollisionGroup">Default</string>
											<int name="CollisionGroupId">0</int>
											<Color3uint8 name="Color3uint8">4287388575</Color3uint8>
											<PhysicalProperties name="CustomPhysicalProperties">
												<CustomPhysics>false</CustomPhysics>
											</PhysicalProperties>
											<float name="FrontParamA">-0.5</float>
											<float name="FrontParamB">0.5</float>
											<token name="FrontSurface">4</token>
											<token name="FrontSurfaceInput">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<float name="LeftParamA">-0.5</float>
											<float name="LeftParamB">0.5</float>
											<token name="LeftSurface">4</token>
											<token name="LeftSurfaceInput">0</token>
											<bool name="Locked">false</bool>
											<bool name="Massless">false</bool>
											<token name="Material">256</token>
											<string name="MaterialVariantSerialized"></string>
											<string name="Name">Part</string>
											<CoordinateFrame name="PivotOffset">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<float name="Reflectance">0</float>
											<float name="RightParamA">-0.5</float>
											<float name="RightParamB">0.5</float>
											<token name="RightSurface">4</token>
											<token name="RightSurfaceInput">0</token>
											<int name="RootPriority">0</int>
											<Vector3 name="RotVelocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="TopParamA">-0.5</float>
											<float name="TopParamB">0.5</float>
											<token name="TopSurface">4</token>
											<token name="TopSurfaceInput">0</token>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f00145cd9</UniqueId>
											<Vector3 name="Velocity">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
											</Vector3>
											<token name="formFactorRaw">1</token>
											<token name="shape">1</token>
											<Vector3 name="size">
												<X>3</X>
												<Y>5</Y>
												<Z>3</Z>
											</Vector3>
										</Properties>
									</Item>
									<Item class="WeldConstraint" referent="RBX27BE1B8534584FE08E108180A27BD7FE">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame0">
												<X>0</X>
												<Y>-5</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">WeldConstraint</string>
											<Ref name="Part0Internal">RBXCFCD1AEBB2F44DE9861CB3C75EE50B04</Ref>
											<Ref name="Part1Internal">RBX2158364DD25A494D984787A95A6DA7C5</Ref>
											<int64 name="SourceAssetId">-1</int64>
											<int name="State">3</int>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f001461ae</UniqueId>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Model" referent="RBX4E24F3A25C724C7FBE103B5F023C3E54">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">HealthChanger</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000cb967</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-56</X>
										<Y>1.99996948</Y>
										<Z>627</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="StringValue" referent="RBXD6DCF964D0D24BFC901E71E2EDDE56FF">
								<Properties>
									<BinaryString name="AttributesSerialize"><![CDATA[AwAAAA8AAABEZXRlY3Rpb25SYWRpdXMGAAAAAAAALEAJAAAASW5jcmVtZW50BgAAAAAAABTA
CwAAAFJlcGVhdERlbGF5BgAAAAAAAPA/]]></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Interactive</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000cb968</UniqueId>
									<string name="Value">HealthChanger</string>
								</Properties>
							</Item>
							<Item class="Folder" referent="RBX5A645EF9049340C8B1E5392AFBD3FAEB">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Parts</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000cb969</UniqueId>
								</Properties>
								<Item class="Part" referent="RBX8395F0796E0B45519CCA3FFC1721036A">
									<Properties>
										<bool name="Anchored">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="BackParamA">-0.5</float>
										<float name="BackParamB">0.5</float>
										<token name="BackSurface">3</token>
										<token name="BackSurfaceInput">0</token>
										<float name="BottomParamA">-0.5</float>
										<float name="BottomParamB">0.5</float>
										<token name="BottomSurface">3</token>
										<token name="BottomSurfaceInput">0</token>
										<CoordinateFrame name="CFrame">
											<X>-34</X>
											<Y>1.49996948</Y>
											<Z>582</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<bool name="CanCollide">true</bool>
										<bool name="CanQuery">true</bool>
										<bool name="CanTouch">true</bool>
										<bool name="CastShadow">true</bool>
										<string name="CollisionGroup">Default</string>
										<int name="CollisionGroupId">0</int>
										<Color3uint8 name="Color3uint8">4290019583</Color3uint8>
										<PhysicalProperties name="CustomPhysicalProperties">
											<CustomPhysics>false</CustomPhysics>
										</PhysicalProperties>
										<float name="FrontParamA">-0.5</float>
										<float name="FrontParamB">0.5</float>
										<token name="FrontSurface">3</token>
										<token name="FrontSurfaceInput">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LeftParamA">-0.5</float>
										<float name="LeftParamB">0.5</float>
										<token name="LeftSurface">3</token>
										<token name="LeftSurfaceInput">0</token>
										<bool name="Locked">false</bool>
										<bool name="Massless">false</bool>
										<token name="Material">288</token>
										<string name="MaterialVariantSerialized"></string>
										<string name="Name">Killbrick</string>
										<CoordinateFrame name="PivotOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<float name="Reflectance">0</float>
										<float name="RightParamA">-0.5</float>
										<float name="RightParamB">0.5</float>
										<token name="RightSurface">3</token>
										<token name="RightSurfaceInput">0</token>
										<int name="RootPriority">0</int>
										<Vector3 name="RotVelocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="TopParamA">-0.5</float>
										<float name="TopParamB">0.5</float>
										<token name="TopSurface">3</token>
										<token name="TopSurfaceInput">0</token>
										<float name="Transparency">0.899999976</float>
										<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000cb96a</UniqueId>
										<Vector3 name="Velocity">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<token name="formFactorRaw">1</token>
										<token name="shape">1</token>
										<Vector3 name="size">
											<X>100</X>
											<Y>1</Y>
											<Z>100</Z>
										</Vector3>
									</Properties>
									<Item class="ParticleEmitter" referent="RBX308EA0B2D28D436D9395C0CD6AAA8C93">
										<Properties>
											<Vector3 name="Acceleration">
												<X>0</X>
												<Y>0.5</Y>
												<Z>0</Z>
											</Vector3>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<float name="Brightness">5</float>
											<ColorSequence name="Color">0 0.705882 0.501961 1 0 1 0.705882 0.501961 1 0 </ColorSequence>
											<float name="Drag">0</float>
											<token name="EmissionDirection">1</token>
											<bool name="Enabled">true</bool>
											<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
											<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
											<token name="FlipbookLayout">0</token>
											<token name="FlipbookMode">0</token>
											<bool name="FlipbookStartRandom">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<NumberRange name="Lifetime">2 5 </NumberRange>
											<float name="LightEmission">1</float>
											<float name="LightInfluence">0</float>
											<bool name="LockedToPart">false</bool>
											<string name="Name">ParticleEmitter</string>
											<token name="Orientation">0</token>
											<float name="Rate">2</float>
											<NumberRange name="RotSpeed">0 0 </NumberRange>
											<NumberRange name="Rotation">0 360 </NumberRange>
											<token name="Shape">0</token>
											<token name="ShapeInOut">0</token>
											<float name="ShapePartial">1</float>
											<token name="ShapeStyle">0</token>
											<NumberSequence name="Size">0 1 0 1 0 0 </NumberSequence>
											<int64 name="SourceAssetId">-1</int64>
											<NumberRange name="Speed">5 5 </NumberRange>
											<Vector2 name="SpreadAngle">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
											<BinaryString name="Tags"></BinaryString>
											<Content name="Texture"><url>rbxassetid://116729942</url></Content>
											<float name="TimeScale">1</float>
											<NumberSequence name="Transparency">0 0 0 0.642137 0 0 0.90121 0.354651 0 1 1 0 </NumberSequence>
											<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000cb96b</UniqueId>
											<float name="VelocityInheritance">0</float>
											<float name="ZOffset">0</float>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Part" referent="RBX612EC6401E5E48639E5A9764C4B74242">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-56</X>
										<Y>2</Y>
										<Z>627</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">false</bool>
									<bool name="CanTouch">false</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">DetectionCenter</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">1</float>
									<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000cb96c</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Part" referent="RBX5F579E6A10604FCE951BF65C915FE54A">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">4</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">4</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-16.5</X>
									<Y>18</Y>
									<Z>676.5</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">4</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">4</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Wall</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">4</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">4</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">3cdea1994a3b6b3d02cbcc5900448d6d</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>11</X>
									<Y>34</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
							<Item class="StringValue" referent="RBX49D3C5828F404567AAC246014AB0384F">
								<Properties>
									<BinaryString name="AttributesSerialize"><![CDATA[BgAAAAsAAABCb3VuY2VQb3dlcgYAAAAAAEBQQAwAAABHcmFiQ29vbGRvd24GMzMzMzMzwz8J
AAAASXNFbmFibGVkAwEKAAAASnVtcEhlaWdodAYAAAAAAEBQQA4AAABMYXVuY2hEdXJhdGlv
bgaamZmZmZnJPw0AAABTdGlja0R1cmF0aW9uBgAAAAAAABRA]]></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Interactive</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">3cdea1994a3b6b3d02cbcc5900448d77</UniqueId>
									<string name="Value">StickyWall</string>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBXF27D951C311B4ADC9E66CC30BBE7EF75">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>-17</Y>
										<Z>0.5</Z>
										<R00>0</R00>
										<R01>-1</R01>
										<R02>0</R02>
										<R10>1</R10>
										<R11>0</R11>
										<R12>-0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Attachment</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">59a47a146e61f62b02da6433000beb40</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="Attachment" referent="RBXA2DDEDE282EF4999A671D5D2120C075B">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>17</Y>
										<Z>0.5</Z>
										<R00>0</R00>
										<R01>-1</R01>
										<R02>0</R02>
										<R10>1</R10>
										<R11>0</R11>
										<R12>-0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Attachment</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">59a47a146e61f62b02da6433000beb43</UniqueId>
									<bool name="Visible">false</bool>
								</Properties>
							</Item>
							<Item class="Beam" referent="RBXEA7ED64297B641D0B6A5ECE8ABB8ED38">
								<Properties>
									<Ref name="Attachment0">RBXF27D951C311B4ADC9E66CC30BBE7EF75</Ref>
									<Ref name="Attachment1">RBXA2DDEDE282EF4999A671D5D2120C075B</Ref>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="Brightness">1</float>
									<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
									<float name="CurveSize0">0</float>
									<float name="CurveSize1">0</float>
									<bool name="Enabled">true</bool>
									<bool name="FaceCamera">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LightEmission">0</float>
									<float name="LightInfluence">1</float>
									<string name="Name">Beam</string>
									<int name="Segments">10</int>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>http://www.roblox.com/asset/?id=247420484</url></Content>
									<float name="TextureLength">7</float>
									<token name="TextureMode">2</token>
									<float name="TextureSpeed">3</float>
									<NumberSequence name="Transparency">0 0.7 0 1 0.7 0 </NumberSequence>
									<UniqueId name="UniqueId">59a47a146e61f62b02da6433000beb41</UniqueId>
									<float name="Width0">6</float>
									<float name="Width1">6</float>
									<float name="ZOffset">0.200000003</float>
								</Properties>
								<Item class="Script" referent="RBX650687BF423E46CB8B73CDF5D128F3A7">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="Disabled">true</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<Content name="LinkedSource"><null></null></Content>
										<string name="Name">Script</string>
										<token name="RunContext">0</token>
										<string name="ScriptGuid">{D6096F88-8DFF-4307-A90F-B020DF438CBE}</string>
										<ProtectedString name="Source">script.Parent.TextureSpeed = script.Parent.Parent.Parent.Speed.Value / script.Parent.TextureLength</ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">59a47a146e61f62b02da6433000beb42</UniqueId>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Part" referent="RBX67ADBBFF7EBC49209D66DE4090E9E326">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-34</X>
								<Y>6.5</Y>
								<Z>582</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">800</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Spawn</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">1</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcad9</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>4</X>
								<Y>1</Y>
								<Z>4</Z>
							</Vector3>
						</Properties>
						<Item class="SelectionBox" referent="RBX57DB359DB46340F88DE1C93D194E9A69">
							<Properties>
								<Ref name="Adornee">RBX67ADBBFF7EBC49209D66DE4090E9E326</Ref>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Color3 name="Color3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LineThickness">0.150000006</float>
								<string name="Name">SelectionBox</string>
								<int64 name="SourceAssetId">-1</int64>
								<Color3 name="SurfaceColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="SurfaceTransparency">1</float>
								<BinaryString name="Tags"></BinaryString>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcada</UniqueId>
								<bool name="Visible">true</bool>
							</Properties>
						</Item>
						<Item class="Beam" referent="RBXDBF0613238DB4A52886D314EF71323E9">
							<Properties>
								<Ref name="Attachment0">RBXD46D6C9935F943D58CDD782087C6F0B1</Ref>
								<Ref name="Attachment1">RBXC900B278893B4514AA03D8A673F23FA4</Ref>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="Brightness">1</float>
								<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
								<float name="CurveSize0">0</float>
								<float name="CurveSize1">0</float>
								<bool name="Enabled">true</bool>
								<bool name="FaceCamera">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LightEmission">0</float>
								<float name="LightInfluence">1</float>
								<string name="Name">FrontBeam</string>
								<int name="Segments">10</int>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="Texture"><null></null></Content>
								<float name="TextureLength">1</float>
								<token name="TextureMode">0</token>
								<float name="TextureSpeed">1</float>
								<NumberSequence name="Transparency">0 0 0 1 1 0 </NumberSequence>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcadb</UniqueId>
								<float name="Width0">4</float>
								<float name="Width1">4</float>
								<float name="ZOffset">0</float>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBXD46D6C9935F943D58CDD782087C6F0B1">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>-2</Z>
									<R00>0</R00>
									<R01>-1</R01>
									<R02>0</R02>
									<R10>1</R10>
									<R11>0</R11>
									<R12>-0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">FrontAttachment0</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcadc</UniqueId>
								<bool name="Visible">false</bool>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBXC900B278893B4514AA03D8A673F23FA4">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>2</Y>
									<Z>-2</Z>
									<R00>0</R00>
									<R01>-1</R01>
									<R02>0</R02>
									<R10>1</R10>
									<R11>0</R11>
									<R12>-0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">FrontAttachment1</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcadd</UniqueId>
								<bool name="Visible">false</bool>
							</Properties>
						</Item>
						<Item class="Beam" referent="RBX07CA46371FF94F6BB22CA8763A37F813">
							<Properties>
								<Ref name="Attachment0">RBX3AEA2557CA1B48FD9183912C92BC2C50</Ref>
								<Ref name="Attachment1">RBX59F0E062E39D4CFC826ECF0B631573D1</Ref>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="Brightness">1</float>
								<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
								<float name="CurveSize0">0</float>
								<float name="CurveSize1">0</float>
								<bool name="Enabled">true</bool>
								<bool name="FaceCamera">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LightEmission">0</float>
								<float name="LightInfluence">1</float>
								<string name="Name">LeftBeam</string>
								<int name="Segments">10</int>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="Texture"><null></null></Content>
								<float name="TextureLength">1</float>
								<token name="TextureMode">0</token>
								<float name="TextureSpeed">1</float>
								<NumberSequence name="Transparency">0 0 0 1 1 0 </NumberSequence>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcade</UniqueId>
								<float name="Width0">4</float>
								<float name="Width1">4</float>
								<float name="ZOffset">0</float>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBX59F0E062E39D4CFC826ECF0B631573D1">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>-2</X>
									<Y>2</Y>
									<Z>0</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>1</R10>
									<R11>0</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>1</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">LeftAttachment1</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcadf</UniqueId>
								<bool name="Visible">false</bool>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBX3AEA2557CA1B48FD9183912C92BC2C50">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>-2</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>1</R10>
									<R11>0</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>1</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">LeftAttachment0</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcae0</UniqueId>
								<bool name="Visible">false</bool>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBX2DD04131B1D546C1962055BBE775AFB5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>2</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>1</R10>
									<R11>0</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>1</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">RightAttachment0</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcae1</UniqueId>
								<bool name="Visible">false</bool>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBXD678D4D4AA9F4269AF3A98CDC91D9C6A">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>2</X>
									<Y>2</Y>
									<Z>0</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>1</R10>
									<R11>0</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>1</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">RightAttachment1</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcae2</UniqueId>
								<bool name="Visible">false</bool>
							</Properties>
						</Item>
						<Item class="Beam" referent="RBXECBCA8C4304147779E42315FCCCD7ED5">
							<Properties>
								<Ref name="Attachment0">RBX2DD04131B1D546C1962055BBE775AFB5</Ref>
								<Ref name="Attachment1">RBXD678D4D4AA9F4269AF3A98CDC91D9C6A</Ref>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="Brightness">1</float>
								<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
								<float name="CurveSize0">0</float>
								<float name="CurveSize1">0</float>
								<bool name="Enabled">true</bool>
								<bool name="FaceCamera">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LightEmission">0</float>
								<float name="LightInfluence">1</float>
								<string name="Name">RightBeam</string>
								<int name="Segments">10</int>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="Texture"><null></null></Content>
								<float name="TextureLength">1</float>
								<token name="TextureMode">0</token>
								<float name="TextureSpeed">1</float>
								<NumberSequence name="Transparency">0 0 0 1 1 0 </NumberSequence>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcae3</UniqueId>
								<float name="Width0">4</float>
								<float name="Width1">4</float>
								<float name="ZOffset">0</float>
							</Properties>
						</Item>
						<Item class="Beam" referent="RBX56E5CAE1B66647BA8E8BAFE365941104">
							<Properties>
								<Ref name="Attachment0">RBX439163128AED4C17B4AFEED24AB6D343</Ref>
								<Ref name="Attachment1">RBX39B46A53570B4A588E349A817553A395</Ref>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="Brightness">1</float>
								<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
								<float name="CurveSize0">0</float>
								<float name="CurveSize1">0</float>
								<bool name="Enabled">true</bool>
								<bool name="FaceCamera">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LightEmission">0</float>
								<float name="LightInfluence">1</float>
								<string name="Name">BackBeam</string>
								<int name="Segments">10</int>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="Texture"><null></null></Content>
								<float name="TextureLength">1</float>
								<token name="TextureMode">0</token>
								<float name="TextureSpeed">1</float>
								<NumberSequence name="Transparency">0 0 0 1 1 0 </NumberSequence>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcae4</UniqueId>
								<float name="Width0">4</float>
								<float name="Width1">4</float>
								<float name="ZOffset">0</float>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBX39B46A53570B4A588E349A817553A395">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>2</Y>
									<Z>2</Z>
									<R00>0</R00>
									<R01>-1</R01>
									<R02>0</R02>
									<R10>1</R10>
									<R11>0</R11>
									<R12>-0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">BackAttachment1</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcae5</UniqueId>
								<bool name="Visible">false</bool>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBX439163128AED4C17B4AFEED24AB6D343">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>2</Z>
									<R00>0</R00>
									<R01>-1</R01>
									<R02>0</R02>
									<R10>1</R10>
									<R11>0</R11>
									<R12>-0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">BackAttachment0</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcae6</UniqueId>
								<bool name="Visible">false</bool>
							</Properties>
						</Item>
					</Item>
					<Item class="Configuration" referent="RBX77EB3C147992476284B04895E561C208">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Lighting</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcae7</UniqueId>
						</Properties>
						<Item class="BloomEffect" referent="RBX220ABCD59CDA420F999A519ED168F904">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="Enabled">true</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="Intensity">1</float>
								<string name="Name">Bloom</string>
								<float name="Size">24</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Threshold">2</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcae8</UniqueId>
							</Properties>
						</Item>
						<Item class="DepthOfFieldEffect" referent="RBX911A50D9BF244D58B0F9FF153634985E">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="Enabled">false</bool>
								<float name="FarIntensity">0.100000001</float>
								<float name="FocusDistance">0.0500000007</float>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="InFocusRadius">30</float>
								<string name="Name">DepthOfField</string>
								<float name="NearIntensity">0.75</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcae9</UniqueId>
							</Properties>
						</Item>
						<Item class="SunRaysEffect" referent="RBX6DAE2004F5E443D6A4D1DDA041B27967">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="Enabled">true</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="Intensity">0.00999999978</float>
								<string name="Name">SunRays</string>
								<int64 name="SourceAssetId">-1</int64>
								<float name="Spread">0.100000001</float>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaea</UniqueId>
							</Properties>
						</Item>
						<Item class="Sky" referent="RBXA335ED14299B4A568EB4388D97D4A055">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="CelestialBodiesShown">true</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="MoonAngularSize">11</float>
								<Content name="MoonTextureId"><url>rbxassetid://6444320592</url></Content>
								<string name="Name">Sky</string>
								<Content name="SkyboxBk"><url>rbxassetid://6444884337</url></Content>
								<Content name="SkyboxDn"><url>rbxassetid://6444884785</url></Content>
								<Content name="SkyboxFt"><url>rbxassetid://6444884337</url></Content>
								<Content name="SkyboxLf"><url>rbxassetid://6444884337</url></Content>
								<Content name="SkyboxRt"><url>rbxassetid://6444884337</url></Content>
								<Content name="SkyboxUp"><url>rbxassetid://6412503613</url></Content>
								<int64 name="SourceAssetId">332039975</int64>
								<int name="StarCount">3000</int>
								<float name="SunAngularSize">11</float>
								<Content name="SunTextureId"><url>rbxassetid://6196665106</url></Content>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaeb</UniqueId>
							</Properties>
						</Item>
						<Item class="Atmosphere" referent="RBX79EBCBA699EE4A5781F85CBBADBF0409">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Color3 name="Color">
									<R>0.78039217</R>
									<G>0.78039217</G>
									<B>0.78039217</B>
								</Color3>
								<Color3 name="Decay">
									<R>0.41568628</R>
									<G>0.43921569</G>
									<B>0.490196079</B>
								</Color3>
								<float name="Density">0.300000012</float>
								<float name="Glare">0</float>
								<float name="Haze">0</float>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Atmosphere</string>
								<float name="Offset">0.25</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaec</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX370CBFBE6813479F9E3E6FAD3A811E36">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Launcher</string>
							<string name="ScriptGuid">{E564AA41-FD5B-40E5-BA31-06ECAC7462CD}</string>
							<ProtectedString name="Source"><![CDATA[--[[
Map implemented subclass of "MapLauncher"
]]--

local MapLauncher = require(
	game:GetService("ReplicatedStorage")
	:WaitForChild("Modules")
	:WaitForChild("MapHandles")
	:WaitForChild("MapLauncher")
)

local Launcher = {}

function Launcher.New(Model: Model, Loader: {})
	local Map = MapLauncher.New(Model, Loader)
	
	-- The map's name
	Map.Name = "Tower of Rushing"
	
	-- Number enclosed in brackets specifies the difficulty
	-- (1-14)
	Map.Difficulty = MapLauncher.DefaultInfo.Difficulties[2]
	
	-- Whoever created the map
	Map.Creators = "udev2192"
	
	Map.Description = "demo tower for the Softlocked kit"
	
	return Map
end

return Launcher]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaed</UniqueId>
						</Properties>
						<Item class="Part" referent="RBX69A6B292147544DBB5502CF7FB9190A9">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-61</X>
									<Y>2</Y>
									<Z>266</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">800</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">RadioTest</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaee</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>2</X>
									<Y>1</Y>
									<Z>2</Z>
								</Vector3>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX7FF0572C9BC14DBAB70045D5DF85F030">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Obby</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaef</UniqueId>
						</Properties>
						<Item class="Part" referent="RBX747609FFA418412DBE5084582ABD2086">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>8.5</Y>
									<Z>586.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c0a87</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>8</X>
									<Y>3</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="CornerWedgePart" referent="RBXB5534DAD305D423DA2EF560869AB395D">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-81</X>
									<Y>2</Y>
									<Z>645</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb04</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="size">
									<X>2</X>
									<Y>2</Y>
									<Z>2</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX354C90EC12E649209C969E400FC637FD">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-4.5</X>
									<Y>20.5</Y>
									<Z>558.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016df0f</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>39</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXF1C7BA05EA964F66B04C368CD502E78B">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-4.5</X>
									<Y>39.5</Y>
									<Z>563.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016df0e</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>9</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXC6BF991A10214CA9BE0FE1B6EFA10E5A">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-4.5</X>
									<Y>29.5</Y>
									<Z>563.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016df0d</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>19</Y>
									<Z>9</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXED727A24D2C64ED1BFF456558BB6A9E3">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-4.5</X>
									<Y>20.5</Y>
									<Z>568.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016df0c</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>39</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX30A39EDA27E849F6B4BD9326A29BDFE6">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-4.5</X>
									<Y>10.5</Y>
									<Z>563.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016df0b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>19</Y>
									<Z>9</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX363D3AFC43594499A9DE5D47E4D3D2A2">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>4.5</X>
									<Y>29.5</Y>
									<Z>563.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016d01b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>19</Y>
									<Z>9</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXBD10B244D5E04B12B0B6682CC53C6348">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>4.5</X>
									<Y>20.5</Y>
									<Z>568.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016cdbc</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>39</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXC2984373AE614CEA87665DA297AB3E6B">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>4.5</X>
									<Y>20.5</Y>
									<Z>558.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016c023</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>39</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX8941F2CEF0BC49BEB111A2F0BD8AFC43">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-3</X>
									<Y>10</Y>
									<Z>567</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016a9ba</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>2</X>
									<Y>18</Y>
									<Z>2</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX7B2CD9A48EEB425C8E7D24F8BEF0FA0C">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>4.5</X>
									<Y>39.5</Y>
									<Z>563.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016d245</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>9</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX43BC570AC77146A7A708E8909B6DF934">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>4.5</X>
									<Y>10.5</Y>
									<Z>563.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016a00b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>19</Y>
									<Z>9</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX3D23C736B9BB441A93BB5E6CF34C2A28">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>3</X>
									<Y>10</Y>
									<Z>560</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016839b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>2</X>
									<Y>18</Y>
									<Z>2</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXF3CF8EB5B4D44CF6B32E587D605FED8E">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>14.5</Y>
									<Z>544.5</Z>
									<R00>0</R00>
									<R01>1</R01>
									<R02>-0</R02>
									<R10>-1</R10>
									<R11>0</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de500166518</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">2</token>
								<Vector3 name="size">
									<X>27</X>
									<Y>4</Y>
									<Z>5</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX0C3715BC118945CB99FC7B3E962D429C">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-4.40377808</X>
									<Y>26.5</Y>
									<Z>540.096191</Z>
									<R00>0.707106709</R00>
									<R01>0</R01>
									<R02>-0.707106829</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.707106829</R20>
									<R21>0</R21>
									<R22>0.707106709</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>-6.5</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de500163296</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>13</X>
									<Y>1</Y>
									<Z>3</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX710E91B47EED43CCA82F01B2E5F30050">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-9</X>
									<Y>14.5</Y>
									<Z>535.5</Z>
									<R00>0</R00>
									<R01>1</R01>
									<R02>-0</R02>
									<R10>-1</R10>
									<R11>0</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de500160d0a</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">2</token>
								<Vector3 name="size">
									<X>27</X>
									<Y>4</Y>
									<Z>5</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX33F341B8DEBC4E50938C82C2A2D94C20">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-16</X>
									<Y>26.5</Y>
									<Z>535.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50016007a</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>12</X>
									<Y>1</Y>
									<Z>3</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX44B22DB9A0F2477ABE73B6A608BB8E74">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-49.5</X>
									<Y>14</Y>
									<Z>537.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50015be5d</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>11</X>
									<Y>26</Y>
									<Z>11</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX47CD57C035F84612A7A6C6C834743859">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-22.5</X>
									<Y>14</Y>
									<Z>535.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50015bbf6</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>26</Y>
									<Z>7</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX9ECFA42119E74998BA2DC39ACE7111AE">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-33.5</X>
									<Y>19.3212128</Y>
									<Z>548.934021</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0.499999821</R11>
									<R12>-0.866025031</R12>
									<R20>0</R20>
									<R21>0.866025031</R21>
									<R22>0.499999821</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50015a8de</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>0.5</X>
									<Y>0.5</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX1FBA3368834949FA8B41ECFDAAEF410B">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-33.5</X>
									<Y>18.4551888</Y>
									<Z>549.434021</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0.499999821</R11>
									<R12>-0.866025031</R12>
									<R20>0</R20>
									<R21>0.866025031</R21>
									<R22>0.499999821</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50015a3e6</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXCB34CC87B4BF45BF82E937ED2FBA5616">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-33.5</X>
									<Y>21.0532532</Y>
									<Z>547.934021</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0.499999821</R11>
									<R12>-0.866025031</R12>
									<R20>0</R20>
									<R21>0.866025031</R21>
									<R22>0.499999821</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de500159928</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>3</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX8D22363050284C269C54D985E09B17F4">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-33.5</X>
									<Y>23.3093719</Y>
									<Z>546.202881</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0.707106709</R11>
									<R12>-0.707106709</R12>
									<R20>0</R20>
									<R21>0.707106709</R21>
									<R22>0.707106709</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de50015991b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>3</X>
									<Y>1</Y>
									<Z>3</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX1F74B844CCCD4827B22A300420E9846E">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-33.5</X>
									<Y>25.0405426</Y>
									<Z>543.946777</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0.866025388</R11>
									<R12>-0.5</R12>
									<R20>0</R20>
									<R21>0.5</R21>
									<R22>0.866025388</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de500159915</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>5</X>
									<Y>1</Y>
									<Z>3</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXE72FA6AE750B4AD1BE79F8400A5CAB22">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-33.5</X>
									<Y>26.1288147</Y>
									<Z>541.319458</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0.965925813</R11>
									<R12>-0.258819044</R12>
									<R20>0</R20>
									<R21>0.258819044</R21>
									<R22>0.965925813</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de500159890</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>7</X>
									<Y>1</Y>
									<Z>3</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX202697CCCA0F45F5872D0A13A13344B7">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-33.5</X>
									<Y>26.5</Y>
									<Z>538.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5001583aa</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>9</X>
									<Y>1</Y>
									<Z>3</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX91888A7C9DAA4DE7A20E1C9CD7D3EC9C">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-33.5</X>
									<Y>14</Y>
									<Z>534.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de500156f5e</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>9</X>
									<Y>26</Y>
									<Z>5</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXA441E8A6A54E4767A09C92511411CFB6">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>14</Y>
									<Z>559</Z>
									<R00>0.707106709</R00>
									<R01>0</R01>
									<R02>0.707106829</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>-0.707106829</R20>
									<R21>0</R21>
									<R22>0.707106709</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de500155a11</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>2</X>
									<Y>4</Y>
									<Z>2</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXA196E6EFEE504C7889572E1A6490160B">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>9.5</Y>
									<Z>559</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>-0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de500155207</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>5</Y>
									<Z>6</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXEED3E2F00C294A25927C7CDC225EB30C">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>4</Y>
									<Z>559</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de500154763</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>10</X>
									<Y>6</Y>
									<Z>10</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="CornerWedgePart" referent="RBX6EE2288242854F73889A187938AEE409">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-38.5</X>
									<Y>24</Y>
									<Z>577.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>-1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000ca218</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="size">
									<X>1</X>
									<Y>4</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="CornerWedgePart" referent="RBX073DE1CBDA8C4C5A9BE13DBDD98579E7">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-29.5</X>
									<Y>24</Y>
									<Z>577.5</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c9e72</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="size">
									<X>1</X>
									<Y>4</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="CornerWedgePart" referent="RBX37290D40BAFF4800942DCE56280216F9">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-29.5</X>
									<Y>24</Y>
									<Z>586.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c9be4</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="size">
									<X>1</X>
									<Y>4</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="CornerWedgePart" referent="RBX8509DFE7C0514B48841F92517033B3C7">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-38.5</X>
									<Y>24</Y>
									<Z>586.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c8fbb</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="size">
									<X>1</X>
									<Y>4</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="WedgePart" referent="RBXDA8C426578AE43F9ABB90CD4C445F972">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-32</X>
									<Y>6.5</Y>
									<Z>574</Z>
									<R00>0</R00>
									<R01>1</R01>
									<R02>-0</R02>
									<R10>-1</R10>
									<R11>0</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c811e</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>4</Y>
									<Z>6</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="WedgePart" referent="RBX1E9D50698EE54E6AB33AA3A26A5A374B">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-36</X>
									<Y>6.5</Y>
									<Z>574</Z>
									<R00>0</R00>
									<R01>-1</R01>
									<R02>0</R02>
									<R10>1</R10>
									<R11>0</R11>
									<R12>-0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c74ca</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>4</Y>
									<Z>6</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX17790095B9E24B4AAAEEAB00153C3259">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-29.5</X>
									<Y>8.5</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c64db</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>3</Y>
									<Z>8</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXA796689E8322418BBA59F9460ADD0261">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-38.5</X>
									<Y>8.5</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c6235</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>3</Y>
									<Z>8</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="CornerWedgePart" referent="RBX99DA738093E7450DB63F9D5BAF31D076">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-31.5</X>
									<Y>4.5</Y>
									<Z>584.5</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>-1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c5a78</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="size">
									<X>5</X>
									<Y>3</Y>
									<Z>5</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="CornerWedgePart" referent="RBX46680A3977D74A41B6614945F57CB6E2">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-36.5</X>
									<Y>4.5</Y>
									<Z>584.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>-1</R02>
									<R10>0</R10>
									<R11>-1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>-0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c5367</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="size">
									<X>5</X>
									<Y>3</Y>
									<Z>5</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="CornerWedgePart" referent="RBX3F20B86FBBD14C0E835C5C434B74B637">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-31.5</X>
									<Y>4.5</Y>
									<Z>579.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>-1</R11>
									<R12>0</R12>
									<R20>1</R20>
									<R21>0</R21>
									<R22>-0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c4613</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="size">
									<X>5</X>
									<Y>3</Y>
									<Z>5</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="CornerWedgePart" referent="RBX693769146C474446BA9977FAB16E035F">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-36.5</X>
									<Y>4.5</Y>
									<Z>579.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>-1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c32ce</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="size">
									<X>5</X>
									<Y>3</Y>
									<Z>5</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX28200F93AE4A433ABCF0CEB9B46614E8">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-54.5</X>
									<Y>34.5</Y>
									<Z>532.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f003dab2e</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>15</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX6B20AB88EC294E83803047272D32000F">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-46.5</X>
									<Y>0.5</Y>
									<Z>660.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4291480529</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Baseplate</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb0c</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>73</X>
									<Y>1</Y>
									<Z>37</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXF9A8BB7A4C424B36859C6F047E88C8FF">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-49.5</X>
									<Y>41.5</Y>
									<Z>532.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f003dacdf</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>9</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXD1961F102688493CA46F444D90DE84E8">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-44.5</X>
									<Y>34.5</Y>
									<Z>532.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f003da7e6</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>15</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXF620A3D5F88A4589BCFE700B50D5B0F7">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-44.5</X>
									<Y>41.5</Y>
									<Z>542.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f003d95bb</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">0</token>
								<Vector3 name="size">
									<X>2</X>
									<Y>2</Y>
									<Z>2</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXE79DFAD6C3AF4D92BC91FAF6A923EFFD">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-49.5</X>
									<Y>41.5</Y>
									<Z>542.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f003d9029</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>9</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX7CC1F145B0E3481DA5C41940C479AE0D">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-69</X>
									<Y>1.5</Y>
									<Z>650.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4288201435</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>true</CustomPhysics>
									<Density>0.91900003</Density>
									<Friction>0</Friction>
									<Elasticity>0.150000006</Elasticity>
									<FrictionWeight>100</FrictionWeight>
									<ElasticityWeight>1</ElasticityWeight>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">1536</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">SlipperyPart</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb49</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>8</X>
									<Y>1</Y>
									<Z>3</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX6F2BDA592BE447B2BC0B5A4F4399F075">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-72</X>
									<Y>3</Y>
									<Z>645</Z>
									<R00>0</R00>
									<R01>1</R01>
									<R02>-0</R02>
									<R10>-1</R10>
									<R11>0</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb4a</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">2</token>
								<Vector3 name="size">
									<X>4</X>
									<Y>4</Y>
									<Z>4</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX47CA084846154B07A6EA0A7BEBF018E6">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-66</X>
									<Y>3</Y>
									<Z>645</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb4b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">0</token>
								<Vector3 name="size">
									<X>4</X>
									<Y>4</Y>
									<Z>4</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX6537A387DDFD4B0E9BE3B88FD4DCC2FE">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-55</X>
									<Y>4</Y>
									<Z>645</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb4c</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>2</X>
									<Y>6</Y>
									<Z>4</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX99AAD2533E644151815C624EF64B87B5">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-47</X>
									<Y>3.5</Y>
									<Z>644.5</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-4.37113883e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>4.37113883e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">false</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4279308561</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Sign</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.300000012</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb4d</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>10</X>
									<Y>5</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
							<Item class="SurfaceGui" referent="RBX9DEF5F1341044CBFB991CAF0D87637F9">
								<Properties>
									<bool name="Active">true</bool>
									<Ref name="Adornee">null</Ref>
									<bool name="AlwaysOnTop">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<float name="Brightness">1</float>
									<Vector2 name="CanvasSize">
										<X>600</X>
										<Y>300</Y>
									</Vector2>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Enabled">true</bool>
									<token name="Face">2</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LightInfluence">0</float>
									<string name="Name">SurfaceGui</string>
									<float name="PixelsPerStud">50</float>
									<bool name="ResetOnSpawn">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<token name="SizingMode">1</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="ToolPunchThroughDistance">0</float>
									<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb4e</UniqueId>
									<token name="ZIndexBehavior">0</token>
									<float name="ZOffset">0</float>
								</Properties>
								<Item class="TextLabel" referent="RBXCB4837F69D33492CAE5347316D79A266">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxasset://fonts/families/ComicNeueAngular.json</url></Family>
											<Weight>400</Weight>
											<Style>Normal</Style>
											<CachedFaceId><url>rbxasset://fonts/ComicNeue-Angular-Bold.ttf</url></CachedFaceId>
										</Font>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<int name="MaxVisibleGraphemes">-1</int>
										<string name="Name">TextLabel</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<bool name="RichText">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">Text</string>
										<Color3 name="TextColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<bool name="TextScaled">true</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb4f</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="WedgePart" referent="RBX3D32914FE72F4692AE88FD02CCF57011">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-60</X>
									<Y>4</Y>
									<Z>645</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb50</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>4</X>
									<Y>6</Y>
									<Z>2</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="TrussPart" referent="RBX7B88342DEA7B4169BA9F2E8AC392B33E">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-77</X>
									<Y>2</Y>
									<Z>645</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb51</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="size">
									<X>2</X>
									<Y>2</Y>
									<Z>2</Z>
								</Vector3>
								<token name="style">0</token>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX3F799E4849D34E8C8C30EA23E030BA03">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>6.5</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000be616</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>10</X>
									<Y>1</Y>
									<Z>10</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXA5AD76B68C7B4470B393BBFE1687D318">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-29.5</X>
									<Y>14.5</Y>
									<Z>586.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000bf0ef</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>15</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX11D0EFDC546143C7934855E03F1FE07A">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-29.5</X>
									<Y>14.5</Y>
									<Z>577.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c06c3</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>15</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX00D307BD882D4BB7B2FC8C8F058DA005">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-38.5</X>
									<Y>14.5</Y>
									<Z>577.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c08a4</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>15</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXF31B8ADBC5C44FFC8EA73B0E79665D2D">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-38.5</X>
									<Y>14.5</Y>
									<Z>586.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1b0bd29145615b0402a73de5000c0978</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>15</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX636FCAB17A0846DAB01131C1FAA5AE46">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-49.5</X>
									<Y>26.5499992</Y>
									<Z>537.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4279970357</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00351ae8</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>5.05000019</X>
									<Y>1</Y>
									<Z>5.05000019</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXE7BB3703A6114108BCA56E7C8FD0C29D">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-11.7632561</X>
									<Y>3.5</Y>
									<Z>605.864502</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c003524ba</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>10</X>
									<Y>5</Y>
									<Z>12</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXDE657E95EA844608A46702892865BF3B">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-5.50105238</X>
									<Y>12</Y>
									<Z>602.505188</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00354f26</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>12</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXFA92163E7AFF44CC99267CB76AB4C0E2">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-13.8159676</X>
									<Y>12</Y>
									<Z>599.061035</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00355612</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>12</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX7F34F355445845B5AFA26F8DDBAD10B4">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-9.19654179</X>
									<Y>12.5</Y>
									<Z>600.974487</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c003556bb</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>7</X>
									<Y>11</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX1329F851743F49D1BE2974F21C13017B">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-9.658535</X>
									<Y>27</Y>
									<Z>600.783081</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00355940</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>10</X>
									<Y>18</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXECAE1A9670E84154856DBFA61EC0D997">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-8.43131256</X>
									<Y>19.5</Y>
									<Z>599.126953</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00355c77</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>9</X>
									<Y>1</Y>
									<Z>3</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXC339FE89858F487988F9861A646D9A96">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-9.65860367</X>
									<Y>6.5</Y>
									<Z>600.783081</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0035602a</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>8</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX5E94612BD91B4876B0016E6813CE9749">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-12.4766798</X>
									<Y>18.5</Y>
									<Z>595.827698</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c003571da</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>35</Y>
									<Z>6</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX9A615B083FA148B49555894BE2AE8BB4">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-19.2335529</X>
									<Y>3.5</Y>
									<Z>601.687805</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00358041</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>7</X>
									<Y>5</Y>
									<Z>8</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="WedgePart" referent="RBX36F292966C3E4FD6ADA5E934F7B9EA39">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-2.88771605</X>
									<Y>19.5</Y>
									<Z>601.423035</Z>
									<R00>0</R00>
									<R01>0.923879504</R01>
									<R02>-0.382683456</R02>
									<R10>-1</R10>
									<R11>0</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0.382683456</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00358f04</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>3</Y>
									<Z>3</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXBEFE082F95FE46A6AE7EDD53C51E2303">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-5.56679726</X>
									<Y>19.5</Y>
									<Z>607.890137</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00359c3b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>3</X>
									<Y>1</Y>
									<Z>11</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX795D035321CC47E0B1617300257FFA33">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-18.771616</X>
									<Y>11</Y>
									<Z>601.87915</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0035a834</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>10</Y>
									<Z>6</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX3F09F4C6A5974C1AAC39E330110B17B3">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-11.3289547</X>
									<Y>19</Y>
									<Z>593.056335</Z>
									<R00>0</R00>
									<R01>0.923879504</R01>
									<R02>-0.382683456</R02>
									<R10>-1</R10>
									<R11>0</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0.382683456</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0035b17a</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">2</token>
								<Vector3 name="size">
									<X>36</X>
									<Y>3</Y>
									<Z>3</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX7D2F4140E7724ABA8E87E7A93AB41B5D">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-12.8920879</X>
									<Y>12</Y>
									<Z>599.443726</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0035d497</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>12</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="WedgePart" referent="RBX238E7EACD0D54F6BBC766FCCB209D635">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-21.3387489</X>
									<Y>3.50000143</Y>
									<Z>606.769287</Z>
									<R00>5.96046377e-08</R00>
									<R01>-0.382683337</R01>
									<R02>0.923879445</R02>
									<R10>0.999999821</R10>
									<R11>2.28097079e-08</R11>
									<R12>-5.50675097e-08</R12>
									<R20>0</R20>
									<R21>0.923879385</R21>
									<R22>0.382683426</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0035e72d</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>5</X>
									<Y>3</Y>
									<Z>7</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX324BD3D9C31A497CB87547BF021019FD">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-2.33311868</X>
									<Y>5.5</Y>
									<Z>609.22937</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00361558</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>10</X>
									<Y>1</Y>
									<Z>11</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX1BD45C31E3CE4102BF427824A9EF5D7D">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-7.86289692</X>
									<Y>10</Y>
									<Z>613.433411</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00361adf</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>3</X>
									<Y>18</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="WedgePart" referent="RBX43525B54F6074F298E15DC8E7904B910">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-7.8625412</X>
									<Y>19.5</Y>
									<Z>613.433533</Z>
									<R00>0.923879504</R00>
									<R01>-0.382683456</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0</R11>
									<R12>-1</R12>
									<R20>0.382683456</R20>
									<R21>0.923879504</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00361f58</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>3</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX06EA484693B544DCAFE8ACB3A82BCEAC">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-9.32777214</X>
									<Y>27.5</Y>
									<Z>611.743774</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0036351b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>17</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX0F89E6F7B3FD4604B9D8BD70680221DE">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-7.41443682</X>
									<Y>28</Y>
									<Z>607.124573</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0036439c</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>14</Y>
									<Z>9</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX81B0784914C44FE19DEA3253AAF886AF">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-7.41446257</X>
									<Y>20</Y>
									<Z>607.124634</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0036492f</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>2</Y>
									<Z>9</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXBB9B0502896C4C5584AFACDB532D3C93">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-7.41447401</X>
									<Y>35.5</Y>
									<Z>607.124695</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00364cf8</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>9</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="WedgePart" referent="RBX732DED7F722745DF98B053D5FEDEBA06">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-15.0764809</X>
									<Y>11</Y>
									<Z>603.409729</Z>
									<R00>-0.382683486</R00>
									<R01>0</R01>
									<R02>-0.923879504</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.923879504</R20>
									<R21>0</R21>
									<R22>-0.382683486</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00365682</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>10</Y>
									<Z>2</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXC4CD0D93B0F443F4AAB4A10734A49A1B">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-21.1058292</X>
									<Y>14.5</Y>
									<Z>600.912292</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4279970357</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00367158</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1.10000002</Y>
									<Z>4.0999999</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX507A109FDE66491C84E50322A4550DE7">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-38.1730843</X>
									<Y>12.5</Y>
									<Z>593.842773</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0036c41a</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>23</Y>
									<Z>6</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="TrussPart" referent="RBXBB1612969DE74F278FEFD94CA99380DF">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-35.4013596</X>
									<Y>20</Y>
									<Z>594.991089</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4290019583</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0036d970</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="size">
									<X>2</X>
									<Y>4</Y>
									<Z>2</Z>
								</Vector3>
								<token name="style">0</token>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX7C9E7734BEBE4E2AAFD246E5A07B14C8">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34.0619965</X>
									<Y>18.5</Y>
									<Z>591.757202</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0036e65b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>2</X>
									<Y>35</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXC00786B6595B474183557A488CF48573">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-27.1329136</X>
									<Y>19</Y>
									<Z>594.627319</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0036f222</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>13</X>
									<Y>32</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX15C742E158254B4E940044A9BC1DC0F6">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-17.8940945</X>
									<Y>18.5</Y>
									<Z>598.454163</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0036f41d</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>7</X>
									<Y>35</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX52DE125569E94DB8AEB5742204777336">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-27.1328545</X>
									<Y>2</Y>
									<Z>594.62738</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0036fe97</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>13</X>
									<Y>2</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX198D7A5F586948AC8F4BD4D1C05ACECB">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-27.1328545</X>
									<Y>35.5</Y>
									<Z>594.62738</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00370312</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>13</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXEA3F8CF368C5449485C19AD8E06F9417">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">4</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-35.4013596</X>
									<Y>20</Y>
									<Z>594.991089</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">false</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4290019583</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">832</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c00370da5</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1.5</X>
									<Y>3.5</Y>
									<Z>1.5</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXEA61AE45A1F94E07B6BABF9E233C2C0A">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34.3654861</X>
									<Y>20</Y>
									<Z>593.796387</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c005f40b9</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>6</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXB5491AE938454FC5929817FE1E119EAD">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-35.5135345</X>
									<Y>20</Y>
									<Z>596.568054</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c005f472f</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>6</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXD6BA079DFE2D44C6AA0DE1FF1196356C">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34.9395332</X>
									<Y>22.5</Y>
									<Z>595.182312</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c005f4854</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>2</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX6266DE9EE971423899B8732EEE354C15">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34.9395332</X>
									<Y>17.5</Y>
									<Z>595.182312</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c005f4b01</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>2</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX621B30562DE5421186C45D60DD9EC2D5">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-74.2043839</X>
									<Y>12.5</Y>
									<Z>578.918091</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002cb434</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>23</Y>
									<Z>6</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXB3CA90D36053433E8CE18EECA337D115">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-71.9082794</X>
									<Y>19</Y>
									<Z>573.374817</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002cb6bb</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>36</Y>
									<Z>6</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="WedgePart" referent="RBX1443735C70714299920FFA61CD78A71D">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-68.6744537</X>
									<Y>30.5</Y>
									<Z>574.714355</Z>
									<R00>-0.382683456</R00>
									<R01>0.923879504</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0</R11>
									<R12>1</R12>
									<R20>0.923879504</R20>
									<R21>0.382683456</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002cbd77</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>1</Y>
									<Z>13</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="WedgePart" referent="RBX69390216967A4B7DA97B45002D6838DF">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-75.1415939</X>
									<Y>30.5</Y>
									<Z>572.035522</Z>
									<R00>0.382683456</R00>
									<R01>-0.923879504</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0</R11>
									<R12>1</R12>
									<R20>-0.923879504</R20>
									<R21>-0.382683456</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002ccda6</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>1</Y>
									<Z>13</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX3D64ECBAB739443A942AD59BD7E4EFC6">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-69.6121826</X>
									<Y>12</Y>
									<Z>567.831543</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002cd196</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>22</Y>
									<Z>6</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX847CEFE8F04C411DA76CA6FE441B49C7">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-67.8900986</X>
									<Y>22.5</Y>
									<Z>563.674072</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002cda7f</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXF068A93CD47D4A058882A2934011DF98">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-67.124733</X>
									<Y>22.5</Y>
									<Z>561.826294</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002cdd7d</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>4</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXFC5EF6F249744230BF3EC53FBC1F2F62">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-66.3593674</X>
									<Y>22.5</Y>
									<Z>559.978516</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002cdf97</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>2</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX81537D0C58944D30AF05A3DA6E7D9879">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-67.50737</X>
									<Y>22.5</Y>
									<Z>562.750061</Z>
									<R00>0.923879504</R00>
									<R01>0</R01>
									<R02>-0.382683456</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.382683456</R20>
									<R21>0</R21>
									<R22>0.923879504</R22>
								</CoordinateFrame>
								<bool name="CanCollide">false</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002ce14e</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>2</X>
									<Y>0.5</Y>
									<Z>5</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX85620DE9243E4ADCBA6F88EF0D13F96B">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-61</X>
									<Y>26</Y>
									<Z>553</Z>
									<R00>0</R00>
									<R01>1</R01>
									<R02>-0</R02>
									<R10>-1</R10>
									<R11>0</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002d0587</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">2</token>
								<Vector3 name="size">
									<X>50</X>
									<Y>4</Y>
									<Z>4</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="WedgePart" referent="RBX2ACD2DEBD0984AD88704BF161EECA260">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-63.1213417</X>
									<Y>32</Y>
									<Z>550.878662</Z>
									<R00>0.707106769</R00>
									<R01>0</R01>
									<R02>0.707106769</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>-0.707106769</R20>
									<R21>0</R21>
									<R22>0.707106769</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002d0f39</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>6</Y>
									<Z>2</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="WedgePart" referent="RBXD8465567BF564B319AC826060FACE152">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-58.8787193</X>
									<Y>32</Y>
									<Z>555.121277</Z>
									<R00>-0.707106709</R00>
									<R01>0</R01>
									<R02>-0.707106709</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0.707106709</R20>
									<R21>0</R21>
									<R22>-0.707106709</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002d21d0</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>6</Y>
									<Z>2</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX04101A09070D4A72A0CEDBD1C4D6E3D7">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-54.5</X>
									<Y>41.5</Y>
									<Z>537.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002d2a45</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>9</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX9229E25EFE264D14AFAD247ECB2B46D6">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-54.5</X>
									<Y>41.5</Y>
									<Z>542.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f002d35ef</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">0</token>
								<Vector3 name="size">
									<X>2</X>
									<Y>2</Y>
									<Z>2</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXA5B5B75472BB4DE0B6693C792418F744">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-44.5</X>
									<Y>41.5</Y>
									<Z>537.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f003d8e90</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>9</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX7501D23BE4224451AD5556DB1E8FB62F">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-54.5</X>
									<Y>34.5</Y>
									<Z>542.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f003d837c</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>15</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXF273B0E0CA9944C9A11918676AE383C6">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-44.5</X>
									<Y>34.5</Y>
									<Z>542.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">false</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">7eaa72948cc0386b02ccef3f003d8ad3</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>15</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
					</Item>
					<Item class="Model" referent="RBX1C21FFC3D37649F898F57C794989E43B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<token name="LevelOfDetail">0</token>
							<CoordinateFrame name="ModelMeshCFrame">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
							<Vector3 name="ModelMeshSize">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="ModelStreamingMode">0</token>
							<string name="Name">Frame</string>
							<bool name="NeedsPivotMigration">false</bool>
							<Ref name="PrimaryPart">RBXAC2F8D93006140AC8F32EB2A2F382714</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb53</UniqueId>
							<OptionalCoordinateFrame name="WorldPivotData">
								<CFrame>
									<X>-84.5</X>
									<Y>851.000244</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CFrame>
							</OptionalCoordinateFrame>
						</Properties>
						<Item class="Part" referent="RBXAC2F8D93006140AC8F32EB2A2F382714">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-84.5</X>
									<Y>851.000244</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293150559</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor9</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb54</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX0C98BF98ECA04356B29BCBDFF8FC3D57">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>851.000244</Y>
									<Z>632.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293150559</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor9</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb55</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXC7B8524B6E6E4C03A6535159054FD958">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>16.5</X>
									<Y>851.000244</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293150559</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor9</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb56</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXDC01FA900DDA471788E29FB36EAE1AAE">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>151</Y>
									<Z>531.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4289487593</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor2</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb57</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXA270798972484A329205A43078608053">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>16.5</X>
									<Y>751.000244</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293411185</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor8</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb58</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXFCBD47FF5B874F0589C52C49074CE5CF">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>751.000244</Y>
									<Z>531.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293411185</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor8</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb59</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXC3D04930BC0849A68784BB0C1CBAC517">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-84.5</X>
									<Y>751.000244</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293411185</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor8</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb5a</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX5CD7F7BCDCAE4A3E984054F55D3876C0">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>751.000244</Y>
									<Z>632.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293411185</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor8</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb5b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX80640CA534434070AA437228DDD331FF">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>651.000244</Y>
									<Z>632.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293410436</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor7</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb5c</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX1F2CCBE85877440FACB19334EF117353">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>16.5</X>
									<Y>651.000244</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293410436</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor7</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb5d</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXAD08AC1CD7F74643833443ED5C488A09">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-84.5</X>
									<Y>651.000244</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293410436</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor7</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb5e</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXC343E07A39EF4CBF9FDF01DF828C8E5C">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>651.000244</Y>
									<Z>531.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293410436</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor7</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb5f</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX333D9589E1E644E091A9BAF1328CE7A4">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>16.5</X>
									<Y>551</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293214104</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor6</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb60</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX3397B0E6524E4FBB89DD9B9474DB21F7">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>16.5</X>
									<Y>51</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor1</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb61</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX69728A48E3A7402E867A17F629E6FB9B">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>51</Y>
									<Z>531.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor1</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb62</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX5C6F0E5AC393422CBD55D38FFF639951">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-84.5</X>
									<Y>51</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor1</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb63</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX0BC7FECCE78B4EEC9F4DDDC2BB0B07AC">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>551</Y>
									<Z>531.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293214104</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor6</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb64</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX8A61195C8882461A907482240E5881DC">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-84.5</X>
									<Y>551</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293214104</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor6</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb65</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX7AE62C3874B34F7C99B2C29250A609EB">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-84.5</X>
									<Y>951</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4292759375</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor10</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb66</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX2DEEC85D34CD4FD6B8805BD4D48E4133">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>16.5</X>
									<Y>151</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4289487593</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor2</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb67</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX101F8C6CE0884F9397260E1075F7223E">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>51</Y>
									<Z>632.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor1</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb68</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX8318442E1D4945A281FD0D6EDC30D214">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>151</Y>
									<Z>632.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4289487593</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor2</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb69</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXA672FCC5625E4DD3A0D5FFED9A899457">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>451</Y>
									<Z>632.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4292822188</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor5</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb6a</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX50EF2A4D588A401F81BB6CDECFE560B8">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>16.5</X>
									<Y>451</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4292822188</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor5</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb6b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX6F4F840F0BCC40FFB9836D480CCA3950">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-84.5</X>
									<Y>451</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4292822188</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor5</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb6c</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXA728CE016B684171BBB15639EA324687">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>451</Y>
									<Z>531.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4292822188</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor5</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb6d</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX1FE4330902D74680BF15EB7553D1AD31">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>351</Y>
									<Z>632.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4292038081</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor4</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb6e</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX4FE6A3DC9FBB428E9565EBC73DAED799">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-84.5</X>
									<Y>351</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4292038081</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor4</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb6f</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXB6F2C4C228CA4392A95C0F188A02408B">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>351</Y>
									<Z>531.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4292038081</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor4</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb70</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX522C1064B9434635951745AF934F880A">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>16.5</X>
									<Y>351</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4292038081</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor4</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb71</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX4AB2C51660E94045A3F99FBD2A18DDF6">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>16.5</X>
									<Y>251</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4290992085</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor3</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb72</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX2A973716A399460EBE9F86635E36D394">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>251</Y>
									<Z>632.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4290992085</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor3</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb73</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX4648027878AA4FA7A7D141DD89EF04EC">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>251</Y>
									<Z>531.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4290992085</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor3</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb74</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXD260FA62D1144F238D1AC7258BC5D5B5">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-84.5</X>
									<Y>251</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4290992085</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor3</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb75</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX038D03E92FED4271BBC437AA6B0FB014">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-84.5</X>
									<Y>151</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4289487593</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor2</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb76</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXD2DC0B9FF27C45C995C3057C006A66E8">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>851.000244</Y>
									<Z>531.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293150559</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor9</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb77</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX2CD0A9D94F19479D99FBE33D6C2B61B7">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>0.499975681</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4287393530</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor1</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb78</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>100</X>
									<Y>1</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXB07CCFB6F20C4B9693605F98C18BBD5B">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>951</Y>
									<Z>531.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4292759375</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor10</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb79</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXACD6A211E9024F42887D0EC5C627DA1E">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>16.5</X>
									<Y>951</Y>
									<Z>582</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4292759375</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor10</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb7a</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXCC7DA016CC0C46E0B5DCBF2A0F983622">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>951</Y>
									<Z>632.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4292759375</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor10</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb7b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX340F3205FADC48879465ECA1255FA065">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-34</X>
									<Y>551</Y>
									<Z>632.5</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>-0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4293214104</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Floor6</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.5</float>
								<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcb7c</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>100</Y>
									<Z>100</Z>
								</Vector3>
							</Properties>
						</Item>
					</Item>
					<Item class="Part" referent="RBX4263E32E415C40A396AA8E2B40CDBABF">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize">AgAAAA0AAABGbGFzaEludGVydmFsBpqZmZmZmbk/DgAAAEZsYXNoTWF0ZXJpYWxzAwE=</BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-34</X>
								<Y>1000.5</Y>
								<Z>629</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294901760</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">288</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">WinPad</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0.5</float>
							<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0002dcaf6</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>6</X>
								<Y>1</Y>
								<Z>6</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="ReplicatedStorage" referent="RBX812ED06759EF4E558D05FDC562F7588F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182db</UniqueId>
		</Properties>
		<Item class="Folder" referent="RBXAFED92A2CB2749A4836E51362DB9832F">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Modules</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000188c4</UniqueId>
			</Properties>
			<Item class="Folder" referent="RBX5157525546F54D5B8450FB835372A499">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Utils</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000188c5</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBXA0FA8729204741BF855642DA7F39AADB">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Object</string>
						<string name="ScriptGuid">{B0EFF04E-C27A-41D0-865F-7188B57D5985}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Object/instance handler using metatables.
By: udev2192
]]--

export type ObjectPool = {
	Name: string,
	TypeName: string,
	
	SetProperty: (Name: string, Value: any, Updater: (NewValue: any) -> ()?) -> (),
	SetInstanceDestroy: (Enabled: boolean) -> (),
	AddDisposalListener: (Listener: () -> ()) -> (),
	RemoveDisposalListener: (Listener: () -> ()) -> (),
	ClearDisposalListeners: () -> (),
	Dispose: () -> (),
	
	OnUpdate: () -> ()?,
	OnDisposal: () -> ()?,
	
	[string]: any
};

local Object = {};
local Inherited = {};
local InheritedUpdaters = {};

Object.__index = Object;

--[[
Returns true if the specified class matches the object provided,
if it is an object.

Params:
TypeName <string> - The type's name.
Variant <variant> - Any value.

Returns:
<boolean> - Whether or not the type matches.
]]--
function Object.MatchesType(TypeName: string, Variant: any)
	return typeof(Variant) == "table" and TypeName == Variant.TypeName;
end

--[[
	Fires the specified callback with the provided arguments.
	
	Params:
	func <function> - The function to call.
	... <tuple> - The arguments to pass to the function.
]]--
function Object.FireCallback(func: (...any) -> (), ...: any)
	if typeof(func) == "function" then
		coroutine.wrap(func)(...);
	end
end

-- Constructor function for the object (anything outside one of these is static).
function Object.New(Type: string?): ObjectPool
	local Obj = {};
	local Updaters = {};
	local DisposalListeners = {};
	local InstanceDestroyEnabled = false;
	
	if typeof(Type) ~= "string" then
		Type = "";
	end
	
	Obj.Name = Type;
	Obj.TypeName = Type;
	
	-- This part loads inherited properties and their updaters.
	for i, v in pairs(Inherited) do
		Obj[i] = v;
		
		local f = InheritedUpdaters[i]
		if typeof(f) == "function" then
			Updaters[i] = f;
		end
	end
	
	-- The metatable takes care of the indexing.
	local Meta = setmetatable({}, {
		__index = function(t, k)
			if Obj ~= nil then
				return Obj[k];
			end
		end,
		
		__newindex = function(t, k, v)
			if Obj ~= nil then
				Obj[k] = v;

				if k ~= "OnUpdate" then -- To prevent accidental recursion
					-- Fire the event
					local UpdatedCallback = t.OnUpdate;
					if typeof(UpdatedCallback) == "function" then
						coroutine.wrap(UpdatedCallback)(k, v);
					end

					-- Run updater
					if Updaters ~= nil then
						local Updater = Updaters[k];
						if typeof(Updater) == "function" then
							Updater(v);
						end
					end
				end
			end
		end,
	})
	
	-- Asserts if the object has been Dispose()'d.
	local function AssertDisposed()
		assert(DisposalListeners ~= nil, "Object has already been disposed.");
	end
	
	--[[
	Callback that is fired when the object gets updated.
	This can happen through a property being initalized or set.
	]]--
	Obj.OnUpdate = nil;
	
	--[[
	Callback that is fired once the object is "disposed".
	This callback is called before the ones in the listener
	table so use this if you need to set a priority
	disposal callback.
	]]--
	Obj.OnDisposal = nil;
	
	--[[
	Sets a property and specifies what changing it does.
	Should be used for intializing a property.
	
	Params:
	Name <string> - The name of the property to update.
	Value <variant> - The new value of the property.
	Updater <function> - The callback to set (use nil for no callback).
	]]--
	function Obj.SetProperty(Name: string, Value: any, Updater: (...any) -> ()?)
		Obj[Name] = Value;
		
		local IsFunc = typeof(Updater) == "function";
		if Updater == nil or IsFunc then
			Updaters[Name] = Updater;
			
			-- Run the updater for initialization.
			if IsFunc then
				Updater(Value);
			end
		end
	end
	
	--[[
	Sets if this object destroys any object/instance
	that has the :Destroy() function.
	Disabled by default.
	
	Params:
	Enabled <boolean> - Whether or not to do the above.
	]]--
	function Obj.SetInstanceDestroy(Enabled: boolean)
		assert(typeof(Enabled) == "boolean", "Argument 1 must be a boolean.");
		
		InstanceDestroyEnabled = Enabled;
	end
	
	--[[
	Adds a listener function that is called when Dispose() is called.
	
	Params:
	Listener <function> - The function to add.
	]]--
	function Obj.AddDisposalListener(Listener: (...any) -> ())
		AssertDisposed();
		assert(typeof(Listener) == "function", "Argument 1 must be a function.");
		
		DisposalListeners[Listener] = Listener;
	end
	
	--[[
	Removes a listener that is called when Dispose() is called.
	
	Params:
	Listener <function> - The function to remove.
	]]--
	function Obj.RemoveDisposalListener(Listener: (...any) -> ())
		AssertDisposed();
		DisposalListeners[Listener] = nil;
	end
	
	--[[
	Removes all listeners from being called when Dispose() is called.
	]]--
	function Obj.ClearDisposalListeners()
		if DisposalListeners ~= nil then
			DisposalListeners = {};
		end
	end
	
	--[[
	Prepares the object for garbage collection.
	]]--
	function Obj.Dispose()
		Updaters = nil;
		
		-- Run the disposal callback
		local DisposeFunc = Obj.OnDisposal;
		if typeof(DisposeFunc) == "function" then
			-- Run as a non-coroutine, in case any values are still needed
			DisposeFunc();
		end
		
		-- Run the other disposal listeners.
		if DisposalListeners ~= nil then
			for i, v in pairs(DisposalListeners) do
				if typeof(v) == "function" then
					v();
				end
			end
		end
		
		-- Disconnect any Instance execution stuff.
		for i, v in pairs(Obj) do
			pcall(function() 
				local idxType = typeof(v);
				if idxType == "RBXScriptConnection" then
					v:Disconnect();
				elseif idxType == "Instance" and InstanceDestroyEnabled == true then
					v:Destroy();
				end
			end);
		end
		
		-- Destroy the metatable
		setmetatable(Obj, nil);
		Meta = nil;
		DisposalListeners = nil;
		InstanceDestroyEnabled = nil;
		
		-- The Obj table is garbage collected once the field holding
		-- an instance of this object is set to nil or another value
	end
	
	return Meta;
end

return Object;]]></ProtectedString>
						<int64 name="SourceAssetId">6782907931</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f60</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX59D95FF32E9A404492A19EF27235ED5A">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Runtime</string>
						<string name="ScriptGuid">{FA698EC8-FEEF-4434-95CC-2E33AC2C2546}</string>
						<ProtectedString name="Source"><![CDATA[-- Utility module that basically wraps RunService.
-- By udev2192

local RunService = game:GetService("RunService")

local Runtime = {}

-- Waits for a specified amount of time in seconds.
-- Returns the time difference between the desired wait
-- and the actual wait.
function Runtime.WaitForDur(Duration: number)
	assert(typeof(Duration) == "number", "Argument 1 must be a number.")
	
	local Elapsed = 0
	while (Elapsed < Duration) do
		Elapsed += RunService.Heartbeat:Wait()
	end
	
	return Elapsed - Duration
end

-- Returns the frames per second
function Runtime.GetFramerate()
	return 1 / RunService.Heartbeat:Wait()
end

return Runtime]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f61</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX62913080DB1F47538A05D14082E4D115">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Utility</string>
						<string name="ScriptGuid">{EA26DB89-1FD6-453D-967E-D861C9A304CB}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Utility.lua by udev2192

Contains some utility functions that are intended for widespread use

3/3/2021 - As of today, the set of utilities have been updated to support the new attributes system, superseding ValueBases.

Last Updated: 4 Mar 2021
]]--

-- Services:
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Module:
local Util = {} -- Store utilities in a table (there will be multiple uses for this)
local ActiveTweens = {} -- Tweens that are currently playing

-- To ensure that values in the module table are static
Util.__index = Util

Util.DefaultTweenName = "Tween"

-- Initialize a global attribute sets table (for attribute sets)
if typeof(_G.AttributeSets) ~= "table" then
	_G.AttributeSets = {}
end

-- Initialize a global property defaults table
if typeof(_G.PropertyDefaults) ~= "table" then
	_G.PropertyDefaults = {}
end

-- Getting "no value" which is different from "nil" (also known as "void")
function Util.GetVoid()
	local BlankTable = {}
	return BlankTable[0]
end

-- Linear interpolation
function Util.Lerp(a, b, t)
	return a + (b - a) * t
end

-- RunService based wait
function Util.WaitFor(Duration) -- Accurate wait function, returns the difference between actual wait and desired wait
	if typeof(Duration) == "number" then
		local ActualWait = 0

		-- Wait until time's up
		while ActualWait < Duration do
			ActualWait = ActualWait + RunService.Heartbeat:Wait()
		end

		-- Return the difference between the actual wait and the desired wait
		return ActualWait - Duration
	end
end

-- String formatting
function Util.FormatAssetId(AssetId) -- Returns a correctly formatted asset ID relative to the one specified
	-- Format and return the correct asset id according to the type of the asset ID
	if typeof(AssetId) == "string" then
		return AssetId
	elseif typeof(AssetId) == "number" then
		return "rbxassetid://" .. AssetId
	else
		-- Since the asset id couldn't be formatted, return a blank string
		return ""
	end
end

function Util.SeparateCharacters(String) -- Separates each character in the string with a space and returns the newly formatted string
	if typeof(String) == "string" then
		local StringLength = string.len(String)
		local CombinedString = "" -- Holds the formatted string

		-- Split each character
		for i, v in ipairs(string.split(String,"")) do
			if i < StringLength then -- So a space isn't added at the very end of the string
				CombinedString = CombinedString .. v .. " " -- Add the space
			else
				CombinedString = CombinedString .. v
			end
		end

		-- Garbage collection
		String, StringLength = nil, nil

		-- Return the newly formatted string
		return CombinedString
	else
		error("Cannot separate the characters of a non-string value.")
		return nil
	end
end

-- Conditionals
function Util.IsConnection(Object) -- Returns if the specified object is a event connection
	return typeof(Object) == "RBXScriptConnection"
end

function Util.IsInstance(Object) -- Returns if the specified object is an instance
	return typeof(Object) == "Instance"
end

function Util.IsBasePart(Object)
	return Util.IsInstance(Object) and Object:IsA("BasePart")
end

function Util.IsGUI(Object) -- Returns if the specified object is an GUI object
	return Util.IsInstance(Object) and Object:IsA("GuiObject")
end

function Util.IsTween(Object) -- Returns if the specified object is a TweenBase
	return Util.IsInstance(Object) and Object:IsA("TweenBase")
end

function Util.IsTweenPlaying(Tween) -- Returns if the specified tween is playing
	return Util.IsTween(Tween) and Tween.PlaybackState == Enum.PlaybackState.Playing
end

function Util.IsProperty(Object, PropertyName) -- Returns if the property exists for the specified Instance
	if typeof(Object) == "Instance" then
		-- Use pcall as a hacky solution
		local Success, Property = pcall(function()
			return Object[PropertyName] -- Index the property (for the most part, should not return an instance)
		end)

		-- The success of the protected call indicates that it's a valid property
		return Success
	end
end

-- Table manipulation
function Util.ShiftArray(Array, Integer) -- Returns the array specified with all its elements shifted by the integer
	if typeof(Array) == "table" then
		local NumType = typeof(Integer)

		if NumType == "number" then
			if Integer ~= 0 then
				if Integer % 1 == 0 then -- Detect if it's an integer

					local ShiftedTable = {} -- The resulting table
					-- Loop through the array to shift its contents
					for i, v in ipairs(Array) do
						-- Move to the shifted position (for a different table so no problems occur with overwrite)
						ShiftedTable[i + Integer] = v
					end

					return ShiftedTable -- Return the array with the shifted elements
				else
					error("Integer specified must be an integer")
				end
			else
				error("Shift increment cannot be 0")
			end
		else
			error("Number to shift by expected a number but got " .. NumType)
		end

		NumType = nil
	else
		error("The Array argument must be an array for it to work.")
	end
end

-- Attribute manipulation
function Util.WriteAttributeSet(SetName, Attributes) -- Registers an attribute set
	if typeof(SetName) == "string" and typeof(Attributes) == "table" then
		_G.AttributeSets[SetName] = Attributes
	else
		error("Cannot create attribute set due to invalid arguments. SetName must be a string and Attributes must be a key-value table.")
	end
end

function Util.DeleteAttributeSet(SetName)
	if typeof(SetName) == "string" then
		_G.AttributeSets[SetName] = nil -- Unregister the attribute set
	else
		error("Attribute set name to delete must be a string.")
	end
end

function Util.GetAttributeSet(SetName) -- If it has been registered, gets the attribute set from _G.AttributeSets as a table
	if typeof(SetName) == "string" then
		local Set = _G.AttributeSets[SetName]
		if typeof(Set) == "table" then
			return Set -- Return if found
		else
			error(SetName .. " isn't a registered attribute set. Use Util.WriteAttributeSet to do so.")
			return nil
		end
	else
		error("Cannot get attribute set because SetName provided isn't a string.")
		return nil
	end
end

function Util.ApplyAttribute(Object, Name, Value) -- Serves as a wrapper for adding a new attribute
	if typeof(Object) == "Instance" then
		local Success, Result = pcall(function() -- Just in case
			Object:SetAttribute(Name, Value)
		end)
		if Success ~= true then
			error("Failed to set attribute because of error: " .. tostring(Result))
		end
	else
		error("Cannot apply an attribute to a non-Instance.")
	end
end

function Util.ApplyAttributesFromTable(Object, Table) -- Applies the attributes from the specified table
	if typeof(Object) == "Instance" then
		if typeof(Table) == "table" then
			for i, v in pairs(Table) do
				Util.ApplyAttribute(Object, i, v) -- Apply the attribute
			end
		else
			error("Attributes table must be a table.")
		end
	else
		error("Cannot apply attributes to a non-Instance.")
	end
end

function Util.ApplyAttributeSet(Object, Name) -- Applies the attributes from a set registered by this module
	if typeof(Object) == "Instance" then
		if typeof(Name) == "string" then
			-- Find the attribute set from the global table
			local Set = _G.AttributeSets[Name]

			if typeof(Set) == "table" then
				-- Apply attributes if existant
				Util.ApplyAttributesFromTable(Object, Set)
			else
				error(Name .. " isn't a registered attribute set. Use Util.WriteAttributeSet to do so.")
			end

			Set = nil
		else
			error("Attribute set name must be a string.")
		end
	else
		error("Cannot apply attributes to a non-Instance.")
	end
end

function Util.ExtractValueBases(Object) -- Returns a table of key/name-value pairs of an object's value-base children
	if typeof(Object) == "Instance" then
		local Table = {}
		for i, v in pairs(Object:GetChildren()) do
			if typeof(v) == "Instance" and v:IsA("ValueBase") then
				Table[v.Name] = v.Value
			end
		end
		return Table
	else
		return nil
	end
end

-- Instance manipulation
function Util.ApplyProperties(Object, PropertiesTable) -- Applies properties to an object without it erroring (even if the property is invalid)
	if typeof(Object) == "Instance" then
		local PropertyType = typeof(PropertiesTable)

		if PropertyType == "table" then
			-- Set the properties according to the table
			for i, v in pairs(PropertiesTable) do
				if Util.IsProperty(Object, i) == true then
					Object[i] = v
				else
					error(tostring(i) .. " is an invalid property of " .. tostring(Object.ClassName))
				end
			end
		else
			error("ApplyProperties() expected a table but got " .. PropertyType)
			PropertyType = nil
		end
	end
end

function Util.SetPropertyDefaults(InstanceName, Properties) -- Sets the property defaults of the instance name provided to the properties table provided.
	-- These defaults will be applied in Util.CreateInstance()
	-- Specify the second argument with nil (or leave it blank) to remove the property defaults
	
	if typeof(InstanceName) == "string" then
		-- Correct the properties table format
		if Properties ~= nil and typeof(Properties) ~= "table" then
			Properties = {}
		end
		
		-- Register (or delete) the property defaults
		_G.PropertyDefaults[InstanceName] = Properties
	end
end

function Util.ApplyDefaultProperties(Object) -- Applies the property defaults specified with Util.SetPropertyDefaults to the provided instance
	if Util.IsInstance(Object) == true then
		-- Reference the defaults for the instance class type
		local Defaults = _G.PropertyDefaults[Object.ClassName]
		
		-- Apply the defaults
		Util.ApplyProperties(Object, Defaults)
		
		-- Garbage collect
		Defaults = nil
	end
end

function Util.CreateInstance(Type: string, PropertiesTable: {string: any}?) -- Creates an instance the Roact way (warns if the instance doesn't exist). Returns the instance created. Thanks to ChipioIndustries for making Roact
	if typeof(Type) == "string" then
		-- Make the object with the properties
		local Success, Result = pcall(function()
			local Object = Instance.new(Type)
			
			-- Format the properties table correctly
			if typeof(PropertiesTable) ~= "table" then
				PropertiesTable = {}
			end
			
			-- Apply missing properties with the defaults provided with Util.SetPropertyDefaults()
			local Defaults = _G.PropertyDefaults[Type]
			if typeof(Defaults) == "table" then
				for i, v in pairs(Defaults) do
					if PropertiesTable[i] == nil then -- Check if the property hasn't been specified before applying
						PropertiesTable[i] = v -- Apply the default property setting
					end
				end
			end
			Defaults = nil
			
			-- Apply the properties
			Util.ApplyProperties(Object, PropertiesTable)
			
			return Object
		end)

		-- Return the newly created object if the creation was successful
		if Success == true then
			Success = nil
			return Result
		else
			error("Couldn't create instance because of error: " .. tostring(Result))
			Success, Result = nil, nil
			return nil
		end
	end
end

-- Tweening
function Util.PlayTween(Tween, Duration) -- Plays the specified tween, then destroys it
	if Util.IsTween(Tween) then		
		-- Play the tween
		Tween:Play()
		if typeof(Duration) == "number" and Duration > 0 then
			Util.WaitFor(Duration) -- In case of tween collision issues
		else
			Tween.Completed:Wait()
		end
		
		-- Destroy the tween
		Tween:Destroy()
		Tween, Duration = nil, nil
	end
end

--[[
Pauses and destroys any of an object's tweens that has a matching name

Name <string?> - The name of tweens to cancel (leave blank for all tweens)
]]--
function Util.DestroyTweens(Object: Instance, Name: string?)
	assert(typeof(Object) == "Instance", "Argument 1 must be an instance")
	assert(Name == nil or typeof(Name) == "string", "Argument 2 must be a string or nil")
	
	for i, v in pairs(Object) do
		if Name == nil or v.Name == Name then
			v:Pause()
			v:Destroy()
		end
	end
end

-- Plays a tween for the object provided and ensures there are no tween collisions. Returns the tween created.
-- Credit to ForbiddenJ for figuring out that tweens can be named and accessed via GetChildren()
function Util.Tween(Object: Instance, TweenStyle: TweenInfo, Properties: {string: any}, Name: string?)
	-- Set to the default tween style if one isn't provided
	if typeof(TweenStyle) ~= "TweenInfo" then
		TweenStyle = TweenInfo.new()
	end
	
	if Util.IsInstance(Object) and typeof(Properties) == "table" then
		-- Pause the colliding tween if it exists
		--Util.DestroyTweens(Object, Name)
		if Util.IsTween(ActiveTweens[Object]) == true then
			ActiveTweens[Object]:Pause()
			ActiveTweens[Object]:Destroy()
		end
		
		-- Construct the tween
		local Tween = TweenService:Create(Object, TweenStyle, Properties)
		Tween.Name = Name or Util.DefaultTweenName
		
		-- Play the tween if the tweening time is greater than 0, otherwise, insta-change the properties
		if TweenStyle.Time > 0 then
			-- Collision-proof the tween			
			ActiveTweens[Object] = Tween
			
			-- Play the tween
			task.spawn(function() -- Don't yield the thread while the tween plays
				Util.PlayTween(Tween, TweenStyle.Time) -- Will yield until it's finished
				ActiveTweens[Object] = nil -- Garbage collect
			end)
		else
			task.spawn(Util.ApplyProperties, Properties) -- Insta-change
		end
		
		-- Make the tween accessible elsewhere
		return Tween
	else
		error("Cannot tween because of missing arguments (Object or Properties).")
	end
end

-- Geometry
-- Converts the angle so that if it exceeds 180 degrees, the remainder will still be accounted for
function Util.ConvertAngle(Angle)
	if Angle < 180 then
		return Angle
	elseif Angle < 360 then
		return -(Angle - 180)
	else
		local Remainder = Angle%180
		return Util.ConvertAngle(Remainder) -- We go through the function again in case the remainder is 180 or greater
	end
end

-- Returns the angle of CFrame2 relative to where CFrame1 is facing. Credits to sircfenner for the solution, devforum post: https://devforum.roblox.com/t/how-to-check-if-an-object-is-within-an-angle-of-the-front-of-a-player-s-characters/214046/3
-- probably doesn't work
function Util.GetRelativeAngle(CFrame1, CFrame2)
	if typeof(CFrame1) == "CFrame" and typeof(CFrame2) == "CFrame" then
		local Face = CFrame2.LookVector -- The face to project the angle from
		local Difference = CFrame1.Position - CFrame2.Position
		local Vector = Difference.Unit -- The unit vector is important here, this determines the angle projected because it serves as a second point of reference
		local RelativeAngle = math.deg(math.acos(Face:Dot(Vector)))
		Face, Vector = nil, nil -- Garbage collect
		return RelativeAngle / Difference.Magnitude ^ 0.5
	else
		return nil
	end
end

-- Converts the WorldOri vector into the object space relative to the axis vector
-- probably doesn't work
function Util.GetObjectSpaceRotation(Axis, WorldOri)
	if typeof(Axis) == "Vector3" and typeof(WorldOri) == "Vector3" then
		-- Do translation
		local X = WorldOri.X - Axis.X
		local Y = WorldOri.Y - Axis.Y
		local Z = WorldOri.Z - Axis.Z

		-- Convert the components into a proper angle
		X = Util.ConvertAngle(X)
		Y = Util.ConvertAngle(Y)
		Z = Util.ConvertAngle(Z)

		return Vector3.new(X, Y, Z) -- Return the Vector in object space
	else
		error("Both arguments must be Vector3s.")
		return nil
	end
end

-- probably doesn't work
function Util.GetWorldSpaceRotation(Axis, Orientation) -- Returns the orientation of the 2nd argument relative to the axis vector in world space
	if typeof(Axis) == "Vector3" and typeof(Orientation) == "Vector3" then
		print(Axis)
		print(Orientation)

		-- Do translation
		local X = Axis.X + Orientation.X
		local Y = Axis.Y + Orientation.Y
		local Z = Axis.Z + Orientation.Z

		-- Convert the components into a proper angle
		X = Util.ConvertAngle(X)
		Y = Util.ConvertAngle(Y)
		Z = Util.ConvertAngle(Z)

		return Vector3.new(X,Y,Z) -- Return the Vector in world space
	else
		error("Both arguments must be Vector3s.")
		return nil
	end
end

function Util.IsInBasePart(BasePart1, BasePart2, IncludeBasePart1Size) -- Determines if BasePart1 is inside BasePart2
	-- BasePart1 should be the BasePart where it is seeing if it's inside or not (such as the head)
	-- If IncludeBasePart1Size is true, the entire volume of the BasePart is counted, instead of determining it from the center
	if (Util.IsBasePart(BasePart1) or typeof(BasePart1) == "Instance" and BasePart1:IsA("Camera"))and Util.IsBasePart(BasePart2) then
		local LocalPoint = BasePart2.CFrame:PointToObjectSpace(BasePart1.CFrame.Position)
		if IncludeBasePart1Size == true then
			LocalPoint = LocalPoint - BasePart1.Size
		end
		if math.abs(LocalPoint.X) < BasePart2.Size.X/2 and math.abs(LocalPoint.Y) < BasePart2.Size.Y/2 and math.abs(LocalPoint.Z) < BasePart2.Size.Z/2 then
			return true
		else
			return false
		end
	end
	return nil
end

-- Client only:
if RunService:IsClient() then
	local GuiService = game:GetService("GuiService")
	local UserInputService = game:GetService("UserInputService")

	function Util.GetPlatform() -- Returns the type of device the player is on
		if GuiService:IsTenFootInterface() then
			return "Console"
		elseif UserInputService.TouchEnabled then
			return "Mobile"
		elseif UserInputService.VREnabled then
			return "VR"
		elseif UserInputService.KeyboardEnabled then
			return "PC"
		else
			-- Probably will never get to here but we'll leave this just in case
			warn("Unknown platform, certain things may break")
			return "Unknown"
		end
	end
end

return Util]]></ProtectedString>
						<int64 name="SourceAssetId">6498124483</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f62</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX28AC54FB890A43FDA4F229511CB123B6">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Signal</string>
						<string name="ScriptGuid">{A7DFBE63-E373-4D6F-BD89-E120545ACA70}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Bindable event alternative cause boblox.

By udev2192
]]--

local Utils = script.Parent
local Object = require(Utils:WaitForChild("Object"))

local SignalClass = {}

export type SignalConnection = {
	Callback: (...any) -> (),
	Disconnect: () -> ()
}

export type Signal = {
	Sync: boolean,
	Disconnect: (f: (...any) -> ()) -> (),
	Connect: (f: (...any) -> ()) -> SignalConnection,
	DisconnectAll: () -> (),
	Fire: (...any) -> ()
}

SignalClass.__index = SignalClass

-- Constructor
function SignalClass.New(): Signal
	local Obj = {}
	
	-- The list of listener functions.
	local Listeners = {}
	
	--[[
	<boolean> - Whether or not listeners are called from the
				same thread.
	]]--
	Obj.Sync = false
	
	--[[
	Disconnects a function from the signal.
	
	Params:
	f <function> - The function to disconnect.
	]]--
	function Obj.Disconnect(f)
		local Index = table.find(Listeners, f)

		if Index ~= nil then
			table.remove(Listeners, Index)
		end
	end
	
	--[[
	Connects a function to the signal.
	
	Params:
	f <function> - The function to connect.
	
	Returns:
	<SignalConnection> - A table with a function for disconnecting the listener.
	]]--
	function Obj.Connect(f)
		assert(typeof(f) == "function", "Argument 1 must be a function.")
		
		local t = {
			Callback = f,
			Disconnect = function()
				Obj.Disconnect(f)
			end
		}
		
		table.insert(Listeners, t)
		return t
	end
	
	--[[
	Disconnects all the listeners currently connected.
	]]--
	function Obj.DisconnectAll()
		Listeners = {}
	end
	
	--[[
	Calls all the listeners currently connected.
	If Obj.Sync is false, they will all
	be called in separate threads.
	
	Params:
	Args <tuple> - the arguments to pass to the listeners.
	]]--
	function Obj.Fire(...)
		if Listeners ~= nil then
			local Sync = Obj.Sync
			
			for i, v in pairs(Listeners) do
				if Sync == true then
					v.Callback(...)
				else
					task.spawn(v.Callback, ...)
				end
			end
		end
	end
	
	return Obj
end

return SignalClass]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f63</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX7C7DCC6546934348A24169DE452690DA">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Animator</string>
						<string name="ScriptGuid">{5819DC5F-E354-4100-9D24-D04C22D9B375}</string>
						<ProtectedString name="Source"><![CDATA[-- A module for tweening instance properties
-- By udev2192

local TweenService = game:GetService("TweenService")

local Utils = script.Parent
local Object = require(Utils:WaitForChild("Object"))

local Animator = {}
Animator.__index = Animator

-- Constructor
function Animator.New(Inst)
	assert(typeof(Inst) == "Instance", "Argument 1 must be an Instance.")
	
	local Obj = Object.New("Animator")
	local CurrentTween = nil
	
	local function DestroyTween()
		if CurrentTween ~= nil then
			CurrentTween:Destroy()
		end
		CurrentTween = nil
	end
	
	-- The next instance to tween
	Obj.Instance = Inst
	
	-- The TweenInfo of the next tween
	Obj.TweenInfo = TweenInfo.new()
	
	-- Returns the currently playing tween.
	-- If nothing is tweening, nil is returned.
	function Obj.GetPlayingTween()
		return CurrentTween
	end
	
	-- Tweens to the specified properties
	function Obj.Tween(Properties)
		local Info = Obj.TweenInfo
		if Info ~= nil and Info.Time > 0 then
			DestroyTween()

			CurrentTween = TweenService:Create(Obj.Instance, Info, Properties)
			
			CurrentTween.Completed:Connect(function()
				-- This disconnects the .Completed connection
				-- because the instance will get destroyed
				DestroyTween()
			end)
			
			CurrentTween:Play()

			return CurrentTween
		end
		Info = nil
	end
	
	Obj.OnDisposal = function()
		DestroyTween()
	end
	
	return Obj
end

return Animator]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f64</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX8E1390CF2BA34D3C8A5E591B7995D80E">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ObjectGroup</string>
						<string name="ScriptGuid">{AA210BF6-6D84-4469-85E6-5F07E5E37FD8}</string>
						<ProtectedString name="Source"><![CDATA[-- A utility object for storing a group of objects.

local Object = require(script.Parent:WaitForChild("Object"))

local ObjectGroup = {}

function ObjectGroup.New()
	local Obj = Object.New("ObjectGroup")
	local Objects = {}
	
	-- If Clean() is called when Dispose() is called.
	Obj.CleansOnDisposal = true
	
	-- Adds an object to the group.
	function Obj.Add(Var)
		Objects[Var] = Var
	end
	
	-- Removes an object to the group.
	function Obj.Remove(Var)
		Objects[Var] = nil
	end
	
	-- Attempts to garbage collect all objects stored in the group.
	function Obj.Clean()
		for i, v in pairs(Objects) do
			Objects[i] = nil
			
			-- Attempt further garbage collection
			if typeof(v) == "table" and typeof(v.Dispose) == "function" then
				v.Dispose()
			elseif typeof(v) == "Instance" then
				v:Destroy()
			elseif typeof(v) == "RBXScriptConnection" then
				v:Disconnect()
			end
			
			i, v = nil, nil
		end
	end
	
	Obj.OnDisposal = function()
		if Obj.CleansOnDisposal == true then
			Obj.Clean()
		else
			for i, v in pairs(Objects) do
				Obj.Remove(v)
			end
		end
	end
	
	return Obj
end

return ObjectGroup]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f65</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX6514787B716F4C23A29CFA28B388507E">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">BaseLauncher</string>
						<string name="ScriptGuid">{76778713-7235-4E3C-A8D9-29D16BA7CB1A}</string>
						<ProtectedString name="Source"><![CDATA[-- The base class used to initialize a game, whether that would be
-- from the server or the client.
-- The Launchers package is to keep things under the same place file,
-- which makes it easier to develop the game.

-- By udev2192

local Object = require(script.Parent:WaitForChild("Object"))

local BaseLauncher = {}

-- Removes the server object from the table
-- in which they are stored and attempts
-- to do methods for garbage collection.
function BaseLauncher.DestroyObject(Var)
	if typeof(Var) == "table" and typeof(Var.Dispose) == "function" then
		Var.Dispose()
	elseif typeof(Var) == "Instance" then
		Var:Destroy()
	elseif typeof(Var) == "RBXScriptConnection" then
		Var:Disconnect()
	end

	Var = nil
end

function BaseLauncher.New()
	local Obj = Object.New("BaseLauncher")
	local StartFunc = nil
	local ShutdownFunc = nil
	local StoredObjects = {} -- Object storage
	
	-- Timestamp in seconds that Start() was called
	Obj.StartedAt = 0
	
	--[[
	Whether or not to garbage collect stored objects
	when Shutdown() is called.
	]]--
	Obj.AutoDestroy = true
	
	-- Resets the number stored in StartedAt and
	-- calls the start function.
	function Obj.Start()
		Obj.StartedAt = os.time()
		if typeof(StartFunc) == "function" then
			StartFunc()
		end
	end
	
	-- Sets the start/initializer function.
	function Obj.SetStarter(Func)
		if Func ~= nil then
			assert(typeof(Func) == "function", "Argument 1 must be a function.")
			StartFunc = Func
		else
			StartFunc = nil
		end
	end
	
	-- Binds a shutdown function that runs when Shutdown() is called
	-- before it clears everything.
	function Obj.BindToShutdown(Func)
		if Func ~= nil then
			assert(typeof(Func) == "function", "Argument 1 must be a function.")
			ShutdownFunc = Func
		else
			ShutdownFunc = nil
		end
	end
	
	--[[
	Stores an object so that it can be removed once
	the launcher is requested to clear it.
	
	Params:
	Var <variant> - Any value.
	]]--
	function Obj.StoreObjectForDisposal(Var)
		table.insert(StoredObjects, Var)
	end
	
	-- Clears all stored objects put in from
	-- store object for removal.
	function Obj.ClearStoredObjects()
		StoredObjects = {}
	end
	
	--[[
	Attempts to garbage collect each value scheduled for garbage
	collection via StoreObjectForDisposal, then clears the table.
	]]--
	function Obj.DestroyStoredObjects()
		for i, v in pairs(StoredObjects) do
			BaseLauncher.DestroyObject(v)
			StoredObjects[i] = nil
		end
	end
	
	
	-- Shuts the launcher down.
	function Obj.Shutdown()
		-- Call the shutdown function.
		if typeof(ShutdownFunc) == "function" then
			ShutdownFunc()
		end
		
		-- Clear everything.
		Obj.SetStarter(nil)
		Obj.BindToShutdown(nil)
		
		if Obj.AutoDestroy == true then
			Obj.DestroyStoredObjects()
		else
			Obj.ClearStoredObjects()
		end
	end
	
	Obj.OnDisposal = Obj.Shutdown
	
	return Obj
end

return BaseLauncher]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f66</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXF06F7229BE4D4B2FA89E6DB4D0E73912">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">TimeWaiter</string>
						<string name="ScriptGuid">{1500ABC4-0EAA-48D8-9312-509D2E0A5FB1}</string>
						<ProtectedString name="Source"><![CDATA[-- An object that provides a duration-based wait but with further control.
-- This is based off of RunService.Heartbeat.
-- By udev2192

local RunService = game:GetService("RunService")

local Utils = script.Parent

local Object = require(Utils:WaitForChild("Object"))
local Signal = require(Utils:WaitForChild("Signal"))

Utils = nil

local TimeWaiter = {}

--[[
Splits a given number of seconds into minutes, seconds, and milliseconds

Params:
Seconds <number> - The amount of seconds
DecimalDigits <number> - Number of digits to use for decimals

Returns:
<number> - The number of minutes
<number> - The number of seconds
<number> - The number of decimal seconds
]]--
function TimeWaiter.FormatSpeedrunTimeIndividual(Seconds: number, DecimalDigits: number)
	local Minutes = math.floor(Seconds / 60)
	local NewSeconds = Seconds - math.floor(Minutes * 60)
	
	local FloorSeconds = math.floor(NewSeconds)
	local DecimalSeconds = NewSeconds - FloorSeconds
	
	--local DecimalTemp = NewSeconds * (10 ^ Precision)
	--local DecimalSeconds = DecimalTemp - math.floor(DecimalTemp)
	
	return Minutes, FloorSeconds, math.floor(DecimalSeconds * (10 ^ DecimalDigits))
end
--function TimeWaiter.GetSpeedrunTime(Seconds: number, Precision: number)
--	local Minutes = math.floor(Seconds / 60)
--	local NewSeconds = Seconds - math.floor(Minutes * 60)

--	return Minutes, NewSeconds, math.floor(NewSeconds * 10 ^ Precision)
--end

--[[
Splits a given number of seconds into minutes, seconds, and milliseconds,
then returning a formatted time string used for speedrunning

Params:
Seconds <number> - The amount of seconds
Precision <number> - Number of digits for milliseconds

Returns:
<string> - The formatted time
]]--
function TimeWaiter.FormatSpeedrunTime(Seconds: number, Precision: number)
	local Minutes = math.floor(Seconds / 60)
	local NewSeconds = Seconds - math.floor(Minutes * 60)
	--local FlooredSeconds = math.floor(Seconds)
	
	local ZeroAppend
	if NewSeconds < 10 then
		ZeroAppend = "0"
	else
		ZeroAppend = ""
	end

	return Minutes .. ":" .. ZeroAppend .. string.format("%." .. Precision .. "f", NewSeconds)
end

function TimeWaiter.New(Duration: number)
	local Waiter = Object.New("TimeWaiter")
	local IsWaiting = false

	-- The length of the next wait in seconds.
	Waiter.Duration = Duration or 0

	-- Cancels all waits being made.
	function Waiter.Cancel()
		IsWaiting = false
	end

	-- Halts the current thread for the registered
	-- duration in the Waiter.
	function Waiter.Wait()
		local Duration = Waiter.Duration or 0
		local Elapsed = 0
		local HasFullyWaited = false

		-- Wait for the duration.
		if Duration > 0 then
			IsWaiting = true
			while IsWaiting == true do
				Elapsed += RunService.Heartbeat:Wait()

				if Elapsed > Duration then
					break
				end
			end
		end

		-- Fire the signal.
		local Waited = Waiter.Waited
		if Waited ~= nil then
			Waited.Fire(Elapsed)
		end
		Waited = nil
	end

	-- Fired when a wait is cancelled.
	-- Params:
	-- Duration (number) - The amount of time waited when
	-- 					   it was cancelled.
	Waiter.Cancelled = Signal.New()

	-- Fired when a wait is over.
	-- Params:
	-- Duration (number) - The amount of time actually waited in seconds.
	Waiter.Waited = Signal.New()

	Waiter.OnDisposal = function()
		Waiter.Cancel()

		--local WaitedEvent = Waiter.Waited
		--if WaitedEvent ~= nil then
		--	WaitedEvent.DisconnectAll()
		--end
		--Waiter.Waited = nil
		--WaitedEvent = nil
		Waiter.Cancelled.DisconnectAll()
		Waiter.Waited.DisconnectAll()
	end

	return Waiter
end

return TimeWaiter]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f67</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXB791DF63CD0145C4A77C669775CF6C85">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">BaseScheme</string>
						<string name="ScriptGuid">{19437B57-7B46-44CD-B4DF-81DB41E2AA20}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Provides an object that can be used to make a set of 
instance property defaults.

By udev2192
]]--

local Utils = script.Parent.Parent:WaitForChild("Utils")
local Object = require(Utils:WaitForChild("Object"))

Utils = nil

local BaseScheme = {}

-- Ensures that the same table is returned for every require()
-- made to this module.
BaseScheme.__index = BaseScheme

-- The module's scheme storage. Used for schemes that will apply
-- as a static set of defaults.
BaseScheme.StoredSchemes = {}

-- Removes a stored scheme.
function BaseScheme.RemoveScheme(Name)
	local OldScheme = BaseScheme.StoredSchemes[Name]
	if OldScheme ~= nil then
		OldScheme.Dispose()
	end
	BaseScheme.StoredSchemes[Name] = nil
	OldScheme = nil
end

-- Constructs a new scheme.
function BaseScheme.New(Name)
	assert(Name ~= nil, "Argument 1 cannot be nil.")
	
	-- Dispose the old scheme if it has an index match.
	BaseScheme.RemoveScheme(Name)
	
	local Obj = Object.New("BaseScheme")
	
	-- Store the new scheme for reference.
	BaseScheme.StoredSchemes[Name] = Obj

	-- Instance/object defaults. Keys added to this
	-- table should match the potential ClassName parameter
	-- of the member functions.
	Obj.Defaults = {}
	
	--[[
	-- Removes a defaults table from the scheme by ClassName.
	-- Params:
	-- ClassName (string) - The name of the class default table to store.
	function Obj.RemoveDefaultSet(ClassName)
		if Defaults ~= nil then
			Defaults[ClassName] = nil
		end
	end

	-- Adds a defaults table to the scheme by ClassName.
	-- Params:
	-- ClassName (string) - The name of the class default table to store.
	-- DefaultList (table) - The set of defaults to store for the class.
	function Obj.AddDefaultSet(ClassName, DefaultList)
		assert(typeof(DefaultList) == "table", "Argument 2 must be a table.")

		if Defaults ~= nil then
			Defaults[ClassName] = DefaultList
		end
	end

	-- Returns the defaults table stored under the provided class name.
	function Obj.GetDefaultSet(ClassName)
		if Defaults ~= nil then
			return Defaults[ClassName]
		end
	end
	]]--
	
	-- Attempts to set the instance/object's properties to apply defaults.
	-- Params:
	-- Inst (Object) - The instance/object/table to apply properties to.
	-- 				 - This can be any type of table.
	-- ClassName (string) - The instance's class name (ex. Part)
	-- Properties (table) - The properties that will override the
	-- 						scheme's set defaults.
	function Obj.ApplyProperties(Inst, ClassName, Properties)
		local DefaultProperties = Obj.Defaults

		-- Set defaults. If an override is detected for the property
		-- is detected, make that override. If the override is made,
		-- remove it from the override table so that the next loop
		-- doesn't repeat the override. (Duplicate overrides are prevented
		-- because we don't want a change listener to fire twice for the same
		-- change request)
		if DefaultProperties ~= nil then
			DefaultProperties = DefaultProperties[ClassName]
			
			if DefaultProperties ~= nil then
				for i, v in pairs(DefaultProperties) do
					-- Put override table in priority.
					-- If no override exists, grab from the defaults table.
					if Properties ~= nil then
						local Override = Properties[i]
						if Override ~= nil then
							Inst[i] = Override

							-- Remove from override table.
							Properties[i] = nil

							continue
						end
					end
					
					Inst[i] = v
				end
			end
		end

		-- Set override table properties that haven't
		-- been set yet
		if Properties ~= nil then
			for i, v in pairs(Properties) do
				Inst[i] = v
			end
		end
	end

	-- Creates and returns an Instance based on the scheme specified.
	-- Params:
	-- ClassName (string) - The instance's class name (ex. Part)
	-- Properties (table) - The properties that will override the
	-- 						scheme's set defaults.
	function Obj.MakeInstance(ClassName, Properties)
		local Inst = Instance.new(ClassName)
		Obj.ApplyProperties(Inst, ClassName, Properties)
		
		return Inst
	end
	
	Obj.OnDisposal = function()
		BaseScheme.RemoveScheme(Name)
	end

	return Obj
end

-- Gets a scheme by name.
-- If it doesn't exist, a new one is created with
-- the specified name and is returned.
-- For more efficient memory usage, this should be used
-- instead of the "New()" constructor.
function BaseScheme.GetScheme(Name)
	return BaseScheme.StoredSchemes[Name] or BaseScheme.New(Name)
end

return BaseScheme]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f68</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXA89E9680046C41A9AB40FA491133AC92">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">TweenGroup</string>
						<string name="ScriptGuid">{5A46F64C-0AC1-48D6-9661-CC6E7221B6C8}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Handles situations where multiple tweens may be needed,
or certain pausing logic

By udev2192
]]--

local TweenService = game:GetService("TweenService")

local Object = require(script.Parent:WaitForChild("Object"))

local TweenGroup = {}
TweenGroup.__index = TweenGroup
TweenGroup.ClassName = script.Name
TweenGroup.DefaultTweenName = "TweenDefault"

local PLAYBACK_STATE = "PlaybackState"
local TWEEN_COMPLETED = Enum.PlaybackState.Completed

function TweenGroup.AssertTweenCreate(Obj: Instance, Info: TweenInfo, Properties: {string: any})
	assert(typeof(Obj) == "Instance", "Argument 1 must be an instance")
	assert(typeof(Info) == "TweenInfo", "Argument 2 must be a TweenInfo")
	assert(typeof(Properties) == "table", "Argument 3 must be a table")
end

function TweenGroup.New()
	local Group = Object.New(TweenGroup.ClassName)
	local Tweens = {}

	--[[
	Pauses and destroys certain tweens in the group
	
	Params:
	Name <string?> - The name of the tweens to destroy.
					 If unspecified, the whole group will
					 be destroyed.
	]]--
	function Group.Kill(Index: any?)
		--do
		--local Tween = Tweens[Index]
		--if Tween then
		--	Tweens[Index] = nil
		--	Tween:Pause()
		--	Tween:Destroy()
		--end
		--end

		--if typeof(Index) == "string" then
		--	for i, v in pairs(Tweens) do
		--		if v.Name == Index then
		--			v:Pause()
		--			v:Destroy()
		--			table.remove(Tweens, i)
		--		end
		--	end
		--end
		
		for i, v in pairs(Tweens) do
			if Index == v.Index then
				-- find the index again manually
				-- since the actual index may have
				-- changed during this loop
				local Index = table.find(Tweens, v)
				if Index then
					table.remove(Tweens, Index)
				end
				
				local Tween = v.Tween
				Tween:Pause()
				Tween:Destroy()
			end
		end
	end

	--[[
	Pauses and destroys all tweens stored in the group
	]]--
	function Group.KillAll()
		for i, v in pairs(Tweens) do
			local Tween = v.Tween
			Tween:Pause()
			Tween:Destroy()
		end

		Tweens = {}
	end

	--[[
	Adds a tween to the group with its arguments
	
	Params:
	Obj <Instance> - The instance to tween
	Info <TweenInfo> - The TweenInfo to use
	Properties <{string: any}> - The properties to tween and their destination values
	Index <any?> - The index of the tween
	Callback <() -> ()?> - A callback to invoke once the tween is finished
	
	Returns:
	<Tween> - The Tween created
	]]--
	function Group.Add(Obj: Instance, Info: TweenInfo, Properties: {[string]: any}, Index: any?, Callback: () -> ()?): Tween
		assert(Callback == nil or typeof(Callback) == "function", "Argument 5 must be a function or nil")
		TweenGroup.AssertTweenCreate(Obj, Info, Properties)

		local Tween = TweenService:Create(Obj, Info, Properties)
		table.insert(Tweens, {Tween = Tween, Index = Index})

		if typeof(Index) == "string" then
			Tween.Name = Index
		end
		Tween:GetPropertyChangedSignal(PLAYBACK_STATE):Connect(function()
			if Tween.PlaybackState == TWEEN_COMPLETED then
				Tween:Destroy()

				Group.Kill(Index)

				if Callback then
					Callback()
				end
			end
		end)

		return Tween
	end

	--[[
	Plays a tween with its arguments, waits until it's done,
	then destroys it
	
	Params:
	Obj <Instance> - The instance to tween
	Info <TweenInfo> - The TweenInfo to use
	Properties <{string: any}> - The properties to tween and their destination values
	Index <any?> - The index of the tween
	Callback <() -> ()?> - A callback to invoke once the tween is finished
	
	Returns:
	<Tween> - The Tween created
	]]--
	function Group.Play(Obj: Instance, Info: TweenInfo, Properties: {[string]: any}, Index: any?, Callback: () -> ()?): Tween
		local Tween = Group.Add(Obj, Info, Properties, Index, Callback)
		Tween:Play()

		return Tween
	end

	Group.OnDisposal = Group.KillAll

	return Group
end

return TweenGroup]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1945d930035272de024411cd0013ffab</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX638A847EFA624971820C2FC99BDD04D0">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Scheduler</string>
						<string name="ScriptGuid">{21D3D129-23E9-4AC7-82FA-C19FFFC42A9F}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Schedules events to happen in a particular timestamp

By udev2192
]]--

local Object = require(script.Parent:WaitForChild("Object"))

local Scheduler = {}
Scheduler.__index = Scheduler
Scheduler.ClassName = script.Name

function Scheduler.New()
	local Scheduler = Object.New(Scheduler.ClassName)
	
	-- Table that holds scheduled functions those
	-- not called yet.
	-- This is for reducing the amount of iterations done by
	-- the scheduler
	local Queue = {}
	local IsRunning = false
	
	--[[
	<{[number]: () -> ()}> - Table that holds the schedule.
							 [timestamp] = function
	]]--
	Scheduler.Schedule = {}
	
	--[[
	<number> - Current timestamp of the scheduler in seconds
			   This usually won't end exactly at the
			   last timestamp due to task.wait() returning
			   different values based on processing speed
	]]--
	Scheduler.Time = 0
	
	--[[
	<boolean> - Whether or not to call scheduled functions
				synchronously
	]]--
	Scheduler.Sync = false
	
	--[[
	<boolean> - Whether or not the timer stops after calling the last item
	]]--
	Scheduler.StopAtLast = true
	
	--[[
	Returns:
	<boolean> - Whether or not the scheduler is currently running
	]]--
	function Scheduler.IsRunning()
		return IsRunning
	end
	
	--[[
	Pauses the execution of the scheduler
	]]--
	function Scheduler.Pause()
		Queue = {}
		IsRunning = false
	end
	
	--[[
	Resumes the execution of the scheduler
	]]--
	function Scheduler.Resume()
		if IsRunning == false then
			IsRunning = true
			
			local CurrentTime = Scheduler.Time
			for i, v in pairs(Scheduler.Schedule) do
				assert(typeof(i) == "number", "Schedule indexes must be numbers")
				assert(typeof(v) == "function", "Schedule values must be functions")
				
				table.insert(Queue, {i, v})
			end
			CurrentTime = nil
			
			while true do
				if IsRunning == false or (#Queue <= 0 and Scheduler.StopAtLast == true) then
					Scheduler.Pause()
					break
				end
				
				local Time = Scheduler.Time
				local Sync = Scheduler.Sync
				
				for i, v in pairs(Queue) do
					if v[1] <= Time then
						table.remove(Queue, i)
						
						if Sync then
							v[2]()
						else
							task.spawn(v[2])
						end
					end
				end
				
				if IsRunning then
					Scheduler.Time += task.wait()
				else
					break
				end
			end
		end
	end
	
	Scheduler.OnDisposal = Scheduler.Pause
	
	return Scheduler
end

return Scheduler]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">472ae7669b5ff4ef024bfa450066a668</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBXAF3A4691DD9D4790BA03698C7ECC9686">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Adapters</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000188c6</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX5231CEB8219E46ADB34B50B8048BC964">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">AreaAdapter</string>
						<string name="ScriptGuid">{1990FAC4-BA75-423B-943F-01338BCF51B8}</string>
						<ProtectedString name="Source"><![CDATA[-- A utility module for adapting to the game's Areas.
-- By udev2192

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Lighting = game:GetService("Lighting")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local AreaAdapter = {}

-- Original lighting properties to save, and the ones that
-- can be changed in the maps
local LIGHTING_PROPERTIES = {"FogColor", "FogStart", "FogEnd", "ClockTime"}

local CONFIG_FOLDER_NAME = "Config"
local LIGHTING_FOLDER_NAME = "Lighting"
local DEFAULT_TWEEN_INFO = TweenInfo.new()

local OriginalLighting = {}

-- Refreshes the original lighting to the current lighting
local function RefreshOriginalLighting()
	for i, v in pairs(LIGHTING_PROPERTIES) do
		OriginalLighting[v] = Lighting[v]
	end
end

RefreshOriginalLighting()

-- Animates to the lighting specified in the configuration table
-- in argument 1.
-- If argument 1 is nil, the lighting is reset.
function AreaAdapter.ApplyLighting(Config, TweeningInfo)
	TweeningInfo = TweeningInfo or DEFAULT_TWEEN_INFO
	
	if Config ~= nil then
		assert(typeof(Config) == "table", "Argument 1 must be a table.")

		-- Do a check that all the lighting properties can be changed.
		for i, v in pairs(Config) do
			local Property = tostring(i)

			if table.find(LIGHTING_PROPERTIES, i) == nil and Util.IsProperty(Lighting, Property) then
				warn("The " .. Property .. " lighting property cannot be animated.")
				break
			end
		end

		-- Tween.
		Util.Tween(Lighting, TweeningInfo, Config)
	else
		-- Reset.
		Util.Tween(Lighting, TweeningInfo, OriginalLighting)
	end
end

function AreaAdapter.New(Area)
	assert(typeof(Area) == "Instance", "Argument 1 must be an instance.")

	local Obj = Object.New("AreaAdapter")
	local LightingConfig = Area:WaitForChild(LIGHTING_FOLDER_NAME, 5)
	
	local DestroyListeners = {}
	local AppliedLighting -- The applied lighting folder.
	
	Obj.Info = {}
	Obj.InfoChangeEvents = nil
	
	-- TweenInfo used to animate lighting changes.
	Obj.LightingTweenInfo = TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
	
	-- Removes an instance from the object table and
	-- disconnects the destroy connection made by the object
	function Obj.RemoveInstanceFromIndex(Index)
		Obj[Index] = nil
		
		local DestroySignal = DestroyListeners[Index]
		if DestroySignal ~= nil then
			DestroySignal:Disconnect()
		end
		DestroySignal = nil
	end
	
	-- Adds an instance to the object table and removes it when
	-- the instance is destroyed.
	function Obj.AddInstanceToIndex(Index, Inst)
		assert(typeof(Index) == "Instance", "Argument 2 must be an instance")
		
		-- Remove to avoid collision
		Obj.RemoveInstanceFromIndex(Index)
		
		-- Add the index
		Obj[Index] = Inst
		
		DestroyListeners[Index] = Inst.AncestryChanged:Connect(function(InstChanged, Parent)
			if InstChanged == Inst and Parent == nil then
				Obj.RemoveInstanceFromIndex(Index)
			end
		end)
	end
	
	local function AddInfoByValue(ValueInst)
		-- Add the current info
		local Name = ValueInst.Name
		local Val = ValueInst.Value
		Obj.Info[Name] = Val

		-- Listen for changes
		Obj.InfoChangeEvents[Name] = ValueInst.Changed:Connect(function(NewValue)
			Obj.Info[Name] = NewValue
			Object.FireCallback(Obj.InfoChanged, Name, NewValue)
		end)

	end

	local function AddInfoByInstance(Inst)
		-- Add the current info
		local Name = Inst.Name
		local Val = Inst

		Obj.Info[Name] = Val
	end

	-- Refreshes area information.
	function Obj.Refresh(Config)
		assert(typeof(Config) == "Instance", "Argument 1 must be an instance.")

		-- Disconnect previous info change events
		-- and clear the table.
		Obj.FinalizeInfo()
		Obj.Info = {}
		Obj.InfoChangeEvents = {}
		
		-- Add info by attribute.
		for i, v in pairs(Config:GetAttributes()) do
			Obj.Info[i] = v
		end

		-- Add info by instance.
		for i, v in pairs(Config:GetChildren()) do
			if typeof(v) == "Instance" then
				if v:IsA("ValueBase") then
					AddInfoByValue(v)
				else
					AddInfoByInstance(v)
				end
			end
		end
	end

	-- Gets the info stored under the provided index.
	function Obj.GetInfo(Index)
		local Info = Obj.Info

		if Info ~= nil then
			return Info[Index]
		end

		Info = nil
	end

	-- Disconnects info changes from being received.
	-- Obj.InfoChangeEvents will be set to nil.
	function Obj.FinalizeInfo()
		local ChangeEvents = Obj.InfoChangeEvents

		if ChangeEvents ~= nil then
			for i, v in pairs(ChangeEvents) do
				if typeof(v) == "RBXScriptConnection" then
					v:Disconnect()
				end
			end
		end

		ChangeEvents = nil
		Obj.InfoChangeEvents = nil
	end
	
	-- Sets if the area's specified lighting will be used.
	-- If argument 1 is false or the lighting folder doesn't exist,
	-- the lighting will be reset.
	function Obj.UseLighting(IsUsing)
		local LightTweenInfo = Obj.LightingTweenInfo
		
		if IsUsing == true and typeof(LightingConfig) == "Instance" then
			-- Apply the lighting instances
			if AppliedLighting ~= nil then
				AppliedLighting:Destroy()
				AppliedLighting = nil
			end
			AppliedLighting = LightingConfig:Clone()
			AppliedLighting.Name = "MapLighting"
			AppliedLighting.Parent = Lighting
			
			-- Animate
			AreaAdapter.ApplyLighting(LightingConfig:GetAttributes(), LightTweenInfo)
		else
			-- Destroy the lighting folder
			if AppliedLighting ~= nil then
				AppliedLighting:Destroy()
				AppliedLighting = nil
			end
			
			-- Animate the reset
			AreaAdapter.ApplyLighting(nil, LightTweenInfo)
		end
	end

	-- Fires when an area's info has been changed.
	-- Params: InfoName, InfoValue
	Obj.InfoChanged = nil

	-- Initialize
	local ConfigFolder = Area:WaitForChild(CONFIG_FOLDER_NAME, 5)
	if typeof(ConfigFolder) == "Instance" then
		Obj.Refresh(ConfigFolder)
	end
	ConfigFolder = nil
	
	Obj.OnDisposal = function()
		Obj.UseLighting(false)
	end

	return Obj
end

return AreaAdapter]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f69</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX68F6A67B0E8B470BB5709E1C2C157764">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">CharacterAdapter</string>
						<string name="ScriptGuid">{4E6C5B58-FD64-40B9-B1AD-4D87A3E86908}</string>
						<ProtectedString name="Source"><![CDATA[-- A utility module for grabbing important character objects.
-- By udev2192

local HUMANOID_NAME = "Humanoid"
local ROOT_PART_NAME = "HumanoidRootPart"
local HITBOX_PART_ENABLED = true
local HITBOX_NAME = "Hitbox"

-- The name of the uppermost rig in the character.
local TOP_RIG_NAME = "Head"

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))

local CharacterAdapter = {}
CharacterAdapter.CharacterSize = Vector3.new(4, 5, 1)

-- Welds part1 to part2
local function WeldParts(p1, p2)
	local Weld = Instance.new("WeldConstraint")
	Weld.Part0 = p1
	Weld.Part1 = p2
	Weld.Parent = p1

	return Weld
end

-- Returns the current dimensions of the provided character model.
-- Dimensions are based off of the character's uppermost part
-- (as of date, this is considered the head).
-- The table returned contains indexes: Size, Position, Orientation.
function CharacterAdapter.GetDimensions(CharModel)
	local UpperPart = CharModel:WaitForChild(TOP_RIG_NAME)

	assert(typeof(UpperPart) == "Instance" and UpperPart:IsA("BasePart"),
		"The top rig named '" .. TOP_RIG_NAME .. "' couldn't be found."
	)

	-- Calculate from the absolute top, then work our way down half the Y size.
	local CharOri, CharSize = CharModel:GetBoundingBox()
	local UpperPos = UpperPart.Position
	local TopPosY = UpperPos.Y + UpperPart.Size.Y/2

	local CharCenter = Vector3.new(UpperPos.X, TopPosY - (CharSize.Y / 2), UpperPos.Z)

	-- Return the table
	return {
		Size = CharSize,
		Position = CharCenter,
		Orientation = CharOri
	}
end

function CharacterAdapter.New(Player)
	assert(typeof(Player) == "Instance" and Player:IsA("Player"), "Argument 1 must be a player.")

	local Obj = Object.New("CharacterAdapter")
	local CurrentForces = {} -- Current body force.

	-- Where the character parts will be.
	-- They're stored here so calling Dispose()
	-- doesn't destroy the character.
	Obj.Parts = {}
	Obj.HumanoidHealthEvent = nil

	local function DisconnectHumanoidDeath()
		local HealthEvent = Obj.HumanoidHealthEvent
		if HealthEvent ~= nil then
			HealthEvent:Disconnect()
		end

		Obj.HumanoidHealthEvent = nil
		HealthEvent = nil
	end

	local function HandleCharAdded(Char)
		if typeof(Char) == "Instance" then
			Object.FireCallback(Obj.OnRespawn, Char)
			Obj.RespawnEvent.Fire(Char)
			DisconnectHumanoidDeath()

			local Parts = {}
			Parts.Character = Char

			-- Load character parts
			local Humanoid = Char:WaitForChild(HUMANOID_NAME, 5)
			local RootPart = Char:WaitForChild(ROOT_PART_NAME, 5)

			if Humanoid ~= nil then
				-- HealthChanged is used for stability reasons
				Obj.HumanoidHealthEvent = Humanoid.HealthChanged:Connect(function(health)
					if health <= 0 then
						Object.FireCallback(Obj.OnDeath)
						Obj.DeathEvent.Fire()
					end
				end)
			end

			Parts.Humanoid = Humanoid
			Parts.RootPart = RootPart

			-- Create hitbox
			if HITBOX_PART_ENABLED == true then
				local Hitbox = Char:FindFirstChild(HITBOX_NAME)

				if Hitbox == nil then
					-- Get the dimensions
					local CharDimensions = CharacterAdapter.GetDimensions(Char)
					
					-- Make the hitbox part
					Hitbox = Instance.new("Part")
					Hitbox.Anchored = true
					Hitbox.CanCollide = false
					Hitbox.Massless = true -- So its weight has no effect
					Hitbox.Transparency = 1
					Hitbox.Size = CharacterAdapter.CharacterSize--CharDimensions.Size
					Hitbox.Position = CharDimensions.Position
					Hitbox.Orientation = CharDimensions.Orientation.LookVector
					Hitbox.Name = HITBOX_NAME

					WeldParts(Hitbox, RootPart)
					Hitbox.Anchored = false
					Hitbox.Parent = Char
				end

				Parts.Hitbox = Hitbox
				Hitbox = nil
			end

			-- Finish
			Obj.Parts = Parts
			Object.FireCallback(Obj.Loaded, Parts)
			Obj.LoadedEvent.Fire(Parts)

			Parts, Humanoid, RootPart = nil, nil, nil
		end
	end

	-- Returns the player associated.
	function Obj.GetPlayer()
		return Player
	end

	-- Returns if the character has a humanoid and that it is alive.
	function Obj.IsAlive()
		local Parts = Obj.Parts
		if Parts ~= nil then
			local Humanoid = Parts.Humanoid 
			if Humanoid ~= nil then
				return Humanoid.Health > 0
			end
		end

		return false
	end

	-- Cancels all currently applied BodyForces.
	function Obj.CancelForces()
		for i, v in pairs(CurrentForces) do
			if typeof(v) == "Instance" then
				v:Destroy()
			end

			CurrentForces[i] = nil
		end
	end

	-- Sets the velocity of the character's RootPart.
	-- Params:
	-- Velocity - The force to apply to the launch.
	-- Duration - How long the force lasts.
	function Obj.ApplyForce(Velocity, Duration)
		assert(typeof(Velocity) == "Vector3", "Argument 1 must be a Vector3.")

		if Obj.Parts ~= nil then
			local RootPart = Obj.Parts.RootPart

			if typeof(RootPart) == "Instance" and RootPart:IsA("BasePart") then
				-- Velocity is now set via AssemblyLinearVelocity
				-- because it is more consistent and respects
				-- gravity
				
				--RootPart:ApplyImpulse(Velocity)
				RootPart.AssemblyLinearVelocity = Velocity

				-- Maintain the force.
				if typeof(Duration) == "number" and Duration > 0 then
					coroutine.wrap(function()
						local Force = Instance.new("BodyForce")
						Force.Force = Velocity
						Force.Parent = RootPart

						CurrentForces[Force] = Force

						-- Wait until time's up or the force was cancelled.
						local Elapsed = 0
						while Force.Parent ~= nil and Elapsed < Duration do
							Elapsed += RunService.Heartbeat:Wait()
						end

						Force:Destroy()
						Force = nil
					end)()
				end
			end
		end
	end

	-- Fires when the character respawns.
	-- Parameters:
	-- Character - The player's character.
	Obj.OnRespawn = nil

	-- Fires when the "important" character objects are loaded.
	-- Parameters:
	-- Parts - The character parts loaded.
	Obj.Loaded = nil

	-- Fires when the character dies.
	Obj.OnDeath = nil

	-- Signal variants of the callbacks.
	Obj.RespawnEvent = Signal.New()
	Obj.LoadedEvent = Signal.New()
	Obj.DeathEvent = Signal.New()

	-- Connect internal events
	HandleCharAdded(Player.Character)
	Player.CharacterAdded:Connect(HandleCharAdded)

	Obj.OnDisposal = function()
		Obj.RespawnEvent.DisconnectAll()
		Obj.LoadedEvent.DisconnectAll()
		Obj.DeathEvent.DisconnectAll()

		Obj.CancelForces()
		CurrentForces = nil
	end

	return Obj
end

return CharacterAdapter]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f6a</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX1A05A91A1AE94F929728AEB703B97ADF">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">InstanceCollector</string>
						<string name="ScriptGuid">{F9A6361D-29AA-4D2D-B301-C6DDD4678703}</string>
						<ProtectedString name="Source"><![CDATA[-- Provides an object collects instances by their names.
-- By udev2192

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))

local InstanceCollector = {}

local function GetArrayFromMap(Map)
	local Array = {}
	for i, v in pairs(Map) do
		table.insert(Array, v)
	end
	
	return Array
end

function InstanceCollector.New(SearchId)
	local Obj = Object.New("InstanceCollector")
	local AdaptedInst = nil -- The adapted instance.
	local AdaptConnections = {}
	
	-- The collection of instances. For sync safety,
	-- this is in key-value pairs.
	Obj.Instances = {}
	
	-- If the collector is looking for new instances.
	-- If an instance is found while this is false,
	-- it won't be added to the collection, nor
	-- will InstanceFound invoke itself for the
	-- found instance.
	Obj.IsLooking = true
	
	-- The part to look for when adding an instance
	-- to the collection. by its name.
	-- This is applied on the next refresh.
	Obj.SearchId = SearchId or ""
	
	local function MatchesId(inst)
		local Id = Obj.SearchId
		assert(typeof(Id) == "string", "The SearchId must be a string.")
		
		return typeof(inst) == "Instance" and string.match(inst.Name, Id)
	end
	
	-- Handles a found instance.
	local function HandleInstance(inst)
		if Obj.IsLooking == true then
			local Id = Obj.SearchId
			assert(typeof(Id) == "string", "The SearchId must be a string.")

			if Obj.Instances ~= nil then -- Just in case
				if MatchesId(inst) then
					-- Add to the collection
					Obj.Instances[inst] = inst

					-- Indicate collection finding.
					Object.FireCallback(Obj.InstanceFound, inst)

					-- Fire the collection callback.
					Object.FireCallback(Obj.CollectionChanged, GetArrayFromMap(Obj.Instances))
				end
			else
				return
			end
		end
	end
	
	local function DisconnectInstConnections()
		for i, v in pairs(AdaptConnections) do
			if typeof(v) == "RBXScriptConnection" then
				v:Disconnect()
			end
		end
		
		AdaptConnections = {}
	end
	
	-- Internally looks for the instances with the provided id.
	local function Search()
		DisconnectInstConnections() -- Just in case
		
		if typeof(AdaptedInst) == "Instance" then
			for i, v in pairs(AdaptedInst:GetDescendants()) do
				if MatchesId(v) then
					HandleInstance(v)
				end
			end
			
			AdaptConnections = {
				Add = AdaptedInst.DescendantAdded:Connect(HandleInstance),
				Remove = AdaptedInst.DescendantRemoving:Connect(function(inst)
					-- Indicate removal if the instance was in the collection.
					if typeof(Obj.Instances[inst]) == "Instance" then
						Object.FireCallback(Obj.InstanceRemoved, inst)
					end
					
					Obj.Instances[inst] = nil
				end)
			}
		end
	end
	
	-- Refreshes the collection.
	function Obj.Search()
		Search()
	end
	
	-- Sets the collector to look for instances that are the
	-- descendants of the provided instance.
	-- Parameters:
	-- Inst - The instance to adapt to. If this argument isn't an Instance,
	--		  the collection is cleared.
	function Obj.AdaptInstance(Inst)
		if typeof(Inst) == "Instance" then
			AdaptedInst = Inst
			Search()
		else
			DisconnectInstConnections()
			Obj.Instances = {}
		end
	end
	
	-- Fires when the collection changes.
	-- Parameters:
	-- Collection (table) - The array of instances in the collection.
	Obj.CollectionChanged = nil
	
	-- Fires when an instance has been found, therefore
	-- being added to the collection.
	-- Parameters:
	-- Inst (instance) - The instance found.
	Obj.InstanceFound = nil
	
	-- Fires when an instance in the collection is no longer a
	-- descendant of the adapted instance set using AdaptInstance().
	-- Parameters:
	-- Inst (instance) - The instance removed.
	Obj.InstanceRemoved = nil
	
	Obj.OnDisposal = function()
		DisconnectInstConnections()
		AdaptConnections = nil
	end
	
	return Obj
end

return InstanceCollector]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f6b</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX80140CA14D7B4C0D8265E70CEA37A83F">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Hitbox</string>
						<string name="ScriptGuid">{88B64ACC-0468-4515-963A-8C3B1D193948}</string>
						<ProtectedString name="Source"><![CDATA[-- Provides a way of accurately getting events where
-- two parts collide with each other.
-- In other terms, this provides an accurate hitbox while
-- being somewhat laggy.

-- Thanks to Jukereise for figuring out hitbox logic for shapes other than a
-- box (which is used by the JToH music zone system they created).

-- By udev2192

local RunService = game:GetService("RunService")

local ModulePack = script.Parent.Parent

local Utils = ModulePack:WaitForChild("Utils")

local Object = require(Utils:WaitForChild("Object"))
local Signal = require(Utils:WaitForChild("Signal"))

local Hitbox = {}

local ZERO_VECTOR3 = Vector3.new(0, 0, 0)
local ZERO_CFRAME = CFrame.new(0, 0, 0)

local abs = math.abs -- To reduce the amount of indexing

-- Hitbox status of entry.
-- Status values go from least inside (smallest number)
-- to most inside (biggest number)
Hitbox.HitStatus = {
	NotTouching = 0,
	Touching = 1,
	CenterInside = 2,
	CompletelyInside = 3
}

local PartTypes = Enum.PartType

-- A part/hitbox's shape type. Some values are pulled from the Roblox supplied
-- Enumerator named "PartType" for convienence.
Hitbox.ShapeType = {
	Block = PartTypes.Block,
	Ball = PartTypes.Ball,
	Cylinder = PartTypes.Cylinder
}

PartTypes = nil

local function IsPart(Part)
	return typeof(Part) == "Instance" and Part:IsA("Part")
end

-- Returns the hypotenuse of a and b.
local function Hypotenuse(a, b)
	return (a^2 + b^2) ^ 0.5
end

-- Utility function that determines if a point is in bounds
-- with a hitbox.
-- Used by GetHitRegion()
local function IsInBounds(LocalPoint, ObjectSize, Offset, ShapeType)
	-- Offset compared size, smaller means more constrained
	ObjectSize = (ObjectSize + Offset) * 0.5
	
	-- Get local point and object size components
	-- Use absolute value for the LocalPoint so that
	-- negative numbers won't affect the bound results.
	local LocalX = abs(LocalPoint.X)
	local LocalY = abs(LocalPoint.Y)
	local LocalZ = abs(LocalPoint.Z)
	
	local SizeX = ObjectSize.X
	local SizeY = ObjectSize.Y
	local SizeZ = ObjectSize.Z
	
	local ValidTypes = Hitbox.ShapeType
	
	-- Use the corresponding formula to determine in-bounds status
	-- (Use less than or equal to for comparision accuracy)
	if ShapeType == ValidTypes.Block then
		-- Return the bounding status of the "box-shaped" 3d objects
		return LocalX <= SizeX and LocalY <= SizeY and LocalZ <= SizeZ
	elseif ShapeType == ValidTypes.Cylinder then
		-- In a Roblox cylinder, the non-circular coordinate is the X
		-- coordinate. Take that into account when finding the hypotenuse
		-- Use the object space Y-position to compare hypotenuse bounding status
		return LocalX <= SizeX and Hypotenuse(LocalY, LocalZ) <= SizeZ + (Offset.Z)
	elseif ShapeType == ValidTypes.Ball then
		-- Use the hypotenuse function for faster performance
		-- (Use x and z coordinates for that)
		-- If the hypotenuse is less than or equal to the Y size,
		-- mark it as "in bounds" and return true
		-- If that passes, then do the same, but this time, 
		-- compare the hypotenuse of y and z to x,
		-- then the hypotenuse of x and y to z
		
		--local XDist = abs(SizeY - LocalY)
		--local YDist = abs(SizeY - LocalY)
		--local ZDist = abs(SizeZ - LocalZ)
		
		-- The Y coordinate of ObjectSize / 2 will indicate radius
		--local Hypo = Hypotenuse(XDist, ZDist)
		-- Use local point coordinates, since that will determine offset
		-- from the center due to it being object space
		return Hypotenuse(LocalX, LocalZ) <= SizeY
			--and Hypotenuse(YDist, ZDist) <= SizeX
			--and Hypotenuse(XDist, YDist) <= SizeZ
	end
end

--local function IsInBounds(LocalPoint, HitSize, Offset)
--	local OffsetPoint = LocalPoint + Offset

--	return HitSize.X > OffsetPoint.X and HitSize.Y > OffsetPoint.Y and HitSize.Z > OffsetPoint.Z
--end

-- Constructs a HitRegion.
function Hitbox.NewHitResult(HitSize, Position, Status)
	local HitStatus = Hitbox.HitStatus
	
	return {
		Size = HitSize, -- Size of the interfering region
		Center = Position, -- The center of the interference
		Status = Status, -- The inteference's hit status
		
		-- "Zone" in these explainations mean the box that the
		-- the Hitbox is trying to interfere with:
		
		-- If the hitbox isn't touching the zone at all
		NotTouching = Status == Hitbox.NotTouching,
		
		-- If the hitbox is touches the zone
		IsTouching = Status >= HitStatus.Touching,
		
		-- If the center of the hitbox is inside the zone
		CenterInside = Status >= HitStatus.CenterInside,
		
		-- If the hitbox is completely inside the zone
		CompletelyInside = Status >= HitStatus.CompletelyInside
	}
end

-- Determines if CFrame1 is inside Region 2.
-- Size2 and CFrame2 are components of Region 2.
-- Returns a HitRegion.
function Hitbox.GetHitRegion(Size1, CFrame1, Size2, CFrame2, ShapeType)
	-- So orientation is taken into account
	-- Size1 is added to account for the size of part1
	local LocalPoint = CFrame2:PointToObjectSpace(CFrame1.Position)
	
	-- Get hit region
	local HalvedSize2 = Size2 / 2
	local HitSizeX = HalvedSize2.X - math.abs(LocalPoint.X)
	local HitSizeY = HalvedSize2.Y - math.abs(LocalPoint.Y)
	local HitSizeZ = HalvedSize2.Z - math.abs(LocalPoint.Z)
	
	--local function IsInBounds(Diff)
	--	if typeof(Diff) ~= "Vector3" then
	--		Diff = Vector3.new(0,0,0)
	--	end

	--	local FuncPoint = LocalPoint + Diff -- For detection offsetting
	--	return math.abs(FuncPoint.X) < Size2.X/2 and math.abs(FuncPoint.Y) < Size2.Y/2 and math.abs(FuncPoint.Z) < Size2.Z/2
	--end
	
	--print(HitSizeX, HitSizeY, HitSizeZ)
	
	-- Convert the interfering size to a Vector3.
	local HitSizeVector = Vector3.new(math.min(HitSizeX, Size1.X), math.min(HitSizeY, Size1.Y), math.min(HitSizeZ, Size1.Z))

	-- Get interference center.
	local HitCFrame = (CFrame1.Position + CFrame2.Position) / 2
	
	-- Get hit status by offsetting the compared Vector3 components.
	local HalvedSize1 = Size1 / 2
	local HitStatus = Hitbox.HitStatus
	if IsInBounds(LocalPoint, Size2, -HalvedSize1, ShapeType) then
		HitStatus = HitStatus.CompletelyInside
	elseif IsInBounds(LocalPoint, Size2, ZERO_VECTOR3, ShapeType) then
		HitStatus = HitStatus.CenterInside
	elseif IsInBounds(LocalPoint, Size2, HalvedSize1, ShapeType) then
		HitStatus = HitStatus.Touching
	else
		HitStatus = HitStatus.NotTouching
		--print("not touching")
	end
	
	return Hitbox.NewHitResult(HitSizeVector, HitCFrame, HitStatus)
end

--function Hitbox.GetPartTouchStates(BasePart1, BasePart2)
--	if (Hitbox.IsBasePart(BasePart1) or typeof(BasePart1) == "Instance" and BasePart1:IsA("Camera"))and Hitbox.IsBasePart(BasePart2) then
--		local Point = BasePart2.CFrame:PointToObjectSpace(BasePart1.CFrame.Position)
--		local function IsInBounds(Diff)
--			if typeof(Diff) ~= "Vector3" then
--				Diff = Vector3.new(0,0,0)
--			end

--			local LocalPoint = Point + Diff -- For detection offsetting
--			return math.abs(LocalPoint.X) < BasePart2.Size.X/2 and math.abs(LocalPoint.Y) < BasePart2.Size.Y/2 and math.abs(LocalPoint.Z) < BasePart2.Size.Z/2
--		end

--		-- Construct the table of part interaction types
--		local Interactions = {
--			-- Adding the size of BasePart1 halved detects if it's completely inside
--			-- Same the other way around, subtracting it instead will see if it's at least touching it
--			IsInside = IsInBounds(BasePart1.Size/2),
--			IsPointInside = IsInBounds(),
--			IsTouching = IsInBounds(-(BasePart1.Size/2))
--		}

--		-- Garbage collect and return the interaction types
--		IsInBounds = nil
--		return Interactions
--	else
--		return nil
--	end
--end

-- Primary hitbox constructor.
function Hitbox.New(Size)
	local Box = Object.New("Hitbox")

	-- RunService.Heartbeat connections
	local HitRunners = {}
	local HitStatuses = {} -- Hit statuses for each connected box
	local TouchDebounces = {} -- For binded part .Touched
	local CurrentlyTouched = {} -- Stores length of touch (for .Touched)
	local TouchConnections = {} -- For connected parts that will use .Touched
	local DisconnectDebounce = {}
	local WeldRunner = nil
	local BindedPart = nil
	local BindedPartTouch = nil -- Binded part .Touched event

	Box.Size = Size or ZERO_VECTOR3
	Box.CFrame = ZERO_CFRAME
	
	-- The hitbox's last hit status.
	-- Indicated by Hitbox.HitStatus
	Box.HitStatus = Hitbox.HitStatus.NotTouching
	
	-- If the Box.OnHit signal will fire.
	-- Set to false to save on loop usage.
	Box.FireHitSignal = true
	
	-- How long to wait to disconnect a hit detection
	-- listener for parts connected via .Touched
	Box.TouchStopDelay = 0.5
	
	-- The hitbox's ShapeType.
	Box.Shape = Enum.PartType.Block

	-- Internal hitbox intercept connection.
	local function ToggleConnect(BoxToConnect, IsConnected)
		if IsConnected == true then
			assert(BoxToConnect.Size ~= nil and BoxToConnect.CFrame ~= nil, "Argument 1 must contain Size and CFrame properties.")
			
			-- Disconnect previous box connections.
			if HitRunners[BoxToConnect] ~= nil then
				ToggleConnect(BoxToConnect, false)
			end
			
			-- Connect.
			HitRunners[BoxToConnect] = RunService.Heartbeat:Connect(function(Delta)
				local ConnectedBoxSize = BoxToConnect.Size
				local HitResult = Hitbox.GetHitRegion(Box.Size, Box.CFrame, ConnectedBoxSize, BoxToConnect.CFrame, BoxToConnect.Shape)
				local HitStatus = HitResult.Status
				local NotTouching = Hitbox.HitStatus.NotTouching
				local OldHitStatus = HitStatuses[BoxToConnect]

				HitStatuses[BoxToConnect] = HitStatus

				-- Signal status change if it happened
				if OldHitStatus ~= HitStatus then
					Box.HitStatusChanged.Fire(BoxToConnect, HitResult)
				end

				-- Mark time increase for connected parts via .Touched
				local ConnectedToTouched = false
				if TouchConnections[BoxToConnect] == true and CurrentlyTouched ~= nil then
					ConnectedToTouched = true
					
					if CurrentlyTouched[BoxToConnect] == nil then
						CurrentlyTouched[BoxToConnect] = Delta
					else
						CurrentlyTouched[BoxToConnect] += Delta
					end
				end

				if HitResult ~= nil and HitResult.Status ~= NotTouching then
					-- If the box is connected via .Touched, reset the disconnection timer
					CurrentlyTouched[BoxToConnect] = 0
					
					-- A hit was detected for the frame, so fire
					Box.HitStatus = HitStatus

					if Box.FireHitSignal == true then
						local HitSignal = Box.OnHit
						if HitSignal ~= nil then
							Box.OnHit.Fire(BoxToConnect, HitResult)
						end
						HitSignal = nil
					end
				else
					DisconnectDebounce[BoxToConnect] = true

					Box.HitStatus = NotTouching

					-- Disconnect the corresponding RunService listener,
					-- if it's binded to .Touched
					local TouchStopDelay = Box.TouchStopDelay or 0
					if TouchConnections ~= nil and TouchConnections[BoxToConnect] == true then
						-- Check that the touch has stopped long enough before disconnecting
						local TouchDur = CurrentlyTouched[BoxToConnect]
						--print("Touch duration:", TouchDur)
						if TouchStopDelay <= 0 or (TouchDur ~= nil and TouchDur > TouchStopDelay) then
							ToggleConnect(BoxToConnect, false)
							CurrentlyTouched[BoxToConnect] = nil
							TouchDebounces[BoxToConnect] = nil
						end
					end

					-- Signal touch end, if not done already
					if OldHitStatus ~= NotTouching then
						Box.OnHitStop.Fire(BoxToConnect)
					end

					DisconnectDebounce[BoxToConnect] = nil
				end

				HitResult = nil
			end)
		else
			local Runner = HitRunners[BoxToConnect]
			if Runner ~= nil then
				Runner:Disconnect()
			end

			HitRunners[BoxToConnect] = nil
			Runner = nil
			
			CurrentlyTouched[BoxToConnect] = nil
			
			--print("disconnect")
		end
	end
	
	-- Returns a part's hit status to the hitbox,
	-- or nil if it isn't connected.
	-- Params:
	-- Part - The part or box to check the hit status of.
	function Box.GetHitStatus(Part)
		return HitStatuses ~= nil and HitStatuses[Part]
	end
	
	-- Checks if the hitbox is binded to a part.
	function Box.IsBindedToPart()
		return IsPart(BindedPart)
	end
	
	-- Disconnects a BasePart's interference.
	-- Params:
	-- Part - The part to disconnect.
	function Box.DisconnectPart(Part)
		if TouchConnections ~= nil then
			TouchConnections[Part] = nil
		end
		
		if HitStatuses ~= nil then
			HitStatuses[Part] = nil
		end
		
		ToggleConnect(Part, false)
	end
	
	-- Listens to a BasePart's interference.
	-- Params:
	-- Part - The part connected.
	-- IsConnecting - If it's listening to interference.
	-- UseTouchEvent - If the RunService hit detector for the part turns on
	-- 				   only when Part.Touched fires. This means once the
	--				   part stops touching, the hit detector will turn off
	-- 				   and only turn on if it's still connected and
	-- 				   .Tocuhed fires.
	function Box.ConnectPart(Part, UseTouchEvent)
		HitStatuses[Part] = Hitbox.HitStatus.NotTouching
		
		if UseTouchEvent == true then
			assert(IsPart(Part) == true, "Argument 1 must be a BasePart.")
			--assert(IsPart(BindedPart) == true, "No BasePart has been binded. Use BindToPart() to do so.")
			
			TouchConnections[Part] = true
		else
			ToggleConnect(Part, true)
		end
	end

	-- Binds this hitbox to a BasePart's position and size.
	-- Params:
	-- Part - The part to weld to (or nil to stop welding)
	function Box.BindToPart(Part)
		if IsPart(Part) == true then
			Box.BindToPart(nil)

			-- Reconnect
			WeldRunner = RunService.Heartbeat:Connect(function()
				Box.CFrame = Part.CFrame
				Box.Size = Part.Size
				Box.Shape = Part.Shape
			end)
			
			-- Do the .Touched connection for parts that
			-- turn on its interference listener with it
			BindedPartTouch = Part.Touched:Connect(function(OtherPart)
				if TouchDebounces[OtherPart] == nil and TouchConnections[OtherPart] == true and DisconnectDebounce[OtherPart] == nil then
					TouchDebounces[OtherPart] = true
					ToggleConnect(OtherPart, true)
				end
			end)
		else
			-- Disconnect
			if BindedPartTouch ~= nil then
				BindedPartTouch:Disconnect()
			end
			BindedPartTouch = nil
			
			if WeldRunner ~= nil then
				WeldRunner:Disconnect()
			end
			WeldRunner = nil
			
			BindedPart = nil
		end
	end
	
	-- Fires when the hit status of the hitbox changes
	-- for a particular connected part.
	-- Params:
	-- Index - The Hitbox or BasePart that had its hit status changed
	-- Result - The new hit result of the index (includes hit status)
	Box.HitStatusChanged = Signal.New()

	-- Fires every frame that there is an interfering region
	-- (and if this signal is enabled).
	-- Params:
	-- Index - The Hitbox or BasePart that interfered.
	-- HitResult - The hit results of the hit (see NewHitResults() for details).
	Box.OnHit = Signal.New()
	
	-- Fires when the hitbox stops interfering with a region.
	-- Params:
	-- Index - The Hitbox or BasePart that stopped touching.
	Box.OnHitStop = Signal.New()

	Box.OnDisposal = function()
		-- Disconnect binded part and its .Touched event
		Box.BindToPart(nil)
		
		-- Disconnect parts.
		for i, v in pairs(HitRunners) do
			ToggleConnect(i, false)
		end
		HitRunners = nil
		TouchConnections = nil
		
		-- Dispose.
		Box.OnHit.DisconnectAll()
		Box.OnHitStop.DisconnectAll()
		Box.HitStatusChanged.DisconnectAll()
		
		CurrentlyTouched = nil
		HitStatuses = nil
	end

	return Box
end

return Hitbox]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f6c</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0D060DBFC9EE43AA8B273303C70593F3">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">HItArray</string>
						<string name="ScriptGuid">{6EAE757F-41AD-467D-925F-9E7EAF34E534}</string>
						<ProtectedString name="Source"><![CDATA[-- Provides a hit object list using the Hitbox class. The most
-- recently touched object will have the priority.

-- By udev2192

local RunService = game:GetService("RunService")

local ModulePack = script.Parent

local Utils = ModulePack.Parent:WaitForChild("Utils")

local Hitbox = require(ModulePack:WaitForChild("Hitbox"))

local Object = require(Utils:WaitForChild("Object"))
local Signal = require(Utils:WaitForChild("Signal"))

local HitArray = {}
HitArray.__index = HitArray

local HitStatus = HitArray.GetStatusList()

-- Utility function for getting the list of possible Hitbox
-- HitStatus values.
function HitArray.GetStatusList()
	return HitStatus
end

function HitArray.New()
	local Obj = Object.New("HitArrayList")
	local Array = {}
	local CurrentHitboxes = {}
	
	-- The hit status number that is considered "not touching"
	Obj.TouchStopStatus = HitStatus.NotTouching
	
	-- The hit status number that is considered "touching"
	Obj.TouchStatus = HitStatus.CompletelyInside
	
	-- Status change handler.
	local function OnStatusChange(Part, Result)
		local Status = Result.Status
		local Changed = false
		
		if Status == Obj.TouchStatus then
			Changed = true
			
			-- Add the most recently touched part to the end of the array.
			table.insert(Array, Part)
			
		elseif Status == Obj.TouchStopStatus then
			Changed = true
			
			-- Remove the most recent part that stopped touching
			local Index = table.find(Array, Part)
			if Index ~= nil then
				table.remove(Array, Index)
			end
		end
		
		-- If there was a change, signal it.
		-- The most recent part would be at the end of the list.
		if Changed == true then
			Hitbox.PartChanged.Fire(Array[#Array])
		end
		
		Hitbox.HitboxTouchChanged.Fire(Part, Result)
	end
	
	-- Removes the specified hitbox from modifying the array.
	function Obj.Remove(Hitbox)
		CurrentHitboxes[Hitbox] = nil
		Hitbox.HitStatusChanged.Disconnect(OnStatusChange)
	end
	
	-- Lets the specified hitbox add to the array.
	function Obj.Add(Hitbox)
		if CurrentHitboxes ~= nil then
			CurrentHitboxes[Hitbox] = true
			Hitbox.HitStatusChanged.Connect(OnStatusChange)
		end
	end
	
	-- Fires when a Hitbox's HitStatus changes.
	-- Params:
	-- Part - The box that had its touch status changed
	-- Result - The box's new HitResults
	Obj.HitboxTouchChanged = Signal.New()
	
	-- Fires when the most recently touched part changes.
	-- if the first parameter is nil, no parts are being touched.
	-- Params:
	-- Part - The most recently touched part.
	Obj.PartChanged = Signal.New()
	
	Obj.OnDisposal = function()
		Obj.HitboxTouchChanged.DisconnectAll()
		Obj.PartChanged.DisconnectAll()
		
		for i, v in pairs(CurrentHitboxes) do
			Obj.Remove(Hitbox)
		end
		
		Array, CurrentHitboxes = nil, nil
	end
	
	return Obj
end

return HitArray]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f6d</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBXA406117303B7460F98639916BC17A9EB">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Replicators</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000188c7</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX97DD79FE5AD14A6DB0B77F49ECFA62CE">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">BaseReplicator</string>
						<string name="ScriptGuid">{5505C976-74B9-4AC5-B7A8-7A0E2B2A45B1}</string>
						<ProtectedString name="Source"><![CDATA[--[[
A basic module used to replicate stuff.
Similar to Replica by DataBrain.

Each replicator is referenced by instance name.

The BaseReplicator is basically for security in
client-to-server requests. The class is meant to
be extended by other modules via a subclass.

Rewritten to be much more simple.

The BaseReplicator.GetCurrentTime() function is used for time-sensitive stuff 
to clog the task scheduler the least possible and because
it always uses UTC time.

Timestamps sent by the client are no longer used by the server because
they can be easily be spoofed on platforms like Android without closing
the session

The client's time could also be significantly ahead of the server's,
so don't make checks based on that either

Made by udev2192
]]--

--[[
The name of the remotes folder.
]]--
local REMOTES_FOLDER_NAME = "Remotes"

--[[
The name of the class that does the actual replication.
]]--
local REPLICATION_CLASS_NAME = "RemoteEvent"

--[[
The name of the instance attribute that specifies
a server-set cooldown.
]]--
local COOLDOWN_ATTRIBUTE_NAME = "Cooldown"

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

ReplicatedStorage, RepModules, UtilRepModules = nil

-- do not add "!strict" to the top of this module (otherwise, studio will crash)
type ErrorTable = {Id: number, Message: string}

local BaseReplicator = {}
BaseReplicator.__index = BaseReplicator
BaseReplicator.ClassName = script.Name

--[[
<table> - Numbers for specifying response timeout in milliseconds.
]]--
BaseReplicator.TimeoutValues = {
	NoTimeout = 0,
	Optimal = 5000
}

--[[
<table> - Received message types (for RemoteEvent handling).
		  This is for internal use only.
]]--
BaseReplicator.MessageType = {
	-- Sent as a request
	Request = 0,

	-- Sent as a response from a request
	Response = 1,

	-- Sent as an event (with no response expected)
	Event = 2
}

--[[
Creates a possible error.

Params:
Id <number> - The numerical id of the error
Message <string> - The error message

Returns:
<table> - The created error table ([parameter name] = value)
]]--
function BaseReplicator.CreateError(Id: number, Message: string)
	assert(typeof(Id) == "number", "Argument 1 must be a number.")
	assert(typeof(Message) == "string", "Argument 2 must be a string.")

	return {
		Id = Id,
		Message = Message
	}
end

--[[
Returns:
<table> - The table holding the Signal class.
]]--
function BaseReplicator.GetSignalClass()
	return Signal
end

--[[
<table> - Error messages that may pop-up during a request.
		  Errors aren't limited to the ones provided in this table
		  (for example, an error could occur because of the code
		  or something else).
		  
		  See BaseReplicator.CreateError() for more info.
]]--
BaseReplicator.Errors = {
	Closed = BaseReplicator.CreateError(1, "Requests to the server may have been closed off."),
	Timeout = BaseReplicator.CreateError(2, "Request couldn't be returned before the specified time ran out."),
	Unauthorized = BaseReplicator.CreateError(3, "This request has been denied."),
	Cooldown = BaseReplicator.CreateError(4, "Can't send request while on cooldown"),
	Prevented = BaseReplicator.CreateError(5, "Can't send a request at this time"),
	ZeroTimeout = BaseReplicator.CreateError(6, "Can't send the request because the timeout is set at 0 ms."),
	InvalidTime = BaseReplicator.CreateError(7, "Time format is invalid"),
	InvalidFormat = BaseReplicator.CreateError(8, "Request format is invalid"),
	Blank = BaseReplicator.CreateError(9, "Request is blank"),
	Cancelled = BaseReplicator.CreateError(10, "Request was cancelled"),
	InvalidRequestId = BaseReplicator.CreateError(11, "Request identifier is invalid, or isn't a number."),
	MissingLocation = BaseReplicator.CreateError(12, "The folder housing the remote couldn't be found."),
	Unknown = BaseReplicator.CreateError(13, "Request failed due to an unknown error.")
}

function BaseReplicator.AssertServer()
	assert(RunService:IsServer(), "This action can only be performed from the server.")
end

local function IsFunc(f)
	return f == nil or typeof(f) == "function"
end

local function DoFuncCheck(f)
	assert(f == nil or IsFunc(f), "Property must be a function or nil.")
end

local function IsResponse(MessageType, Response)
	return MessageType == BaseReplicator.MessageType.Response and typeof(Response) == "table"
end

local RemotesFolder

--[[
Initializes BaseReplicator so that it's able to function.
]]--
function BaseReplicator.Enable()
	if RunService:IsServer() then
		RemotesFolder = script:FindFirstChild(REMOTES_FOLDER_NAME)
	else
		RemotesFolder = script:WaitForChild(REMOTES_FOLDER_NAME)
	end

	if RemotesFolder == nil then
		if RunService:IsServer() then
			RemotesFolder = Util.CreateInstance("Folder", {
				Name = REMOTES_FOLDER_NAME,
				Parent = script
			})
		else
			RemotesFolder = nil
			warn("Couldn't find the remotes folder which is needed for", BaseReplicator.ClassName, "to work.")
		end
	end
end

BaseReplicator.Enable()

function BaseReplicator.IsServer()
	return RunService:IsServer()
end

--[[
Returns:
<number> - The current timestamp in milliseconds.
]]--
function BaseReplicator.GetCurrentTime()
	return DateTime.now().UnixTimestampMillis
end

--[[
Creates a dictionary request via the following parameters
(table keys are named after the parameters).

Creating the response with this function is for the sake of
type constraining and not having to.

Params:
RequestId <number> - The identification number of the request
ShouldRespond <boolean> - If a response is expected
TimeSent <number> - When the request was sent in millisecond time.
... <variant> - The arguments to send.

Returns:
<table> - The table created with the following data:
	RequestId <number> - See params
	ShouldRespond <boolean> - See params
	TimeSent <number> - When the request was sent.
	Args <table> - The request arguments in an array.
]]--
function BaseReplicator.CreateRequestParams(RequestId: number, ShouldRespond: boolean, TimeSent: number?, ...: any)
	assert(typeof(RequestId) == "number", "Request identification number (arg #1) is required.")
	assert(typeof(ShouldRespond) == "boolean", "Please specify whether or not a response is expected as a boolean (arg #2).")

	if typeof(TimeSent) ~= "number" then
		TimeSent = nil
	end

	return {
		RequestId = RequestId,
		ShouldRespond = ShouldRespond,
		TimeSent = TimeSent,
		Args = table.pack(...)
	}
end

--[[
Creates a dictionary response via the following parameters
(table keys are named after the parameters).

Creating the response with this function is for the sake of
type constraining and not having to.

The table returned will also have a value called "Ping"
that describes the estimated latency in milliseconds

Params:
RequestId <number> - The request id to send back. This should use the value
					 from the corresponding RequestParams.
TimeSent <number?> - When the corresponding request was sent in millisecond timestamp.
Error <table?> - A table describing the error that occurred
						or nil if no error happened (see BaseReplicator.CreateError() for
						more info).

Data <... any> - The data arguments in the response. Can be any value.

Returns:
<table> - The table created.
]]--
function BaseReplicator.CreateResponse(RequestId: number, TimeSent: number?, Error: ErrorTable, ...: any)
	assert(typeof(RequestId) == "number", "Request identification number (arg #1) is required.")

	if typeof(TimeSent) ~= "number" then
		TimeSent = nil--BaseReplicator.GetCurrentTime()
	end

	if typeof(Error) ~= "table" then
		Error = nil
	end

	return {
		TimeSent = TimeSent,
		Error = Error,
		RequestId = RequestId,
		Data = table.pack(...)
	}
end

-- Constructor
function BaseReplicator.New(Id: string)
	assert(typeof(Id) == "string", "Argument 1 must be a string.")

	local Rep = Object.New(BaseReplicator.ClassName)

	-- RequestIds that are waiting for a response
	local ActiveRequests = {}

	local ServerRespondConnection
	local ClientRespondConnection

	local MainClientReceiver

	Rep.Name = Id

	Id = nil

	--[[
	<number> - How long to wait for a response before cancelling
			   the corresponding request (in milliseconds).
			   Set to 0 for no timeout.
	]]--
	Rep.Timeout = BaseReplicator.TimeoutValues.NoTimeout

	--[[
	<number> - Millisecond timestamp when the last request was sent.
	]]--
	Rep.LastSentAt = 0
	
	--[[
	<number> - The remaining cooldown wait in seconds
	]]--
	Rep.CooldownRemaining = 0
	
	--[[
	<boolean> - Whether or not the current device will wait until the cooldown
				has expired before sending another request		.
				This timer starts right after sending the request
	]]--
	Rep.AutoCooldownWaitEnabled = true
	
	--[[
	<boolean> - Whether or not the cooldown timer is active for the current device
	]]--
	Rep.IsCooldownActive = false

	-- Function for using the corresponding callback.
	local function UseCallback(RequestParams, ...)
		local Callback

		if RunService:IsServer() then
			Callback = Rep.ServerCallback
		else
			Callback = Rep.ClientCallback
		end

		if Callback ~= nil then
			return Callback(RequestParams, ...)
		end

		return nil
	end
	
	--[[
	Starts the request cooldown timer
	
	Params:
	Cooldown <number> - The cooldown period
	]]--
	function Rep.WaitForCooldown(Cooldown: number)
		Rep.CooldownRemaining = Cooldown
		
		if Cooldown > 0 then
			Rep.IsCooldownActive = true
			--print("start cooldown", Rep.CooldownRemaining)
			
			while Rep.CooldownRemaining > 0 do
				--print("cooldown remaining", Rep.CooldownRemaining)
				Rep.CooldownRemaining = math.max(Rep.CooldownRemaining - task.wait(), 0)
			end
			
			--print("cooldown end", Rep.CooldownRemaining)
		end
		
		Rep.IsCooldownActive = false
	end

	--[[
	Returns:
	<table> - A dictionary of information regarding whether a
			  request across the server-client boundary can be made.
			  Contents include:
			  
			  CanSend <boolean>: Whether or not a request can be made based on
			  					 two factors: cooldown and remote presence.
			  
			  Time <number>: Millisecond timestamp that the inquiry was made on.
			  
			  Container <Folder>: The folder instance containing the replication
			  				   	  instance(s) and the cooldown attribute.
			  
			  Remote <RemoteEvent>: The actual remote that will be doing the
			  						replication (should be inside the folder).
			  				   	  
	]]--
	function Rep.CanSendRequest()
		local CurrentTime = BaseReplicator.GetCurrentTime()

		local Response = {
			Time = CurrentTime,

			-- Cooldown time remaining in milliseconds
			CooldownRemaining = 0,

			-- Total cooldown time specified by the server in milliseconds
			CooldownTime = 0
		}

		local IsSendable = false
		local ErrorMessage = nil

		local Name = Rep.Name
		local Folder = RemotesFolder:FindFirstChild(Name)
		if Name ~= nil and Folder ~= nil then
			Response.Container = Folder

			-- Get the cooldown
			local Cooldown
			if RunService:IsServer() then
				Cooldown = Rep.CooldownTime
			else
				Cooldown = Folder:GetAttribute(COOLDOWN_ATTRIBUTE_NAME)
			end
			Rep.CooldownTime = Cooldown

			local Remote = Folder:FindFirstChildOfClass(REPLICATION_CLASS_NAME)
			if Remote ~= nil then
				Response.Remote = Remote

				-- Use greater than, just to stay safe
				local LastSentAt = Rep.LastSentAt

				if Cooldown ~= nil then					
					if RunService:IsServer() or Cooldown == 0 or (Rep.IsCooldownActive == false and Rep.CooldownRemaining <= 0) then
						IsSendable = true
					else
						--Response.CooldownRemaining = math.max(CurrentTime - LastSentAt, 0)
						ErrorMessage = BaseReplicator.Errors.Cooldown
					end
				else
					warn("Cannot send request, no cooldown was provided.")
				end
			else
				ErrorMessage = BaseReplicator.Errors.Closed
			end
		else
			ErrorMessage = BaseReplicator.Errors.Closed
		end

		Response.CanSend = IsSendable
		Response.Error = ErrorMessage

		return Response
	end

	--[[
		<function> - The callback used whenever an error occurs
					 after a request was sent.
					 
		Callback params:
		Player <Player> - The player instance that sent the request which
						  resulted in an error. If the request isn't from
						  a client, this argument is nil.
		Error <table> - The error table. See BaseReplicator.CreateError() and BaseReplicator.Errors for
						more info
		RequestParams <table> - The request parameters. Please
								note that this isn't guaranteed to
								be a table (if it isn't,
								the BaseReplicator.InvalidFormat error
								is used).
	]]--
	Rep.SetProperty("OnError", nil, DoFuncCheck)

	--[[
	Fires the error callback.
	
	Parameters are the same as those for the OnError callback.
	]]--
	function Rep.Error(Player: Player, Error: ErrorTable, RequestParams)
		local OnError = Rep.OnError
		if OnError then
			OnError(Player, Error, RequestParams)
		end
	end

	-- Make sure the player object passed here is a player or nil
	local function HandleRequest(RequestParams: {}, Player: Player?, Remote: RemoteEvent)
		local SendError

		-- Do sanity checks for argument types and sending time
		if typeof(RequestParams) == "table" then
			local RequestId = RequestParams.RequestId

			if typeof(RequestId) == "number" then
				local IsTimeValid
				local TimeSent
				local IsServer = RunService:IsServer()
				if RunService:IsClient() then
					TimeSent = RequestParams.TimeSent
					IsTimeValid = typeof(TimeSent) == "number"
				elseif IsServer then
					-- Don't check client-sent time
					IsTimeValid = true
				else
					IsTimeValid = false
				end
				
				if IsTimeValid then
					local Args = RequestParams.Args

					if typeof(Args) == "table" then
						--RequestParams.ReceiveTime = CurrentTime
						Rep.RequestReceived.Fire(Player, RequestParams)

						-- Handle a requested response if told to do so
						local ShouldRespond = RequestParams.ShouldRespond
						if typeof(ShouldRespond) == "boolean" then
							if ShouldRespond == true then
								local Data = UseCallback(Player, RequestParams, table.unpack(Args))
								local MessageRespond = BaseReplicator.MessageType.Response

								if IsServer then
									Remote:FireClient(
										Player,
										MessageRespond,
										BaseReplicator.CreateResponse(
											RequestId,
											TimeSent,
											nil,
											Data
										)
									)
								else
									Remote:FireServer(
										MessageRespond,
										BaseReplicator.CreateResponse(
											RequestId,
											nil,--TimeSent,
											nil,
											Data
										)
									)
								end

								return
							end
						else
							SendError = BaseReplicator.Errors.InvalidFormat
						end
					else
						SendError = BaseReplicator.Errors.InvalidFormat
					end
				else
					SendError = BaseReplicator.Errors.InvalidTime
				end
			else
				SendError = BaseReplicator.Errors.InvalidRequestId
			end
		else
			SendError = BaseReplicator.Errors.InvalidFormat
		end

		-- If there's an error, pass it to the callback
		if SendError then
			Rep.Error(Player, SendError, RequestParams)
		end
	end

	--[[
	Server only stuff.
	
	Anything here is only accessible from the server.
	]]--
	if RunService:IsServer() then
		local IsOpen = false

		--[[
		<table> - Whitelisted player IDs
		]]--
		local Whitelist = {}

		--[[
		<table> - Player IDs on cooldown
		]]--
		local PlayerCooldown = {}

		local MainServerReceiver

		--[[
		<boolean> - If the player id whitelist is being used.
		]]--
		Rep.UsePlayerWhitelist = true

		local function GetContainer()
			return Rep.CanSendRequest().Container
		end

		--[[
		<number> - The duration in milliseconds that players have
			       to wait before sending another request.
			       This number only applies on the server for
			       security reasons.
		]]--
		Rep.SetProperty("CooldownTime", 0, function(NewCooldown)
			BaseReplicator.AssertServer()

			-- Try to set the attribute on the container
			local Container = GetContainer()
			if Container ~= nil then
				Container:SetAttribute(COOLDOWN_ATTRIBUTE_NAME, NewCooldown or 0)
			end

			Container = nil
		end)

		--[[
		<function> - The callback set for the server
				   	 (or nil if there isn't one).
				   	 
		Callback params:
		Player <Player> - The player instance that sent the request
		RequestParams <table> - The request parameters table.
								See BaseReplicator.CreateRequestParams()
								for more info.
		... <variant> - The developer-defined arguments.
		]]--
		Rep.SetProperty("ServerCallback", nil, function(f)
			BaseReplicator.AssertServer()
			DoFuncCheck(f)
		end)

		--[[
		Adds a player's user id to the cooldown.
		
		Params:
		UserId <number> - The user id to place on the cooldown.
		]]--
		function Rep.AddToCooldown(UserId)
			local Cooldown = Rep.CooldownTime

			-- Initially check if a cooldown is needed
			-- by seeing if the cooldown is greater than 0 ms
			-- and that the user id isn't already cooling down
			if Cooldown ~= nil and table.find(PlayerCooldown, UserId) == nil then
				table.insert(PlayerCooldown, UserId)

				task.delay(Cooldown / 1000, function()
					local Index = table.find(PlayerCooldown, UserId)
					if Index ~= nil then
						table.remove(PlayerCooldown, Index)
					end
				end)
			end
		end

		--[[
		Removes a user id from the whitelist.
		
		Params:
		Id <number> - The user id to remove.
		]]--
		function Rep.RemoveFromWhitelist(Id)
			local Index = table.find(Whitelist, Id)

			if Index ~= nil then
				table.remove(Whitelist, Index)
			end
		end

		--[[
		Adds a user id to the whitelist.
		
		Params:
		Id <number> - The user id to add.
		]]--
		function Rep.AddToWhitelist(Id)
			table.insert(Whitelist, Id)
		end

		--[[
		Disconnects the remote event receiver and destroys it.
		]]--
		function Rep.Close()
			BaseReplicator.AssertServer()

			IsOpen = false

			local Container = GetContainer()
			if Container ~= nil then
				Container:Destroy()
				Container = nil
			end

			if MainServerReceiver ~= nil then
				MainServerReceiver:Disconnect()
				MainServerReceiver = nil
			end
		end

		--[[
		Connects a listener to a server handling and
		creates the instances needed for replication.
		]]--
		function Rep.Open()
			BaseReplicator.AssertServer()

			if IsOpen == false then
				local Container = Instance.new("Folder")
				Container.Name = Rep.Name
				Container:SetAttribute(COOLDOWN_ATTRIBUTE_NAME, Rep.CooldownTime)

				local Remote = Instance.new(REPLICATION_CLASS_NAME)

				--[[
				<function> - The server listener. This is where
							 the security is handled.
				]]--
				MainServerReceiver = Remote.OnServerEvent:Connect(function(Player, MessageType, RequestParams)
					local UserId = Player.UserId
					local Errors = BaseReplicator.Errors
					local SendError

					if (Rep.UsePlayerWhitelist == false or table.find(Whitelist, UserId)) then
						if table.find(PlayerCooldown, UserId) == nil then
							if MessageType == BaseReplicator.MessageType.Request then
								Rep.AddToCooldown(UserId)
								HandleRequest(RequestParams, Player, Remote)
							end							
						else
							SendError = Errors.Cooldown
						end
					else
						SendError = Errors.Unauthorized
					end

					if SendError then
						Rep.Error(Player, SendError, RequestParams)
					end

					--UserId = nil

					-- Use the error callback if one happened
					-- The error is not passed back to avoid
					-- crashing via data sending by default
					--if SendError ~= nil then
					--	local OnError = Rep.OnError

					--	if OnError ~= nil then
					--		if RequestParams ~= nil then

					--		end

					--		OnError(Player, SendError, RequestParams)
					--	end
					--end
				end)

				Remote.Parent = Container
				Container.Parent = RemotesFolder

				Container = nil
			end

			IsOpen = true
		end
	end

	--[[
	<function> - The callback set for the client
				 (or nil if there isn't one).
				 
	Callback params:
	RequestParams <table> - The request parameters table.
							See BaseReplicator.CreateRequestParams()
							for more info.
	... <variant> - The developer-defined arguments.
	]]--
	Rep.SetProperty("ClientCallback", nil, DoFuncCheck)

	--[[
	Closes the main client listener needed for messages
	sent to the client.
	]]--
	function Rep.CloseClient()
		if MainClientReceiver ~= nil then
			MainClientReceiver:Disconnect()
			MainClientReceiver = nil
		end
	end

	--[[
	Opens the main client listener needed for messages
	sent to the client.
	]]--
	function Rep.OpenClient()
		if MainClientReceiver == nil then
			local Remote = Rep.CanSendRequest().Remote

			if Remote then
				MainClientReceiver = Remote.OnClientEvent:Connect(function(MessageType, RequestParams)
					if MessageType == BaseReplicator.MessageType.Request then
						HandleRequest(RequestParams, nil, Remote)
					end
				end)
			end
		end
	end

	--[[
	Returns true if the specified request id is active (waiting for a response),
	or false if not.
	
	Params:
	RequestId <number> - The request id to check
	
	Returns:
	<boolean> - If the request id is active.
	]]--
	function Rep.IsRequestActive(RequestId)
		return table.find(ActiveRequests, RequestId) ~= nil
	end

	local function RemoveRequestId(RequestId: number)
		local Index = table.find(ActiveRequests, RequestId)

		if Index then
			table.remove(ActiveRequests, Index)
		end
	end

	--[[
	Cancels a request that expected a response.
	
	Params:
	RequestId <number> - The id of the request to cancel
	]]--
	function Rep.Cancel(RequestId: number)
		assert(typeof(RequestId) == "number", "Argument 1 must be a number.")

		RemoveRequestId(RequestId)

		Rep.ResponseReceived.Fire(
			BaseReplicator.CreateResponse(
				RequestId,
				BaseReplicator.GetCurrentTime(),
				BaseReplicator.Errors.Cancelled
			)
		)
	end

	--[[
	Cancels all requests that expected a response and
	notifies on each clear.
	]]--
	function Rep.CancelAll()
		--for i, v in ipairs(Connections) do
		--	Connections:Disconnect()
		--	table.remove(Connections, i)
		--end

		for i, v in pairs(ActiveRequests) do
			Rep.Cancel(v)
		end
	end

	local function DisconnectResponseRemote()
		if ServerRespondConnection then
			ServerRespondConnection:Disconnect()
			ServerRespondConnection = nil
		end

		if ClientRespondConnection then
			ClientRespondConnection:Disconnect()
			ClientRespondConnection = nil
		end
	end

	local function HandleResponse(Response)
		--if Connection ~= nil then
		--	Connection:Disconnect()
		--	Connection = nil

		--	local ConnectionIndex = table.find(Connections, Connection)
		--	if ConnectionIndex ~= nil then
		--		table.remove(Connections, ConnectionIndex)
		--	end
		--	ConnectionIndex = nil
		--end

		if typeof(Response) == "table" then
			local RequestId = Response.RequestId

			if typeof(RequestId) == "number" then -- Sanity check
				--local Index = table.find(ActiveRequests, RequestId)
				--if Index then
				--	table.remove(ActiveRequests, Index)
				--end
				RemoveRequestId(RequestId)

				-- Disconnect listener if there are no active requests left
				if #ActiveRequests <= 0 then
					DisconnectResponseRemote()
				end

				-- Fire response event
				--Response.ReceiveTime = BaseReplicator.GetCurrentTime()
				Rep.ResponseReceived.Fire(Response)
			end
		end
	end

	-- Adds a request id to the queue
	local function AddRequestId(RequestId: number)
		assert(Rep.IsRequestActive(RequestId) == false, "Request #" .. RequestId .. " is still active.")
		table.insert(ActiveRequests, RequestId)

		local Timeout = Rep.Timeout
		if Timeout > BaseReplicator.TimeoutValues.NoTimeout then
			Timeout /= 1000

			task.spawn(function()
				local Elapsed = 0

				while true do
					-- Drop the request once the cooldown expires
					if Elapsed > Timeout and Rep.IsRequestActive(RequestId) then
						-- Indicate that the timeout expired
						HandleResponse(
							BaseReplicator.CreateResponse(
								RequestId,
								BaseReplicator.GetCurrentTime(),
								BaseReplicator.Errors.Timeout
							)
						)

						break
					elseif Rep.IsRequestActive(RequestId) == false then
						break
					end

					Elapsed += task.wait()
				end
			end)
		end
	end

	local function ConnectResponseRemote(Remote: RemoteEvent)
		if RunService:IsServer() then
			if ServerRespondConnection == nil then
				ServerRespondConnection = Remote.OnServerEvent:Connect(function(Player, MsgType, Response)
					if IsResponse(MsgType, Response) then
						Response.Sender = Player

						HandleResponse(Response)
					end
				end)
			end
		else
			if ClientRespondConnection == nil then
				ClientRespondConnection = Remote.OnClientEvent:Connect(function(MsgType, Response)
					if IsResponse(MsgType, Response) then
						HandleResponse(Response)
					end
				end)
			end
		end
	end


	--[[
	Sends a request across the server-client boundary.
	
	Params:
	RequestParams <table> - A table of parameters to send made by CreateRequestParams()
	Player <Player?> - An argument used by the server to specify which player to send the
					   request to. Leave this as nil to send to all players.
	]]--
	function Rep.Request(RequestParams, Player: Player?)
		assert(typeof(RequestParams) == "table", "Argument 1 must be a table.")

		local RequestId: number = RequestParams.RequestId
		assert(typeof(RequestId) == "number", "RequestParams does not specify request identification number.")

		-- Make the request
		--local Timeout = Rep.Timeout / 1000
		local Inquiry = Rep.CanSendRequest()
		local SendTime = Inquiry.Time

		local Connection

		if Inquiry.CanSend == true then
			Rep.LastSentAt = SendTime

			-- Stuff used to send
			local Remote = Inquiry.Remote
			--local RequestParams = BaseReplicator.CreateRequestParams(SendTime, ...)
			local ResponseReceived = false

			-- If a response is expected, keep note of that
			if RequestParams.ShouldRespond == true then
				AddRequestId(RequestId)
				ConnectResponseRemote(Remote)
			end

			-- Listen for the first response received, then fire
			local MessageRequest = BaseReplicator.MessageType.Request
			if RunService:IsServer() then
				if Player then
					Remote:FireClient(Player, MessageRequest, RequestParams)
				else
					Remote:FireAllClients(MessageRequest, RequestParams)
				end
			else
				Remote:FireServer(MessageRequest, RequestParams)
			end
			
			Rep.IsCooldownActive = true
			task.spawn(Rep.WaitForCooldown, Rep.CooldownTime / 1000)
			--print("request sent", Rep.CooldownTime / 1000)

			return
		else
			-- Indicate the request being cancelled, as it's not ready
			-- to make one
			HandleResponse(
				BaseReplicator.CreateResponse(
					RequestParams.RequestId,
					Inquiry.Time,
					Inquiry.Error
				)
			)
		end
	end

	--[[
	Fired when a request has been received. Listeners binded
	to this signal do not affect the response returned
	by a Request() call.
	
	Params:
	Player <Player> - The player instance that sent the message.
					  If this isn't the server, 
					  this argument is nil.
	RequestParams <table> - The request parameters in a table.
	]]--
	Rep.RequestReceived = Signal.New()

	--[[
	Fired when a response has been received from a Request() call.
	
	Along with the keys from CreateResponse(), the response table
	passed here will also include:
	
	ReceiveTime <number> - The millisecond timestamp when the response
						   was received.
	
	Sender <Player> - If the response came from a client, this
					  describes the player instance that sent it,
					  nil if it didn't.
	
	Params:
	Response <table> - A response table generated by
					   BaseReplicator.CreateResponse()
	]]--
	Rep.ResponseReceived = Signal.New()

	Rep.OnDisposal = function()
		DisconnectResponseRemote()
		Rep.RequestReceived.DisconnectAll()
		Rep.ResponseReceived.DisconnectAll()

		Rep.CancelAll()

		if RunService:IsServer() then
			local CloseFunc = Rep.Close

			if CloseFunc ~= nil then
				CloseFunc()
			end

			CloseFunc = nil
		end
	end

	return Rep
end

return BaseReplicator]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f6e</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX947AED629C0D4351848ED5F9593BB608">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ProjectileSender</string>
						<string name="ScriptGuid">{94C5C238-48FB-4086-83A8-67F793FEE525}</string>
						<ProtectedString name="Source"><![CDATA[-- Module for sending projectiles spawned on the client to
-- be visible by other clients.
-- By udev2192

-- Finish later lol
return true]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f6f</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXED0ECD898372435A81BF97C86D85813E">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">SpeedTest</string>
						<string name="ScriptGuid">{509EE588-B01A-4DA4-8BA1-3A04FCF88A8C}</string>
						<ProtectedString name="Source"><![CDATA[-- A test for BaseReplicator.
-- By udev2192

local Replicators = script.Parent

local Base = require(Replicators:WaitForChild("BaseReplicator"))

local SpeedTest = {}

-- Testing flags
local USE_WHITELIST = true
local KICK_ENABLED = false
local COOLDOWN_TIME = 1000
local NOT_SO_SECRET_NUMBER = 21
local OUTPUT_ENABLED = true

function SpeedTest.GetBaseReplicator()
	return Base
end

function SpeedTest.New()
	local TestReplicator = Base.New("SpeedTestReplicator")
	
	-- Do test replicator setup
	if Base.IsServer() then
		-- Toggle flags
		TestReplicator.UsePlayerWhitelist = USE_WHITELIST
		TestReplicator.KickingEnabled = KICK_ENABLED
		TestReplicator.CooldownTime = COOLDOWN_TIME
		
		if KICK_ENABLED == true then
			TestReplicator.OnError = function(Player, Error, RequestParams)
				Player:Kick(Error or "lol")
			end
		end

		-- Setup the listeners.
		TestReplicator.RequestReceived.Connect(function(Player)
			if OUTPUT_ENABLED then
				print("Request received by server from", Player.Name)
			end
		end)

		TestReplicator.ServerCallback = function(Player, RequestParams, RandomNumber)
			if OUTPUT_ENABLED then
				print("Request id:", RequestParams.RequestId)
				print("Server callback arguments:", Player.Name, RandomNumber)
			end

			return "please work thanks"
		end
	end
	
	return TestReplicator
end

return SpeedTest]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f70</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXB6AF7F7EAA6847B1851012402AFA4BDF">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">WeaponReplicator</string>
						<string name="ScriptGuid">{06CB4685-B440-4EA8-BBBB-4FD6063E0CDD}</string>
						<ProtectedString name="Source"><![CDATA[-- The replicator for weapons.
local Replicators = script.Parent

local Base = require(Replicators:WaitForChild("BaseReplicator"))

local WeaponReplicator = {}

function WeaponReplicator.New(Weapon)
	assert(typeof(Weapon) == "table", "Argument 1 must be a BaseWeapon.")
	
	local BaseRep = Base.New(Weapon.Name)
	
	if Base.IsServer() then
		BaseRep.CooldownTime = Weapon.FireCooldown
	end
	
	return BaseRep
end

return WeaponReplicator]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f71</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXBE18BEC7429E4991B1977978CC9B9291">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">LivesTracker</string>
						<string name="ScriptGuid">{E5E6B3B3-C230-4AB4-B10C-5104C398F75C}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Tracks the amount of lives each player has. This is needed because
handling it almost completely on the client will result in inaccuracies
when players die.

This module assumes that characters tracked have humanoids. Do not use this
if humanoids will be removed before death.

By udev2192
]]--

local BaseReplicator = require(script.Parent:WaitForChild("BaseReplicator"))

local LivesTracker = {}
LivesTracker.__index = LivesTracker

LivesTracker.RequestCooldownTime = math.max(0, game:GetService("Players").RespawnTime - 0.1)

function LivesTracker.New()
	local Rep = BaseReplicator.New(script.Name)
	
	-- The minimum amount of lives.
	Rep.MinLives = 0
	
	-- The maximum amount of lives.
	Rep.MaxLives = 3
	
	return Rep
end

return LivesTracker]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f72</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXA458680954674CB89FD42514E020622B">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">OldBaseReplicator</string>
						<string name="ScriptGuid">{A0FC183F-CFFB-4DC7-BBB7-14FD2C36D324}</string>
						<ProtectedString name="Source"><![CDATA[--[[
A basic module used to replicate stuff.
Similar to Replica by DataBrain.

Each replicator is referenced by instance name.

The BaseReplicator is basically for security in
client-to-server requests. The class is meant to
be extended by other modules.

Made by udev2192
]]--

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local PLAYER_ARGUMENT_INDEX = 1
local GLOBAL_INDICATOR = "ReplicatorContents"

local REMOTE_EVENT_ID = "_Event"
local REMOTE_FUNC_ID = "_Function"

-- If this is true, players who error the callback
-- when the server calls InvokeClient() will be kicked.
local CLIENT_INVOKE_KICKING = true

local BaseReplicator = {}
local Connections = {}

local RemoteFolder = nil

-- Server-client enums.
BaseReplicator.Client = 0
BaseReplicator.Server = 1

local function DoIsServerCheck()
	assert(RunService:IsServer(), "This action can only be performed from the server.")
end

local function IsFunc(f)
	return typeof(f) == "function"
end

local function IsPlayer(Player)
	return Player ~= nil and typeof(Player) == "Instance" and Player:IsA("Player")
end

-- Checks if the client-to-server request is valid
local function IsRequestValid(Replicator, Player)
	if RunService:IsServer() == true then
		if Replicator ~= nil then
			if IsPlayer(Player) then
				
				-- Check if the direction of the request is valid, if the player is whitelisted, and if the player is on send cooldown.
				if Replicator.ServerUseOnly == false and Replicator.IsWhitelisted(Player) and Replicator.IsOnCooldown(Player) == false then
					return true
				else
					-- Kick for sending the request from the client to the server
					-- when unauthorized.
					if Replicator.KickingEnabled then
						Player:Kick("Unauthorized request.")
					end

					return false
				end
			else
				return false
			end
		else
			return false
		end
	else
		-- Sanity checks aren't done on the client, so return true.
		return true
	end
end

-- Initializes/disposes the global table.
-- The global table for the server only.
local function ToggleGlobalTable(Enabled)
	DoIsServerCheck()
	
	if Enabled == true then
		if _G[GLOBAL_INDICATOR] == nil then
			_G[GLOBAL_INDICATOR] = {}
		end
	else
		_G[GLOBAL_INDICATOR] = nil
	end
end

local function GetGlobal(idx)
	return _G[GLOBAL_INDICATOR][idx]
end

local function SetGlobal(idx, val)
	_G[GLOBAL_INDICATOR][idx] = val
end

local function GetRemotesFolder()
	return RemoteFolder or script:WaitForChild(GLOBAL_INDICATOR, 5)
end

-- Creates a remote set for the replicator id
local function CreateReplicatorRemotes(Id)
	assert(typeof(Id) == "string", "Argument 1 must be a string.")

	DoIsServerCheck()
	
	local RemFolder = GetRemotesFolder()

	local RemEvent = Util.CreateInstance("RemoteEvent", {
		Name = Id .. REMOTE_EVENT_ID,
		Parent = RemFolder
	})

	local RemFunc = Util.CreateInstance("RemoteFunction", {
		Name = Id .. REMOTE_FUNC_ID,
		Parent = RemFolder
	})
	
	RemFolder = nil

	return RemEvent, RemFunc
end

local function GetReplicatorRemotes(Id)
	local RemFolder = GetRemotesFolder()
	
	if RemFolder ~= nil then
		local RemEvent = RemFolder:WaitForChild(Id .. REMOTE_EVENT_ID)
		local RemFunction = RemFolder:WaitForChild(Id .. REMOTE_FUNC_ID)
		
		return RemEvent, RemFunction
	else
		warn("Couldn't load the remotes folder.")
		return nil
	end
end

local function AddReplicator(id, rep)
	local RemEvent, RemFunction = nil, nil
	
	-- Connect event listeners.
	if RunService:IsServer() then
		RemEvent, RemFunction = CreateReplicatorRemotes(id)
		
		RemEvent.OnServerEvent:Connect(function(Player, ...)
			if IsRequestValid(rep, Player) then
				rep.FireServerListeners(Player, ...)
			end
		end)
		RemFunction.OnServerInvoke = function(Player, ...)
			if IsRequestValid(rep, Player) then
				local func = rep.ServerCallback
				if IsFunc(func) then
					return func(Player, ...)
				else
					return nil
				end
			else
				return nil
			end
		end
	else
		RemEvent, RemFunction = GetReplicatorRemotes(id)
		
		RemEvent.OnClientEvent:Connect(rep.FireClientListeners)
		RemFunction.OnClientInvoke = function(...)
			local func = rep.ClientCallback
			if IsFunc(func) then
				return func(...)
			end
		end
	end
	
	-- Events will be disconnected once the remotes get destroyed
end

local function DeleteReplicator(id)
	-- Destroy replicator remotes
	local Event, Func = GetReplicatorRemotes(id)
	if Event ~= nil then
		Event:Destroy()
	end
	if Func ~= nil then
		Func:Destroy()
	end
	Event, Func = nil, nil
end

-- IsReturning = true means RemoteFunction, otherwise,
-- it means RemoteEvent
local function FireReplicatorCallbacks(IsReturning, Id, ...)
	if BaseReplicator ~= nil then
		-- Get remotes.
		local RemEvent, RemFunction = GetReplicatorRemotes(Id)
		if RemEvent ~= nil and RemFunction ~= nil then
			local Remotes = {
				Event = RemEvent,
				Function = RemFunction
			}
			RemEvent, RemFunction = nil, nil

			-- Fire the callback.
			if IsReturning == true then
				local remote = Remotes.Function
				if remote ~= nil then
					if RunService:IsServer() then
						local Args = {...}
						local Player = Args[1]

						if IsPlayer(Player) then
							table.remove(Args, 1) -- Remove the player from the sent arguments.
							local Success, Result = pcall(function()
								return remote:InvokeClient(Player, Id, table.unpack(Args))
							end)

							-- If the client errors the request, assume they are
							-- exploiting, so kick them.
							if Success ~= true and CLIENT_INVOKE_KICKING then
								Player:Kick("no")
							end

							return Result
						end
					else
						return remote:InvokeServer(...)
					end
				end
			else
				local remote = Remotes.Event
				if remote ~= nil then
					if RunService:IsServer() then
						remote:FireClient(...)
					else
						remote:FireServer(...)
					end
				end
			end
		end
	end
end

-- Splits the player argument from the rest of the table,
-- then returns the result as two values.
local function SplitPlayerArgument(Args)
	if typeof(PLAYER_ARGUMENT_INDEX) == "number" then
		local Player = Args[PLAYER_ARGUMENT_INDEX]
		table.remove(Args, PLAYER_ARGUMENT_INDEX)
		
		return Player, Args
	end
end

-- Toggles internal instance event connections.
local function ToggleEvents(Enabled)
	local Remotes = GetGlobal("Remotes")

	if Remotes ~= nil then
		local RemoteEvent = Remotes.RemoteEvent
		local RemoteFunction = Remotes.RemoteFunction

		if RunService:IsServer() then
			Connections.ServerEvent = RemoteEvent.OnServerEvent:Connect(function(Player, Id, ...)
				local Replicators = GetGlobal("Replicators")
				if Replicators ~= nil then
					local Rep = Replicators[Id]
					if Rep ~= nil then
						if IsRequestValid(Rep, Player) == true then
							-- Fire replicator listeners.
							BaseReplicator.FireListeners(Player, ...)
						end
					else
						return
					end
				end
			end)
		else
			Connections.ClientEvent = RemoteEvent.OnClientEvent:Connect(function(Id, ...)
				local Replicators = GetGlobal("Replicators")
				if Replicators ~= nil then
					local Rep = Replicators[Id]
					if Rep ~= nil then
						BaseReplicator.FireListeners(...)
					else
						return
					end
				end
			end)
		end
	end
end

local function DoListenerFuncCheck(id, f)
	assert(id ~= nil, "Argument #1 cannot be nil.")
	assert(typeof(f) == "function", "Argument #2 must be a function.")
end

local function DoesReplicatorExist(Id)
	return GetGlobal("Replicators")[Id] ~= nil
end

-- Returns the server-side variant of the Replicator specified.
-- It will contain all the security properties and functions.
local function GetServerVariant(Rep)
	DoIsServerCheck()
	
	local Id = Rep.Id
	local Whitelisted = {} -- Whitelisted players.
	local Cooldown = {} -- Players on send cooldown.
	
	Rep.ServerListeners = {}
	
	Rep.IsServerVariant = true
	
	-- Sets if future sends/requests from clients go through
	-- a player UserId whitelist.
	-- If this is true and an unauthorized client sends a request,
	-- they are kicked if SECURITY_KICKING_ENABLED is true.
	Rep.UsesWhitelist = true

	-- Determines if only sending data to clients is permitted.
	-- If this and KickingEnabled are both set to true,
	-- clients that send requests will be kicked.
	Rep.ServerUseOnly = false

	-- Sets if kicking a player is enabled when they send a
	-- request invalidly.
	Rep.KickingEnabled = false
	
	-- Cooldown period between each client-to-server request in seconds.
	Rep.CooldownTime = 0
	
	-- The callback used for Obj.Request() on the server.
	-- Type: function(...)
	Rep.ServerCallback = nil
	
	-- If the 
	
	-- Returns if the player passes the security checks.
	local function PassesChecks(Player)
		return Rep.IsWhitelisted(Player) and Rep.IsOnCooldown(Player) == false
	end

	-- Adds a player to the cooldown.
	local function AddPlayerToCooldown(Player)
		local Time = Rep.CooldownTime

		if typeof(Time) == "number" and Time > 0 then
			coroutine.wrap(function()
				-- Cooldown the player.
				Cooldown[Player] = true

				-- Wait.
				local Elapsed = 0
				while Cooldown ~= nil and Elapsed < Time do
					Elapsed += RunService.Heartbeat:Wait()
				end

				if Cooldown ~= nil then -- In case Dispose() was done before time is up.
					Cooldown[Player] = nil -- Take the player off the cooldown.
				end
			end)()
		end
	end
	
	-- Adds a server listener
	function Rep.AddServerListener(f)
		DoIsServerCheck()
		
		if IsFunc(f) then
			Rep.ServerListeners[f] = f
		end
	end
	
	-- Removes a server listener.
	function Rep.RemoveServerListener(f)
		Rep.ServerListeners[f] = nil
	end
	
	-- Clears all server remote listeners.
	function Rep.ClearServerListeners()
		Rep.ServerListeners = {}
	end
	
	-- Adds a player to the whitelist.
	function Rep.AddToWhitelist(Player)
		assert(IsPlayer(Player), "Argument 1 must be a Player instance.")
		
		Whitelisted[Player.UserId] = true
	end
	
	-- Removes a player from the whitelist.
	function Rep.RemoveFromWhitelist(Player)
		assert(IsPlayer(Player), "Argument 1 must be a Player instance.")
		
		Whitelisted[Player.UserId] = nil
	end
	
	-- Clears the stored player whitelist.
	function Rep.ClearWhitelist()
		for i, v in pairs(Whitelisted) do
			Rep.RemoveFromWhitelist(v)
		end
	end
	
	-- Fires all of the replicator's server listeners.
	function Rep.FireServerListeners(Player, ...)
		if IsPlayer(Player) == true then
			AddPlayerToCooldown(Player)
			
			local Listeners = Rep.ServerListeners

			if typeof(Listeners) == "table" then
				for i, v in pairs(Listeners) do
					if typeof(v) == "function" then
						-- Call the listener.
						v(Player, ...)
					end
				end
			end

			Listeners = nil
		end
	end
	
	-- Rep.Send for server-side usage.
	function Rep.SendToClient(Player, ...)
		DoIsServerCheck()
		Rep.Send(Player, ...)
	end
	
	-- Returns true if the player is whitelisted or if
	-- whitelisting isn't in use.
	function Rep.IsWhitelisted(Player)
		return Rep.UsesWhitelist == false or Whitelisted[Player] == true
	end
	
	-- Returns true if the specified player isn't in the cooldown.
	function Rep.IsOnCooldown(Player)
		return Cooldown[Player] ~= nil
	end
	
	-- Server disposal callback.
	Rep.OnDisposal = function()
		Whitelisted = nil
		Cooldown = nil

		if RunService:IsServer() then
			DeleteReplicator(Id)
		end
		
		Id = nil
	end
	
	return Rep
end

-- Initalization function.
local function Initialize()
	assert(RunService:IsServer(), "Lol nope")
	
	-- Initialize the table.
	ToggleGlobalTable(true)

	if _G[GLOBAL_INDICATOR].IsInitialized == nil then
		SetGlobal("IsInitialized", true)
		_G[GLOBAL_INDICATOR].Replicators = {}

		-- Create instances.
		RemoteFolder = Util.CreateInstance("Folder", {
			Name = GLOBAL_INDICATOR,
			Parent = script
		})

		--local RemoteEvent = Util.CreateInstance("RemoteEvent", {
		--	Name = GLOBAL_INDICATOR .. "RemEvent",
		--	Parent = RemoteFolder
		--})

		--local RemoteFunction = Util.CreateInstance("RemoteFunction", {
		--	Name = GLOBAL_INDICATOR .. "RemFunction",
		--	Parent = RemoteFolder
		--})
		
		SetGlobal("RemotesFolder", RemoteFolder)
		
		--local Remotes = {}
		--Remotes.Event = RemoteEvent
		--Remotes.Function = RemoteFunction
		--RemoteEvent, RemoteFunction = nil, nil

		--SetGlobal("Remotes", Remotes)
		--SetGlobal("Whitelist", {})
	end
end

if RunService:IsServer() then
	Initialize()
end
--ToggleEvents(true)

-- Wrapper for determining if the script context is on the server.
function BaseReplicator.IsServer()
	return RunService:IsServer()
end

-- Constructs a new Replicator.
-- Its functions take advantage of script context.
function BaseReplicator.New(Id)
	--assert(RunService:IsServer(), "Replicators can only be constructed from the server.")
	assert(typeof(Id) == "string", "Argument #1 must be a string.")
	
	--if RunService:IsServer() == true then
	--	assert(DoesReplicatorExist(Id) == false, "Replicator '" .. Id "' has already been initalized from the server.")
	--end

	local Obj = Object.New("Replicator")
	
	Obj.ClientListeners = {}
	
	Obj.IsServerVariant = false
	Obj.Id = Id

	-- Adds a remote listener executed on the client.
	-- Parameters:
	-- f (function) - the function to bind
	function Obj.AddClientListener(f)
		if IsFunc(f) then
			Obj.ClientListeners[f] = f
		end
	end

	-- Removes a remote listener from being executed on the client.
	-- Adds a remote listener.
	-- Parameters:
	-- f (function) - the function to bind
	function Obj.RemoveClientListener(f)
		Obj.ClientListeners[f] = nil
	end
	
	-- Clears all client remote listeners.
	function Obj.ClearClientListeners()
		Obj.ClientListeners = {}
	end

	-- The callback used for Obj.Request() on the client.
	-- Type: function(...)
	Obj.ClientCallback = nil

	-- Sends data to the other end of the server/client boundary.
	-- Works like the RemoteEvent.
	function Obj.Send(...)
		FireReplicatorCallbacks(false, Id, ...)
	end

	-- Requests data from the other end of the server/client boundary
	-- and then returns it.
	--
	-- Works like the RemoteFunction.
	function Obj.Request(...)
		return FireReplicatorCallbacks(true, Id, ...)
	end
	
	-- Fires the replicator's remote function callback.
	function Obj.FireFuncCallback(Receiver, ...)
		local Callback = Obj.RequestCallback
		
		if typeof(Callback) == "function" then
			Callback(...)
		end
		
		Callback = nil
	end
	
	-- Fires all of the replicator's client listeners.
	function Obj.FireClientListeners(...)
		local Listeners = Obj.ClientListeners

		if typeof(Listeners) == "table" then
			for i, v in pairs(Listeners) do
				if typeof(v) == "function" then
					-- Call the listener.
					v(...)
				end
			end
		end

		Listeners = nil
	end
	
	-- Initialize replicator remotes.
	AddReplicator(Id, Obj)
	
	if RunService:IsServer() == true then
		-- See GetServerVariant for doc stuff.
		return GetServerVariant(Obj)
	else
		return Obj
	end
end

-- Returns a replicator by id. If it doesn't exist,
-- this will create a replicator if called from
-- the server, otherwise, it will return nil.
-- This returns two things, the replicator if it
-- exists and if it was just created by this function.
function BaseReplicator.GetReplicator(Id)
	DoIsServerCheck()
	assert(typeof(Id) == "string", "Argument #1 must be a string.")

	local Replicators = GetGlobal("Replicators")
	if Replicators ~= nil then
		local Rep = Replicators[Id]
		local JustCreated = false

		if Rep == nil then
			if RunService:IsServer() == true then
				-- Create if non-existent
				JustCreated = true
				Rep = BaseReplicator.New(Id)
			end
		end
		
		-- Return the replicator.
		return Rep, JustCreated
	else
		return nil
	end
end

return BaseReplicator]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f73</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBX7F9918F0888F4B7E9DBD1FE93084FC5E">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ObjectGetter</string>
					<string name="ScriptGuid">{756DBF14-D632-4DC2-BCEF-833DFEBEC45C}</string>
					<ProtectedString name="Source"><![CDATA[-- Serves as an access point to get the "Object" class.
-- Useful in case the location of the class needs to change.
-- By udev2192

local ObjectGetter = {}

local Utils = script.Parent:WaitForChild("Utils")

-- Returns the "Object" class.
function ObjectGetter.GetClass()
	return require(Utils:WaitForChild("Object"))
end

return ObjectGetter]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018f7f</UniqueId>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBXC4DD028C871E4C32A489ACC06B42ED19">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">MapHandles</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">763a7612a43638410224a4390002590e</UniqueId>
				</Properties>
				<Item class="Folder" referent="RBXA8D16E99E33044498D26838D4A334BCF">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Interactives</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0f86260d67629ec201ed4a440002360b</UniqueId>
					</Properties>
					<Item class="Folder" referent="RBX1E21ECAF643E44B9B3232473A34DB21E">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">ZiplineService</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">33e00f9ae0bd5d820252a9ee000b6e06</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX3C46309F3C1A40CB9454B8E4FAEECACC">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Rider</string>
								<string name="ScriptGuid">{21D36131-386C-4167-9453-183BA831571C}</string>
								<ProtectedString name="Source"><![CDATA[--[[
The class that gives the ability for a player
to ride the zipline.

By udev2192
]]--

local RunService = game:GetService("RunService")

local Interactives = script.Parent.Parent
local Object = require(Interactives:WaitForChild("BaseInteractive")).GetObjectClass()
local Zipline = require(Interactives:WaitForChild("Zipline"))

local ZERO_VECTOR3 = Vector3.new(0, 0, 0)

local Rider = {}


-- Attribute names
local RIDER_DISPLAYED_ATTRIBUTE = "DisplaysRider"
local RIDE_SPEED_ATTRIBUTE = "RideSpeed"

Rider.WORKSPACE_CACHE_NAME = "ZiplineRiderWScache"

local function IsInstance(name, inst)
	return typeof(inst) == "Instance" and inst:IsA(name)
end

local function IsPart(Part)
	return IsInstance("BasePart", Part)
end

local function HasTouchEvent(Part)
	return IsInstance("BasePart", Part) or IsInstance("Humanoid", Part)
end

-- Welds part1 to part2
local function WeldParts(p1, p2)
	local Weld = Instance.new("WeldConstraint")
	Weld.Part0 = p1
	Weld.Part1 = p2
	Weld.Parent = Rider.WorkspaceCache
	
	return Weld
end

local function GetCFrameOri(Ori)
	assert(typeof(Ori) == "Vector3", "Argument 1 must be a Vector3.")
	return CFrame.fromOrientation(math.rad(Ori.X), math.rad(Ori.Y), math.rad(Ori.Z))
end

--local function GetModelHeight(Model)
--	assert(typeof(Model) == "Instance" and Model:IsA("Model"), "Argument 1 must be a model.")
--	return Model:GetExtentsSize().Y
--end

-- Toggles if the rider cache folder exists in the DataModel.
function Rider.ToggleRiderCache(Enabled)
	local WSCache = Rider.WorkspaceCache
	
	if Enabled == true then
		WSCache = WSCache or workspace:FindFirstChild(Rider.WORKSPACE_CACHE_NAME) or Instance.new("Folder")
		
		Rider.WorkspaceCache = WSCache
		WSCache.Name = Rider.WORKSPACE_CACHE_NAME
		WSCache.Parent = workspace
	else
		if WSCache ~= nil then
			WSCache:Destroy()
		end
		
		Rider.WorkspaceCache = nil
		WSCache = nil
	end
end

Rider.ToggleRiderCache(true)

function Rider.New()
	local Obj = Object.New("ZiplineRider")
	local NumConnections = 0
	local IsTouching = false
	
	Obj.CanZipline = true
	Obj.IsOnZipline = false
	Obj.Speed = 16 -- In studs per second
	Obj.TouchConnections = {}
	Obj.LastVelocity = ZERO_VECTOR3
	
	-- If zipline configuration affects ride speed.
	Obj.ZiplineAffectsSpeed = true
	
	-- The default part that rides the zipline.
	Obj.RidingRig = nil
	
	-- Display properties of the handle part
	Obj.HandleDisplaySettings = {
		Transparency = 0,
		Material = Enum.Material.Concrete,
		Color = Color3.fromRGB(0, 0, 0),
		Size = Vector3.new(4, 1, 1)
	}
	
	-- BodyGyro mover config
	-- Thanks to ForbiddenJ for helping me
	-- tweak these!
	-- 1 power makes for precise replication
	-- because the physics engine would've
	-- picked up the CFrame change along
	-- with high dampening values to get
	-- rid of bouncing
	Obj.GyroDampening = 2500
	Obj.GyroPower = 1
	
	Obj.PartMassMultiplier = 2000
	
	-- Returns if the rider can keep riding the zipline.
	function Obj.CanAdvanceOnZipline()
		return Obj ~= nil and Obj.CanZipline == true and Obj.IsOnZipline == true
	end
	
	-- Sends the provided part riding down the provided zipline.
	function Obj.UseZipline(Part, Zip)
		assert(IsPart(Part), "Argument 1 must be a BasePart.")
		assert(Zip ~= nil, "Argument 2 must be a Zipline.")
		
		if Obj.CanZipline == true and Obj.IsOnZipline == false then
			
			Obj.IsOnZipline = true
			local Time = 0
			local TotalDist = Zip.TotalDistance
			if TotalDist > 0 then
				-- Begin the zipline welding.
				local Moving = Instance.new("Part")
				
				local HandleDisplay = Obj.HandleDisplaySettings or {}
				for i, v in pairs(HandleDisplay) do
					Moving[i] = v
				end
				
				Moving.CanCollide = false
				Moving.Anchored = true
				
				--local Mass = Part.Mass
				
				-- Use a BodyGyro and BodyPosition for replication.
				-- Force properties don't matter since the
				-- CFrame property will be taken in by the physics engine
				local BodyGyro = Instance.new("BodyGyro")
				local BodyPosition = Instance.new("BodyPosition")
				--BodyGyro.MaxTorque = Vector3.new(Mass, Mass, Mass) * Obj.PartMassMultiplier
				--BodyGyro.D = Obj.GyroDampening
				--BodyGyro.P = Obj.GyroPower
				
				-- Change ride speed to zipline settings when permitted.
				if Obj.ZiplineAffectsSpeed == true then
					Obj.Speed = Zip.GetModelSetting(RIDE_SPEED_ATTRIBUTE)
				end
				
				-- Longer ziplines should have DistDelta
				-- be a shorter number.
				local DistDelta = Obj.Speed / TotalDist

				local function nextFrame()
					local Pos, cf = Zip.LerpTo(Time)
					cf = cf.Direction
					
					local RiderCf = cf - Vector3.new(0, (Zip.DisplayThickness + (Part.Size.Y/2)), 0)
					if Pos ~= nil and Obj ~= nil then
						Moving.CFrame = cf
						Obj.LastVelocity = cf.LookVector * Obj.Speed
						Part.CFrame = RiderCf
						
						-- Replicate
						BodyGyro.CFrame = RiderCf
						BodyPosition.Position = RiderCf.Position
						
						--Moving.AssemblyLinearVelocity = cf.LookVector -- So movement replicates
					end
					return Pos, cf, RiderCf
				end
				
				-- Weld the parts
				local FirstPos, FirstCf, RiderCf = nextFrame()
				
				Part.CFrame = RiderCf --CFrame.new(FirstPos.X, FirstPos.Y, FirstPos.Z) * GetCFrameOri(FirstCf.YVector)
				--local Weld = WeldParts(Part, Moving)
				if Zip.GetModelSetting(RIDER_DISPLAYED_ATTRIBUTE) == true then
					Moving.Parent = Rider.WorkspaceCache
				else
					Moving.Parent = nil
				end
				
				BodyGyro.CFrame = RiderCf
				BodyPosition.Position = RiderCf.Position
				
				BodyGyro.Parent = Part
				BodyPosition.Parent = Part
				
				FirstPos, FirstCf = nil, nil

				Object.FireCallback(Obj.OnGrab, Zip)

				-- Ride the zipline.
				-- A while loop is used instead of RunService.Heartbeat
				-- to lower the impact of framerate.
				while Obj.CanAdvanceOnZipline() and Time <= 1 do
					local TimeDelta = RunService.Heartbeat:Wait()
					Time += DistDelta * TimeDelta
					--print(Time)
					nextFrame()
				end

				nextFrame = nil

				-- Let go of the part.
				BodyGyro:Destroy()
				BodyGyro = nil
				
				BodyPosition:Destroy()
				BodyPosition = nil
				
				--Weld:Destroy()
				--Weld = nil

				Moving:Destroy()
				Moving = nil
			end
			
			if Obj ~= nil then
				Obj.IsOnZipline = false

				Object.FireCallback(Obj.OnRelease, Zip)
			end
		end
	end
	
	-- Releases the rider from the zipline
	function Obj.Release()
		Obj.IsOnZipline = false
	end

	-- Handles a part touch internally.
	function Obj.HandleTouch(ControlPart, OtherPart)
		if Obj.CanZipline == true and Obj.IsOnZipline == false then
			local Zipline = Zipline.GetZipline(OtherPart)
			
			if Zipline ~= nil then
				Obj.UseZipline(Obj.RidingRig or ControlPart, Zipline)
			end
		end
	end

	-- Adds the touch connection to the part specified.
	function Obj.AddTouchConnection(Part)
		assert(IsPart(Part), "Argument 1 must be a BasePart")
		NumConnections += 1
		
		local Connection = Part.Touched:Connect(function(OtherPart)
			if IsTouching == false then
				IsTouching = true
				Obj.HandleTouch(Part, OtherPart)
				IsTouching = false
			end
		end)
		Obj.TouchConnections[Part] = Connection
	end
	
	-- Disconnects all parts from triggering this rider
	function Obj.DisconnectAll()
		for i, v in pairs(Obj.TouchConnections) do
			if typeof(v) == "RBXScriptConnection" then
				v:Disconnect()
				v = nil
			end
		end
	end
	
	-- Fired when a zipline is grabbed.
	Obj.OnGrab = nil
	
	-- Fired when the rider lets go of a zipline.
	Obj.OnRelease = nil
	
	Obj.OnDisposal = function()
		Obj.Release()
		Obj.DisconnectAll()
	end
	
	return Obj
end

return Rider]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">33e00f9ae0bd5d820252a9ee000b6e08</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXFF89F717154E40FA91A89D6450838DA1">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">PlayerAdapter</string>
								<string name="ScriptGuid">{ECB8326E-0B36-47EE-8293-59F84DD2E048}</string>
								<ProtectedString name="Source"><![CDATA[--[[
The Rider module adapter/wrapper for players.

By default, the player gets off a zipline
when they jump or when they die.

By udev2192
]]--

local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local ZiplineService = script.Parent
local Object = require(ZiplineService.Parent:WaitForChild("BaseInteractive")).GetObjectClass()
local Rider = require(ZiplineService:WaitForChild("Rider"))

local PlayerAdapter = {}

-- For manual tuning (default numbers are for R6)
local LAUNCH_VELOCITY_MULTIPLIER = 1
local JUMP_VELOCITY_MULTIPLIER = 1

-- Sets if the ziplines can only be triggered
-- by one rig.
local USING_ONE_RIG = false

-- Attribute names
local JUMP_DISMOUNT_ATTRIBUTE = "CanJumpToDismount"
local GRAB_SOUND_ATTRIBUTE = "GrabSound"
local RIDE_SOUND_ATTRIBUTE = "RideSound"
local RELEASE_SOUND_ATTRIBUTE = "ReleaseSound"
local VOLUME_ATTRIBUTE = "Volume"

-- Humanoid states where a player would let go of the zipline.
PlayerAdapter.RELEASE_STATES = {Enum.HumanoidStateType.Dead, Enum.HumanoidStateType.Jumping}

-- The name of the rig of the character that can triggger the zipline.
PlayerAdapter.RIG_NAME = "Head"

--PlayerAdapter.GRAB_SOUND = "rbxassetid://12222054"
--PlayerAdapter.RIDE_SOUND = "rbxassetid://12222076" -- Loop
--PlayerAdapter.RELEASE_SOUND = "rbxassetid://11900833"

local function WaitForDur(s)
	if typeof(s) == "number" and s > 0 then
		local Elapsed = 0
		
		while Elapsed < s do
			Elapsed += RunService.Heartbeat:Wait()
		end
	end
end

local function PlaySound(URL, Volume)
	if URL ~= nil and URL ~= "" then
		coroutine.wrap(function()
			local Sound = Instance.new("Sound")
			Sound.SoundId = URL
			Sound.Looped = false
			Sound.Volume = Volume or 0.5
			Sound.Parent = script
			Sound:Play()
			Sound.Ended:Wait()
			Sound:Destroy()
			Sound = nil
		end)()
	end
end

local function IsPart(Part)
	return typeof(Part) == "Instance" and Part:IsA("Part")
end

local function GetWeightOfPart(Part)
	assert(IsPart(Part), "Argument 1 must be a BasePart.")
	
	local Weight = Part:GetMass()
	for i, v in pairs(Part:GetConnectedParts()) do
		if IsPart(v) then
			Weight += v:GetMass()
		end
	end
	
	return Weight
end

-- Rider workspace cache toggler.
function PlayerAdapter.ToggleRiderCache(Enabled)
	Rider.ToggleRiderCache(Enabled)
end

function PlayerAdapter.New(Player)
	assert(typeof(Player) == "Instance" and Player:IsA("Player"), "Argument 1 must be a player instance.")
	assert(RunService:IsClient(), "PlayerAdapter is currently only supported on the client.")

	local Obj = Object.New("ZiplinePlayerAdapter")
	local StateChangedEvent = nil
	local JumpRequestEvent = nil
	
	Obj.Character = nil
	Obj.Humanoid = nil
	Obj.RespawnEvent = nil
	Obj.Rider = Rider.New()
	Obj.RideLoop = nil
	Obj.Rig = nil
	Obj.RigTouchEvent = nil
	Obj.RootPart = nil
	Obj.UseMomentum = true -- If momentum is applied on zipline release
	
	-- How long to wait before accepting the next zipline
	-- jump request.
	Obj.NextJumpDelay = 0.005
	
	-- This number multiplies the humanoid's WalkSpeed,
	-- which is used for the zipline rider speed.
	-- This might be needed so the player doesn't
	-- feel as if riding the zipline is too slow.
	-- No longer used as of customization update.
	--Obj.HumanoidSpeedMultiplier = 1.5

	local PlayerLeavingEvent = nil

	local function DisconnectHumanoidChange()
		if StateChangedEvent ~= nil then
			StateChangedEvent:Disconnect()
			StateChangedEvent = nil
		end
	end
	
	local function DisconnectJumpRequest()
		if JumpRequestEvent ~= nil then
			JumpRequestEvent:Disconnect()
			JumpRequestEvent = nil
		end
	end
	
	-- This function handles releases before the player
	-- reaches the end of a zipline.
	local function HandleEarlyRelease()
		DisconnectJumpRequest()
		DisconnectHumanoidChange()

		-- Release
		Obj.DoInternalRelease()
	end
	
	local function ToggleRideLoop(IsPlaying, Url)
		local PrevLoop = Obj.RideLoop
		
		if IsPlaying == true then
			if Url ~= nil and Url ~= "" then
				ToggleRideLoop(false) -- In case the loop is still playing

				local Loop = Instance.new("Sound")
				Obj.RideLoop = Loop
				
				Loop.SoundId = Url
				Loop.Looped = true
				Loop.Parent = script
				Loop:Play()

				Loop = nil
			end
		elseif PrevLoop ~= nil then
			PrevLoop:Destroy()
		end
		
		PrevLoop = nil
	end

	function Obj.DoInternalRelease()
		if Obj.Rider ~= nil then
			Obj.Rider.Release()
		end
	end
	
	-- Sets the velocity of the HumanoidRootPart (for internal use)
	function Obj.SetVelocity(velocity)
		if Obj.UseMomentum == true then
			local RootPart = Obj.RootPart
			if RootPart ~= nil then
				velocity = velocity * LAUNCH_VELOCITY_MULTIPLIER
				RootPart.AssemblyLinearVelocity = velocity
				RootPart:ApplyImpulse(velocity)
			end
		end
	end

	function Obj.HandleHumanoidChange(State)
		-- Release from a zipline if there is a release state match
		if table.find(PlayerAdapter.RELEASE_STATES, State) then
			Obj.DoInternalRelease()
		end

		if State == Enum.HumanoidStateType.Dead then
			if Obj.RigTouchEvent ~= nil then
				Obj.RigTouchEvent:Disconnect()
				Obj.RigTouchEvent = nil
			end

			if Obj.Rider ~= nil then
				Obj.Rider.DisconnectAll()
			end

			DisconnectHumanoidChange()
			DisconnectJumpRequest()
		end
	end
	
	-- Connects "important" rider events
	function Obj.ReconnectEvents()
		-- Disconnect previously connected events, just in case.
		DisconnectJumpRequest()
		DisconnectHumanoidChange()

		-- Reconnect.
		local ObjRider = Obj.Rider
		local Humanoid = Obj.Humanoid

		if ObjRider ~= nil and Humanoid ~= nil then
			local NextLaunchVelocty = nil
			
			-- Debounce values.
			local IsGrabbing = false
			local IsReleasing = false
			local JumpRequested = false
			
			-- Event connections.
			ObjRider.OnGrab = function(Zip)
				if IsGrabbing == false and IsReleasing == false and JumpRequested == false then
					IsGrabbing = true
					
					NextLaunchVelocty = nil -- Just in case
					--StateChangedEvent = Obj.Humanoid.StateChanged:Connect(Obj.HandleHumanoidChange)

					-- Connect to releasing when the player dies.
					StateChangedEvent = Obj.Humanoid.HealthChanged:Connect(function(health)
						if health <= 0 then
							ObjRider.DisconnectAll() -- So the player can't grab a zipline while being dead.
							HandleEarlyRelease()
						end
					end)

					-- Makes players have the ability to jump to dismount.
					-- This applies if the zipline allows for it.
					-- Needed for now cause PlatformStand sucks.
					if Zip.GetModelSetting(JUMP_DISMOUNT_ATTRIBUTE) == true then
						JumpRequestEvent = UserInputService.JumpRequest:Connect(function()
							if JumpRequested == false then
								JumpRequested = true
								
								--print("Jump to release requested")
								HandleEarlyRelease()

								if Humanoid ~= nil and ObjRider ~= nil then
									local lv = ObjRider.LastVelocity
									NextLaunchVelocty = Vector3.new(lv.X, Humanoid.JumpPower * JUMP_VELOCITY_MULTIPLIER, lv.Z)
									Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
								end
								
								-- Counter "multi-grabbing" by waiting.
								WaitForDur(Obj.NextJumpDelay or 0)
								
								JumpRequested = false
							end
						end)
					end
					
					IsGrabbing = false
					
					local Vol = Zip.GetModelSetting(VOLUME_ATTRIBUTE)
					PlaySound(Zip.GetModelSetting(GRAB_SOUND_ATTRIBUTE), Vol)
					ToggleRideLoop(true, Zip.GetModelSetting(RIDE_SOUND_ATTRIBUTE), Vol)
				end
			end

			Obj.Rider.OnRelease = function(Zip)
				if IsReleasing == false then
					IsReleasing = true
					
					--print("release detected")
					DisconnectHumanoidChange()
					DisconnectJumpRequest()
					--Obj.Humanoid.PlatformStand = false

					if NextLaunchVelocty == nil then
						local LastVelocity = Obj.Rider.LastVelocity
						--print(LastVelocity)
						Obj.SetVelocity(LastVelocity)
					else
						--print("Next launch velocity", NextLaunchVelocty)
						Obj.SetVelocity(NextLaunchVelocty)
					end

					NextLaunchVelocty = nil

					PlaySound(Zip.GetModelSetting(RELEASE_SOUND_ATTRIBUTE), Zip.GetModelSetting(VOLUME_ATTRIBUTE))
					ToggleRideLoop(false)
					
					IsReleasing = false
				end
			end
		end
	end

	-- Does the internal respawn handling.
	-- This is where the zipline ability stuff happens.
	function Obj.HandleRespawn(char)
		if typeof(char) == "Instance" then
			-- Clear the connected parts remaining
			local ObjRider = Obj.Rider
			if ObjRider ~= nil then
				ObjRider.DisconnectAll()

				-- Connect humanoid state change events
				local Humanoid = char:WaitForChild("Humanoid", 5)
				assert(typeof(Humanoid) == "Instance" and Humanoid:IsA("Humanoid"), "The character's humanoid is missing.")
				Obj.Humanoid = Humanoid
				Obj.RootPart = char:WaitForChild("HumanoidRootPart")
				ObjRider.Speed = Humanoid.WalkSpeed * (Obj.HumanoidSpeedMultiplier or 1)

				-- Reconnect the interacting rig
				Obj.Character = char
				Obj.Rig = char:WaitForChild(PlayerAdapter.RIG_NAME)
				Obj.ReconnectEvents()
				ObjRider.RidingRig = Obj.Rig
				if USING_ONE_RIG == true then
					ObjRider.AddTouchConnection(Obj.Rig)
				else
					for i, v in pairs(Obj.Character:GetChildren()) do
						if v:IsA("BasePart") then
							ObjRider.AddTouchConnection(v)
						end
					end
				end
			end
		end
	end

	-- Set the specified rig to be able to interact with ziplines
	Obj.SetProperty("InteractingRig", nil, function(rig)
		if typeof(rig) == "Instance" and rig:IsA("BasePart") and Obj.Rider ~= nil then
			Obj.Rider.DisconnectAll()
			Obj.Rider.AddTouchConnection(rig)
		end
	end)

	-- Initialize
	Obj.HandleRespawn(Player.Character)

	Obj.RespawnEvent = Player.CharacterAdded:Connect(Obj.HandleRespawn)

	PlayerLeavingEvent = Players.PlayerRemoving:Connect(function(plr)
		if plr == Player then
			PlayerLeavingEvent:Disconnect()
			PlayerLeavingEvent = nil
			
			DisconnectHumanoidChange()
			DisconnectJumpRequest()

			Obj.Rider.Dispose()
			Obj.Dispose()
		end
	end)
	
	Obj.OnDisposal = function()
		-- Release and get rid of the rider on disposal.
		HandleEarlyRelease()
		
		local ObjRider = Obj.Rider
		
		if ObjRider ~= nil then
			ObjRider.Dispose()
		end
		
		ObjRider = nil
	end

	return Obj
end

return PlayerAdapter]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">33e00f9ae0bd5d820252a9ee000b6e09</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX0C4F0A9DB4B54ED3B665C538CDD582F5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">OldBezier</string>
								<string name="ScriptGuid">{097F4C8E-0EE0-4F1B-BD55-E5E24231E957}</string>
								<ProtectedString name="Source"><![CDATA[--[[
Bezier.lua by udev2192

Handles operations with bezier curves

Some variable names are derived from algebra for readability.

Thanks to Roblox for providing the necessary functions:
https://developer.roblox.com/en-us/articles/Bezier-curves
]]--

local Object = require(script.Parent.Parent:WaitForChild("BaseInteractive")).GetObjectClass()

local Bezier = {}

local function Hypotenuse(a, b)
	return (a^2 + b^2) ^ 0.5
end

local function GetLengthInternal(numPoints, func, dataType, ...)
	local Total, Ranges, Sums, IntToTime = 0, {}, {}, {}
	local IsVector = string.match(dataType, "Vector", 1)
	
	for i = 0, numPoints - 1, 1 do
		local p1, p2 = func(i / numPoints, ...), func((i + 1) / numPoints, ...)
		local distance = nil;
		if IsVector then
			distance = (p2 - p1).magnitude
		else
			distance = Hypotenuse(p1, p2);
		end
		
		local CenterPosition = (p1 + p2) / 2

		Ranges[Total] = {
			Distance = distance,
			Point1 = p1,
			Point2 = p2,
			Magnitude = (p2 - p1).Magnitude,
			CenterPos = CenterPosition,
			Direction = CFrame.new(CenterPosition, p1) * CFrame.Angles(0, math.pi, 0)
		}
		
		table.insert(Sums, Total)
		Total += distance
	end

	return Total, Ranges, Sums
end

function Bezier.Lerp(a, b, c) -- For interpolation
	return a + (b - a) * c
end

function Bezier.Calculate(t, PointsTable)
	assert(typeof(PointsTable) == "table", "Argument #2 must be a table.")
	
	-- t specifies time/alpha (between 0-1)
	-- PointsTable specifies each point
	if typeof(PointsTable) == "table" then
		if #PointsTable >= 2 then
			
		else
			warn("Argument #2 must have at least 2 indexes/points.")
			return 0
		end
	else
	end
end

function Bezier.Linear(t, p0, p1)
	return (1 - t) * p0 + t * p1
end

function Bezier.Quadratic(t, p0, p1, p2)
	return (1 - t)^2 * p0 + 2 * (1 - t) * t * p1 + t^2 * p2
end

function Bezier.Cubic(t, p0, p1, p2, p3)
	return (1 - t)^3 * p0 + 3 * (1 - t)^2 * t * p1 + 3 * (1 - t) * t^2 * p2 + t^3 * p3
end

-- Segment length calculator (in a single dimension)
function Bezier.GetLengths(numPoints, func, ...)
	return GetLengthInternal(numPoints, func, "number", ...)
end

-- For Vector3 segment length calculation
function Bezier.GetVect3Lengths(numPoints, func, ...)
	return GetLengthInternal(numPoints, func, "Vector3", ...)
end

-- Constructs and returns a new bezier
function Bezier.New(calcFunc, numPoints, ...)
	local Obj = Object.New("BezierCurve")
	
	function Obj.RecalculateAll(func, numPointsRedo, ...)
		local TotalDist, RangesList, DistancesList = Bezier.GetVect3Lengths(numPointsRedo, func, ...)
		local Points = {...}
		
		Obj.BeginningPoint = Points[1]
		Obj.EndPoint = Points[#Points]
		
		Obj.SetProperty("Func", calcFunc, nil)
		Obj.SetProperty("NumPoints", numPoints, nil)
		Obj.SetProperty("Points", Points, nil)

		Obj.SetProperty("TotalDist", TotalDist, nil) -- Total travel distance.
		Obj.SetProperty("Ranges", RangesList, nil)
		Obj.SetProperty("Distances", DistancesList, nil)
		
		return TotalDist, RangesList, DistancesList
	end
	
	-- For initialization
	Obj.RecalculateAll(calcFunc, numPoints, ...)
	
	-- Resets the path to the specified Vector3 points
	function Obj.SetPoints(...)
		return Obj.RecalculateAll(Obj.Func, Obj.NumPoints, ...)
	end
	
	-- Gets the index of the curve.
	-- Use if percentage isn't a factor.
	function Obj.GetSegmentByIndex(pos)
		return Obj.Ranges[pos]
	end
	
	-- Returns the distance by the provided array index,
	-- if it exists.
	--function Obj.GetDistanceByIndex(Index)
	--	return Obj.Distances[Index]
	--end
	
	-- Gets a segment based on the percentage of the curve.
	function Obj.GetSegmentByTime(timePos)
		local t, near = timePos * Obj.TotalDist, 0
		local DistTable = Obj.Distances
		
		for _, i in ipairs(DistTable) do
			if (t - i) >= 0 then
				near = i
			else
				break
			end 
		end
		
		local pointsSet = Obj.Ranges[near]
		
		if typeof(pointsSet) == "table" then
			local percent = (t - near) / pointsSet.Distance
			return pointsSet, percent -- {point1, point2, ...}, offset
		else
			return
		end
	end
	
	-- Returns an array of all segments
	function Obj.GetAllSegments()
		--local NumPoints = Obj.NumPoints
		--local Increment = 1/NumPoints
		--
		--local Set = {}
		--for i = 0, 1, Increment do
		--	local Segment = Obj.GetSegmentByTime(i)
		--	if Segment ~= nil then
		--		table.insert(Set, Segment)
		--	end
		--end
		
		--return Set
		
		--return Obj.Ranges
		
		local Segments = {}
		local Ranges = Obj.Ranges
		local Distances = Obj.Distances
		if Distances ~= nil then
			for i, v in ipairs(Distances) do
				local val = Ranges[v]
				if val ~= nil then
					table.insert(Segments, val)
				end
			end
		end
		
		return Segments
	end
	
	return Obj
end

-- Returns a lerped value on the bezier set (this is for arc length parameterization).
function Bezier.LerpCombined(Time, Beziers)
	local TotalDist, Sums = 0, {}

	-- Find the sum of all bezier curves
	for i, v in ipairs(Beziers) do
		table.insert(Sums, TotalDist)
		TotalDist += v.TotalDist
	end

	-- Pinpoint the position on the combined bezier with the provided time
	local t, near, CurrentBezier = TotalDist * Time, 0, Beziers[1]
	for i, v in ipairs(Sums) do
		if (t - v) >= 0 then
			near, CurrentBezier = v, Beziers[i]
		else
			break
		end
	end

	-- Find the percent traveled on the overall bezier
	local Percentage = (t - near) / CurrentBezier.TotalDist

	-- Interpolate using the percentage
	local FoundSegment = CurrentBezier.GetSegmentByTime(Percentage)
	local a, b, c = FoundSegment.Point1, FoundSegment.Point2, Percentage

	return Bezier.Lerp(a, b, c), FoundSegment
end

return Bezier]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">33e00f9ae0bd5d820252a9ee000b6e0a</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX48B464E504E540DAA9DEFF37DF2DD75C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">ConfigDefaults</string>
								<string name="ScriptGuid">{40EBA36B-190B-44B5-9417-FDCBFC3D4357}</string>
								<ProtectedString name="Source"><![CDATA[-- Default configuration values for the ziplines.

local ConfigDefaults = {}

ConfigDefaults.Values = {
	RideSpeed = 16, -- How fast the player rides the zipline (in studs per second).
	Thickness = 0.5, -- Zipline thickness (in studs).
	GenerationMode = 2, -- Zipline generation formula.
	Precision = 50, -- How precise zipline generation should be.
	DisplayPrecision = 0.5, -- How precise the zipline path should be.
	Volume = 0.5, -- Volume that the zipline sounds play at for the zipline.
	CanJumpToDismount = true, -- If the player can jump to dismount the zipline.
	DisplaysPath = true, -- If a path (in parts) for the zipline is generated.
	DisplaysRider = true, -- If the rider part is displayed.
	GrabSound = "rbxassetid://12222054", -- Played when the zipline is grabbed.
	RideSound = "rbxassetid://12222076", -- Loop played during zipline ride.
	ReleaseSound = "rbxassetid://11900833" -- Played when the zipline is released.
}

-- Returns the default from the values list if the
-- argument 2 is nil or the type is mismatched.
function ConfigDefaults.FillValue(ValueName, Val)
	local Default = ConfigDefaults.Values[ValueName]
	
	if Default ~= nil then
		if typeof(Val) == typeof(Default) then
			return Val
		else
			return Default
		end
	else
		warn(ValueName, "is an invalid zipline attribute.")
		return nil
	end
end

return ConfigDefaults]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">33e00f9ae0bd5d820252a9ee000b6e0b</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX656FDE58DD054A258E92991AB8C8EFBB">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Display</string>
								<string name="ScriptGuid">{9EB4C0DC-4177-4E72-A2CC-4C53AA009263}</string>
								<ProtectedString name="Source"><![CDATA[-- The module that displays the zipline.
-- By: udev2192

-- Unused function archive:
--[[
	local function DrawByIndex(i1, i2)
		local s1 = Bezier.GetSegmentByIndex(i1)
		local s2 = Bezier.GetSegmentByIndex(i2)
		local point1 = s1.Point1
		local point2 = s2.Point2
		local CenterPos = (point1 + point2) / 2
		local cf = CFrame.new(CenterPos, point1)
		
		local Properties = {
			Anchored = true,
			CanCollide = false,
			Size = Vector3.new(ZIPLINE_THICKNESS, ZIPLINE_THICKNESS, (point2 - point1).Magnitude),
			CFrame = cf,
			--CFrame = CFrame.new(CenterPos.X, CenterPos.Y, CenterPos.Z) * GetLineOrientation(p1, p2);
			Transparency = Obj.Transparency,
			Material = Obj.Material,
			Color = Obj.Color
		}

		local Part = GetLineInternal(Properties)

		return Part
	end
]]--

local Object = require(script.Parent.Parent:WaitForChild("BaseInteractive")).GetObjectClass()

local Display = {}

local ZERO_VECTOR3 = Vector3.new(0, 0, 0)

local DEFAULT_MATERIAL = Enum.Material.Plastic
local DEFAULT_COLOR = Color3.fromRGB(0, 0, 0)
local DEFAULT_TRANSPARENCY = 0.5;

function GetLineOrientation(p1, p2)
	return CFrame.lookAt(p1, p2)
end

function GetLineInternal(PartProperties)
	local Line = Instance.new("Part")
	Line.Anchored = true -- Just in case
	for i, v in pairs(PartProperties) do
		--print(i, ":", v)
		Line[i] = v
	end

	return Line
end

-- Generates a 3d line for display as a Part.
function Display.GetLineFromPoints(PartProperties)
	return GetLineInternal(PartProperties)
end

function Display.New()
	local Obj = Object.New("ZiplineDisplay")
	Obj.Parts = Instance.new("Model")
	--Obj.Segments = {}

	-- Amount of points one displayed point would actually represent.
	-- This means higher number = better performance.
	Obj.PartGroupSize = 20

	Obj.SetProperty("Material", DEFAULT_MATERIAL, function(material)
		for i, v in ipairs(Obj.Parts:GetChildren()) do
			if v:IsA("BasePart") then
				v.Material = material
			end
		end
	end)
	Obj.SetProperty("Color", DEFAULT_COLOR, function(color)
		for i, v in ipairs(Obj.Parts:GetChildren()) do
			if v:IsA("BasePart") then
				v.Color = color
			end
		end
	end)
	Obj.SetProperty("Transparency", DEFAULT_COLOR, function(transparency)
		for i, v in ipairs(Obj.Parts:GetChildren()) do
			if v:IsA("BasePart") then
				v.Transparency = transparency
			end
		end
	end)
	Obj.SetProperty("Thickness", 1, function(thickness)
		for i, v in ipairs(Obj.Parts:GetChildren()) do
			if v:IsA("BasePart") then
				v.Size = Vector3.new(thickness, thickness, v.Size.Z)
			end
		end
	end)

	-- Draws the zipline display using the beziers provided in the array.
	function Obj.Refresh(beziers)
		local Thickness = Obj.Thickness
		local GroupSize = Obj.PartGroupSize
		local model = Obj.Parts

		if Thickness ~= nil and GroupSize ~= nil then
			for i, bezier in ipairs(beziers) do
				local Segments = bezier.GetAllSegments()
				--Obj.Segments = Segments

				-- The last segment with GroupSize
				-- taken into account.
				local LastSegment = nil
				
				local TotalMagnitude = 0

				-- The last part group center position.
				--local LastCenterPos = nil

				-- Generate the parts
				local NumSegments = #Segments
				local FinalIndex = NumSegments - GroupSize + 1

				for i, v in ipairs(Segments) do
					local p1 = nil
					local p2 = nil
					local Magnitude = nil
					local HasReachedEnd = false

					-- Get the last end point from the info in the bezier
					local NextEndPoint = Segments[i + math.floor(GroupSize * 0.5)]

					-- Calculate size, then mark the center as the position
					-- of placement (to group segment parts)
					-- If the index is at one of the ends, cap the group sizing
					-- so that it doesn't go beyond the control points.
					if i >= FinalIndex then
						HasReachedEnd = true
						
						if NextEndPoint ~= nil and LastSegment ~= nil then
							-- Calculate the beginning of the last segment
							--p1 = Segments[i - math.floor(ZipPrecision)].Point2
							--local LastSegment = Segments[i - math.floor(ZipPrecision)]
							local SegmentPoint1 = LastSegment.Point1
							local SegmentPoint2 = LastSegment.Point2
							
							p1 = ((SegmentPoint1 + SegmentPoint2) / 2) + ((SegmentPoint2 - SegmentPoint1) * (GroupSize * 0.5)) --+ ((LastSegment.Point2 - LastSegment.Point1) * (GroupSize / 2))
						elseif i == 1 then
							p1 = bezier.BeginningPoint
						else
							break
						end
						
						if p1 ~= nil then
							p2 = bezier.EndPoint
							--print(bezier.EndPoint)
							--print(GroupSize, "min", (v.Point1 - p2).Magnitude)
							--p1 = p2 - ((v.Point2 - v.Point1) * math.min(GroupSize, (v.Point1 - p2).Magnitude))
							--p1 = (v.Point2 - p2)

							--LastSegment = NextEndPoint
							Magnitude = (p2 - p1).Magnitude--bezier.TotalDist - TotalMagnitude --
							--print("End magnitude:", Magnitude)
						else
							break
						end
					elseif i == 1 then
						p1 = bezier.BeginningPoint
						p2 = NextEndPoint and NextEndPoint.Point1 or bezier.EndPoint --p1 + ((v.Point2 - v.Point1) * math.min(GroupSize, (v.Point2 - p1).Magnitude))
						--p2 = (v.Point2 - p1)

						Magnitude = (p2 - p1).Magnitude
						--print("Beginning magnitude", Magnitude)
					elseif (i % GroupSize) == 0 then
						p1 = v.Point1
						p2 = v.Point2

						Magnitude = (p2 - p1).Magnitude * GroupSize
						
						-- Add the index by the group size.
						-- to reduce the amount of iterations.
						-- Cap at the final index to make sure we don't skip
						-- the ending segment.
						
						-- Subtraction by 1 is needed because of the increment
						-- that happens on the next index.
						i = math.min(i + GroupSize - 1, FinalIndex - 1)
					else
						continue
					end
					
					TotalMagnitude += Magnitude

					--local p1 = v.Point1
					--local p2 = v.Point2

					local CenterPos = (p1 + p2) / 2
					--LastCenterPos = CenterPos

					LastSegment = v --- ((v.Point2 - v.Point1) * math.min(GroupSize, (v.Point1 - p2).Magnitude)) --v.Point2 - p2--CenterPos + (p2 / 2)

					local Properties = {
						Anchored = true,
						CanCollide = false,
						Size = Vector3.new(Thickness, Thickness, Magnitude),
						CFrame = CFrame.new(CenterPos, p1),
						--CFrame = CFrame.new(CenterPos.X, CenterPos.Y, CenterPos.Z) * GetLineOrientation(p1, p2);
						Transparency = Obj.Transparency,
						Material = Obj.Material,
						Color = Obj.Color
					}

					local Part = GetLineInternal(Properties)

					if typeof(Part) == "Instance" and Part:IsA("BasePart") then
						Part.Parent = model
					end

					if HasReachedEnd == true then
						break
					end
				end
				

				-- Would get rid of a ton of lag if this worked lol:
				--[[
				for i = 1, GroupSize, NumSegments do
					local Segment = Segments[i]
					
					if Segment ~= nil then
						local p1 = nil
						local p2 = nil

						-- Calculate size, then mark the center as the position
						-- of placement (to group segment parts)
						if i == 1 then
							p1 = bezier.BeginningPoint
							p2 = p1 + ((Segment.Point2 - Segment.Point1) * GroupSize)
						elseif i == NumSegments then
							p2 = bezier.EndPoint
							p1 = p2 - ((Segment.Point2 - Segment.Point1) * GroupSize)
						else
							p1 = Segment.Point1
							p2 = Segment.Point2
						end

						--local p1 = v.Point1
						--local p2 = v.Point2

						local CenterPos = (p1 + p2) / 2

						local Properties = {
							Anchored = true,
							CanCollide = false,
							Size = Vector3.new(Thickness, Thickness, Segment.Magnitude * GroupSize),
							CFrame = CFrame.new(Segment.CenterPos, p1),
							--CFrame = CFrame.new(CenterPos.X, CenterPos.Y, CenterPos.Z) * GetLineOrientation(p1, p2);
							Transparency = Obj.Transparency,
							Material = Obj.Material,
							Color = Obj.Color
						}

						local Part = GetLineInternal(Properties)

						if typeof(Part) == "Instance" and Part:IsA("BasePart") then
							Part.Parent = model
						end
					end
				end
				]]--
			end
		end
	end

	-- Displays the bezier (display properties should be set first)
	--function Obj.DisplayBezier(bezier)
	--	if bezier == nil then
	--		bezier = Obj.Bezier
	--	end

	--	Obj.Bezier = bezier
	--	Obj.Refresh(bezier)
	--end

	Obj.OnDisposal = function()
		if Obj.Parts ~= nil then
			Obj.Parts:Destroy()
		end
	end

	return Obj
end

return Display]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">33e00f9ae0bd5d820252a9ee000b6e0d</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX000C71B798D44ED78AD8DA96E675F972">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Spline</string>
								<string name="ScriptGuid">{2C08914E-CF56-4F7B-8981-99E7986AB6B6}</string>
								<ProtectedString name="Source"><![CDATA[--[[
A utility module for cubic spline interpolation.

See: https://en.wikipedia.org/wiki/Spline_interpolation
]]--

local ZiplineService = script.Parent
local Object = require(ZiplineService:WaitForChild("Object"))

local Spline = {}

local function Hypotenuse(a, b)
	return (a^2 + b^2) ^ 0.5
end

function Spline.Lerp(a, b, c) -- For interpolation
	return a + (b - a) * c
end

-- Formula
function Spline.Interpolate(numPoints, t, a, b)
	return ((1 - (t * numPoints)) * a) + ((t * numPoints) * b) + ((t * numPoints) * ((1 - (t * numPoints))) * (((1 - (t * numPoints)) * a) * (t * numPoints * b)))
end

function Spline.GetVector3(numPoints, t, v1, v2)
	assert(typeof(v1) == "Vector3", "Argument 3 must be a Vector3.")
	assert(typeof(v2) == "Vector3", "Argument 4 must be a Vector3.")
	
	local x = Spline.Interpolate(numPoints, t, v1.X, v2.X)
	local y = Spline.Interpolate(numPoints, t, v1.Y, v2.Y)
	local z = Spline.Interpolate(numPoints, t, v1.Z, v2.Z)
	
	return Vector3.new(x, y, z)
end

function Spline.GetLength(IsVector3, PointArgs)
	local Total, Ranges, Sums = 0, {}, {}
	local numPoints = #PointArgs
	
	local func = nil
	if IsVector3 then
		func = Spline.GetVector3
	else
		func = Spline.Interpolate
	end
	
	for i = 0, numPoints - 1, 1 do
		local p1, p2 = func(numPoints, i / numPoints, PointArgs[1], PointArgs[numPoints]), func(numPoints, i / numPoints, PointArgs[1], PointArgs[numPoints])
		local distance = nil;
		if IsVector3 then
			distance = (p2 - p1).magnitude
		else
			distance = Hypotenuse(p1, p2);
		end

		local CenterPosition = (p1 + p2) / 2

		Ranges[Total] = {
			Distance = distance,
			Point1 = p1,
			Point2 = p2,
			Magnitude = (p2 - p1).Magnitude,
			CenterPos = CenterPosition,
			Direction = CFrame.new(CenterPosition, p1) * CFrame.Angles(0, math.pi, 0)
		}

		table.insert(Sums, Total)
		Total += distance
	end
	
	return Total, Ranges, Sums
end

function Spline.NewVector3(points)
	assert(typeof(points) == "table", "Argument 1 must be an array.")
	
	local Obj = Object.New("Spline")
	
	-- Refreshes the spline's calculations
	function Obj.Refresh()
		local TotalDist, RangesList, DistancesList = Spline.GetLength(true, Obj.PointsArray)
		
		Obj.SetProperty("TotalDist", TotalDist, nil) -- Total travel distance.
		Obj.SetProperty("Ranges", RangesList, nil)
		Obj.SetProperty("Distances", DistancesList, nil)
	end
	
	-- Resets the path to the specified Vector3 points
	function Obj.SetPoints(newPoints)
		Obj.PointsArray = newPoints
	end

	-- Gets the index of the curve.
	-- Use if percentage isn't a factor.
	function Obj.GetSegmentByIndex(pos)
		return Obj.Ranges[pos]
	end

	-- Gets a segment based on the percentage of the curve.
	function Obj.GetSegmentByTime(timePos)
		local t, near = timePos * Obj.TotalDist, 0
		local DistTable = Obj.Distances

		for _, i in ipairs(DistTable) do
			if (t - i) >= 0 then
				near = i
			else
				break
			end 
		end

		local pointsSet = Obj.Ranges[near]

		if typeof(pointsSet) == "table" then
			local percent = (t - near) / pointsSet.Distance
			return pointsSet, percent -- {point1, point2, ...}, offset
		else
			return
		end
	end

	-- Returns an array of all segments
	function Obj.GetAllSegments()
		local NumPoints = Obj.NumPoints
		local Increment = 1/NumPoints

		local Set = {}
		for i = 0, 1, Increment do
			local Segment = Obj.GetSegmentByTime(i)
			if Segment ~= nil then
				table.insert(Set, Segment)
			end
		end

		return Set
	end
	
	-- Initialize
	Obj.SetProperty("NumPoints", #points, Obj.Refresh)
	Obj.SetProperty("PointsArray", points, Obj.Refresh)
	Obj.Refresh()
	
	return Obj
end

-- Returns a lerped value on the spline set (this is for arc length parameterization).
function Spline.LerpCombined(Time, Beziers)
	local TotalDist, Sums = 0, {}

	-- Find the sum of all bezier curves
	for i, v in ipairs(Beziers) do
		table.insert(Sums, TotalDist)
		TotalDist += v.TotalDist
	end

	-- Pinpoint the position on the combined bezier with the provided time
	local t, near, CurrentBezier = TotalDist * Time, 0, Beziers[1]
	for i, v in ipairs(Sums) do
		if (t - v) >= 0 then
			near, CurrentBezier = v, Beziers[i]
		else
			break
		end
	end

	-- Find the percent traveled on the overall bezier
	local Percentage = (t - near) / CurrentBezier.TotalDist

	-- Interpolate using the percentage
	local FoundSegment = CurrentBezier.GetSegmentByTime(Percentage)
	local a, b, c = FoundSegment.Point1, FoundSegment.Point2, Percentage

	return Spline.Lerp(a, b, c), FoundSegment
end

return Spline]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">33e00f9ae0bd5d820252a9ee000b6e0c</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX994C881E024C43599F8BA30D48100CA0">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">UnusedObject</string>
								<string name="ScriptGuid">{61273D4D-B820-4FD6-9C7F-CCC52CAFD871}</string>
								<ProtectedString name="Source"><![CDATA[--[[
Object/instance handler using metatables.
By: udev2192

Generic updated event callback:
function OnObjectUpdate(Key, Value)

end

Generic updater function:
function UpdateFunc(NewValue)

end
]]--

local Object = {};
local Inherited = {};
local InheritedUpdaters = {};

-- Makes fields and methods on the module table
-- itself static.
Object.__index = Object;

--[[
Returns true if the specified class matches the object provided,
if it is an object.

Params:
TypeName <string> - The type's name.
Variant <variant> - Any value.
]]--
function Object.MatchesType(TypeName, Variant)
	return typeof(Variant) == "table" and TypeName == Variant.ClassName;
end

--[[
Sets the default class that is inherited from and the
updaters that are used when an instance
of the particular object has been constructed.

Params:
Table <table> - The table pointing to the class to inherit from.
Updaters <table> - A dictionary of functions to use as a default.
]]--
function Object.Inherit(Table, Updaters)
	assert(typeof(Table == "table"), "Argument 1 must be a table.");
	assert(Updaters == nil or typeof(Updaters == "table"), "Argument 2 must be a table or nil.");
	
	for i, v in pairs(Table) do
		Inherited[i] = v;
	end
	
	if Updaters ~= nil then
		for i, v in pairs(Updaters) do
			InheritedUpdaters[i] = v;
		end
	end
end

--[[
	Fires the specified callback with the provided arguments.
	
	Params:
	func <function> - The function to call.
	... <tuple> - The arguments to pass to the function.
]]--
function Object.FireCallback(func, ...)
	if typeof(func) == "function" then
		coroutine.wrap(func)(...);
	end
end

-- Constructor function for the object (anything outside this is static).
function Object.New(Type: string?)
	local Obj = {};
	local Updaters = {};
	local DisposalListeners = {};
	local InstanceDestroyEnabled = false;
	
	if typeof(Type) ~= "string" then
		Type = "";
	end
	
	Obj.Name = Type;
	Obj.ClassName = Type;
	
	-- This part loads inherited properties and their updaters.
	for i, v in pairs(Inherited) do
		Obj[i] = v;
		
		local f = InheritedUpdaters[i]
		if typeof(f) == "function" then
			Updaters[i] = f;
		end
	end
	
	-- The metatable takes care of the indexing.
	local Meta = setmetatable({}, {
		__index = function(t, k)
			if Obj ~= nil then
				return Obj[k];
			end
		end,
		
		__newindex = function(t, k, v)
			if Obj ~= nil then
				Obj[k] = v;

				if k ~= "OnUpdate" then -- To prevent accidental recursion
					-- Fire the event
					local UpdatedCallback = t.OnUpdate;
					if typeof(UpdatedCallback) == "function" then
						coroutine.wrap(UpdatedCallback)(k, v);
					end

					-- Run updater
					if Updaters ~= nil then
						local Updater = Updaters[k];
						if typeof(Updater) == "function" then
							Updater(v);
						end
					end
				end
			end
		end,
	})
	
	-- Asserts if the object has been Dispose()'d.
	local function AssertDisposed()
		assert(DisposalListeners ~= nil, "Object has already been disposed.");
	end
	
	--[[
	Callback that is fired when the object gets updated.
	This can happen through a property being initalized or set.
	]]--
	Obj.OnUpdate = nil;
	
	--[[
	Callback that is fired once the object is "disposed".
	This callback is called before the ones in the listener
	table so use this if you need to set a priority
	disposal callback.
	]]--
	Obj.OnDisposal = nil;
	
	--[[
	Sets a property and specifies what changing it does.
	Should be used for intializing a property.
	
	Params:
	Name <string> - The name of the property to update.
	Value <variant> - The new value of the property.
	Updater <function> - The callback to set (use nil for no callback).
	]]--
	function Obj.SetProperty(Name, Value, Updater)
		Obj[Name] = Value;
		
		local IsFunc = typeof(Updater) == "function";
		if Updater == nil or IsFunc then
			Updaters[Name] = Updater;
			
			-- Run the updater for initialization.
			if IsFunc then
				Updater(Value);
			end
		end
	end
	
	--[[
	Sets if this object destroys any object/instance
	that has the :Destroy() function.
	Disabled by default.
	
	Params:
	Enabled <boolean> - Whether or not to do the above.
	]]--
	function Obj.SetInstanceDestroy(Enabled)
		assert(typeof(Enabled) == "boolean", "Argument 1 must be a boolean.");
		
		InstanceDestroyEnabled = Enabled;
	end
	
	--[[
	Adds a listener function that is called when Dispose() is called.
	
	Params:
	Listener <function> - The function to add.
	]]--
	function Obj.AddDisposalListener(Listener)
		AssertDisposed();
		assert(typeof(Listener) == "function", "Argument 1 must be a function.");
		
		DisposalListeners[Listener] = Listener;
	end
	
	--[[
	Removes a listener that is called when Dispose() is called.
	
	Params:
	Listener <function> - The function to remove.
	]]--
	function Obj.RemoveDisposalListener(Listener)
		AssertDisposed();
		DisposalListeners[Listener] = nil;
	end
	
	--[[
	Removes all listeners from being called when Dispose() is called.
	]]--
	function Obj.ClearDisposalListeners()
		if DisposalListeners ~= nil then
			DisposalListeners = {};
		end
	end
	
	--[[
	Prepares the object for garbage collection.
	]]--
	function Obj.Dispose()
		Updaters = nil;
		
		-- Run the disposal callback
		local DisposeFunc = Obj.OnDisposal;
		if typeof(DisposeFunc) == "function" then
			-- Run as a non-coroutine, in case any values are still needed
			DisposeFunc();
		end
		
		-- Run the other disposal listeners.
		if DisposalListeners ~= nil then
			for i, v in pairs(DisposalListeners) do
				if typeof(v) == "function" then
					v();
				end
			end
		end
		
		-- Disconnect any Instance execution stuff.
		for i, v in pairs(Obj) do
			pcall(function() 
				local idxType = typeof(v);
				if idxType == "RBXScriptConnection" then
					v:Disconnect();
				elseif idxType == "Instance" and InstanceDestroyEnabled == true then
					v:Destroy();
				end
			end);
		end
		
		-- Destroy the metatable
		setmetatable(Obj, nil);
		Meta = nil;
		DisposalListeners = nil;
		InstanceDestroyEnabled = nil;
		
		-- The Obj table is garbage collected once the field holding
		-- an instance of this object is set to nil or another value
	end
	
	return Meta;
end

return Object;]]></ProtectedString>
								<int64 name="SourceAssetId">6782907931</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">33e00f9ae0bd5d820252a9ee000b6e0e</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBXA41CAD129B8A453283E1B8C3A49A44D7">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BaseInteractive</string>
							<string name="ScriptGuid">{01931747-E3DA-4F55-99B2-CDDD72DA848F}</string>
							<ProtectedString name="Source"><![CDATA[--[[
The utility module for client interactives. These are just mechanics that can be used in levels or community builds
(some may know these as ClientObjects) and are intended to be bound to instances

This also contains the base interactive class (which is a bunch of signals for implementation)

By udev2192
]]--

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local PhysicsService = game:GetService("PhysicsService")

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")

local Interactives = script.Parent
local MapHandles = Interactives.Parent
local Mechanics = Interactives:WaitForChild("Mechanics")

local Adapters = RepModules:WaitForChild("Adapters")
local UtilRepModules = RepModules:WaitForChild("Utils")

local CharAdapter = require(Adapters:WaitForChild("CharacterAdapter"))

local IntroText = require(MapHandles:WaitForChild("Gui"):WaitForChild("IntroText"))

local Signal = require(UtilRepModules:WaitForChild("Signal"))
local Utils = require(UtilRepModules:WaitForChild("Utility"))
local Object = require(UtilRepModules:WaitForChild("Object"))
local TweenGroup = require(UtilRepModules:WaitForChild("TweenGroup"))

local Interactives = script.Parent
local abs = math.abs

local LocalPlayer

export type InteractiveObject = {
	OnInitialize: () -> ()?,
	OnStart: () -> ()?,
	OnShutdown: () -> ()?
} & Object.ObjectPool

local BaseInteractive = {}
BaseInteractive.__index = BaseInteractive
BaseInteractive.ClassName = script.Name

BaseInteractive.GlobalId = Interactives.Name .. "/Globals"

-- A few attribution names
BaseInteractive.PhysicsRadiusAttribute = "PhysicsRadius"

--[[
<string> - The name given to a module which specifies that
		   it defines the behavior of the interactive
]]--
BaseInteractive.DefinitionName = "CustomDefinition"

BaseInteractive.ValueClassName = "StringValue"
BaseInteractive.ScreenGuiName = "InteractiveGui"

BaseInteractive.DefaultCharacterSize = Vector3.new(0, 5, 0)

--[[
<table> - Collision group names for BaseParts
]]--
BaseInteractive.CollisionGroups = {
	Default = PhysicsService:GetCollisionGroupName(0),
	Players = "PlayerCollisionGroup",
	Interactives = "InteractiveCollisionGroup",
}

--[[
<table> - Collision groups used for filtering, such that
		  its BaseParts can only collide with a particular
		  collision group
]]--
BaseInteractive.CollisionFilters = {
	DefaultOnly = "DefaultOnly",
	PlayersOnly = "PlayersOnly",
	InteractivesOnly = "InteractivesOnly"
}

-- Type definitions

-- Global setup
if _G[BaseInteractive.GlobalId] == nil then
	_G[BaseInteractive.GlobalId] = {}
end

if _G[BaseInteractive.GlobalId].Reserved == nil then
	_G[BaseInteractive.GlobalId].Reserved = {}
end

if _G[BaseInteractive.GlobalId].Definitions == nil then
	_G[BaseInteractive.GlobalId].Definitions = {}
end

-- The storage table is for use by interactives
if _G[BaseInteractive.GlobalId].InteractStorage == nil then
	_G[BaseInteractive.GlobalId].InteractStorage = {}
end

-- Table reference (micro-optimization)
local Globals = _G[BaseInteractive.GlobalId]
local Definitions = Globals.Definitions -- For external interactive code definitions
local InteractStorage = Globals.InteractStorage -- For external interactive values
local Reserved = Globals.Reserved

-- Server global setup
if RunService:IsServer() then
	
end

-- Client global setup
if RunService:IsClient() then
	LocalPlayer = Players.LocalPlayer
	
	if Reserved.CharacterHandle == nil then
		Reserved.CharacterHandle = CharAdapter.New(LocalPlayer)
	end
	
	if Reserved.InteractiveGui == nil then
		local Gui = Instance.new("ScreenGui")
		Reserved.InteractiveGui = Gui
		
		Gui.Name = BaseInteractive.ScreenGuiName
		Gui.ResetOnSpawn = false
		Gui.IgnoreGuiInset = true
		Gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		Gui.Parent = LocalPlayer:WaitForChild("PlayerGui")
	end
	
	if Reserved.InteractiveWorkspace == nil then
		local InteractWorkspace = Instance.new("Folder")
		Reserved.InteractiveWorkspace = InteractWorkspace
		
		InteractWorkspace.Name = BaseInteractive.ClassName .. "WSCache"
		InteractWorkspace.Parent = workspace
	end
end

function BaseInteractive.AssertClient()
	assert(RunService:IsClient(), "This action can only be performed from the client.")
end

function BaseInteractive.AssertServer()
	assert(RunService:IsServer(), "This action can only be performed from the server")
end

--[[
Destroys collision groups other than the default one
]]--
function BaseInteractive.DeleteCollisionGroups()
	BaseInteractive.AssertServer()

	local Groups = BaseInteractive.CollisionGroups
	local Default = Groups.Default

	for i, v in pairs(PhysicsService:GetCollisionGroups()) do
		if v ~= Default then
			PhysicsService:RemoveCollisionGroup(v)
		end
	end
	
	Reserved.CollisionGroupsCreated = nil
end

--[[
Creates collision groups listed in the CollisionGroups table
other than the default one
]]--
function BaseInteractive.CreateCollisionGroups()
	BaseInteractive.AssertServer()
	
	if Reserved.CollisionGroupsCreated == nil then
		Reserved.CollisionGroupsCreated = true
		
		local Groups = BaseInteractive.CollisionGroups
		local Filters = BaseInteractive.CollisionFilters

		local Default = Groups.Default

		for i, v in pairs(Groups) do
			if v ~= Default then
				PhysicsService:CreateCollisionGroup(v)
			end
		end

		for i, v in pairs(Filters) do
			if v ~= Default then
				PhysicsService:CreateCollisionGroup(v)
			end
		end
	end
end


--[[
Resets collision group behavior
]]--
function BaseInteractive.RefreshCollisionGroups()
	BaseInteractive.AssertServer()
	
	local Groups = BaseInteractive.CollisionGroups
	local Filters = BaseInteractive.CollisionFilters
	
	local Default = Groups.Default
	local Players = Groups.Players
	local Interactives = Groups.Interactives
	
	local DefaultOnly = Filters.DefaultOnly
	local PlayersOnly = Filters.PlayersOnly
	local InteractivesOnly = Filters.InteractivesOnly
	
	-- Whether or not players can collide with each other
	PhysicsService:CollisionGroupSetCollidable(Players, Players, false)
	
	-- Every other group
	PhysicsService:CollisionGroupSetCollidable(Default, Players, true)
	
	PhysicsService:CollisionGroupSetCollidable(DefaultOnly, Default, true)
	PhysicsService:CollisionGroupSetCollidable(DefaultOnly, Players, false)
	PhysicsService:CollisionGroupSetCollidable(DefaultOnly, Interactives, false)
	
	PhysicsService:CollisionGroupSetCollidable(PlayersOnly, Default, false)
	PhysicsService:CollisionGroupSetCollidable(PlayersOnly, Players, true)
	PhysicsService:CollisionGroupSetCollidable(PlayersOnly, Interactives, false)
	
	PhysicsService:CollisionGroupSetCollidable(InteractivesOnly, Default, false)
	PhysicsService:CollisionGroupSetCollidable(InteractivesOnly, Players, false)
	PhysicsService:CollisionGroupSetCollidable(InteractivesOnly, Interactives, true)
end

--[[
Clears all custom interactive definitions from the global

Params:
Name <string> - The name of the definition to be removed
]]--
function BaseInteractive.ClearDefinitions()
	Definitions = {}
end

--[[
Removes a custom interactive definition

Params:
Name <string> - The name of the definition to be removed
]]--
function BaseInteractive.RemoveDefinition(Name: string)
	assert(typeof(Name) == "string", "Argument 1 must be a string.")

	Definitions[Name] = nil
end

--[[
Adds a custom interactive definition

Params:
Name <string> - The name of the definition to be removed
Table <table> - The interactive's definition as a Lua table
]]--
function BaseInteractive.AddDefinition(Name: string, Table: table)
	assert(typeof(Name) == "string", "Argument 1 must be a string.")
	assert(typeof(Table) == "table", "Argument 2 must be a table.")

	Definitions[Name] = Table
end

--[[
Looks for interactive's class definition by name.
Order goes as follows:
1) Custom definitions (listed in the global)
2) Listed definitions in the module's parent

Params:
Name <string> - The interactive class/code to look for

Returns:
<table> - If the interactive is listed, it returns its class definition.
		  Otherwise, it returns nil.
]]--
function BaseInteractive.GetByName(Name: string) : {}?
	local ScriptName = script.Name
	assert(Name ~= ScriptName, "Interactive class name cannot be '" .. ScriptName .. "'")
	ScriptName = nil
	
	local Global = Definitions[Name]
	
	if typeof(Global) == "table" then
		return Global
	end
	
	Global = Mechanics:FindFirstChild(Name)
	
	if Global and Global:IsA("ModuleScript") then
		-- Save and return the new global
		Global = require(Global)
		BaseInteractive.AddDefinition(Name, Global)
		
		return Global
	end
	
	return nil
end

--[[
Looks for interactive's class definition by instance.
Order goes as follows:
1) The "_Definition" module in the instance
2) Whatever is returned by GetByName()

Params:
StringVal <StringValue> - The instance to search an interactive definition for

Returns:
<table> - If the interactive is listed, it returns its class definition.
		  Otherwise, it returns nil.
]]--
function BaseInteractive.GetByInstance(StringVal: StringValue) : {}?
	assert(
		typeof(StringVal) == "Instance" and StringVal.ClassName == BaseInteractive.ValueClassName,
		"Instance passed as the 1st argument must be a " .. BaseInteractive.ValueClassName
	)
	
	local CustomDef = StringVal:FindFirstChild(BaseInteractive.DefinitionName)
	if CustomDef and CustomDef:IsA("ModuleScript") then
		return CustomDef
	end
	
	return BaseInteractive.GetByName(StringVal.Value)
end

--[[
Returns the ScreenGui intended for use by Interactives and Maps

Returns:
<ScreenGui> - The ScreenGui
]]--
function BaseInteractive.GetScreenGui(): ScreenGui
	return Reserved.InteractiveGui
end

--[[
Returns the Workspace folder used to hold interactives

Returns:
<ScreenGui> - The ScreenGui
]]--
function BaseInteractive.GetWorkspace(): Folder
	return Reserved.InteractiveWorkspace
end

--[[
Returns the CharacterAdapter for the local player.
This will error if not called from the client.

Returns:
<CharacterAdapter> - The LocalPlayer's CharacterAdapter.
]]--
function BaseInteractive.GetCharacterHandle()
	BaseInteractive.AssertClient()
	
	return Reserved.CharacterHandle
end

--[[
Returns:
<table> - The table used to hold the table of general utility functions
]]--
function BaseInteractive.GetGeneralUtils()
	return Utils
end

--[[
Returns:
<BasePart> - The BasePart created as the hitbox for the character
]]--
function BaseInteractive.GetHitbox()
	BaseInteractive.AssertClient()

	return BaseInteractive.GetCharacterHandle().Parts.Hitbox
end

--[[
Returns:
<table> - The table containing the signal class that provides an alternative to
		  the BindableEvent
]]--
function BaseInteractive.GetSignalClass()
	return Signal
end

--[[
Returns:
<table> - The table containing the base class used for all object-oriented stuff
]]--
function BaseInteractive.GetObjectClass()
	return Object
end

--[[
Returns:
<table> - The table containing the tweening group class
]]--
function BaseInteractive.GetTweenGroupClass()
	return TweenGroup
end

--[[
Returns:
<Folder> - The folder instance containing Utility classes/modules
]]--
function BaseInteractive.GetUtilPackage()
	return UtilRepModules
end

--[[
Returns:
<Signal> - A synchronized event listener
]]--
function BaseInteractive.CreateSyncedSignal()
	local Signal = Signal.New()
	Signal.Sync = true

	return Signal
end

--[[
Returns the value associated with a storage key for interactives.

Params:
Name <string> - The key to use when looking for the corresponding value

Returns:
<any> - The value (or nil if it doesn't exist)
]]--
function BaseInteractive.GetGlobal(Name: string) : any
	return InteractStorage[Name]
end

--[[
Stores a global value for use by interactives.

Params:
Name <string> - The key to store
Value <any> - The value to store
]]--
function BaseInteractive.SetGlobal(Name: string, Value: any)
	InteractStorage[Name] = Value
end

--[[
Just like StoreGlobal() but only sets the value
if it hasn't already been set.

Params:
Name <string> - The key to store
Value <any> - The value to store
]]--
function BaseInteractive.InitializeGlobal(Name: string, Value: any)
	if BaseInteractive.GetGlobal(Name) == nil then
		BaseInteractive.SetGlobal(Name, Value)
	end
end

--[[
Returns the distance of two vectors

Params:
Vect1 <Vector3> - The first vector
Vect2 <Vector3> - The second vector

Returns:
<number> - The distance
]]--
function BaseInteractive.GetDistance(Vect1: Vector3, Vect2: Vector3) : number
	return (Vect2 - Vect1).Magnitude
end

--[[
Returns the hypotenuse of two lengths

Params:
a <number> - The first length (usually the base of a triangle)
b <number> - The second length (usually the height of a triangle)

Returns:
<number> - The hypotenuse
]]--
function BaseInteractive.Hypotenuse(a: number, b: number) : number
	return math.sqrt(a^2 + b^2)
end

--[[
Determines whether or not the object is a table
with the CFrame and Size properties

Returns:
<boolean> - If the above is true
]]--
function BaseInteractive.Is3dObject(Obj: {})
	if typeof(Obj) == "table" or typeof(Obj) == "Instance" then
		if typeof(Obj.CFrame) == "CFrame" and typeof(Obj.Size) == "Vector3" then
			return true
		end
	end

	return false
end

--[[
Determines if a point converted to object space is within the bounds of the
corresponding part

Params:
LocalPoint <Vector3> - The point converted to object space
ObjectSize <Vector3> - The object's size
Offset <Vector3> - How much to offset the size 
ShapeType <ShapeType> - The part's shape
]]--
function BaseInteractive.IsInLocalBounds(LocalPoint: Vector3, ObjectSize: Vector3, Offset: Vector3, ShapeType: EnumItem)
	-- Offset compared size, smaller means more constrained
	ObjectSize = (ObjectSize + Offset) * 0.5

	-- Get local point and object size components
	-- Use absolute value for the LocalPoint so that
	-- negative numbers won't affect the bound results.
	local LocalX = abs(LocalPoint.X + Offset.X)
	local LocalY = abs(LocalPoint.Y + Offset.Y)
	local LocalZ = abs(LocalPoint.Z + Offset.Z)

	local SizeX = ObjectSize.X
	local SizeY = ObjectSize.Y
	local SizeZ = ObjectSize.Z

	local ValidTypes = Enum.PartType

	-- Use the corresponding formula to determine in-bounds status
	-- (Use less than or equal to for comparision accuracy)
	if ShapeType == ValidTypes.Block then
		-- Return the bounding status of the "box-shaped" 3d objects
		return LocalX <= SizeX and LocalY <= SizeY and LocalZ <= SizeZ
	elseif ShapeType == ValidTypes.Cylinder then
		-- In a Roblox cylinder, the non-circular coordinate is the X
		-- coordinate. Take that into account when finding the hypotenuse
		-- Use the object space Y-position to compare hypotenuse bounding status
		return LocalX <= SizeX and BaseInteractive.Hypotenuse(LocalY, LocalZ) <= SizeZ + (Offset.Z)
	elseif ShapeType == ValidTypes.Ball then
		-- Use the hypotenuse function for faster performance
		-- (Use x and z coordinates for that)
		-- If the hypotenuse is less than or equal to the Y size,
		-- mark it as "in bounds" and return true
		-- If that passes, then do the same, but this time, 
		-- compare the hypotenuse of y and z to x,
		-- then the hypotenuse of x and y to z

		--local XDist = abs(SizeY - LocalY)
		--local YDist = abs(SizeY - LocalY)
		--local ZDist = abs(SizeZ - LocalZ)

		-- The Y coordinate of ObjectSize / 2 will indicate radius
		--local Hypo = Hypotenuse(XDist, ZDist)
		-- Use local point coordinates, since that will determine offset
		-- from the center due to it being object space
		return BaseInteractive.Hypotenuse(LocalX, LocalZ) <= SizeY
		--and Hypotenuse(YDist, ZDist) <= SizeX
		--and Hypotenuse(XDist, YDist) <= SizeZ
	end
end

--function BaseInteractive.IsInLocalBounds(LocalPoint: Vector3, ObjectSize: Vector3, Offset: Vector3, ShapeType: EnumItem)
--	-- Offset compared size, smaller means more constrained
--	ObjectSize = (ObjectSize * 0.5)

--	-- Get local point and object size components
--	-- Use absolute value for the LocalPoint so that
--	-- negative numbers won't affect the bound results.
--	local LocalX = abs(LocalPoint.X)
--	local LocalY = abs(LocalPoint.Y)
--	local LocalZ = abs(LocalPoint.Z)
	
--	local HitSizeX = ObjectSize.X - LocalX
--	local HitSizeY = ObjectSize.Y - LocalY
--	local HitSizeZ = ObjectSize.Z - LocalZ

--	--local SizeX = ObjectSize.X
--	--local SizeY = ObjectSize.Y
--	--local SizeZ = ObjectSize.Z

--	local ShapeTypes = Enum.PartType

--	-- Use the corresponding formula to determine in-bounds status
--	-- (Use less than or equal to for comparision accuracy)
--	if ShapeType == ShapeTypes.Block then
--		-- Return the bounding status of the "box-shaped" 3d objects
--		--return LocalX <= SizeX and LocalY <= SizeY and LocalZ <= SizeZ
--		return HitSizeX >= Offset.X and HitSizeY >= Offset.Y and HitSizeZ >= Offset.Z
--	elseif ShapeType == ShapeTypes.Cylinder then
--		-- In a Roblox cylinder, the non-circular coordinate is the X
--		-- coordinate. Take that into account when finding the hypotenuse
--		-- Use the object space Y-position to compare hypotenuse bounding status
--		--return LocalX <= SizeX and BaseInteractive.Hypotenuse(LocalY, LocalZ) <= SizeZ + (Offset.Z)
--		return HitSizeX >= Offset.Z and BaseInteractive.Hypotenuse(LocalY, LocalZ) <= ObjectSize.Z + (Offset.Z)
--	elseif ShapeType == ShapeTypes.Ball then
--		warn("Use BaseInteractive.GetDistance() for spheres")
--	end

--	return false
--end

--[[
Returns if the point is inside a certain part

Params:
Point <Vector3> - The point to use when determining if it's inside
Part <table> - Any table that has the CFrame and Size properties
Offset <Vector3?> - Offsets the detection size (bigger = less filtered)
]]--
function BaseInteractive.IsPointInside(Point: Vector3, Part: {}, Offset: Vector3?)
	assert(typeof(Point) == "Vector3", "Argument 1 must be a Vector3")
	assert(BaseInteractive.Is3dObject(Part), "Argument 2 must be a table with CFrame and Size properties")

	local ShapeType = Part.Shape
	if ShapeType then
		if ShapeType == Enum.PartType.Ball then
			return BaseInteractive.GetDistance(Point, Part.CFrame.Position) <= Part.Size.Y
		else
			local PartCFrame = Part.CFrame
			return BaseInteractive.IsInLocalBounds(PartCFrame:PointToObjectSpace(Point), Part.Size, Offset or Vector3.zero, Part.Shape)
		end
	end

	return false
end

--[[
Performs a raycast operation up to 3 times, returning nil if these conditions haven't been met in order:
- center check
- check with negative offset
- check with positive offset

Params:
HitCFrame <CFrame> - The starting CFrame of the raycast
Direction <Vector3> - The directional vector of the raycast
RaycastParams <RaycastParams> - The RaycastParams to use
Offset <Vector3?> - The offset to use

Returns:
<RaycastResult?> - The results of the raycast (or nil if a BasePart couldn't be hit)
]]--
function BaseInteractive.RaycastWithOffset(HitCFrame: CFrame, Direction: Vector3, RaycastInfo: RaycastParams, Offset: Vector3?)
	local Result = workspace:Raycast(HitCFrame.Position, Direction, RaycastInfo)

	if Result then
		return Result
	elseif Offset and Offset ~= Vector3.zero then
		Result = workspace:Raycast(HitCFrame:PointToWorldSpace(-Offset), Direction, RaycastInfo)

		if Result then
			return Result
		else
			Result = workspace:Raycast(HitCFrame:PointToWorldSpace(Offset), Direction, RaycastInfo)

			if Result then
				return Result
			end
		end
	end

	return nil
end

--[[
Hides and destroys the intro text made by DisplayIntroText()
]]--
function BaseInteractive.RemoveIntroText()
	local OriginalText = Reserved.IntroText
	if OriginalText ~= nil then
		OriginalText.SetVisible(false)
		OriginalText.Dispose()
		Reserved.IntroText = nil
	end
end

--[[
Displays text at the top of the screen that's intended to tell the user where they are
]]--
function BaseInteractive.DisplayIntroText(Text: string, Color: Color3, Duration: number?)
	BaseInteractive.RemoveIntroText()
	
	-- Temporarily display some intro text
	local NewText = IntroText.New(Text)
	Reserved.IntroText = NewText
	NewText.Color = Color
	NewText.Gui.Parent = BaseInteractive.GetScreenGui()
	
	NewText.SetVisible(true)
	NewText.VisibleChanged.Sync = true
	
	task.delay(Duration or 4, BaseInteractive.RemoveIntroText)
end

--[[
Constructs a new base interactive object (this is meant to be used by other constructors)
]]--
function BaseInteractive.New(): InteractiveObject
	local Interact = Object.New(BaseInteractive.ClassName)
	
	--[[
	(synced, this fires on the current thread)
	Fires when initialzation is requested
	]]--
	Interact.OnInitialize = nil--BaseInteractive.CreateSyncedSignal()
	
	--[[
	(synced, this fires on the current thread)
	Fires when starting is requested
	]]--
	Interact.OnStart = nil--BaseInteractive.CreateSyncedSignal()
	
	--[[
	(synced, this fires on the current thread)
	Fires when the "shutdown" of the interactive is requested
	]]--
	Interact.OnShutdown = nil--BaseInteractive.CreateSyncedSignal()
	
	Interact.OnDisposal = function()
		local OnShutdown = Interact.OnShutdown
		if OnShutdown then
			OnShutdown()
		end
		
		--Interact.OnShutdown.Fire()
		--Interact.OnShutdown.Dispose()
		
		--Interact.OnInitialize.Dispose()
		--Interact.OnStart.Dispose()
	end
	
	return Interact
end

return BaseInteractive]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0f86260d67629ec201ed4a4400023617</UniqueId>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBX6A1FBDC352E4463483B581DF60FE8A07">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Mechanics</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">135020c8d7ddaf87027e1541000b8a28</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX5ACB0F0154254B0A8896863B00109245">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Bubble</string>
								<string name="ScriptGuid">{F00CA1A6-FC0E-422F-9E8D-26B68185DBB2}</string>
								<ProtectedString name="Source"><![CDATA[--[[
celeste is such a good game and i haven't even played it

By udev2192
]]--

local TweenService = game:GetService("TweenService")
--local RunService = game:GetService("RunService")

local Interactives = script.Parent.Parent
local Util = Interactives.Parent:WaitForChild("Util")

local BaseInteractive = require(Interactives:WaitForChild("BaseInteractive"))
local Bezier = require(Util:WaitForChild("Bezier"))
local PropertyLock = require(Util:WaitForChild("PropertyLock"))

local Bubble = {}

function Bubble.New(Val: StringValue, MapLauncher: {})
	local Interact = BaseInteractive.New()
	local PropertiesModule = Val:FindFirstChild("BubbleProperties")
	
	local PointParts: {BasePart} = {}
	
	-- {Bubble part, number value, tween instance, property lock}
	local RidingParts: {[BasePart]: {}} = {}
	
	local Course
	local TouchConnection: RBXScriptConnection
	
	Interact.PopEffect = script:WaitForChild("PopEffect")
	Interact.MoveEffect = script:WaitForChild("MoveEffect")
	
	Interact.PopSound = script:WaitForChild("PopSound")
	Interact.MoveSound = script:WaitForChild("MoveSound")
	Interact.BlowSound = script:WaitForChild("BlowSound")
	
	Interact.BlowTweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	
	--[[
	Pops a bubble that's carrying the specified part
	
	Params:
	Part <BasePart> - The part
	]]--
	function Interact.Pop(Part: BasePart, UseEffects: boolean)
		local Ride = RidingParts[Part]
		
		if Ride then
			RidingParts[Part] = nil
			
			if Ride[2] then
				Ride[2]:Destroy()
			end
			
			local Tween = Ride[3]
			if Tween then
				Tween:Pause()
				Tween:Destroy()
				Tween = nil
			end
			
			local AnchorLock = Ride[4]
			if AnchorLock then
				AnchorLock.ReleaseAll()
				AnchorLock = nil
			end
			
			if UseEffects then
				local BubblePart: BasePart = Ride[1]
				
				local PopEffect: ParticleEmitter = Interact.PopEffect
				if PopEffect then
					local Sound = Val:FindFirstChild("PopSound") or Interact.PopSound
					if Sound then
						Sound:Play()
					end
					
					local MoveEffect = BubblePart:FindFirstChild("MoveEffect")
					if MoveEffect then
						MoveEffect:Destroy()
					end
					
					BubblePart.Transparency = 1
					local Effect = PopEffect:Clone()
					Effect.Parent = BubblePart
					
					Effect:Emit(Effect:GetAttribute("NumParticles"))
					task.wait(Effect.Lifetime.Max)
					Effect:Destroy()
				end
				
				BubblePart:Destroy()
			else
				Ride[1]:Destroy()
			end
		end
	end
	
	--[[
	Blows a bubble for the specified part, then carries it
	along the course
	
	Params:
	Part <BasePart> - The part
	]]--
	function Interact.Carry(Part: BasePart)
		if Course and RidingParts[Part] == nil then
			local FirstPoint = PointParts[1]
			assert(FirstPoint, "Cannot spawn bubble because the first part/point in its intended path is missing")
			
			local OriginalRideTable = {}
			RidingParts[Part] = OriginalRideTable
			
			if Val:GetAttribute("StopsVelocity") then
				Part.AssemblyLinearVelocity = Vector3.zero
			end
			
			local AnchorLock = PropertyLock.New(Part)
			AnchorLock.Set("Anchored", true)
			OriginalRideTable[4] = AnchorLock
			--if RidingParts[Part] == nil then
			--	Interact.Pop(Part)
			--end

			local Properties = require(PropertiesModule)

			local BubblePart = Instance.new("Part")
			BubblePart.Material = Enum.Material.Ice
			BubblePart.Color = Color3.fromRGB(85, 170, 255)
			BubblePart.Name = "Bubble"
			BubblePart.Position = FirstPoint.Position
			BubblePart.Orientation = FirstPoint.Orientation
			BubblePart.Shape = Enum.PartType.Ball
			
			local PartProperties = Properties.PartProperties
			if PartProperties then
				for i, v in pairs(PartProperties) do
					BubblePart[i] = v
				end
			end
			PartProperties = nil
			
			BubblePart.Anchored = true
			BubblePart.CanCollide = false
			BubblePart.CanTouch = false
			BubblePart.CanQuery = false
			BubblePart.Size = Vector3.zero
			BubblePart.Transparency = 0.5
			BubblePart.Parent = Part.Parent

			-- Blow the bubble
			local BlowTweenInfo: TweenInfo = Properties.BlowTweenInfo or Interact.BlowTweenInfo
			
			local CharMoveTween: Tween = TweenService:Create(Part, BlowTweenInfo, {CFrame = FirstPoint.CFrame})
			
			local CurrentTween: Tween = TweenService:Create(
				BubblePart,
				BlowTweenInfo,
				{Size = Properties.Size or Vector3.new(9, 9, 9)}
			)
			CurrentTween.Completed:Connect(function()
				CurrentTween:Destroy()
				
				local RideTable = RidingParts[Part]
				if RideTable then
					-- Move the bubble to its destination along the course
					local TimeVal: NumberValue = Instance.new("NumberValue")
					TimeVal.Value = 0
					TimeVal.Changed:Connect(function(NewTime)
						-- Wait for the task scheduler to do its stuff
						-- so the transition is smooth
						task.wait()
						
						-- Update the position
						BubblePart.Position = Course.SmoothLerp(NewTime)
						Part.CFrame = BubblePart.CFrame

						if NewTime >= 1 then
							-- Done
							CurrentTween:Destroy()
							Interact.Pop(Part, true)
						end
					end)
					

					local MoveSound = Interact.MoveSound
					if MoveSound then
						MoveSound = MoveSound:Clone()
						MoveSound.Parent = BubblePart
					end
					
					local MoveEffect = Interact.MoveEffect
					if MoveEffect then
						MoveEffect = MoveEffect:Clone()
						MoveEffect.Parent = BubblePart
					end
					
					CurrentTween = TweenService:Create(TimeVal, Properties.CarryTweenInfo, {Value = 1})
					RideTable[2] = TimeVal
					RideTable[3] = CurrentTween
					CurrentTween:Play()
				end
			end)
			
			local BlowSound = Interact.BlowSound
			if BlowSound then
				BlowSound:Play()
			end
			
			--RidingParts[Part] = {BubblePart, nil, CharMoveTween}
			OriginalRideTable[1] = BubblePart
			OriginalRideTable[3] = CharMoveTween
			CurrentTween:Play()
			CharMoveTween:Play()
		end
	end
	
	function Interact.OnInitialize()
		-- Find bezier points
		local PointsFolder: Folder = Val.Parent:WaitForChild("Points")
		local Points: {Vector3} = {}
		
		for i, v in pairs(PointsFolder:GetChildren()) do
			if v:IsA("BasePart") then
				local Number = tonumber(v.Name)
				
				if Number then
					--table.insert(Points, Number, v.CFrame.Position)
					Points[Number] = v.CFrame.Position
					--table.insert(PointParts, Number, v)
					PointParts[Number] = v
				end
			end
		end
		
		local NumPoints = #Points
		if NumPoints < 2 then
			error("Cannot calculate bubble course because there are less than 2 parts to use as points.")
		end
		
		-- Calculate segments
		local AutoNumSegments: boolean = Val:GetAttribute("AutoNumSegments")
		local NumSegments: number
		
		if AutoNumSegments then
			if Points == 2 then
				NumSegments = 2
			else
				NumSegments = math.max((Points[2] - Points[1]).Magnitude, 2)
			end
		else
			NumSegments = Val:GetAttribute("NumSegments")
		end
		
		Course = Bezier.New(Val:GetAttribute("Degree"), NumSegments, Points)
	end
	
	function Interact.OnStart()
		if TouchConnection == nil then
			TouchConnection = Val.Parent:WaitForChild("Hitbox").Touched:Connect(function(OtherPart)
				if
					OtherPart:GetAttribute("CanBubbleCarry") 
					or OtherPart == BaseInteractive.GetCharacterHandle().Parts.RootPart
				then
					Interact.Carry(OtherPart)
				end
			end)
		end
	end
	
	function Interact.OnShutdown()
		if TouchConnection then
			TouchConnection:Disconnect()
			TouchConnection = nil
		end
		
		for i, v in pairs(RidingParts) do
			Interact.Pop(i, false)
		end
	end
	
	function Interact.OnDisposal()
		Interact.OnShutdown()
	end
	
	return Interact
end

return Bubble]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">38e6aa343b29d1ec027d2702000b8926</UniqueId>
							</Properties>
							<Item class="Sound" referent="RBX4A9122E080CA4FC89B017813CB4CD349">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">true</bool>
									<string name="Name">MoveSound</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://9113602176</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<UniqueId name="UniqueId">2b466ac9dab77ab6027e4a76000b8914</UniqueId>
									<float name="Volume">1</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBXB3B421EAFA1E4E33842CA7A4D78AE314">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">PopSound</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://9117838379</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<UniqueId name="UniqueId">2b466ac9dab77ab6027e4a76000b9471</UniqueId>
									<float name="Volume">1</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
							<Item class="ParticleEmitter" referent="RBXA496E3226A1745919182E9A09D053E0E">
								<Properties>
									<Vector3 name="Acceleration">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<BinaryString name="AttributesSerialize">AQAAAAwAAABOdW1QYXJ0aWNsZXMGAAAAAAAASUA=</BinaryString>
									<float name="Brightness">3</float>
									<ColorSequence name="Color">0 0.333333 0.666667 1 0 1 0.333333 0.666667 1 0 </ColorSequence>
									<float name="Drag">0</float>
									<token name="EmissionDirection">1</token>
									<bool name="Enabled">false</bool>
									<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
									<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
									<token name="FlipbookLayout">0</token>
									<token name="FlipbookMode">0</token>
									<bool name="FlipbookStartRandom">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<NumberRange name="Lifetime">0.9 1 </NumberRange>
									<float name="LightEmission">1</float>
									<float name="LightInfluence">0</float>
									<bool name="LockedToPart">false</bool>
									<string name="Name">PopEffect</string>
									<token name="Orientation">0</token>
									<float name="Rate">50</float>
									<NumberRange name="RotSpeed">0 0 </NumberRange>
									<NumberRange name="Rotation">0 0 </NumberRange>
									<token name="Shape">1</token>
									<token name="ShapeInOut">0</token>
									<float name="ShapePartial">1</float>
									<token name="ShapeStyle">1</token>
									<NumberSequence name="Size">0 0.1 0 1 0 0 </NumberSequence>
									<int64 name="SourceAssetId">-1</int64>
									<NumberRange name="Speed">1.9 2 </NumberRange>
									<Vector2 name="SpreadAngle">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>rbxasset://textures/particles/sparkles_main.dds</url></Content>
									<float name="TimeScale">1</float>
									<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
									<UniqueId name="UniqueId">2b466ac9dab77ab6027e4a76000ba5ba</UniqueId>
									<float name="VelocityInheritance">0</float>
									<float name="ZOffset">0</float>
								</Properties>
							</Item>
							<Item class="ParticleEmitter" referent="RBX72E86FD8EA71405393342D740BDDC21B">
								<Properties>
									<Vector3 name="Acceleration">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="Brightness">3</float>
									<ColorSequence name="Color">0 0.333333 0.666667 1 0 1 0.333333 0.666667 1 0 </ColorSequence>
									<float name="Drag">0</float>
									<token name="EmissionDirection">1</token>
									<bool name="Enabled">true</bool>
									<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
									<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
									<token name="FlipbookLayout">0</token>
									<token name="FlipbookMode">0</token>
									<bool name="FlipbookStartRandom">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<NumberRange name="Lifetime">1.9 2 </NumberRange>
									<float name="LightEmission">1</float>
									<float name="LightInfluence">0</float>
									<bool name="LockedToPart">false</bool>
									<string name="Name">MoveEffect</string>
									<token name="Orientation">0</token>
									<float name="Rate">50</float>
									<NumberRange name="RotSpeed">0 0 </NumberRange>
									<NumberRange name="Rotation">0 0 </NumberRange>
									<token name="Shape">1</token>
									<token name="ShapeInOut">0</token>
									<float name="ShapePartial">1</float>
									<token name="ShapeStyle">0</token>
									<NumberSequence name="Size">0 0.1 0 1 0 0 </NumberSequence>
									<int64 name="SourceAssetId">-1</int64>
									<NumberRange name="Speed">1 2 </NumberRange>
									<Vector2 name="SpreadAngle">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>rbxasset://textures/particles/sparkles_main.dds</url></Content>
									<float name="TimeScale">1</float>
									<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
									<UniqueId name="UniqueId">2b466ac9dab77ab6027e4a76000ba262</UniqueId>
									<float name="VelocityInheritance">0</float>
									<float name="ZOffset">0</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBX149E802DE88B4F89B2A00E535058B6AB">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">BlowSound</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://9120313195</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<UniqueId name="UniqueId">2b466ac9dab77ab6027e4a76000c2d30</UniqueId>
									<float name="Volume">1</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBX075FF04B32F84203A7BA36498F6D0EBC">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">HealthChanger</string>
								<string name="ScriptGuid">{A2EF315E-8345-4977-83C5-D27B4BDA3DF6}</string>
								<ProtectedString name="Source"><![CDATA[--[[
Interactive that changes the local player's health

For performance reasons, health is only changed on the client
]]--

local Players = game:GetService("Players")

local Interactives = script.Parent.Parent
local InteractiveUtil = Interactives.Parent:WaitForChild("Util")

local BaseInteractive = require(Interactives:WaitForChild("BaseInteractive"))
local PointHitbox = require(InteractiveUtil:WaitForChild("PointHitbox"))

local HealthChanger = {}
HealthChanger.__index = HealthChanger
HealthChanger.IncrementAttribute = "Increment"
HealthChanger.RepeatDelayAttribute = "RepeatDelay"
--HealthChanger.DetectionRadiusAttribute = "DetectionRadius"

function HealthChanger.ChangeClientHealth(Increment: number)
	local Humanoid: Humanoid = BaseInteractive.GetCharacterHandle().Parts.Humanoid
	if Humanoid then
		Humanoid.Health = math.clamp(Humanoid.Health + Increment, 0, Humanoid.MaxHealth)
	end
end

function HealthChanger.New(Val: StringValue, MapLauncher: {})
	local LocalPlayer = Players.LocalPlayer
	assert(LocalPlayer ~= nil, "No LocalPlayer was found")

	local Changer = BaseInteractive.New()
	--local Hitbox = PointHitbox.New()

	local Connections: {RBXScriptConnection} = {}
	local TouchingParts: {BasePart} = {}
	local PartsFolder: Folder = Val.Parent:WaitForChild("Parts")
	local HealthChanging = false

	-- REMEMBER TO FIX HITBOX LOGIC (it's inaccurate)
	--local function CheckHit(IsEntered)
	--	if IsEntered then
	--		if HealthChanging == false then
	--			HealthChanging = true
	--			local IncrementName = HealthChanger.IncrementAttribute
	--			local RepeatDelayName = HealthChanger.RepeatDelayAttribute

	--			-- Do the first health change
	--			HealthChanger.ChangeClientHealth(Val:GetAttribute(IncrementName) or 0)

	--			-- Repeat if needed
	--			
	--		end
	--	else
	--		HealthChanging = false
	--	end
	--end
	
	local function CanChangeHealth()
		return HealthChanging and #TouchingParts > 0
	end

	local function UpdateHealthChange()
		if HealthChanging == false then
			HealthChanging = true
			HealthChanger.ChangeClientHealth(Val:GetAttribute(HealthChanger.IncrementAttribute) or 0)
			
			while true do
				if #TouchingParts <= 0 then
					HealthChanging = false
					break
				end
				
				if HealthChanging == false then
					break
				end

				local DelayElapsed = 0

				-- Delay must be greater than 0 since we don't wanna crash the client
				while CanChangeHealth() and DelayElapsed <= math.max(Val:GetAttribute(HealthChanger.RepeatDelayAttribute) or 0, 0) do
					DelayElapsed += task.wait()
				end

				if CanChangeHealth() then
					HealthChanger.ChangeClientHealth(Val:GetAttribute(HealthChanger.IncrementAttribute) or 0)
				else
					HealthChanging = false
					break
				end
			end
		end
	end

	local function DisconnectTouch()
		for i, v in pairs(Connections) do
			v:Disconnect()
		end

		Connections = {}
		TouchingParts = {}
	end

	-- Connect the local player's character
	local function OnCharacterLoad(Parts)
		--local HitboxPart = Parts.Hitbox

		--if HitboxPart then
		--	Hitbox.BindedPart = HitboxPart
		--	Hitbox.DetectionRadius = Val:GetAttribute(HealthChanger.DetectionRadiusAttribute) or 0
		--	Hitbox.DetectionPart = Val.Parent:WaitForChild("DetectionCenter")
		--	CheckHit(Hitbox.Scan())
		--	Hitbox.EntryChanged.Connect(CheckHit)
		--	Hitbox.Start()
		--end

		DisconnectTouch()

		local Hitbox: BasePart = Parts.Hitbox

		if Hitbox then
			table.insert(Connections, Hitbox.TouchEnded:Connect(function(OtherPart)
				if OtherPart.Parent == PartsFolder then
					local Index = table.find(TouchingParts, OtherPart)

					if Index then
						table.remove(TouchingParts, Index)
					end
				end
			end))

			table.insert(Connections, Hitbox.Touched:Connect(function(OtherPart)
				if OtherPart.Parent == PartsFolder and table.find(TouchingParts, OtherPart) == nil then
					table.insert(TouchingParts, OtherPart)
					UpdateHealthChange()
				end
			end))
		end
	end

	function Changer.OnStart()
		local CharHandle = BaseInteractive.GetCharacterHandle()

		OnCharacterLoad(CharHandle.Parts)
		CharHandle.LoadedEvent.Connect(OnCharacterLoad)

		--if CharHandle then
		--	local Parts = Val.Parent:WaitForChild("Parts")

		--	if Parts then
		--		--local AppliedParts = {}
		--		--for i, v in pairs(Parts:GetChildren()) do
		--		--	if v:IsA("BasePart") then
		--		--		table.insert(AppliedParts, v)
		--		--	end
		--		--end
		--		--Hitbox.ScannedParts = AppliedParts


		--	end
		--end
	end

	function Changer.OnShutdown()
		--Hitbox.Stop()
		--Hitbox.ScannedParts = {}

		local CharHandle = BaseInteractive.GetCharacterHandle()

		if CharHandle then
			CharHandle.LoadedEvent.Disconnect(OnCharacterLoad)
		end

		DisconnectTouch()
		HealthChanging = false
	end

	--Changer.OnStart.Connect(function()

	--end)

	--Changer.OnShutdown.Connect(function()

	--end)

	return Changer
end

return HealthChanger]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">60024f090a947c95025be1cd000b501d</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX759315D4F0A948A4A0E7AACFE2D80470">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">NPCDialog</string>
								<string name="ScriptGuid">{EA3C2782-9A3F-4772-93A1-6E6DFC3B775F}</string>
								<ProtectedString name="Source"><![CDATA[--[[
NPC Dialogs as an interactive
]]--

local Interactives = script.Parent
local NPCDialogGui = require(
	Interactives.Parent.Parent
	:WaitForChild("Gui")
	:WaitForChild("Components")
	:WaitForChild("NpcDialog")
)
local BaseInteractive = require(Interactives.Parent:WaitForChild("BaseInteractive"))

local NPCDialog = {}
NPCDialog.__index = NPCDialog

function NPCDialog.New(Val: StringValue, MapLauncher: {})
	local Dialog = BaseInteractive.New()
	local Gui: NPCDialogGui
	local PromptStarter: ProximityPrompt
	
	function Dialog.OnStart()
		if Gui == nil then
			local ActionMap = require(Val:WaitForChild("Dialog"))

			Gui = NPCDialogGui.New()
			Gui.ActionMap = ActionMap
		end
	end
	
	function Dialog.OnShutdown()
		
	end
	
	--Dialog.OnStart.Connect(function()
		
	--end)
	
	--Dialog.OnShutdown.Connect(function()
		
	--end)
	
	return Dialog
end

return NPCDialog]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">08170b3703cf6512025fa526000b59b1</UniqueId>
							</Properties>
							<Item class="ModuleScript" referent="RBXC29CBF361A1E43179D8CA5B21CA5BD15">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">ExampleDialog</string>
									<string name="ScriptGuid">{8277E75D-0DF9-47C8-A929-472E3C747166}</string>
									<ProtectedString name="Source"><![CDATA[local TypeActions = require(
	game:GetService("ReplicatedStorage")
	:WaitForChild("Modules")
	:WaitForChild("Gui")
	:WaitForChild("Components")
	:WaitForChild("NpcDialog")
).TypeActions

return {
	{TypeActions.Write, "The quick brown fox jumps over the lazy dog."},
	{TypeActions.Wait, 0.5},
	{TypeActions.Call, function()
		print("hi")
	end},
	{TypeActions.Write, " What would you like to do next?"},
	{TypeActions.SetOptions, {
		{
			Id = "OptionA1",
			Name = "Option A",
			ActionMap = {
				{TypeActions.Write, "You chose option A."},
				{TypeActions.Wait, 0.5},
				{TypeActions.Write, " Very well then, please proceed to do the first steps."},
			}
		},

		{
			Id = "OptionB1",
			Name = "Option B",
			ActionMap = {
				{TypeActions.Write, "You chose option B."},
				{TypeActions.Wait, 0.5},
				{TypeActions.Write, " Very well then, please proceed to do the second steps."},
			}
		},
	}
	},
}]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">08170b3703cf6512025fa526000b59bb</UniqueId>
								</Properties>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBXE13410D044744CF5844CE9108E96D0FB">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">PhysicsGroup</string>
								<string name="ScriptGuid">{A7551D35-ADE6-4132-910B-E310AB12FE76}</string>
								<ProtectedString name="Source"><![CDATA[--[[
Physics group intended for leaving parts unanchored only when certain conditions are met.
This is basically here for performance reasons and is intended for use on the client.

By udev2192
]]--

local PhysicsGroup = {}

local Interactives = script.Parent.Parent
local InteractiveUtil = Interactives.Parent:WaitForChild("Util")

local BaseInteractive = require(Interactives:WaitForChild("BaseInteractive"))
local PointHitbox = require(InteractiveUtil:WaitForChild("PointHitbox"))
local PropertyLock = require(InteractiveUtil:WaitForChild("PropertyLock"))

PhysicsGroup.SimulateZoneName = "SimulateZone"
PhysicsGroup.AnchoredProperty = "Anchored"

PhysicsGroup.SimulateOnLoadAttribute = "SimulateOnLoad"
PhysicsGroup.ShowOnSimulateAttribute = "ShowOnSimulate"

--[[
<table {string}> - List of ClassNames that can be hidden when outside of a simulation zone
]]--
PhysicsGroup.PartVisuals = {"Beam", "ParticleEmitter", "Fire", "Trail"}

function PhysicsGroup.New(Val: StringValue, MapLauncher: {})
	local Interact = BaseInteractive.New()

	local AnchorLocks = {}
	local DescendantParts = {}
	local OptimizedVisuals = {} -- Beams, ParticleEmitters, etc.

	local EntryDetector

	-- The original parts folder
	local PartsFolder
	local PartsFolderParent

	-- The parts folder that will actually be used
	local PartsFolderClone

	local function ClearAnchorLocks()
		for i, v in pairs(AnchorLocks) do
			v.ReleaseAll()
		end

		AnchorLocks = {}
	end
	
	local function CheckSimulationZone(IsEntered)
		if IsEntered then
			-- Set parts back to their original anchor values
			ClearAnchorLocks()
		else
			-- Anchor all parts in the parts folder
			-- and lock it as "anchored"
			for i, v in pairs(DescendantParts) do
				local AnchorLock = PropertyLock.New(v)
				table.insert(AnchorLocks, AnchorLock)
				AnchorLock.Set(PhysicsGroup.AnchoredProperty, true)
			end
		end
		
		-- Enable/disable part visuals as needed
		for i, v in pairs(OptimizedVisuals) do
			v.Enabled = IsEntered
		end
	end
	
	local function OnRespawn(Parts)
		if EntryDetector then
			EntryDetector.BindedPart = Parts.RootPart
		end
	end
	
	function Interact.OnInitialize()
		PartsFolder = Val.Parent:WaitForChild("Parts", 5)

		if PartsFolder then
			-- Put parts into the workspace only when needed
			PartsFolderParent = PartsFolder.Parent
			PartsFolder.Parent = nil
		else
			error("Parts folder is missing. PhysicsGroup will not appear in Workspace as intended.")
		end
	end
	
	function Interact.OnStart()
		if PartsFolder and PartsFolderClone == nil then
			PartsFolderClone = PartsFolder:Clone()
			DescendantParts = {}
			OptimizedVisuals = {}

			local VisualNames = PhysicsGroup.PartVisuals
			local SimulateOnLoad = PhysicsGroup.SimulateOnLoadAttribute
			local ShowOnSimulate = PhysicsGroup.ShowOnSimulateAttribute

			for i, v in pairs(PartsFolderClone:GetDescendants()) do
				if v:IsA("BasePart") then
					table.insert(DescendantParts, v)

					-- Unanchor or disable if requested
					if v:GetAttribute(SimulateOnLoad) == true then
						v.Anchored = false
					end
				elseif v:GetAttribute(ShowOnSimulate) == true and table.find(VisualNames, v.ClassName) ~= nil then
					table.insert(OptimizedVisuals, v)
					v.Enabled = false
				end
			end

			local SimulateZone = Val.Parent:FindFirstChild("SimulateZone")

			if SimulateZone then
				local SimulateParts = SimulateZone:GetChildren()

				if #SimulateParts > 0 then
					EntryDetector = PointHitbox.New()
					EntryDetector.ApplySize = false
					local CharHandle = BaseInteractive.GetCharacterHandle()

					if CharHandle then
						local BindedPart = CharHandle.Parts.RootPart

						for i, v in pairs(SimulateParts) do
							if v:IsA("BasePart") then
								table.insert(EntryDetector.ScannedParts, v)
							end
						end

						EntryDetector.EntryChanged.Connect(CheckSimulationZone)

						if BindedPart then
							EntryDetector.BindedPart = BindedPart
							CheckSimulationZone(EntryDetector.Scan())
						end

						CharHandle.LoadedEvent.Connect(OnRespawn)
						EntryDetector.Start()
					else
						warn("Character handle not found")
					end
				end
			end

			-- Add the group to the workspace
			PartsFolderClone.Parent = PartsFolderParent
		end
	end
	
	function Interact.OnShutdown()
		local CharHandle = BaseInteractive.GetCharacterHandle()
		if CharHandle then
			CharHandle.LoadedEvent.Disconnect(OnRespawn)
		end

		if EntryDetector then
			EntryDetector.Dispose()
			EntryDetector = nil
		end

		ClearAnchorLocks()
		DescendantParts = {}
		OptimizedVisuals = {}

		-- Get rid of the clone, now that it's no longer needed
		if PartsFolderClone then
			PartsFolderClone:Destroy()
			PartsFolderClone = nil
		end
	end
	
	function Interact.OnDispose()
		Interact.OnShutdown()
		
		if PartsFolder then
			PartsFolder.Parent = PartsFolderParent
			PartsFolder, PartsFolderParent = nil
		end
	end

	--Interact.OnInitialize.Connect(function()
		
	--end)

	--Interact.OnStart.Connect(function()
		
	--end)

	--Interact.OnShutdown.Connect(function()
		
	--end)

	--Interact.AddDisposalListener(function()
		
	--end)

	return Interact
end

return PhysicsGroup]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">20e9362802a12bfc0208b3e4000248f7</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXB6D7482F36D549B49630606C581122BB">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">SpinnerSet</string>
								<string name="ScriptGuid">{0E3D1B41-72FB-4883-B175-D805DA7920C0}</string>
								<ProtectedString name="Source"><![CDATA[--[[
Class that handles a set of spinners and syncs them every frame

By udev2192
]]--

local BaseInteractive = require(script.Parent.Parent:WaitForChild("BaseInteractive"))

local SpinnerSet = {}

--[[
<string> - Attribute name that defines how long a full rotation takes
		   for each part
]]--
SpinnerSet.RotationTimeAttribute = "RotationTime"

SpinnerSet.ClockwiseAttribute = "IsClockwise"

--SpinnerSet.PhysicsInstanceName = "SpinnerModuleConstraint"
--SpinnerSet.PhysicsAttachmentName = "SpinnerModuleAttachment"
SpinnerSet.AngularVelocityTorque = Vector3.new(50000, 50000, 50000)
SpinnerSet.AttachmentAngle = Vector3.new(0, 0, 90)
SpinnerSet.AttachPartSize = Vector3.new(1, 1, 1)

function SpinnerSet.New(Model)
	local Interactive = BaseInteractive.New()
	local Parts = Model:WaitForChild("Parts")

	local FoundParts = {}
	local TimeElapsed = 0
	local IsRunning = false

	local function ResetParts()
		for i, v in pairs(FoundParts) do
			i.CFrame = v.OriginalCFrame
			i.Anchored = v.WasAnchored

			for i2, v2 in pairs(v.PhysicsObjects) do
				v2:Destroy()
			end
			v.PhysicsObjects = {}
		end

		FoundParts = {}
	end

	local function DoSpinnerLoop()
		local LastFrameTime = task.wait()

		while true do
			if IsRunning then
				local RootPart = BaseInteractive.GetCharacterHandle().Parts.RootPart

				if RootPart then

					-- Note that the index is the part here
					for i, v in pairs(FoundParts) do
						if IsRunning then
							local RotationTime = i:GetAttribute(SpinnerSet.RotationTimeAttribute)

							if RotationTime > 0 then
								local IsClockwise = i:GetAttribute(SpinnerSet.ClockwiseAttribute)
								local PhysicsRadius = i:GetAttribute(BaseInteractive.PhysicsRadiusAttribute)

								-- Calculate the offset percent
								local Time = v.Time
								local NewTime
								if IsClockwise then
									NewTime = Time + LastFrameTime
								else
									NewTime = Time - LastFrameTime
								end

								-- Make sure the time doesn't go overboard
								-- Modulus already does absolute value or whatever
								if NewTime > RotationTime then
									NewTime = NewTime % RotationTime
								end
								v.Time = NewTime

								-- For eliminating physics lag (fix the constraints later)
								if PhysicsRadius == -1 or BaseInteractive.GetDistance(RootPart.CFrame.Position, i.CFrame.Position) <= PhysicsRadius then
									if #v.PhysicsObjects <= 0 then
										--	local Att0 = Instance.new("Attachment")
										--	Att0.Position = Vector3.new(0, 0.5, 0)
										--	Att0.Orientation = Vector3.new(0, 0, -90)

										--	--local Att1 = Instance.new("Attachment")
										--	--Att1.Position = Vector3.new(0, 1, 0)

										--	local Velocity = Vector3.new(0, math.rad((1 / RotationTime) * 360), 0)
										--	if not IsClockwise then
										--		Velocity *= -1
										--	end

										--	local Torque = Instance.new("Torque")
										--	Torque.Attachment0 = Att0
										--	Torque.RelativeTo = Enum.ActuatorRelativeTo.Attachment0
										--	Torque.Torque = Velocity

										--	--local Constraint = Instance.new("HingeConstraint")
										--	--Constraint.LimitsEnabled = false
										--	--Constraint.ActuatorType = Enum.ActuatorType.Motor

										--	-- Basically angle per second in radians
										--	--Constraint.AngularVelocity = math.rad((1 / RotationTime) * 360)
										--	--Constraint.Attachment0 = Att0
										--	--Constraint.Attachment1 = Att1

										--	--Att0.Parent = i
										--	--Att1.Parent = i
										--	--Constraint.Parent = i

										--	table.insert(v.PhysicsObjects, Att0)
										--	--table.insert(v.PhysicsObjects, Att1)
										--	--table.insert(v.PhysicsObjects, Constraint)
										--	table.insert(v.PhysicsObjects, Torque)

										--	Att0.Parent = i
										--	Torque.Parent = i

										--	-- THANK YOU URCHIN
										--	--local AngularVelocity = Instance.new("BodyAngularVelocity")

										--	--table.insert(v.PhysicsObjects, AngularVelocity)

										--	--local Velocity = Vector3.new(0, math.rad((1 / RotationTime) * 360), 0)
										--	--if not IsClockwise then
										--	--	Velocity *= -1
										--	--end

										--	--AngularVelocity.AngularVelocity = Velocity
										--	--AngularVelocity.MaxTorque = SpinnerSet.AngularVelocityTorque

										--	--AngularVelocity.Parent = i


										-- Unstable, but it's the best we've got for now
										local Velocity = math.rad((1 / RotationTime) * 360)--Vector3.new(0, math.rad((1 / RotationTime) * 360), 0)
										if not IsClockwise then
											Velocity *= -1
										end

										local AttachPart = Instance.new("Part")
										AttachPart.Anchored = true
										AttachPart.CanCollide = false
										AttachPart.CanTouch = false
										AttachPart.CFrame = i.CFrame
										AttachPart.Transparency = 1
										AttachPart.Size = SpinnerSet.AttachPartSize

										local Att0 = Instance.new("Attachment")
										Att0.Position = Vector3.zero
										Att0.Orientation = SpinnerSet.AttachmentAngle
										Att0.Name = "Attachment0"

										local Att1 = Att0:Clone()
										Att1.Name = "Attachment1"
										
										local Hinge = Instance.new("HingeConstraint")
										Hinge.ActuatorType = Enum.ActuatorType.None
										Hinge.LimitsEnabled = false
										Hinge.AngularVelocity = Velocity
										Hinge.Attachment0 = Att0
										Hinge.Attachment1 = Att1
										Hinge.MotorMaxAcceleration = math.huge
										Hinge.MotorMaxTorque = math.huge

										Att0.Parent = AttachPart
										Att1.Parent = i
										Hinge.Parent = AttachPart
										AttachPart.Parent = Model
										
										i.AssemblyAngularVelocity = Vector3.new(0, Velocity, 0)

										local PhysicsObjTable = v.PhysicsObjects
										table.insert(PhysicsObjTable, AttachPart)
										table.insert(PhysicsObjTable, Att0)
										table.insert(PhysicsObjTable, Att1)
										table.insert(PhysicsObjTable, Hinge)
									end

									--i.AssemblyLinearVelocity = Vector3.zero
									--i.AssemblyAngularVelocity = Velocity

									-- This check is here for micro-optimization
									if i.Anchored then
										i.Anchored = false
									end
								else
									if not i.Anchored then
										i.Anchored = true
										v.ContinueCFrame = i.CFrame
									end

									if #v.PhysicsObjects > 0 then
										for i2, v2 in pairs(v.PhysicsObjects) do
											v2:Destroy()
										end
										v.PhysicsObjects = {}
									end	
									
									-- Set the CFrame
									if IsRunning then
										i.CFrame = v.ContinueCFrame * CFrame.fromOrientation(
											0,
											math.rad((NewTime / RotationTime) * 360),
											0
										)
									end	
								end
							end
						else
							break
						end
					end
				end

				if IsRunning then
					LastFrameTime = task.wait()
					TimeElapsed += LastFrameTime
				else
					break
				end
			else
				break
			end
		end

		ResetParts()
	end

	Interactive.OnShutdown.Connect(function()
		IsRunning = false
		TimeElapsed = 0
	end)

	Interactive.OnStart.Connect(function()
		TimeElapsed = 0

		for i, v in pairs(Parts:GetChildren()) do
			if v:IsA("BasePart") then
				v.Anchored = true

				local Cframe = v.CFrame
				FoundParts[v] = {
					OriginalCFrame = Cframe,
					ContinueCFrame = Cframe,
					Time = 0,
					PhysicsObjects = {},
					WasAnchored = v.Anchored
				}
			end
		end

		if IsRunning == false then
			IsRunning = true
			task.spawn(DoSpinnerLoop)
		end
	end)

	return Interactive
end

return SpinnerSet]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">06409b499e43dfff01f0005b0002341f</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX6D1BD4D284534F3D97C0CBE3C35EF7E9">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">StickyWall</string>
								<string name="ScriptGuid">{D28ECA36-4D71-45CF-A064-4D22079AF3D9}</string>
								<ProtectedString name="Source"><![CDATA[--[[
Flood Escape 2 by Crazyblox Games
]]--

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local Interactives = script.Parent.Parent
local BaseInteractive = require(Interactives:WaitForChild("BaseInteractive"))
local PropertyLock = require(Interactives.Parent:WaitForChild("Util"):WaitForChild("PropertyLock"))

local DefaultSounds = script:WaitForChild("DefaultSounds")

local StickyWall = {}
StickyWall.__index = StickyWall

StickyWall.BouncePowerAttribute = "BouncePower"
StickyWall.JumpHeightAttribute = "JumpHeight"
StickyWall.IsEnabledAttribute = "IsEnabled"
StickyWall.StickDurationAttribute = "StickDuration"
StickyWall.GrabCooldownAttribute = "GrabCooldown"
StickyWall.LaunchDurationAttribute = "LaunchDuration"
StickyWall.GrabSoundName = "Grab"
StickyWall.ReleaseSoundName = "Release"

StickyWall.AttachedKey = "IsCharacterOnStickyWall"
StickyWall.RaycastCheckOffset = Vector3.new(2.5, 0, 0)

function StickyWall.New(StringVal: StringValue, MapLauncher: {})
	local StickPart = StringVal.Parent
	assert(StickPart and StickPart:IsA("BasePart"), "StickyWall interactive value must have a BasePart as its parent.")

	local Interact = BaseInteractive.New()
	local CharacterValues = BaseInteractive.GetCharacterHandle()

	local IsOnCooldown = false

	local TouchEvent
	local EnableChangeSignal
	local JumpSignal
	local StickDurationSignal
	local AnchorLock
	--local Weld

	local function CanInteract()
		return StringVal:GetAttribute(StickyWall.IsEnabledAttribute) == true
	end

	function Interact.PlaySound(Name)
		local Sound = StringVal:FindFirstChild(Name) or DefaultSounds:FindFirstChild(Name)

		if Sound then
			Sound:Play()
		end
	end

	function Interact.Release(BoostVelocity)
		if JumpSignal then
			JumpSignal:Disconnect()
			JumpSignal = nil
		end
		CharacterValues.DeathEvent.Disconnect(Interact.Release)

		if StickDurationSignal then
			StickDurationSignal:Disconnect()
			StickDurationSignal = nil
		end

		--if Weld then
		--	Weld:Destroy()
		--	Weld = nil
		--end
		if AnchorLock then
			AnchorLock.ReleaseAll()
			AnchorLock = nil
		end

		if BoostVelocity then
			CharacterValues.ApplyForce(BoostVelocity, StringVal:GetAttribute(StickyWall.LaunchDurationAttribute))
		end

		if IsOnCooldown then
			local Elapsed = 0
			while IsOnCooldown and Elapsed < (StringVal:GetAttribute(StickyWall.GrabCooldownAttribute) or 0) do
				Elapsed += task.wait()
			end
		end

		IsOnCooldown = false
	end

	local function ToggleTouch(IsEnabled)
		if IsEnabled then
			if TouchEvent == nil then
				TouchEvent = StickPart.Touched:Connect(function(OtherPart)
					local RootPart: BasePart = CharacterValues.Parts.RootPart

					if RootPart and OtherPart == RootPart then
						CharacterValues.DeathEvent.Connect(Interact.Release)
						
						local StickDuration = StringVal:GetAttribute(StickyWall.StickDurationAttribute)

						if StickDuration and StickDuration ~= 0 then
							if IsOnCooldown == false then
								IsOnCooldown = true

								-- Get launch direction
								local RaycastInfo = RaycastParams.new()
								RaycastInfo.FilterType = Enum.RaycastFilterType.Whitelist
								RaycastInfo.FilterDescendantsInstances = {StickPart}
								RaycastInfo.IgnoreWater = true

								local HitCFrame = RootPart.CFrame
								local RaycastResult: RaycastResult = BaseInteractive.RaycastWithOffset(
									HitCFrame,
									HitCFrame.LookVector.Unit * Vector3.new(2.5, 0, 2.5),
									RaycastInfo,
									nil--StickyWall.RaycastCheckOffset
								)

								if RaycastResult then

									--if RootPart then
									-- Stick to the StickyWall since the hit was successful
									local Pos = HitCFrame.Position

									-- This bit gives the orientation needed to make the character
									-- face the opposite direction of the wall
									local Normal = RaycastResult.Normal
									local ObjectSpace: CFrame = StickPart.CFrame:ToObjectSpace(CFrame.lookAt(Pos, Pos + Normal))
									if AnchorLock == nil then
										AnchorLock = PropertyLock.New(RootPart)
										AnchorLock.Set("Anchored", true)
									end
									
									-- For welding the anchored character to the wall
									local function UpdateCFrame()
										RootPart.CFrame = StickPart.CFrame:ToWorldSpace(ObjectSpace)
									end

									--print(Normal.X * 180 .. " degrees")
									--print(Normal * Vector3.new(180, 180, 180))
									--local Rotation = HitCFrame.LookVector * Normal
									--RootPart.CFrame = --CFrame.new(Pos.X, Pos.Y, Pos.Z) * CFrame.Angles(0, math.rad(Normal.Y * 180), 0)
									
									UpdateCFrame()
									Interact.PlaySound(StickyWall.GrabSoundName)

									--Weld = Instance.new("BodyVelocity")
									--Weld.Velocity = Vector3.zero
									--Weld.MaxForce = Vector3.zero
									--Weld.P = math.huge
									--Weld.Parent = RootPart

									-- Wait for the stick duration to expire, or
									-- for the player to jump
									if JumpSignal == nil then
										local Checking = false

										JumpSignal = UserInputService.JumpRequest:Connect(function()
											if Checking == false then
												Checking = true

												-- Calculate launch velocity boosted off the collided part face and release
												local BouncePower = StringVal:GetAttribute(StickyWall.BouncePowerAttribute)
												local JumpHeight = StringVal:GetAttribute(StickyWall.JumpHeightAttribute)

												if BouncePower and JumpHeight then
													Checking = false

													Interact.PlaySound(StickyWall.ReleaseSoundName)

													Interact.Release(Vector3.new(Normal.X * BouncePower, JumpHeight, Normal.Z * BouncePower))
												else
													Checking = false
												end
											end
										end)
									end

									if StickDurationSignal == nil and StickDuration > 0 then
										local Elapsed = 0

										StickDurationSignal = RunService.Heartbeat:Connect(function(Delta)
											Elapsed += Delta
											UpdateCFrame()

											if Elapsed > StickDuration then
												Interact.Release(Vector3.zero)
											end
										end)
									else
										StickDurationSignal = RunService.Heartbeat:Connect(UpdateCFrame)
									end
									--end
								else
									IsOnCooldown = false
								end
							end
						end
					end
				end)
			end
		else
			if TouchEvent then
				TouchEvent:Disconnect()
				TouchEvent = nil
			end
		end
	end
	
	function Interact.OnStart()
		if CanInteract() then
			ToggleTouch(true)
		end

		-- Connect IsEnabled attribute change
		if EnableChangeSignal == nil then
			EnableChangeSignal = StringVal.AttributeChanged:Connect(function(AttributeName)
				if AttributeName == StickyWall.IsEnabledAttribute then
					local Enabled = CanInteract()
					ToggleTouch(Enabled)

					if not Enabled then
						Interact.Release()
					end
				end
			end)
		end
	end
	
	function Interact.OnShutdown()
		if EnableChangeSignal then
			EnableChangeSignal:Disconnect()
			EnableChangeSignal = nil
		end

		ToggleTouch(false)
		IsOnCooldown = false
		Interact.Release()
	end

	--Interact.OnStart.Connect(function()
		
	--end)

	--Interact.OnShutdown.Connect(function()
		
	--end)

	return Interact
end

return StickyWall]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">33ae9b82bd73e89201f90ce20002404a</UniqueId>
							</Properties>
							<Item class="Folder" referent="RBXF4AA7FA99B1B4F7AB68B1F36736DA30B">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">DefaultSounds</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">262315257ae83c50021758f0002422dd</UniqueId>
								</Properties>
								<Item class="Sound" referent="RBX04EE2FB80B2B4677A5FF740007A496A3">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="EmitterSize">10</float>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">false</bool>
										<string name="Name">Grab</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">1</float>
										<bool name="Playing">false</bool>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>rbxassetid://12222054</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<UniqueId name="UniqueId">262315257ae83c50021758f0002422ed</UniqueId>
										<float name="Volume">0.800000012</float>
										<float name="xmlRead_MaxDistance_3">10000</float>
									</Properties>
								</Item>
								<Item class="Sound" referent="RBXF11E063CBCD946339B87CE9AB9AF4DFA">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="EmitterSize">10</float>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">false</bool>
										<string name="Name">Release</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">1</float>
										<bool name="Playing">false</bool>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>rbxassetid://12222200</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<UniqueId name="UniqueId">262315257ae83c50021758f000242308</UniqueId>
										<float name="Volume">1</float>
										<float name="xmlRead_MaxDistance_3">10000</float>
									</Properties>
								</Item>
							</Item>
							<Item class="Folder" referent="RBX8E4D4839953541F9B347FD51864BCC74">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">DefaultAnimations</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">2ffe44fc32043b38022b7779000c0c27</UniqueId>
								</Properties>
								<Item class="Animation" referent="RBXFF8148708C4144C7B2849312E4B0C03D">
									<Properties>
										<Content name="AnimationId"><url>rbxassetid://8942512613</url></Content>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">Grab</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">2ffe44fc32043b38022b7779000c0caa</UniqueId>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBX5C75BFDEC65D4D19AD8A7D9D3FAE0189">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Zipline</string>
								<string name="ScriptGuid">{1EB2338B-F589-4A17-B0C5-424815032A9F}</string>
								<ProtectedString name="Source"><![CDATA[--[[
Zipline.lua by udev2192

Zipline class modified to be used by BaseInteractive
]]--

local ZiplineService = script.Parent.Parent:WaitForChild("ZiplineService")

local Object = require(ZiplineService:WaitForChild("Object"))
local ConfigDefaults = require(ZiplineService:WaitForChild("ConfigDefaults"))
local Display = require(ZiplineService:WaitForChild("Display"))

-- Calculation modules
local Bezier = require(ZiplineService:WaitForChild("Bezier"))
local Spline = require(ZiplineService:WaitForChild("Spline"))

local Zipline = {}

-- Attribute names
local DISPLAY_PRECISION_ATTRIBUTE = "DisplayPrecision"
local FORMULA_ATTRIBUTE = "GenerationMode"
local PATH_DISPLAYED_ATTRIBUTE = "DisplaysPath"
local PRECISION_ATTRIBUTE = "Precision"
local THICKNESS_ATTRIBUTE = "Thickness"

-- Multiplier for the part group size when using precision
-- as the variable.
local DISPLAY_PRECISION_MULTIPLIER = 0.3

local DISPLAY_PRECISION_MIN = 0.0001
local DISPLAY_PRECISION_MAX = 10

-- The name given to the start parts on ziplines.
Zipline.START_PART_COLLECTION = "CurvedZiplineMechanic1"

-- "Bezier" or "Spline"
-- Bezier = Faster generation
-- Spline = Accurate generation (currently broken, so don't use)
-- This is a beta flag that is no longer in use.
--Zipline.DEFAULT_GENERATION_MODE = "Bezier"

-- For smooth ziplining
-- (No longer used as this is a customizable option)
--Zipline.MAGNITUDE_MULTIPLIER = 60

-- Generation mode enum that specifies
-- the formula that a zipline uses to generate a zipline.
Zipline.GenerationMode = {
	Linear = 1,
	Quadratic = 2,
	Cubic = 3
}

-- Allows for better curve generation.
-- This has released so it is no longer a flag, rather
-- a toggleable option for each zipline.
--Zipline.ENABLE_CUBIC_GENERATION = false

function Zipline.GetCollection()
	local Collection = _G[Zipline.START_PART_COLLECTION]
	if Collection == nil then
		_G[Zipline.START_PART_COLLECTION] = {}
	end
	
	return _G[Zipline.START_PART_COLLECTION]
end

Zipline.GetCollection() -- Do for initialization

local function CheckIsModel(Model)
	assert(typeof(Model) == "Instance" and Model:IsA("Model"), "Argument 1 must be a model.")
end

local function IsBasePart(Part)
	return typeof(Part) == "Instance" and Part:IsA("BasePart")
end

local function IsAllParts(...)
	local ps = {...}
	
	if #ps > 0 then
		for i, v in pairs(ps) do
			if IsBasePart(v) == false then
				return false
			end
		end
		
		return true
	else
		return false
	end
end

local function AddToCollection(Part, Zip)
	if IsBasePart(Part) then
		_G[Zipline.START_PART_COLLECTION][Part] = Zip
	end
end

local function RemoveFromCollection(Part)
	_G[Zipline.START_PART_COLLECTION][Part] = nil
end

-- Returns the zipline associated with the instance provided.
function Zipline.GetZipline(inst)
	assert(typeof(inst) == "Instance", "Argument 1 must be an Instance.")
	return Zipline.GetCollection()[inst]
end

-- Calculates the course of the zipline.
function Zipline.GetZiplineCourse(Zip, Parts, Fidelity, Formula)
	local NumParts = #Parts
	local i = 1
	local Beziers = {}

	local GenerationMode = Zipline.GenerationMode
	local Linear = GenerationMode.Linear
	local Quadratic = GenerationMode.Quadratic
	local Cubic = GenerationMode.Cubic

	GenerationMode = nil

	while i < NumParts do
		local part1 = Parts[i]
		local part2 = Parts[i + 1]
		local part3 = Parts[i + 2]
		local part4 = Parts[i + 3]

		if Formula == Cubic and IsBasePart(part4) then
			-- Use the cubic bezier function.
			-- Laggy, so not recommended.
			if IsAllParts(part1, part2, part3, part4) then
				local p1 = part1.Position
				local p2 = part2.Position
				local p3 = part3.Position
				local p4 = part4.Position

				local bz = Bezier.New(Bezier.Cubic, (p4 - p1).Magnitude * Fidelity, p1, p2, p3, p4)
				Zip.TotalDistance += bz.TotalDist
				table.insert(Beziers, bz)
				bz.Dispose()
			end

			i += 3 -- Not 4, because the 3rd might not be the last
		elseif (Formula == Quadratic or Formula == Cubic) and IsBasePart(part3) then -- Check if there's 3 or more points remaining
			-- Use the quadratic bezier function.
			if IsAllParts(part1, part2, part3) then
				local p1 = part1.Position
				local p2 = part2.Position
				local p3 = part3.Position

				local bz = Bezier.New(Bezier.Quadratic, (p3 - p1).Magnitude * Fidelity, p1, p2, p3)
				Zip.TotalDistance += bz.TotalDist
				table.insert(Beziers, bz)
				bz.Dispose()
			end

			i += 2 -- Not 3, because the 3rd might not be the last
		elseif (Formula == Linear or Formula == Quadratic or Formula == Cubic) and IsBasePart(part2) then
			-- Use the linear bezier function.
			if IsAllParts(part1, part2) then
				local p1 = part1.Position
				local p2 = part2.Position

				local bz = Bezier.New(Bezier.Linear, (p2 - p1).Magnitude * Fidelity, p1, p2)
				Zip.TotalDistance += bz.TotalDist
				table.insert(Beziers, bz)

				bz.Dispose()
			end
			
			i += 1 -- Not 2, because the 2nd might not be the last
		else
			break
		end
	end

	return Beziers
end

--Zipline.GenerationFuncs = {
--	-- Format: Generator = {GeneratorFunc, LerpFunc}
	
--	Bezier = {
--		function(Zip, Parts, Fidelity, Formula)
--			local NumParts = #Parts
--			local i = 1
--			local Beziers = {}
			
--			local GenerationMode = Zipline.GenerationMode
--			local Linear = GenerationMode.Linear
--			local Quadratic = GenerationMode.Quadratic
--			local Cubic = GenerationMode.Cubic
			
--			GenerationMode = nil

--			while i < NumParts do
--				local part1 = Parts[i]
--				local part2 = Parts[i + 1]
--				local part3 = Parts[i + 2]
--				local part4 = Parts[i + 3]
				
--				if Formula == Cubic and IsBasePart(part4) then
--					-- Use the cubic bezier function.
--					-- Laggy, so not recommended.
--					if IsAllParts(part1, part2, part3, part4) then
--						local p1 = part1.Position
--						local p2 = part2.Position
--						local p3 = part3.Position
--						local p4 = part4.Position

--						local bz = Bezier.New(Bezier.Cubic, (p4 - p1).Magnitude * Fidelity, p1, p2, p3, p4)
--						Zip.TotalDistance += bz.TotalDist
--						table.insert(Beziers, bz)
--						bz.Dispose()
--					end

--					i += 3 -- Not 4, because the 3rd might not be the last
--				elseif Formula == Quadratic and IsBasePart(part3) then -- Check if there's 3 or more points remaining
--					-- Use the quadratic bezier function.
--					if IsAllParts(part1, part2, part3) then
--						local p1 = part1.Position
--						local p2 = part2.Position
--						local p3 = part3.Position

--						local bz = Bezier.New(Bezier.Quadratic, (p3 - p1).Magnitude * Fidelity, p1, p2, p3)
--						Zip.TotalDistance += bz.TotalDist
--						table.insert(Beziers, bz)
--						bz.Dispose()
--					end

--					i += 2 -- Not 3, because the 3rd might not be the last
--				elseif Formula == Linear and IsBasePart(part2) then
--					-- Use the linear bezier function.
--					if IsAllParts(part1, part2) then
--						local p1 = part1.Position
--						local p2 = part2.Position

--						local bz = Bezier.New(Bezier.Linear, (p2 - p1).Magnitude * Fidelity, p1, p2)
--						Zip.TotalDistance += bz.TotalDist
--						table.insert(Beziers, bz)

--						bz.Dispose()
--					end
--				else
--					break
--				end
--			end

--			return Beziers
--		end,
		
--		Bezier.LerpCombined
--	},
	
--	Spline = {
--		function(Zip, Parts)
--			local vectors = {}
--			for i, v in ipairs(Parts) do
--				if IsBasePart(v) then
--					table.insert(vectors, v.Position)
--				end
--			end

--			local sp = Spline.NewVector3(vectors)
--			return {sp}
--		end,
		
--		Spline.LerpCombined
--	}
--}

-- Generates a new rideable zipline from a model.
function Zipline.New(Model)
	CheckIsModel(Model)

	local Zip = Object.New("Zipline")
	Zip.StartPart = nil
	Zip.TotalDistance = 0
	
	-- Configurable attributes
	Zip.DisplayThickness = ConfigDefaults.FillValue(THICKNESS_ATTRIBUTE, Model:GetAttribute(THICKNESS_ATTRIBUTE))
	Zip.SetProperty("Precision", ConfigDefaults.FillValue(PRECISION_ATTRIBUTE, Model:GetAttribute(PRECISION_ATTRIBUTE)), Zip.Refresh)
	Zip.SetProperty("GenerationMode", ConfigDefaults.FillValue(FORMULA_ATTRIBUTE, Model:GetAttribute(FORMULA_ATTRIBUTE)), Zip.Refresh)
	
	local ZipDecorPart = Model:WaitForChild("Decor", 5)
	assert(IsBasePart(ZipDecorPart), "The BasePart named 'Decor' wasn't found in the model.")
	local ZiplineTransparency = ZipDecorPart.Transparency
	ZipDecorPart.CanCollide = false
	ZipDecorPart.Transparency = 1

	local ZiplinePath = Instance.new("Folder")
	ZiplinePath.Name = "ZiplinePath"
	
	-- Handles the zipline course's segments and returns them.
	function Zip.GetCourse(model)
		CheckIsModel(model)

		local Points = model:WaitForChild("Segments", 5)
		if Points ~= nil then
			local FoundStart = false

			-- Manual order detection is needed due to GetChildren() randomness
			local NumParts = #Points:GetChildren()
			local Parts = {}
			for i = 1, NumParts, 1 do
				local p = Points:FindFirstChild(tostring(i))
				if IsBasePart(p) then
					if FoundStart == false then
						FoundStart = true
						Zip.StartPart = p

						AddToCollection(p, Zip)
					end

					p.CanCollide = false
					table.insert(Parts, p)
				end
			end

			return Zipline.GetZiplineCourse(Zip, Parts, Zip.Precision, Zip.GenerationMode)
		end
	end
	
	-- Returns the configuration attribute of the zipline's model.
	function Zip.GetModelSetting(Attribute)
		return ConfigDefaults.FillValue(Attribute, Model:GetAttribute(Attribute))
	end

	-- Returns a combination of zipline display lines from the given bezier set.
	function Zip.GetZipDisplay(BezierSet)
		-- Set the part group size to account for
		local DisplayPrecision = math.clamp(Zip.GetModelSetting(DISPLAY_PRECISION_ATTRIBUTE), DISPLAY_PRECISION_MIN, DISPLAY_PRECISION_MAX)
		
		local PrecisionMultiplied = math.floor(Zip.Precision or 1 * (1 / DisplayPrecision))
		local GroupSize = math.max(PrecisionMultiplied, 1)
		PrecisionMultiplied, DisplayPrecision = nil, nil
		
		local Set = {}
		
		local d = Display.New()
		d.PartGroupSize = GroupSize
		d.Thickness = Zip.DisplayThickness
		d.Material = ZipDecorPart.Material
		d.Color = ZipDecorPart.Color
		d.Transparency = ZiplineTransparency
		d.Refresh(BezierSet)
		d.Parts.Parent = ZiplinePath

		return Set
	end

	function Zip.Refresh()
		local BezierSet = Zip.GetCourse(Model)
		Zip.BezierSet = BezierSet
		
		-- Display zipline if enabled.
		if Zip.GetModelSetting(PATH_DISPLAYED_ATTRIBUTE) == true then
			Zip.Display = Zip.GetZipDisplay(BezierSet)
		end
		
		BezierSet = nil
	end

	-- Initialize the zipline
	Zip.Refresh()

	-- The parent property of the zipline display model.
	Zip.SetProperty("ModelParent", nil, function(parent)
		if parent == nil or typeof(parent) == "Instance" then
			ZiplinePath.Parent = parent
		end
	end)

	-- Gets a lerped value over the course of the zipline
	function Zip.LerpTo(Time)
		Time = math.clamp(Time, 0, 1)
		return Bezier.LerpCombined(Time, Zip.BezierSet)
	end

	Zip.OnDisposal = function()
		if Zip.StartPart ~= nil then
			RemoveFromCollection(Zip.StartPart)
		end
		
		-- Dispose other objects
		if Zip.BezierSet ~= nil then
			for i, v in pairs(Zip.BezierSet) do
				v.Dispose()
			end
		end
		
		if Zip.DisplaySet ~= nil then
			for i, v in pairs(Zip.DisplaySet) do
				v.Dispose()
			end
		end
	end

	-- Listen for model changes
	Zip.AddEvent = Model.ChildAdded:Connect(function(c)
		if IsBasePart(c) then
			Zip.Refresh()
		end
	end)
	Zip.RemoveEvent = Model.ChildRemoved:Connect(function(c)
		if IsBasePart(c) then
			Zip.Refresh()
		end
	end)

	return Zip
end

return Zipline]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">33e00f9ae0bd5d820252a9ee000b6e07</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX5E1EA72C255A43C7BA87B2F4BFA00DFA">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Liquid</string>
								<string name="ScriptGuid">{D934DE9F-4B9E-49D2-9C00-D5C4BE125985}</string>
								<ProtectedString name="Source"><![CDATA[--[[
Liquids as an interactive (finally)

By udev2192
]]--

local RunService = game:GetService("RunService")

local Camera = workspace.CurrentCamera
local LocalPlayer = game:GetService("Players").LocalPlayer

local Interactives = script.Parent.Parent
local Util = Interactives.Parent:WaitForChild("Util")

local BaseInteractive = require(Interactives:WaitForChild("BaseInteractive"))
local PropertyLock = require(Util:WaitForChild("PropertyLock"))
local Signal = BaseInteractive.GetSignalClass()

local Liquid = {}

function Liquid.New(Val: StringValue, MapLauncher: {})
	local Obj = BaseInteractive.New()
	local LiquidParts = {}
	local ActiveDisplays = {}
	
	local DisplayPart: Part
	local SpawnConnection: RBXScriptConnection
	local Runner: RBXScriptConnection
	local Head: BasePart
	local Loader
	
	Obj.InteractiveValue = Val
	Obj.IsHeadSubmerged = false
	Obj.IsCameraSubmerged = false
	
	function Obj.ClearDisplays()
		for i, v in pairs(ActiveDisplays) do
			v:Destroy()
		end

		ActiveDisplays = {}
	end
	
	--[[
	Returns:
	<number> - The priority of the liquid
	]]--
	function Obj.GetPriority()
		return Val:GetAttribute("Priority") or 0
	end
	
	--[[
	Returns:
	<Color3?> - The liquid's desired color, or nil if it isn't found
	]]--
	function Obj.GetColor()
		local Color = Val:GetAttribute("Color")
		if Color then
			return Color
		end
		
		local FirstPart = LiquidParts[1]
		if FirstPart then
			return FirstPart.Color
		end
		
		return nil
	end

	function Obj.RemoveDisplay(Liquid: BasePart)
		local Display = ActiveDisplays[Liquid]
		if Display then
			ActiveDisplays[Liquid] = nil
			Display.Part:Destroy()
			Display.Lock.ReleaseAll()
		end
	end

	function Obj.AddDisplay(Liquid: BasePart)
		if ActiveDisplays[Liquid] == nil and Liquid:IsA("Part") and Liquid.Shape == Enum.PartType.Block then
			local LiquidSize = Liquid.Size
			local TopSize = LiquidSize.Y / 2
			local Display = Liquid:Clone()
			Display.Size = Vector3.new(LiquidSize.X, 0.005, LiquidSize.Z)
			Display.Anchored = true
			Display.CanCollide = false
			Display.CanQuery = false
			Display.CanTouch = false
			Display.CFrame = Liquid.CFrame + Vector3.new(0, TopSize, 0)

			local Lock = PropertyLock.New(Liquid)
			Lock.Set("Transparency", 1)

			ActiveDisplays[Liquid] = {
				Part = Display,
				Lock = Lock
			}
			
			Display.Parent = Liquid
		end
	end
	
	local function OnSpawn(Char: Model)
		if Char then
			Head = Char:WaitForChild("Head")
		end
	end

	function Obj.OnStart()
		for i, v in pairs(Val.Parent:WaitForChild("Parts"):GetChildren()) do
			if v:IsA("BasePart") then
				table.insert(LiquidParts, v)
			end
		end
		
		Loader = MapLauncher.GetLoader()
		Loader.GetController("Swimmer").Add(Obj)
		
		OnSpawn(LocalPlayer.Character)
		SpawnConnection = LocalPlayer.CharacterAdded:Connect(OnSpawn)
		Runner = RunService.Heartbeat:Connect(function()
			-- determine submersion status
			local IsHeadInside = false
			local IsCamInside = false
			for i, v in pairs(LiquidParts) do
				if IsHeadInside == false then
					if BaseInteractive.IsPointInside(Head.Position, v) then
						IsHeadInside = true
					end
				end
				
				if BaseInteractive.IsPointInside(Camera.CFrame.Position, v) then
					IsCamInside = true
					Obj.AddDisplay(v)
				else
					Obj.RemoveDisplay(v)
				end
			end
			if IsHeadInside ~= Obj.IsHeadSubmerged then
				Obj.IsHeadSubmerged = IsHeadInside
				Obj.HeadEntryChanged.Fire(IsHeadInside)
			end
			if IsCamInside ~= Obj.IsCameraSubmerged then
				Obj.IsCameraSubmerged = IsCamInside
				Obj.CameraEntryChanged.Fire(IsCamInside)
			end
			
			-- update liquid displays
			for i, v in pairs(ActiveDisplays) do
				local Display: Part = v.Part
				Display.CFrame = i.CFrame + Vector3.new(0, i.Size.Y / 2, 0)

				-- check that they haven't changed yet, because changing them
				-- causes a tiny bit of lag each
				if Display.Color ~= i.Color then
					Display.Color = i.Color
				end
				if Display.Material ~= i.Material then
					Display.Material = i.Material
				end
			end
		end)
	end

	function Obj.OnShutdown()
		if SpawnConnection then
			SpawnConnection:Disconnect()
			SpawnConnection = nil
		end
		
		if Runner then
			Runner:Disconnect()
			Runner = nil
		end
		
		if Loader then
			Loader.GetController("Swimmer").Remove(Obj)
			Loader = nil
		end
	end
	
	--[[
	Fires when the liquid's submersion status changes
	]]--
	Obj.HeadEntryChanged = Signal.New()
	
	--[[
	Fires when the camera's submersion status changes
	]]--
	Obj.CameraEntryChanged = Signal.New()

	return Obj
end

return Liquid]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">28bb2a66ebbeb7ba029706f10063222b</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX8E0804BAF0C64887BE42C545F5C8E52A">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">OldLiquid</string>
								<string name="ScriptGuid">{3C080D5E-49BF-4D9D-982E-FC4D6CCDB93A}</string>
								<ProtectedString name="Source"><![CDATA[-- This module provides an object that turns a BasePart
-- into a liquid body.
-- For best results, this should be on the client.

-- By udev2192

local RunService = game:GetService("RunService")
local Collections = game:GetService("CollectionService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local LiquidAdapter = {}
local AwaitingDisposal = {} -- LiquidAdapters that get disposed when Parent = nil.

local DestroyListener = nil
local WSCache = nil -- Workspace cache folder for this module.

LiquidAdapter.CollectionId = "LiquidAdapterParts"
LiquidAdapter.WorkspaceCacheName = "LiquidWSCache"

-- The default liquid state.
LiquidAdapter.DefaultLiquidState = "water"

LiquidAdapter.DisplayYSize = 0.01
LiquidAdapter.DisplayTransparency = 0.5
LiquidAdapter.DisplayPartName = "LiquidDisplay"

local function IsTableBlank(Table)
	for i, v in pairs(Table) do
		-- Return true since if this runs once, it's not blank.
		return false
	end
	
	-- Otherwise, return true
	return true
end

-- Toggles Adapter disposal on part removal.
local function ToggleRemovalWait(Adapter, IsWaiting)
	local Part = Adapter.GetBodyPart()

	if IsWaiting == true then
		AwaitingDisposal[Part] = Adapter
	else
		AwaitingDisposal[Part] = nil
	end
end

-- Toggles the CollectionService listener for Instance removal.
local function ToggleRemoveListener(IsActivated)
	if IsActivated == true then
		-- Disconnect the previous destroy listener, just in case.
		ToggleRemoveListener(false)

		-- Connect.
		DestroyListener = Collections:GetInstanceRemovedSignal(LiquidAdapter.CollectionId):Connect(function(inst)
			local Adapter = AwaitingDisposal[inst]

			-- Dispose on removal.
			if Adapter ~= nil then
				Adapter.Dispose()
			end

			Adapter = nil
		end)
	else
		if DestroyListener ~= nil then
			DestroyListener:Disconnect()
		end

		DestroyListener = nil
	end
end

local function ToggleWorkspaceCache(Enabled)
	if Enabled == true then
		WSCache = Util.CreateInstance("Folder", {
			Name = LiquidAdapter.WorkspaceCacheName,
			Parent = workspace
		})
	else
		if Util.IsInstance(WSCache) then
			WSCache:Destroy()
			WSCache = nil
		end
	end
end

ToggleRemoveListener(true)
ToggleWorkspaceCache(true)

function LiquidAdapter.New(Part)
	assert(Util.IsBasePart(Part), "Argument 1 must be a BasePart.")

	local Obj = Object.New("LiquidAdapter")
	local Interacting = {}
	local DisplayRunner = nil
	local DisplayPart = nil

	-- So EntryStatusChanged only fires on change
	-- for each specific part.
	local RecordedIsInside = {}
	
	Obj.StateChangeEvent = nil
	Obj.FrameEvent = nil
	Obj.StateId = "State"
	Obj.StateInstance = Part:FindFirstChild(Obj.StateId)
	
	-- Current water state
	Obj.State = LiquidAdapter.DefaultLiquidState

	-- Toggles the RunService.Heartbeat listener.
	local function ToggleRunEvent(Enabled)
		if Enabled == true then
			Obj.FrameEvent = RunService.Heartbeat:Connect(function()
				-- Do "is inside" checks for each part.
				for i, v in pairs(Interacting) do
					local IsInside = Util.IsInBasePart(v, Part)
					
					if RecordedIsInside[v] ~= IsInside then
						RecordedIsInside[v] = IsInside

						-- Fire the callback.
						Object.FireCallback(Obj.EntryStatusChanged, v, IsInside)
					end
				end
			end)
		else
			-- Disconnect the event.
			local FrameEvent = Obj.FrameEvent
			if FrameEvent ~= nil then
				FrameEvent:Disconnect()
			end

			Obj.FrameEvent = nil
			FrameEvent = nil
		end
	end

	-- Sets if the specified part's entry is listened to.
	local function SetIsInsideEvent(InteractingPart, Enabled)
		if Enabled == true then
			Interacting[InteractingPart] = InteractingPart
		else
			Interacting[InteractingPart] = nil
		end
		
		-- Connect when there's an interacting part,
		-- and disconnect when there are none.
		if IsTableBlank(Interacting) == true then
			ToggleRunEvent(false)
		else
			ToggleRunEvent(true)
		end
	end
	
	local function AdaptStateChanged(StringVal, Enabled)
		if StringVal ~= nil and Enabled == true then
			-- Do disconection, just in case.
			AdaptStateChanged(nil, false)
			
			-- Reconnect.
			Obj.State = StringVal.Value
			Obj.StateChangedEvent = StringVal.Changed:Connect(function(val)
				Obj.State = val
			end)
		else
			local ChangeEvent = Obj.StateChangedEvent
			if ChangeEvent ~= nil then
				ChangeEvent:Disconnect()
			end
			
			Obj.StateChangedEvent = nil
			ChangeEvent = nil
		end
	end
	
	local function HandleStateVal(inst, Enabled)
		if Util.IsInstance(inst) and inst:IsA("StringValue") then
			if inst.Name == Obj.StateId and Enabled == true then
				if Enabled == true then
					Obj.StateInstance = inst
					AdaptStateChanged(inst, true)
				else
					AdaptStateChanged(inst, false)
					Obj.StateInstance = nil
				end
			end
		end
	end
	
	-- Refreshes the display part.
	local function UpdateDisplay()
		local DisplayPartRef = DisplayPart
		if DisplayPartRef ~= nil then
			local PartSize = Part.Size
			
			DisplayPart.CFrame = Part.CFrame + (Part.Size / 2)
			DisplayPart.Size = Vector3.new(PartSize.X, LiquidAdapter.DisplayYSize, PartSize.Z)
			DisplayPartRef.Color = Part.Color
			DisplayPartRef.Material = Part.Material
			
			PartSize = nil
		end
		
		DisplayPartRef = nil
	end

	-- Sets the part that can interact with the liquid body.
	function Obj.SetInteractingPart(Other, Enabled)
		assert(Util.IsInstance(Other) and (Util.IsBasePart(Other) or Other:IsA("Camera")), "Argument 1 must be a BasePart or a Camera")

		SetIsInsideEvent(Other, Enabled)
	end
	
	-- Sets if the water body's dimensions are displayed via an overlay at the top.
	function Obj.SetTopDisplay(Enabled)
		if Enabled == true then
			-- Disconnect previous connections
			Obj.SetTopDisplay(false)
			
			-- Create the display part
			DisplayPart = Instance.new("Part")
			DisplayPart.Anchored = true
			DisplayPart.CanCollide = false
			DisplayPart.Transparency = LiquidAdapter.DisplayTransparency
			DisplayPart.Name = LiquidAdapter.DisplayPartName
			DisplayPart.Parent = WSCache
			
			-- Reconnect the top display
			DisplayRunner = RunService.Heartbeat:Connect(UpdateDisplay)
		else
			if DisplayRunner ~= nil then
				DisplayRunner:Disconnect()
				DisplayRunner = nil
			end
			
			if DisplayPart ~= nil then
				DisplayPart:Destroy()
				DisplayPart = nil
			end
		end
	end

	-- Returns the part associated with the adapter.
	function Obj.GetBodyPart()
		return Part
	end

	-- Sets if the object disposes itself once the water body is
	-- removed from the DataModel, which is when Parent = nil.
	Obj.SetProperty("DisposeOnDestroy", true, function(val)
		ToggleRemovalWait(Obj, val)
	end)

	-- Callback that fires when the interacting part
	-- enters or exits the liquid body.
	-- Paramters:
	-- Part - The instance that had its entry status changed.
	-- IsInside - If the interacting part is now inside the body.
	Obj.EntryStatusChanged = nil
	
	Obj.OnDisposal = function()
		-- Disconnect all interacting parts
		for i, v in pairs(Interacting) do
			Obj.SetInteractingPart(v, false)
		end
		
		Obj.SetTopDisplay(false)
	end
	
	HandleStateVal(Obj.StateInstance, true)
	
	-- Connect to state instance add/remove
	Obj.StateAdded = Part.ChildAdded:Connect(function(c)
		HandleStateVal(c, true)
	end)
	Obj.StateRemove = Part.ChildRemoved:Connect(function(c)
		HandleStateVal(c, false)
	end)

	return Obj
end

return LiquidAdapter]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">6b114989da6c0ed6029e0bd9000b97f6</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX36648046613D4CB4BD4CDA019DD2552F">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Button</string>
								<string name="ScriptGuid">{8B490302-A0B2-4DF2-BE1C-8472A768AE07}</string>
								<ProtectedString name="Source"><![CDATA[--[[
buttons from the iconic jtoh kit with a few additions
]]--

local Interactives = script.Parent.Parent
local MapHandles = Interactives.Parent

local BaseInteractive = require(Interactives:WaitForChild("BaseInteractive"))
local TweenGroup = require(MapHandles.Parent:WaitForChild("Utils"):WaitForChild("TweenGroup"))

local LocalPlayer = game:GetService("Players").LocalPlayer

local DefaultPressSound = script:WaitForChild("PressSound")

local Button = {}

function Button.CanPartToggle(Trigger: BasePart, OtherPart: BasePart)
	return (OtherPart:GetAttribute("HitsButtonId") == Trigger:GetAttribute("ButtonId")
		or (OtherPart.Name == "Hitbox" and OtherPart.Parent == LocalPlayer.Character))
end

function Button.New(Val: StringValue, MapLauncher: {})
	local Interact = BaseInteractive.New()
	local Tweens = TweenGroup.New()
	local ButtonModel = Val.Parent

	local TouchConnections = {}

	-- whatever stored in the property archive
	-- is affected by the button
	-- and also contains original properties
	local PropertyArchive = {}

	local ActivatorArchive = {}
	local ActivatorCFrames = {}

	Interact.IsActivated = false
	Interact.DefaultTweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	Interact.CurrentTimer = nil
	Interact.Color = Val:GetAttribute("Color")
	
	function Interact.Deactivate()
		if Interact.IsActivated then
			Tweens.KillAll()
			local DefaultTweenInfo = Interact.DefaultTweenInfo
			
			local CurrentTimer = Interact.CurrentTimer
			if CurrentTimer then
				Interact.CurrentTimer = nil
				CurrentTimer.Dispose()
			end

			for i, v in pairs(PropertyArchive) do
				local Properties = {}
				local IsChanging = false

				local OffCollision = i:GetAttribute("OffCollision")
				if OffCollision ~= nil then
					i.CanCollide = OffCollision
				end

				local OffTransparency = i:GetAttribute("OffTransparency")
				if OffTransparency then
					IsChanging = true
					Properties.Transparency = OffTransparency
				end

				local OriginalCFrame = v.CFrame

				if OriginalCFrame then
					IsChanging = true
					Properties.CFrame = OriginalCFrame
				end

				if IsChanging then
					Tweens.Play(i, DefaultTweenInfo, Properties)
				end
			end

			for i, v in pairs(ActivatorArchive) do
				local OriginalCFrame = ActivatorCFrames[i]
				if OriginalCFrame then
					Tweens.Play(i, DefaultTweenInfo, {CFrame = OriginalCFrame})
				end

				local Material = v.Material
				if Material then
					i.Material = Material
				end
			end
			
			ActivatorArchive = {}

			Interact.IsActivated = false
		end
	end

	function Interact.Activate(Activator: BasePart?, Duration: number?)
		local DefaultTweenInfo = Interact.DefaultTweenInfo
		
		if Interact.IsActivated == false then
			Interact.IsActivated = true

			Tweens.KillAll()

			-- go through affected parts
			for i, v in pairs(PropertyArchive) do
				local Properties = {}
				local IsChanging = false

				local OnCollision = i:GetAttribute("OnCollision")
				if OnCollision ~= nil then
					i.CanCollide = OnCollision
				end

				local OnTransparency = i:GetAttribute("OnTransparency")

				if OnTransparency then
					IsChanging = true
					Properties.Transparency = OnTransparency
				end

				local OriginalCFrame: CFrame = v.CFrame

				if OriginalCFrame then
					local Moved = false

					local Move: Vector3? = i:GetAttribute("ButtonMove")
					local Rotate: Vector3? = i:GetAttribute("ButtonRotate")

					if Move then
						Moved = true
						IsChanging = true
						OriginalCFrame = OriginalCFrame:ToWorldSpace(CFrame.new(Move))
					end

					if Rotate then
						Moved = true
						IsChanging = true
						OriginalCFrame = OriginalCFrame:ToWorldSpace(CFrame.fromOrientation(
							math.rad(Rotate.X), math.rad(Rotate.Y), math.rad(Rotate.Z)
							)
						)
					end

					if Moved then
						Properties.CFrame = OriginalCFrame
					end
				end

				if IsChanging then
					Tweens.Play(i, DefaultTweenInfo, Properties)
				end
			end
		end
		
		-- let them know they pressed the button
		if ActivatorArchive[Activator] == nil then
			local ActivatorMove = Activator:GetAttribute("ActivatorMove")
			if ActivatorMove then
				Tweens.Play(Activator, DefaultTweenInfo, {
					CFrame = ActivatorCFrames[Activator]:ToWorldSpace(CFrame.new(ActivatorMove))
				})
			end
			
			local Properties = {}

			if Activator:GetAttribute("UseNeon") then
				Properties.Material = Activator.Material
				Activator.Material = Enum.Material.Neon
			end

			ActivatorArchive[Activator] = Properties

			local PressSound: Sound = Activator:FindFirstChild("PressSound") or DefaultPressSound

			if PressSound then
				PressSound:Play()
			end

			if Duration and Duration > 0 then
				local CurrentTimer = Interact.CurrentTimer

				if CurrentTimer then
					CurrentTimer.TimeLeft += Duration
				else
					local NewTimer = MapLauncher.GetLoader().GetController("ButtonTimer").Attach(
						Interact, nil, Duration
					)

					NewTimer.OnFinish = Interact.Deactivate

					Interact.CurrentTimer = NewTimer
					NewTimer.Start()
				end
			end
		end
	end

	function Interact.OnInitialize()
		for i, v in pairs(ButtonModel:WaitForChild("AffectedParts"):GetChildren()) do
			if v:IsA("BasePart") then
				local Properties = {}
				local StoreProperties = false

				local OffTransparency = v:GetAttribute("OffTransparency")

				if OffTransparency or v:GetAttribute("OnTransparency") then
					StoreProperties = true
					Properties.Transparency = v.Transparency
				end

				if OffTransparency then
					v.Transparency = OffTransparency
				end

				if v:GetAttribute("ButtonMove") or v:GetAttribute("ButtonRotate") then
					StoreProperties = true
					Properties.CFrame = v.CFrame
				end

				local OffCollision = v:GetAttribute("OffCollision")
				if OffCollision or v:GetAttribute("OnCollision") then
					StoreProperties = true
					Properties.CanCollide = v.CanCollide
				end

				if OffCollision ~= nil then
					v.CanCollide = OffCollision
				end

				if StoreProperties then
					PropertyArchive[v] = Properties
				end
			end
		end
	end

	function Interact.OnStart()
		for i, v in pairs(ButtonModel:WaitForChild("Deactivators"):GetChildren()) do
			if v:IsA("BasePart") then
				local IsTouched = false

				table.insert(TouchConnections, v.Touched:Connect(function(OtherPart)
					if IsTouched == false and Button.CanPartToggle(v, OtherPart) then
						IsTouched = true
						Interact.Deactivate()
						IsTouched = false
					end
				end))
			end
		end

		for i, v in pairs(ButtonModel:WaitForChild("Activators"):GetChildren()) do
			if v:IsA("BasePart") then
				ActivatorCFrames[v] = v.CFrame

				local IsTouched = false

				table.insert(TouchConnections, v.Touched:Connect(function(OtherPart)
					if IsTouched == false and Button.CanPartToggle(v, OtherPart) then
						IsTouched = true
						Interact.Activate(v, v:GetAttribute("AddedDuration"))
						IsTouched = false
					end
				end))
			end
		end
	end

	function Interact.OnShutdown()
		Interact.Deactivate()

		for i, v in pairs(TouchConnections) do
			v:Disconnect()
		end
		TouchConnections = {}

		for i, v in pairs(ActivatorCFrames) do
			i.CFrame = v
		end
		ActivatorCFrames = {}
	end

	function Interact.OnDisposal()
		Tweens.Dispose()

		for i, v in pairs(PropertyArchive) do
			for i2, v2 in pairs(v) do
				i[i2] = v2
			end
		end

		PropertyArchive = {}
	end

	return Interact
end

return Button]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">531c0802fe42ff7202a96aa3000bc056</UniqueId>
							</Properties>
							<Item class="Sound" referent="RBX36165DAB6C2845FC91AD61CC3076AEC6">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">PressSound</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxasset://sounds/button.wav</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<UniqueId name="UniqueId">531c0802fe42ff7202a96aa30024c890</UniqueId>
									<float name="Volume">1</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Folder" referent="RBXF24F3E75621547D28F6EF8F8E525DEBE">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Controllers</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">135020c8d7ddaf87027e1541000b8a65</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBXF966D8E02481478A9EEAE68A5882CE6F">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">OldSwimmer</string>
								<string name="ScriptGuid">{7EFD15F4-446B-4567-9591-B992F5FD55A5}</string>
								<ProtectedString name="Source"><![CDATA[--[[
This revamp handles liquid submersion and display

By udev2192
]]--

local RunService = game:GetService("RunService")

local Interactives = script.Parent.Parent

local BaseInteractive = require(Interactives:WaitForChild("BaseInteractive"))
local PropertyLock = require(Interactives.Parent:WaitForChild("Util"):WaitForChild("PropertyLock"))
local Object = BaseInteractive.GetObjectClass()
local Signal = BaseInteractive.GetSignalClass()
local SwimmerInput = require(script:WaitForChild("SwimmerInput"))

local Camera = workspace.CurrentCamera

local Swimmer = {}

function Swimmer.New(Loader: {}, Player: Player)
	local Swim = Object.New("Swimmer")
	local Input = SwimmerInput.New()
	
	local IsAlive = false
	
	local ActiveLiquids: {BasePart} = {}
	local ActiveDisplays: {[BasePart]: BasePart} = {}
	local Head: BasePart
	local Runner: RBXScriptConnection
	local DeathEvent: RBXScriptConnection
	local Character: Model
	local LightingFx: ColorCorrectionEffect
	local LastDirection: string
	
	Swim.CurrentLiquid = nil
	Swim.CurrentCamLiquid = nil
	
	--[[
	<number> - How fast the player swims
	]]--
	Swim.Speed = game:GetService("StarterPlayer").CharacterWalkSpeed
	
	local function OnSpawn(Char: Model)
		if Char then
			Character = Char
			IsAlive = true
			Head = Char:WaitForChild("Head")
			
			local Humanoid = Char:WaitForChild("Humanoid")
			if DeathEvent == nil then
				DeathEvent = Humanoid.HealthChanged:Connect(function(Health)
					if Health <= 0 then
						DeathEvent:Disconnect()
						Input.ToggleSwimmerInput(false)
						IsAlive = false
					end
				end)
			end
		end
	end
	
	OnSpawn(Player.Character)
	local PlayerSpawnConnection = Player.CharacterAdded:Connect(OnSpawn)
	
	function Swim.ClearDisplays()
		for i, v in pairs(ActiveDisplays) do
			v:Destroy()
		end
		
		ActiveDisplays = {}
	end
	
	function Swim.RemoveDisplay(Liquid: BasePart)
		local Display = ActiveDisplays[Liquid]
		if Display then
			ActiveDisplays[Liquid] = nil
			Display.Part:Destroy()
			Display.Lock.ReleaseAll()
		end
	end
	
	function Swim.AddDisplay(Liquid: BasePart)
		if ActiveDisplays[Liquid] == nil and Liquid:IsA("Part") and Liquid.Shape == Enum.PartType.Block then
			local LiquidSize = Liquid.Size
			local TopSize = LiquidSize.Y / 2
			local Display = Liquid:Clone()
			Display.Size = Vector3.new(LiquidSize.X, 0.005, LiquidSize.Z)
			Display.Anchored = true
			Display.CanCollide = false
			Display.CanQuery = false
			Display.CanTouch = false
			Display.CFrame = Liquid.CFrame + Vector3.new(0, TopSize, 0)

			local Lock = PropertyLock.New(Liquid)
			Lock.Set("Transparency", 1)

			ActiveDisplays[Liquid] = {
				Part = Display,
				Lock = Lock
			}

			ActiveDisplays[Liquid] = Display
			Display.Parent = Liquid
		end
	end
	
	function Swim.StopLoop()
		if Runner then
			Runner:Disconnect()
			Runner = nil
		end
	end

	function Swim.RunLoop()
		Runner = RunService.Heartbeat:Connect(function()
			local PRIORITY = "Priority"
			local SelectedLiquid: BasePart
			local SelectedCamLiquid: BasePart
			
			local HeadPos: Vector3 = Head.Position
			local CamPos: Vector3 = Camera.CFrame.Position
			local HighestPriority = 0
			
			for i, v in pairs(ActiveLiquids) do
				local IsHigherPriority = (v:GetAttribute(PRIORITY) or 0) > SelectedLiquid:GetAttribute(PRIORITY)
				
				if BaseInteractive.IsPointInside(HeadPos, v) and IsHigherPriority then
					-- Higher liquid priority means it gets selected
					-- over one that intersects
					SelectedLiquid = v
				end
				
				if BaseInteractive.IsPointInside(CamPos, v) then
					Swim.AddDisplay(v)
					
					if IsHigherPriority then
						SelectedCamLiquid = v
					end
				else
					Swim.RemoveDisplay(v)
				end
			end
			
			if SelectedLiquid ~= Swim.CurrentLiquid then
				Swim.CurrentLiquid = SelectedLiquid
			end
			
			if SelectedCamLiquid ~= Swim.CurrentCamLiquid then
				Swim.CurrentCamLiquid = SelectedCamLiquid
				
				-- if the camera is submerged in a liquid
				-- make it look like so
				if SelectedCamLiquid then
					if LightingFx == nil then
						LightingFx = Instance.new("ColorCorrectionEffect")
						LightingFx.Brightness = 0
						LightingFx.TintColor = SelectedCamLiquid.Color
						LightingFx.Parent = Camera
					else
						LightingFx.TintColor = SelectedCamLiquid.Color
					end
				elseif LightingFx then
					LightingFx:Destroy()
					LightingFx = nil
				end
			end
			
			-- update liquid displays
			for i, v in pairs(ActiveDisplays) do
				local Display: Part = v.Part
				Display.CFrame = i.CFrame + Vector3.new(0, i.Size.Y / 2, 0)
				
				-- check that they haven't changed yet, because changing them
				-- causes a tiny bit of lag each
				if Display.Color ~= i.Color then
					Display.Color = i.Color
				end
				if Display.Material ~= i.Material then
					Display.Material = i.Material
				end
			end
		end)
	end
	
	function Swim.Clear()
		Swim.StopLoop()
		ActiveLiquids = {}
	end
	
	function Swim.Remove(Liquid: BasePart)
		local Index = table.find(ActiveLiquids, Liquid)
		
		if Index then
			table.remove(ActiveLiquids, Index)
		end
		
		if Liquid == Swim.CurrentLiquid then
			Swim.CurrentLiquid = nil
		end
		
		if Liquid == Swim.CurrentCamLiquid then
			Swim.CurrentCamLiquid = nil
		end
	end
	
	function Swim.Add(Liquid: BasePart)
		table.insert(ActiveLiquids, Liquid)
	end
	
	function Input.DirectionChanged(Direction: string)
		LastDirection = Direction
	end
	
	function Swim.OnDisposal()
		PlayerSpawnConnection:Disconnect()
		PlayerSpawnConnection = nil
		
		if DeathEvent then
			DeathEvent:Disconnect()
			DeathEvent = nil
		end
		
		Swim.StopLoop()
		Input.Dispose()
	end
	
	return Swim
end

return Swimmer]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">28bb2a66ebbeb7ba029706f100631fa5</UniqueId>
							</Properties>
							<Item class="ModuleScript" referent="RBXB1BF1E408AEA46228868832783B82C84">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">SwimmerInput</string>
									<string name="ScriptGuid">{548B6A5F-68A9-4B41-B73F-0582D50958E4}</string>
									<ProtectedString name="Source"><![CDATA[-- A utility module that provides an object
-- for detecting swimmer client input.

-- By udev2192

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ContextAction = game:GetService("ContextActionService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui", 25)
assert(typeof(PlayerGui) == "Instance", "The PlayerGui couldn't be found.")

local InputChangeConnection = nil
local Platform = nil -- The type of device the player is on.
local SwimmerInput = {}
local InputChangeFuncs = {}

local InputLockVals = {
	[true] = Enum.ContextActionResult.Sink,
	[false] = Enum.ContextActionResult.Pass
}

local FULL_RADIUS = UDim.new(1, 0)

local INPUT_IDS = {
	[Enum.UserInputType.Touch] = "Mobile",
	[Enum.UserInputType.Keyboard] = "PC",
	[Enum.UserInputType.Accelerometer] = "VR"
}

-- Returns the type of device the player is on
function SwimmerInput.GetPlatform(LastInput)
	LastInput = LastInput or UserInputService:GetLastInputType()

	if table.find(UserInputService:GetConnectedGamepads(), LastInput) then -- True if one of the gamepad slots are connected.
		return "Console"
	else
		return INPUT_IDS[LastInput] or "PC" -- Use the PC platform as a last result
	end
end

function SwimmerInput.ToggleInputChangeEvent(Enabled)
	if Enabled == true then
		InputChangeConnection = UserInputService.LastInputTypeChanged:Connect(function(Last)
			Platform = SwimmerInput.GetPlatform(Last)

			-- Fire any input change callbacks
			for i, v in pairs(InputChangeFuncs) do
				if typeof(v) == "function" then
					v()
				end
			end
		end)
	else
		if InputChangeConnection ~= nil then
			InputChangeConnection:Disconnect()
			InputChangeConnection = nil
		end
	end
end

local function AddARC(Gui, Ratio)
	assert(typeof(Gui) == "Instance", "Argument 1 must be an instance.")

	local Arc = Util.CreateInstance("UIAspectRatioConstraint", {
		DominantAxis = Enum.DominantAxis.Height,
		AspectRatio = Ratio or 1,
		Parent = Gui
	})

	return Arc
end

local function MakeCircular(Gui)
	assert(typeof(Gui) == "Instance", "Argument 1 must be an instance.")
	
	local Corner = Util.CreateInstance("UICorner", {
		CornerRadius = FULL_RADIUS,
		Parent = Gui
	})

	return Corner
end

-- For grabbing the mobile jump button located on a mobile screen
local function GetMobileJumpButton()
	-- Check to see if the player is on mobile (cause that should be the only time the jump button appears)
	if Platform == "Mobile" then
		local function WarnButtonMissing(Location)
			warn("The mobile jump button could not be found. The location of the jump button might have changed. The jump button failed to locate at: " .. tostring(Location))
		end

		-- Find the jump button and return it if found
		if PlayerGui then
			local JumpButton = PlayerGui:WaitForChild("TouchGui", 5)
			if JumpButton then
				JumpButton = JumpButton:WaitForChild("TouchControlFrame", 5)
				if JumpButton then
					JumpButton = JumpButton:WaitForChild("JumpButton", 5)
					if JumpButton and JumpButton:IsA("GuiButton") then
						if JumpButton:IsA("GuiButton") then
							return JumpButton
						else
							WarnButtonMissing(JumpButton:GetFullName() .. " (meaning the supposed object was found but however, it isn't a GuiButton).")
						end
					else
						WarnButtonMissing(JumpButton:GetFullName())
					end
				else
					WarnButtonMissing(JumpButton:GetFullName())
				end
			else
				WarnButtonMissing(JumpButton:GetFullName())
			end

			JumpButton = nil
		else
			WarnButtonMissing(PlayerGui:GetFullName())
		end

		-- Return nil if anything in the jump button path is missing
		WarnButtonMissing = nil
		return nil
	else
		return nil
	end
end

-- Initalize input.
Platform = SwimmerInput.GetPlatform()
SwimmerInput.ToggleInputChangeEvent(true)

-- Object constructor.
function SwimmerInput.New()
	local SwimInputEnabled = false

	local Connections = {}
	local GuiObjects = {}

	local Obj = Object.New("SwimmerInputHandler")
	Obj.Keybinds = {
		PC = {
			SwimUp = Enum.KeyCode.Space,
			SwimDown = Enum.KeyCode.LeftShift
		},

		Console = {
			SwimUp = Enum.KeyCode.ButtonA,
			SwimDown = Enum.KeyCode.ButtonB
		}
	}

	-- The mobile dive button.
	Obj.DiveButton = nil

	Obj.DiveButtonFont = Enum.Font.GothamBold
	Obj.DiveButtonText = "Dive"

	-- Keybinding priority for this object's input listener.
	Obj.KeybindPriority = 10000

	-- Sets if the ContextAction listener locks the input of the swim keybinds
	-- to itself.
	Obj.IsSinkingInput = false

	-- The most recent swimming direction.
	Obj.SwimDirection = nil

	local function DestroyInstances()
		for i, v in pairs(Connections) do
			if typeof(v) == "RBXScriptConnection" then
				v:Disconnect()
			end
		end

		for i, v in pairs(GuiObjects) do
			if typeof(v) == "Instance" then
				v:Destroy()
			end
		end
	end

	-- Returns true if the key specified is a swimming keybind
	local function IsSwimKey(Key)
		local Keys = Obj.Keybinds[Platform]
		if typeof(Keys) == "table" then
			for i2, v2 in pairs(Keys) do
				if Key == v2 then
					return true
				end
			end
		end
	end

	-- Internally handles swim input
	local function ChangeSwimDirection(Dir)
		Obj.SwimDirection = Dir
		Object.FireCallback(Obj.DirectionChanged, Dir)
	end
	
	-- Returns the vertical direction (up or down) as a string corresponding to the keys being pressed.
	local function GetCurrentSwimKey()
		for i, Platform in pairs(Obj.Keybinds) do
			if Platform ~= nil then
				local SwimUpKey = Platform.SwimUp
				local SwimDownKey = Platform.SwimDown

				if SwimUpKey ~= nil and SwimDownKey ~= nil then
					if UserInputService:IsKeyDown(SwimUpKey) then
						return "up"
					elseif UserInputService:IsKeyDown(SwimDownKey) then
						return "down"
					end
				end
			end
		end

		return nil -- Return nil if there is no swimming key (for a vertical direction) being held down
	end
	
	-- Internally handles swimming key presses
	local function HandleSwimKeybinds(InputName, InputState, InputObject) -- Used by ContextAction:BindActionAtPriority() inside Client.ToggleSwimming()
		-- Returning Enum.ContextActionResult.Sink prevents any other input receivers from getting that input
		local KeyCode = InputObject.KeyCode
		if IsSwimKey(KeyCode) then
			
			-- Determine whether to let input pass.
			local Result = InputLockVals[Obj.IsSinkingInput]
			
			-- Handle input.
			if InputState == Enum.UserInputState.Begin then
				-- Determine the direction to swim in based on the key press based on the input name
				if InputName == "SwimUpKeybinds" then
					ChangeSwimDirection("up")
				elseif InputName == "SwimDownKeybinds" then
					ChangeSwimDirection("down")
				else
					return Enum.ContextActionResult.Pass
				end
			elseif InputState == Enum.UserInputState.End then
				--if IsSwimKey(KeyCode) then -- Determine if it's a swimming keybind that was let go of
				--	-- Before setting the SwimDirection to nil, make sure the player is not trying to swim in another vertical direction (by checking if a key for the reverse direction is not being held)
				--	local SwimKey = GetCurrentSwimKey()
				--	if SwimKey == nil then
				--		ChangeSwimDirection(nil)
				--	else
				--		SwimKey = string.lower(tostring(SwimKey))
				--		if SwimKey == "up" then
				--			ChangeSwimDirection("up")
				--		elseif SwimKey == "down" then
				--			ChangeSwimDirection("down")
				--		end
				--	end
				--	SwimKey = nil
				--end
				
				return Enum.ContextActionResult.Pass
			else
				return Enum.ContextActionResult.Pass
			end
			
			return Result
		else
			return Enum.ContextActionResult.Pass
		end
	end
	
	-- For binding/connecting input for the user to swim up or down
	function Obj.ToggleSwimmingInput(Enabled)
		if Enabled == true then
			if SwimInputEnabled == true then
				-- Disconnect previous input event connections if found
				Obj.ToggleSwimmingInput(false)
			end

			SwimInputEnabled = true

			-- Handle input
			if Platform == "Mobile" then
				local function WarnButtonMissing()
					warn("The mobile jump button could not be found so you won't be able to swim up or down.")
				end

				-- Find the jump button
				if PlayerGui then
					local JumpButton = GetMobileJumpButton()
					if JumpButton and typeof(JumpButton) == "Instance" and JumpButton:IsA("GuiButton") then
						-- Connect swimming up to the jump button
						Connections["MobileSwimUp"] = JumpButton.MouseButton1Down:Connect(function(IsJumping)
							ChangeSwimDirection("up")
						end)

						Connections["MobileStopSwimmingUp"] = JumpButton.MouseButton1Up:Connect(function(IsJumping)
							if Obj.SwimDirection == "up" then
								ChangeSwimDirection(nil)
							end
						end)

						-- Connect swimming down to the dive button created here
						local Button = Util.CreateInstance("TextButton", {
							Size = JumpButton.Size,
							Position = JumpButton.Position - UDim2.new(0,0,JumpButton.Size.Y.Scale + 0.05,JumpButton.Size.Y.Offset), -- Make the dive button on top of the jump button
							Font = Obj.DiveButtonFont or Enum.Font.SourceSansBold,
							TextScaled = true,
							TextColor3 = Color3.new(1,1,1),
							TextTransparency = 0.75,
							Text = Obj.DiveButtonText or "",
							BackgroundColor3 = Color3.new(0,0,0),
							BorderSizePixel = 0,
							BackgroundTransparency = 0.5
						})

						AddARC(Button, 1)
						MakeCircular(Button)

						-- Connect the diving event and load the button
						GuiObjects.DiveButton = Button
						if GuiObjects.DiveButton ~= nil then -- Just in case
							Connections["MobileSwimDown"] = Button.MouseButton1Down:Connect(function() -- To swim down
								ChangeSwimDirection("down")
							end)
							Connections["MobileStopSwimmingDown"] = Button.MouseButton1Up:Connect(function() -- To stop swimming down
								if Obj.SwimDirection == "down" then
									ChangeSwimDirection(nil)
								end
							end)
							Button.Parent = JumpButton.Parent
						end

						Button = nil
					end

					JumpButton = nil
				end

				WarnButtonMissing = nil
			else

				-- Provide a connection (for those not on mobile) to stop swimming in a vertical direction.
				-- This is used to fix a jumping bug.
				Connections["StopSwimmingVertically"] = UserInputService.InputEnded:Connect(function(Input)
					local KeyCode = Input.KeyCode
					
					if Input.UserInputState == Enum.UserInputState.End and IsSwimKey(KeyCode) then -- Determine if it's a swimming keybind that was let go of
						-- Before setting the SwimDirection to nil, make sure the player is not trying to swim in another vertical direction (by checking if a key for the reverse direction is not being held)
						local SwimKey = GetCurrentSwimKey()
						if SwimKey == nil then
							ChangeSwimDirection(nil)
						else
							SwimKey = string.lower(tostring(SwimKey))
							if SwimKey == "up" then
								ChangeSwimDirection("up")
							elseif SwimKey == "down" then
								ChangeSwimDirection("down")
							end
						end
						SwimKey = nil
					end
					
					KeyCode = nil
				end)

				-- Bind input for swimming vertically
				local Keybinds = Obj.Keybinds
				if Keybinds ~= nil then
					ContextAction:BindActionAtPriority("SwimDownKeybinds", HandleSwimKeybinds, false, Obj.KeybindPriority, Keybinds.PC.SwimDown, Keybinds.Console.SwimDown)
					ContextAction:BindActionAtPriority("SwimUpKeybinds", HandleSwimKeybinds, false, Obj.KeybindPriority, Keybinds.PC.SwimUp, Keybinds.Console.SwimUp)
				end
				Keybinds = nil
			end
		else
			SwimInputEnabled = false

			-- Disconnect and destroy ways of input used for swimming (if the player is no longer in any water)
			DestroyInstances()

			ContextAction:UnbindAction("SwimDownKeybind")
			ContextAction:UnbindAction("SwimUpKeybind")
			
			ChangeSwimDirection(nil)
		end
	end

	-- Disconnect and destroy everything on disposal.
	Obj.OnDisposal = function()
		InputChangeFuncs[Obj] = nil
		Obj.ToggleSwimmingInput(false)

		DestroyInstances()

		Connections = nil
		GuiObjects = nil
	end

	-- Invoked when a swimming input direction is received.
	-- Parameters:
	-- Direction - Either: "up", "down", or nil
	Obj.DirectionChanged = nil

	InputChangeFuncs[Obj] = function()
		Obj.ToggleSwimmingInput(SwimInputEnabled)
	end

	return Obj
end

return SwimmerInput]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">21fabeb880fe056002989f96000b9cb9</UniqueId>
								</Properties>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBXCA2F004B81324AF19635C3D8DF196BEC">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Swimmer</string>
								<string name="ScriptGuid">{BFA8B805-63F6-4A40-B591-4B9245C16688}</string>
								<ProtectedString name="Source"><![CDATA[-- This module provides an object that gives players the ability to swim
-- in liquids (from BaseParts).

-- Thanks to ForbiddenJ for swimming movement logic.

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Debris = game:GetService("Debris")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local Adapters = RepModules:WaitForChild("Adapters")
local UtilRepModules = RepModules:WaitForChild("Utils")

--local LiquidModules = script.Parent

local CharAdapter = require(Adapters:WaitForChild("CharacterAdapter"))
local Object = require(UtilRepModules:WaitForChild("Object"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local SwimmerInput = require(script:WaitForChild("SwimmerInput"))

local Camera = workspace.CurrentCamera

local Swimmer = {}
Swimmer.HumanoidCollectionId = "SwimmerHumanoids" -- For internal use

local function PlaySound(URL)
	local Sound = Instance.new("Sound")
	Sound.SoundId = Util.FormatAssetId(URL)
	Sound.Volume = 1
	Sound.Parent = script

	if Sound.IsLoaded == false then
		Sound.Loaded:Wait()
	end

	Sound:Play()
	Debris:AddItem(Sound, Sound.TimeLength)
	Sound = nil
end

-- Toggles the SoundGroup used in the 

-- Gets the weight of the specified part.
local function GetPartWeight(BasePart)
	if Util.IsBasePart(BasePart) then
		-- Get a BasePart's weight, the weight of its connected parts
		local AccumulatedWeight = 0
		for i, v in pairs(BasePart:GetConnectedParts()) do
			if v:IsA("BasePart") then
				AccumulatedWeight = AccumulatedWeight + v:GetMass()
			end
		end
		-- Calculate the weight by going through the table and return the weight relative to the gravity
		return AccumulatedWeight * workspace.Gravity
	end
end

--function Swimmer.GetPriorityLiquid(List: {}, BoolPropertyName: string)
--	local PRIORITY = "Priority"
--	local Highest = nil
--	for i, v in pairs(List) do
--		if v[BoolPropertyName] == true
--			and (Highest == nil or v.InteractiveValue:GetAttribute(PRIORITY) > Highest.InteractiveValue:GetAttribute(PRIORITY))
--		then
--			Highest = v
--		end
--	end

--	return Highest
--end

function Swimmer.New(Loader: {}, Player)
	assert(typeof(Player) == "Instance" and Player:IsA("Player"), "Argument 1 must be a player instance.")

	local Obj = Object.New("Swimmer")
	local ObjCharAdapter = CharAdapter.New(Player)
	local ObjInput = SwimmerInput.New()

	--local Liquids = {} -- Liquid interactves
	
	-- Currently registered liquid interactives
	local LiquidConnections = {}
	
	local ActiveLiquids = {} -- Liquid adapters the rig is in.
	--local Connections = {} -- Liquid body part connections

	--local ScannedLiquids = {}

	local FloatTweens = {}

	local CharObjects = ObjCharAdapter.Parts
	local Forces = {}
	local ForceEnabled = false -- Swimmin force debounce.
	local FloatingForces = {} -- Forces used to make the character float.
	local RootPartWeight = 0
	--local OldRig = nil -- For adapter refresh
	--local Rig = nil
	local IsInLiquid = false -- Internal identifier for sound playback
	--local WaitingForFloat = false
	local VerticalDirection = nil
	local CanPlaySounds = false

	local LightingFx: ColorCorrectionEffect

	-- Physics tweaking stuff
	Obj.PhysicsConfig = {
		-- The maximum amount of force (negative or positive) that can be applied
		-- in the Y-axis to turn the player's character while they are swimming
		MaxSwimTorqueY = 2000,

		-- The higher this number gets, the more intertia that is ignored when turning
		SwimRotationalDamping = 50,

		-- The amount of power to use to turn the character while they are swimming
		SwimRotationalPower = 500
	}

	-- Air change rates by liquid state.
	-- Numbers are in change per second.
	Obj.AirChanges = {
		-- Decreases should be negative numbers

		["water"] = -8,
		["acid"] = -30,
		["lava"] = -10000
	}

	-- How long (in seconds) the player has to wait before
	-- breathing in when out of a liquid.
	Obj.BreatheInDelay = 2

	-- Air gained per second when not in a liquid.
	Obj.AirRecoveryRate = 12

	-- Current air cap.
	Obj.MaxAir = 100

	-- Sounds by liquid state
	Obj.LiquidSounds = {
		-- Format: ["state"] = "id"
		["default"] = "rbxasset://sounds/impact_water.mp3",
		["lava"] = "rbxasset://sounds/Rocket shot.wav"--"rbxassetid://5094928129"--"rbxasset://sounds/Launching rocket.wav"
	}

	Obj.SplashOutSound = "rbxasset://sounds/impact_water.mp3"
	Obj.SoundsEnabled = true

	-- The current liquid body the player is in.
	Obj.CurrentLiquid = nil

	--[[
	<Liquid> - The current liquid the camera is in
	]]--
	Obj.CurrentCamLiquid = nil

	--[[
	<boolean> - If the player's character is currently floating
	]]--
	Obj.IsCharacterFloating = false

	-- The velocity of the character when it is floating.
	Obj.FloatVelocity = Vector3.new(0, 1, 0)

	Obj.FloatTweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
	Obj.FloatStopVelocity = Vector3.new(0, 0, 0)

	-- The liquid body identifier string.
	Obj.BodyId = "_Liquid"

	-- If the player can lose air.
	Obj.CanLoseAir = true

	Obj.CanLoseAirWhileDead = false
	Obj.CanSwimWhileDead = false
	Obj.SoundsEnabledWhileDead = false
	Obj.MaxForceMultiplier = 3.1

	-- Time after character loading to wait before letting a sound be played.
	Obj.SoundSpawnCooldown = 0.1

	-- Multiplier for the humanoid's jump power when
	-- they launch out of a liquid.
	Obj.JumpBoostFactor = 1

	--local function RefreshCharValues()
	--	local RootPart = CharObjects.RootPart
	--	if RootPart ~= nil then
	--		RootPartWeight = GetPartWeight(RootPart) * (Obj.MaxForceMultiplier or 1)
	--	end

	--	CanPlaySounds = false

	--	local Char = CharObjects.Character
	--	if Char ~= nil then
	--		Rig = Char:WaitForChild(Obj.InteractingRig)

	--		if Rig ~= nil then
	--			IsInLiquid = false

	--			-- Set liquid adapter rigs
	--			for i, v in pairs(Liquids) do
	--				if OldRig ~= nil then
	--					v.SetInteractingPart(OldRig, false)
	--				end

	--				v.SetInteractingPart(Rig, true)
	--			end
	--		end

	--		OldRig = Rig

	--		-- Go through sound cooldown
	--		coroutine.wrap(function()
	--			local SoundCooldown = Obj.SoundSpawnCooldown or 0

	--			if SoundCooldown > 0 then
	--				CanPlaySounds = false
	--				local Elapsed = 0

	--				while Elapsed < SoundCooldown do
	--					Elapsed += RunService.Heartbeat:Wait()
	--				end

	--				CanPlaySounds = true
	--			else
	--				CanPlaySounds = true
	--			end
	--		end)()
	--	end
	--end

	local function HandleAirSupply(Air)
		if Air <= 0 then
			-- Kill the player when they run out of air
			local Humanoid = CharObjects.Humanoid
			if Humanoid ~= nil then
				Humanoid.Health = 0
			end
		end

		-- Fire the callback.
		Object.FireCallback(Obj.AirChanged, Air)
	end

	-- Internally toggles air recovery.
	local function ToggleAirRecovery(Enabled)
		if Enabled == true then
			-- Disconnect the old recovery runner.
			ToggleAirRecovery(false)

			-- Inhale.
			Obj.InhaleRun = RunService.Heartbeat:Connect(function(Delta)
				-- Check if the player is out of a liquid and has less than or equal to max air
				if Obj.CurrentBody == nil and Obj.Air <= Obj.MaxAir then
					-- Recover
					Obj.Air = math.min(Obj.Air + (Obj.AirRecoveryRate * Delta), Obj.MaxAir)
				else
					ToggleAirRecovery(false)
				end
			end)
		else
			local InhaleRun = Obj.InhaleRun

			if InhaleRun ~= nil then
				InhaleRun:Disconnect()
			end

			Obj.InhaleRun = nil
			InhaleRun = nil
		end
	end

	local function CanSwim()
		local Humanoid = CharObjects.Humanoid
		local IsAlive = true
		if Humanoid ~= nil then
			IsAlive = Humanoid.Health > 0
		end

		return Obj.CanSwimWhileDead == true or (Obj.CanSwimWhileDead == false and IsAlive)
	end

	-- Toggles the swimming force.
	local function ToggleForce(Enabled)
		if Enabled == true and CanSwim() == true then
			local PhysicsConfig = Obj.PhysicsConfig
			local RootPart = CharObjects.RootPart
			local Humanoid = CharObjects.Humanoid

			if PhysicsConfig ~= nil and RootPart ~= nil and Humanoid ~= nil then
				-- Moves the character.
				local Force: BodyVelocity = Util.CreateInstance("BodyVelocity", {
					Velocity = Vector3.new(0,0,0),
					P = RootPartWeight, -- Power
					MaxForce = Vector3.new(RootPartWeight, RootPartWeight, RootPartWeight) * 3.1,
					Name = "SwimVelocity",
					Parent = RootPart
				})

				-- Rotates the character.
				local Gyro = Util.CreateInstance("BodyGyro", {
					MaxTorque = Vector3.new(math.huge, PhysicsConfig.MaxSwimTorqueY, math.huge),
					D = PhysicsConfig.SwimRotationalDamping,
					P = PhysicsConfig.SwimRotationalPower,
					CFrame = RootPart.CFrame, -- Important because this is where the torque will be applied,
					Name = "SwimGyro",
					Parent = RootPart
				})

				Forces.Force = Force
				Forces.Gyro = Gyro

				-- Set Humanoid PlatformStand, so default
				-- humanoid control doesn't apply
				Humanoid.PlatformStand = true
			end

			PhysicsConfig, RootPart, Humanoid = nil, nil, nil
		else
			for i, v in pairs(Forces) do
				if typeof(v) == "Instance" then
					v:Destroy()
				end
			end

			-- Allow for default control again
			local Humanoid = CharObjects.Humanoid
			if Humanoid ~= nil then
				Humanoid.PlatformStand = false

				-- Launch the humanoid upwards if it was swimming up.
				if VerticalDirection == "up" then
					local RootPart = CharObjects.RootPart
					if RootPart ~= nil then
						RunService.Stepped:Wait()
						
						if Obj.SwimRunner == nil and Obj.CurrentLiquid == nil then
							local RootVelocity = RootPart.Velocity
							local UpVelocity = Humanoid.JumpPower * (Obj.JumpBoostFactor or 1)
							RootPart.AssemblyLinearVelocity = Vector3.new(RootVelocity.X, UpVelocity, RootVelocity.Z)
						end

						-- Jump the humanoid for consistency.
						--Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)

						-- Apply the velocity
						
						--RootPart:ApplyImpulse(Vector3.new(RootVelocity.X, UpVelocity, RootVelocity.Z))

						--RootVelocity, UpVelocity  = nil, nil
					end
					RootPart = nil
				end
			end
			Humanoid = nil
		end
	end

	local function ToggleSwimRunner(Enabled)
		if Enabled == true then
			-- Disconnect the old swim runner if it exists.
			--ToggleSwimRunner(false)

			-- Runs swimmer humanoid movement
			if Obj.SwimRunner == nil then
				Obj.SwimRunner = RunService.Heartbeat:Connect(function(Delta)
					local Body = Obj.CurrentBody
					if Body ~= nil then

						if CanSwim() == true then
							local Humanoid = CharObjects.Humanoid
							local IsAlive = true
							if Humanoid ~= nil then
								IsAlive = Humanoid.Health > 0
							end

							if Obj.CanLoseAir == true then
								-- Do death check before draining air.
								if Humanoid == nil or Obj.CanLoseAirWhileDead == true or (Obj.CanLoseAirWhileDead == false and IsAlive) then
									-- Drain air.
									Obj.Air = math.max(0, Obj.Air + ((Obj.AirChanges[Body.State] or 0) * Delta))
								end
							end

							-- Move the humanoid
							local Force = Forces.Force
							local Gyro = Forces.Gyro

							if Forces ~= nil and Gyro ~= nil then
								if Humanoid ~= nil then
									--print("update movement")
									local MoveDir = Humanoid.MoveDirection -- The movement direction of the humanoid
									local HumanoidSpeed = Humanoid.WalkSpeed -- The movement speed of the humanoid

									local YVelocity = nil -- The Vector3 that hoists the swim direction of the player on the Y-axis
									if VerticalDirection == "up" then
										YVelocity = MoveDir + Vector3.new(0, 1, 0) -- Swim up
									elseif VerticalDirection == "down" then
										YVelocity = MoveDir + Vector3.new(0, -1, 0) -- Swim down
									else
										YVelocity = MoveDir + Vector3.new(0, 0, 0)
									end
									Force.Velocity = YVelocity * HumanoidSpeed

									if MoveDir.Magnitude > 0.1 then -- Detect if the character is applying force in any direction other than just up or down by detecting if there is magnitude in the move direction (the up and down direction won't affect this number)
										Gyro.CFrame = CFrame.new(Vector3.zero, MoveDir) -- Apply a directional force away from the center
									end
									MoveDir, HumanoidSpeed, YVelocity = nil, nil, nil
								end

								Humanoid = nil
							end
						else
							ToggleSwimRunner(false)
							ToggleForce(false)
						end
					end
				end)
			end
		else
			local SwimRunner = Obj.SwimRunner

			if SwimRunner ~= nil then
				SwimRunner:Disconnect()
			end

			Obj.SwimRunner = nil
			SwimRunner = nil
		end
	end

	-- This moves the humanoid while they're swimming
	local function MoveSwimmer(Direction)
		VerticalDirection = Direction
	end

	-- Sets the current body the rig is swimming in.
	-- This can only have one value for this object.
	local function SetCurrentBody(Body)
		Obj.CurrentBody = Body

		if Body ~= nil then
			if ForceEnabled == false then
				ForceEnabled = true
				if CanSwim() then
					ToggleForce(true)
					ToggleSwimRunner(true)
					ObjInput.IsSinkingInput = true
				else
					Obj.ToggleFloating(true)
				end
			end
		else
			if ForceEnabled == true then
				ForceEnabled = false

				ToggleSwimRunner(false)
				ToggleForce(false)
				Obj.ToggleFloating(false)
				ObjInput.IsSinkingInput = false

				-- Yielding in roblox sucks sometimes,
				-- so coroutines are needed.
				coroutine.wrap(function()
					-- Wait for air recovery
					local Elapsed = 0
					local RecoverDelay = Obj.BreatheInDelay
					if RecoverDelay ~= nil then
						while Obj.CurrentBody == nil and Elapsed < RecoverDelay do
							Elapsed += RunService.Heartbeat:Wait()
						end
					end
					Elapsed, RecoverDelay = nil, nil

					-- Breathe in
					if Obj.CurrentBody == nil then
						ToggleAirRecovery(true)
					end
				end)()
			end
		end
	end

	-- Makes the player swim in the liquid body,
	-- if IsSwimming is true, false for getting
	-- out of the body.
	-- The body parameter should be a BasePart.
	local function SwimInBody(Body, IsSwimming)
		local Humanoid = CharObjects.Humanoid

		if Humanoid ~= nil then
			local NextBody = nil
			if Body ~= nil then
				if IsSwimming == true then
					Obj.CurrentBody = Body

					-- Add to the table
					table.insert(ActiveLiquids, Body)
					--print("Swimming in:", Body.State)

					NextBody = Body
					Body = nil
				else
					-- Remove from the table
					local TablePos = table.find(ActiveLiquids, Body)
					if TablePos ~= nil then
						table.remove(ActiveLiquids, TablePos)
					end
					TablePos = nil

					-- Swim in the last body in the table.
					-- If there are none, it means the
					-- player isn't in any liquids.
					NextBody = ActiveLiquids[#ActiveLiquids]
				end
			end

			-- Swim in the next body.
			Obj.CurrentBody = NextBody
			SetCurrentBody(NextBody)

			-- Fire the callback
			--Object.FireCallback(Obj.RigEntryChanged, NextBody, IsSwimming)

			-- Play a sound to indicate liquid entry change.
			if CanPlaySounds == true then
				if Obj.SoundsEnabled == true then
					-- Check if the sounds can be played when dead.
					local SoundsWhenDead = Obj.SoundsEnabledWhileDead
					if SoundsWhenDead == true or (SoundsWhenDead == false and Humanoid ~= nil and Humanoid.Health > 0) then
						-- Play the corresponding sound.
						if NextBody == nil then
							if IsInLiquid == true then
								IsInLiquid = false
								coroutine.wrap(PlaySound)(Obj.SplashOutSound)
							end
						elseif IsInLiquid == false then
							IsInLiquid = true
							coroutine.wrap(PlaySound)(Obj.LiquidSounds[NextBody.State] or Obj.LiquidSounds["default"])
						end
					end
				end
			end
		end
	end

	--function Obj.ToggleEntryRunner(IsEnabled)
	--	if IsEnabled then
	--		if Obj.LiquidEntryRunner == nil then
	--			-- Liquid entry
	--			Obj.LiquidEntryRunner = RunService.Heartbeat:Connect(function()
	--				local CurrentLiquid = Swimmer.GetPriorityLiquid(ScannedLiquids, "IsHeadSubmerged")

	--				local SelectedCamLiquid = Swimmer.GetPriorityLiquid(ScannedLiquids, "IsCameraSubmerged")
	--				Obj.CurrentCamLiquid = SelectedCamLiquid

	--				local OldLiquid = Obj.CurrentLiquid
	--				if CurrentLiquid ~= OldLiquid then
	--					CurrentLiquid = Obj.CurrentLiquid

	--					SwimInBody(CurrentLiquid, CurrentLiquid ~= nil)
	--					--SetCurrentBody(CurrentLiquid)

	--					print("swim change")
	--				end

	--				-- update camera fx while we're at it
	--				if SelectedCamLiquid ~= Obj.CurrentCamLiquid then
	--					Obj.CurrentCamLiquid = SelectedCamLiquid

	--					-- if the camera is submerged in a liquid
	--					-- make it look like so
	--					if SelectedCamLiquid then
	--						if LightingFx == nil then
	--							LightingFx = Instance.new("ColorCorrectionEffect")
	--							LightingFx.Brightness = 0
	--							LightingFx.TintColor = SelectedCamLiquid.Color
	--							LightingFx.Parent = Camera
	--						else
	--							LightingFx.TintColor = SelectedCamLiquid.Color
	--						end
	--					elseif LightingFx then
	--						LightingFx:Destroy()
	--						LightingFx = nil
	--					end

	--					print("cam fx change")
	--				end
	--			end)
	--		end
	--	else
	--		local Runner = Obj.LiquidEntryRunner
	--		if Runner then
	--			Runner:Disconnect()
	--			Obj.LiquidEntryRunner = nil
	--		end
	--	end
	--end

	local function IsLiquidBody(Part)
		return Util.IsBasePart(Part) and string.match(Part.Name, Obj.BodyId)
	end

	-- Toggles if the specified liquid can be interacted with
	-- by this object.
	--local function ToggleLiquidRegistry(Body, IsRegistered)
	--	if Util.IsBasePart(Body) then

	--		if IsRegistered == true then
	--			-- Register if not already registered
	--			if Liquids[Body] == nil then
	--				local Adapter = LiquidAdapter.New(Body)		
	--				Liquids[Body] = Adapter
	--				Adapter.SetInteractingPart(Rig, true)
	--				--print("a")
	--				Adapter.EntryStatusChanged = function(Part, Entered)
	--					--print("b")
	--					if Util.IsInstance(Part) then
	--						--print("c")
	--						SwimInBody(Adapter, Entered)
	--					end
	--				end
	--			end
	--		else
	--			-- De-register
	--			local Adapter = Liquids[Body]
	--			if Adapter ~= nil then
	--				Adapter.Dispose()
	--			end

	--			Liquids[Body] = nil
	--			Adapter = nil
	--		end
	--	end
	--end

	--local function HandleLiquidBasePart(Descendant, IsAdded)
	--	-- Check for the identifier
	--	if Util.IsBasePart(Descendant) and string.match(Descendant.Name, Obj.BodyId) then
	--		-- Toggle registration
	--		ToggleLiquidRegistry(Descendant, IsAdded)
	--	end
	--end

	local function DestroyFloatTweens()
		for i, v in pairs(FloatTweens) do
			v:Pause()
			v:Destroy()
		end
		FloatTweens = {}
	end

	-- Makes the character float. For realism, this should
	-- be called if the player is in water.
	-- Paramters:
	-- IsFloating (boolean) - If the character will float.
	function Obj.ToggleFloating(IsFloating)
		local Char = CharObjects.Character

		if IsFloating == true then
			-- Toggle off any existing floating forces
			--Obj.ToggleFloating(false)

			if Char ~= nil and Obj.IsCharacterFloating == false then
				Obj.IsCharacterFloating = true

				-- Start floating
				local FloatVelocity = Obj.FloatVelocity
				if FloatVelocity ~= nil then
					--local Parts = Char:GetChildren()
					local Info = Obj.FloatTweenInfo or TweenInfo.new()
					local Properties = {Velocity = FloatVelocity}

					for i, v in pairs(Char:GetChildren()) do
						if v:IsA("BasePart") then
							local Force = Instance.new("BodyVelocity")
							Force.Velocity = v.AssemblyLinearVelocity
							Force.Parent = v

							-- Put after .Parent cause of :Destroy() locking it
							-- and throwing an error if it gets reparented
							table.insert(FloatingForces, Force)
							table.insert(FloatTweens, Util.Tween(Force, Info, Properties))
						end
					end

					Info, Properties = nil
				end
			end
		else
			-- Stop floating
			--WaitingForFloat = false

			-- Destroy float forces
			for i, v in pairs(FloatingForces) do
				if Util.IsInstance(v) == true then
					v:Destroy()
				end
			end
			DestroyFloatTweens()

			Obj.IsCharacterFloating = false
		end
	end

	-- Regenerates the player's air and stops when
	-- the air reaches the maximum or if a liquid
	-- is entered again.
	function Obj.Inhale()
		ToggleAirRecovery(true)
	end

	local function UpdateLiquid(Liquid: {}?)
		SetCurrentBody(Liquid)
		print("liquid update", Liquid)

		-- Play a sound to indicate liquid entry change.
		if CanPlaySounds == true then
			if Obj.SoundsEnabled == true then
				-- Check if the sounds can be played when dead.
				local SoundsWhenDead = Obj.SoundsEnabledWhileDead
				local Humanoid = ObjCharAdapter.Parts.Humanoid
				if SoundsWhenDead == true or (SoundsWhenDead == false and Humanoid ~= nil and Humanoid.Health > 0) then
					-- Play the corresponding sound.
					if Liquid == nil then
						if IsInLiquid == true then
							IsInLiquid = false
							coroutine.wrap(PlaySound)(Obj.SplashOutSound)
						end
					elseif IsInLiquid == false then
						IsInLiquid = true
						coroutine.wrap(PlaySound)(Obj.LiquidSounds[Liquid.State] or Obj.LiquidSounds["default"])
					end
				end
			end
		end
	end
	
	--[[
	Removes
	]]--
	
	--[[
	Removes a liquid from being interactable with the player
	
	Params:
	<Liquid> - The liquid to remove
	]]--
	function Obj.Remove(Liquid: {})
		local Connections = LiquidConnections[Liquid]
		if Connections then
			LiquidConnections[Liquid] = nil
			
			for i, v in pairs(Connections) do
				v.Disconnect()
			end
		end
	end
	
	--[[
	Adds a liquid so that it can interact with the player
	
	Params:
	<Liquid> - The liquid to add
	]]--
	function Obj.Add(Liquid: {})
		if LiquidConnections[Liquid] == nil then
			local Connections = {}
			table.insert(Connections, Liquid.HeadEntryChanged.Connect(function(IsEntered)
				if IsEntered then
					local CurrentLiquid = Obj.CurrentLiquid

					-- Make sure the liquid is of priority first
					if CurrentLiquid == nil or Liquid.GetPriority() > CurrentLiquid.GetPriority() then
						-- If so, swim in it
						Obj.CurrentLiquid = Liquid
						UpdateLiquid(Liquid)
						--SwimInBody(Liquid, true)
					end
				elseif Liquid == Obj.CurrentLiquid then
					Obj.CurrentLiquid = nil
					UpdateLiquid(nil)
					--SwimInBody(Liquid, false)
				end
			end))
			table.insert(Connections, Liquid.CameraEntryChanged.Connect(function(IsEntered)
				-- if the camera is submerged in a liquid
				-- make it look like so
				if IsEntered then
					Obj.CurrentCamLiquid = Liquid
					if LightingFx == nil then
						LightingFx = Instance.new("ColorCorrectionEffect")
						LightingFx.Brightness = 0
						LightingFx.TintColor = Liquid.GetColor()
						LightingFx.Parent = Camera
					else
						LightingFx.TintColor = Liquid.GetColor()
					end
				elseif LightingFx and Obj.CurrentCamLiquid == Liquid then
					LightingFx:Destroy()
					LightingFx = nil
				end
			end))
			
			LiquidConnections = Connections
		end
	end

	-- Sets if the object will look for bodies in the workspace.
	--function Obj.SetWorkspaceUse(IsUsing)
	--	if IsUsing == true then
	--		Obj.WorkspaceDescendantAdded = workspace.DescendantAdded:Connect(function(desc)
	--			HandleLiquidBasePart(desc, true)
	--		end)

	--		Obj.WorkspaceDescendantRemoved = workspace.DescendantRemoving:Connect(function(desc)
	--			HandleLiquidBasePart(desc, false)
	--		end)

	--		for i, v in pairs(workspace:GetDescendants()) do
	--			HandleLiquidBasePart(v, true)
	--		end
	--	else
	--		local DescAdd = Obj.WorkspaceDescendantAdded
	--		local DescRemove = Obj.WorkspaceDescendantRemoved

	--		if DescAdd ~= nil then
	--			DescAdd:Disconnect()
	--		end

	--		if DescRemove ~= nil then
	--			DescRemove:Disconnect()
	--		end

	--		DescAdd, DescRemove = nil, nil
	--	end
	--end

	-- How much air the player has.
	Obj.SetProperty("Air", 100, HandleAirSupply)

	-- Fires when a rig enters or exits a liquid.
	-- Parameters:
	-- IsEntering - True if the rig entered the liquid, false if otherwise.
	-- Liquid - The adapter entered.
	Obj.RigEntryChanged = nil

	-- Fires when the amount of air changes.
	-- Parameters:
	-- Air: number - Amount of oxygen left.
	Obj.AirChanged = nil

	-- How much air the player has.
	Obj.SetProperty("Air", Obj.MaxAir, HandleAirSupply)

	-- The name of the rig that interacts with the liquids.
	--Obj.SetProperty("InteractingRig", "Head", RefreshCharValues)

	-- Connect internal events.
	Obj.OnDisposal = function()
		-- Destroy/forget stuff.
		--Obj.SetWorkspaceUse(false)
		Obj.ToggleFloating(false)
		ToggleForce(false)
		Forces = nil

		-- Dispose all adapters
		--for i, v in pairs(Liquids) do
		--	ToggleLiquidRegistry(i, false)
		--end

		-- Stop listening to input.
		ObjInput.Dispose()

		-- De-register all liquid bodies.
		--for i, v in pairs(Liquids) do
		--	ToggleLiquidRegistry(i, false)
		--end
	end

	ObjCharAdapter.Loaded = function(Parts)
		Obj.Air = Obj.MaxAir
		CharObjects = Parts
		--RefreshCharValues()
	end

	-- Swimming input handler
	ObjInput.DirectionChanged = function(Direction)
		MoveSwimmer(Direction)
		--print("Direction changed:", Direction)
	end

	-- Float if the player drowned.
	ObjCharAdapter.OnDeath = function()
		ObjInput.IsSinkingInput = false
		MoveSwimmer(nil)
		if Obj.CurrentBody ~= nil then
			Obj.ToggleFloating(true)
		end
	end

	--RefreshCharValues()
	ObjInput.ToggleSwimmingInput(true)

	return Obj
end

return Swimmer]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">6b114989da6c0ed6029e0bd9000b97f8</UniqueId>
							</Properties>
							<Item class="ModuleScript" referent="RBXBA77F1C372FD45C3934B7CB03596AA6F">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">SwimmerInput</string>
									<string name="ScriptGuid">{796A8B43-F265-4951-91AB-10E52C27E6A3}</string>
									<ProtectedString name="Source"><![CDATA[-- A utility module that provides an object
-- for detecting swimmer client input.

-- THIS VERSION IS DEPRECATED, USE THE ONE IN REPLICATEDSTORAGE INSTEAD

-- By udev2192

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ContextAction = game:GetService("ContextActionService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui", 25)
assert(typeof(PlayerGui) == "Instance", "The PlayerGui couldn't be found.")

local InputChangeConnection = nil
local Platform = nil -- The type of device the player is on.
local SwimmerInput = {}
local InputChangeFuncs = {}

local InputLockVals = {
	[true] = Enum.ContextActionResult.Sink,
	[false] = Enum.ContextActionResult.Pass
}

local FULL_RADIUS = UDim.new(1, 0)

local INPUT_IDS = {
	[Enum.UserInputType.Touch] = "Mobile",
	[Enum.UserInputType.Keyboard] = "PC",
	[Enum.UserInputType.Accelerometer] = "VR"
}

-- Returns the type of device the player is on
function SwimmerInput.GetPlatform(LastInput)
	LastInput = LastInput or UserInputService:GetLastInputType()

	if table.find(UserInputService:GetConnectedGamepads(), LastInput) then -- True if one of the gamepad slots are connected.
		return "Console"
	else
		return INPUT_IDS[LastInput] or "PC" -- Use the PC platform as a last result
	end
end

function SwimmerInput.ToggleInputChangeEvent(Enabled)
	if Enabled == true then
		InputChangeConnection = UserInputService.LastInputTypeChanged:Connect(function(Last)
			Platform = SwimmerInput.GetPlatform(Last)

			-- Fire any input change callbacks
			for i, v in pairs(InputChangeFuncs) do
				if typeof(v) == "function" then
					v()
				end
			end
		end)
	else
		if InputChangeConnection ~= nil then
			InputChangeConnection:Disconnect()
			InputChangeConnection = nil
		end
	end
end

local function AddARC(Gui, Ratio)
	assert(typeof(Gui) == "Instance", "Argument 1 must be an instance.")

	local Arc = Util.CreateInstance("UIAspectRatioConstraint", {
		DominantAxis = Enum.DominantAxis.Height,
		AspectRatio = Ratio or 1,
		Parent = Gui
	})

	return Arc
end

local function MakeCircular(Gui)
	assert(typeof(Gui) == "Instance", "Argument 1 must be an instance.")
	
	local Corner = Util.CreateInstance("UICorner", {
		CornerRadius = FULL_RADIUS,
		Parent = Gui
	})

	return Corner
end

-- For grabbing the mobile jump button located on a mobile screen
local function GetMobileJumpButton()
	-- Check to see if the player is on mobile (cause that should be the only time the jump button appears)
	if Platform == "Mobile" then
		local function WarnButtonMissing(Location)
			warn("The mobile jump button could not be found. The location of the jump button might have changed. The jump button failed to locate at: " .. tostring(Location))
		end

		-- Find the jump button and return it if found
		if PlayerGui then
			local JumpButton = PlayerGui:WaitForChild("TouchGui", 5)
			if JumpButton then
				JumpButton = JumpButton:WaitForChild("TouchControlFrame", 5)
				if JumpButton then
					JumpButton = JumpButton:WaitForChild("JumpButton", 5)
					if JumpButton and JumpButton:IsA("GuiButton") then
						if JumpButton:IsA("GuiButton") then
							return JumpButton
						else
							WarnButtonMissing(JumpButton:GetFullName() .. " (meaning the supposed object was found but however, it isn't a GuiButton).")
						end
					else
						WarnButtonMissing(JumpButton:GetFullName())
					end
				else
					WarnButtonMissing(JumpButton:GetFullName())
				end
			else
				WarnButtonMissing(JumpButton:GetFullName())
			end

			JumpButton = nil
		else
			WarnButtonMissing(PlayerGui:GetFullName())
		end

		-- Return nil if anything in the jump button path is missing
		WarnButtonMissing = nil
		return nil
	else
		return nil
	end
end

-- Initalize input.
Platform = SwimmerInput.GetPlatform()
SwimmerInput.ToggleInputChangeEvent(true)

-- Object constructor.
function SwimmerInput.New()
	local SwimInputEnabled = false

	local Connections = {}
	local GuiObjects = {}

	local Obj = Object.New("SwimmerInputHandler")
	Obj.Keybinds = {
		PC = {
			SwimUp = Enum.KeyCode.Space,
			SwimDown = Enum.KeyCode.LeftShift
		},

		Console = {
			SwimUp = Enum.KeyCode.ButtonA,
			SwimDown = Enum.KeyCode.ButtonB
		}
	}

	-- The mobile dive button.
	Obj.DiveButton = nil

	Obj.DiveButtonFont = Enum.Font.GothamBold
	Obj.DiveButtonText = "Dive"

	-- Keybinding priority for this object's input listener.
	Obj.KeybindPriority = 10000

	-- Sets if the ContextAction listener locks the input of the swim keybinds
	-- to itself.
	Obj.IsSinkingInput = false

	-- The most recent swimming direction.
	Obj.SwimDirection = nil

	local function DestroyInstances()
		for i, v in pairs(Connections) do
			if typeof(v) == "RBXScriptConnection" then
				v:Disconnect()
			end
		end

		for i, v in pairs(GuiObjects) do
			if typeof(v) == "Instance" then
				v:Destroy()
			end
		end
	end

	-- Returns true if the key specified is a swimming keybind
	local function IsSwimKey(Key)
		local Keys = Obj.Keybinds[Platform]
		if typeof(Keys) == "table" then
			for i2, v2 in pairs(Keys) do
				if Key == v2 then
					return true
				end
			end
		end
	end

	-- Internally handles swim input
	local function ChangeSwimDirection(Dir)
		Obj.SwimDirection = Dir
		Object.FireCallback(Obj.DirectionChanged, Dir)
	end
	
	-- Returns the vertical direction (up or down) as a string corresponding to the keys being pressed.
	local function GetCurrentSwimKey()
		for i, Platform in pairs(Obj.Keybinds) do
			if Platform ~= nil then
				local SwimUpKey = Platform.SwimUp
				local SwimDownKey = Platform.SwimDown

				if SwimUpKey ~= nil and SwimDownKey ~= nil then
					if UserInputService:IsKeyDown(SwimUpKey) then
						return "up"
					elseif UserInputService:IsKeyDown(SwimDownKey) then
						return "down"
					end
				end
			end
		end

		return nil -- Return nil if there is no swimming key (for a vertical direction) being held down
	end
	
	-- Internally handles swimming key presses
	local function HandleSwimKeybinds(InputName, InputState, InputObject) -- Used by ContextAction:BindActionAtPriority() inside Client.ToggleSwimming()
		-- Returning Enum.ContextActionResult.Sink prevents any other input receivers from getting that input
		local KeyCode = InputObject.KeyCode
		if IsSwimKey(KeyCode) then
			
			-- Determine whether to let input pass.
			local Result = InputLockVals[Obj.IsSinkingInput]
			
			-- Handle input.
			if InputState == Enum.UserInputState.Begin then
				-- Determine the direction to swim in based on the key press based on the input name
				if InputName == "SwimUpKeybinds" then
					ChangeSwimDirection("up")
				elseif InputName == "SwimDownKeybinds" then
					ChangeSwimDirection("down")
				else
					return Enum.ContextActionResult.Pass
				end
			elseif InputState == Enum.UserInputState.End then
				--if IsSwimKey(KeyCode) then -- Determine if it's a swimming keybind that was let go of
				--	-- Before setting the SwimDirection to nil, make sure the player is not trying to swim in another vertical direction (by checking if a key for the reverse direction is not being held)
				--	local SwimKey = GetCurrentSwimKey()
				--	if SwimKey == nil then
				--		ChangeSwimDirection(nil)
				--	else
				--		SwimKey = string.lower(tostring(SwimKey))
				--		if SwimKey == "up" then
				--			ChangeSwimDirection("up")
				--		elseif SwimKey == "down" then
				--			ChangeSwimDirection("down")
				--		end
				--	end
				--	SwimKey = nil
				--end
				
				return Enum.ContextActionResult.Pass
			else
				return Enum.ContextActionResult.Pass
			end
			
			return Result
		else
			return Enum.ContextActionResult.Pass
		end
	end
	
	-- For binding/connecting input for the user to swim up or down
	function Obj.ToggleSwimmingInput(Enabled)
		if Enabled == true then
			if SwimInputEnabled == true then
				-- Disconnect previous input event connections if found
				Obj.ToggleSwimmingInput(false)
			end

			SwimInputEnabled = true

			-- Handle input
			if Platform == "Mobile" then
				local function WarnButtonMissing()
					warn("The mobile jump button could not be found so you won't be able to swim up or down.")
				end

				-- Find the jump button
				if PlayerGui then
					local JumpButton = GetMobileJumpButton()
					if JumpButton and typeof(JumpButton) == "Instance" and JumpButton:IsA("GuiButton") then
						-- Connect swimming up to the jump button
						Connections["MobileSwimUp"] = JumpButton.MouseButton1Down:Connect(function(IsJumping)
							ChangeSwimDirection("up")
						end)

						Connections["MobileStopSwimmingUp"] = JumpButton.MouseButton1Up:Connect(function(IsJumping)
							if Obj.SwimDirection == "up" then
								ChangeSwimDirection(nil)
							end
						end)

						-- Connect swimming down to the dive button created here
						local Button = Util.CreateInstance("TextButton", {
							Size = JumpButton.Size,
							Position = JumpButton.Position - UDim2.new(0,0,JumpButton.Size.Y.Scale + 0.05,JumpButton.Size.Y.Offset), -- Make the dive button on top of the jump button
							Font = Obj.DiveButtonFont or Enum.Font.SourceSansBold,
							TextScaled = true,
							TextColor3 = Color3.new(1,1,1),
							TextTransparency = 0.75,
							Text = Obj.DiveButtonText or "",
							BackgroundColor3 = Color3.new(0,0,0),
							BorderSizePixel = 0,
							BackgroundTransparency = 0.5
						})

						AddARC(Button, 1)
						MakeCircular(Button)

						-- Connect the diving event and load the button
						GuiObjects.DiveButton = Button
						if GuiObjects.DiveButton ~= nil then -- Just in case
							Connections["MobileSwimDown"] = Button.MouseButton1Down:Connect(function() -- To swim down
								ChangeSwimDirection("down")
							end)
							Connections["MobileStopSwimmingDown"] = Button.MouseButton1Up:Connect(function() -- To stop swimming down
								if Obj.SwimDirection == "down" then
									ChangeSwimDirection(nil)
								end
							end)
							Button.Parent = JumpButton.Parent
						end

						Button = nil
					end

					JumpButton = nil
				end

				WarnButtonMissing = nil
			else

				-- Provide a connection (for those not on mobile) to stop swimming in a vertical direction.
				-- This is used to fix a jumping bug.
				Connections["StopSwimmingVertically"] = UserInputService.InputEnded:Connect(function(Input)
					local KeyCode = Input.KeyCode
					
					if Input.UserInputState == Enum.UserInputState.End and IsSwimKey(KeyCode) then -- Determine if it's a swimming keybind that was let go of
						-- Before setting the SwimDirection to nil, make sure the player is not trying to swim in another vertical direction (by checking if a key for the reverse direction is not being held)
						local SwimKey = GetCurrentSwimKey()
						if SwimKey == nil then
							ChangeSwimDirection(nil)
						else
							SwimKey = string.lower(tostring(SwimKey))
							if SwimKey == "up" then
								ChangeSwimDirection("up")
							elseif SwimKey == "down" then
								ChangeSwimDirection("down")
							end
						end
						SwimKey = nil
					end
					
					KeyCode = nil
				end)

				-- Bind input for swimming vertically
				local Keybinds = Obj.Keybinds
				if Keybinds ~= nil then
					ContextAction:BindActionAtPriority("SwimDownKeybinds", HandleSwimKeybinds, false, Obj.KeybindPriority, Keybinds.PC.SwimDown, Keybinds.Console.SwimDown)
					ContextAction:BindActionAtPriority("SwimUpKeybinds", HandleSwimKeybinds, false, Obj.KeybindPriority, Keybinds.PC.SwimUp, Keybinds.Console.SwimUp)
				end
				Keybinds = nil
			end
		else
			SwimInputEnabled = false

			-- Disconnect and destroy ways of input used for swimming (if the player is no longer in any water)
			DestroyInstances()

			ContextAction:UnbindAction("SwimDownKeybind")
			ContextAction:UnbindAction("SwimUpKeybind")
		end
	end

	-- Disconnect and destroy everything on disposal.
	Obj.OnDisposal = function()
		InputChangeFuncs[Obj] = nil
		Obj.ToggleSwimmingInput(false)

		DestroyInstances()

		Connections = nil
		GuiObjects = nil
	end

	-- Invoked when a swimming input direction is received.
	-- Parameters:
	-- Direction - Either: "up", "down", or nil
	Obj.DirectionChanged = nil

	InputChangeFuncs[Obj] = function()
		Obj.ToggleSwimmingInput(SwimInputEnabled)
	end

	return Obj
end

return SwimmerInput]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">6b114989da6c0ed6029e0bd9000b97f9</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX9205F2B54B854E28BCE2991B68D1CDCA">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">LiquidEntry</string>
									<string name="ScriptGuid">{88FED656-762F-4B09-B28A-A242D3DC2936}</string>
									<ProtectedString name="Source"><![CDATA[-- Provides an object that handles liquid entry (as a group).
-- By udev2192

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local LiquidAdapter = require(script.Parent:WaitForChild("LiquidAdapter"))

local LiquidEntry = {}
local CFRAME_PROPERTY_NAME = "CFrame"

-- Checks if the specified object has the CFrame property.
local function HasCFrame(Obj)
	return Util.IsInstance(Obj) and Util.IsProperty(Obj, CFRAME_PROPERTY_NAME)
end

function LiquidEntry.New()
	local Obj = Object.New("LiquidEntryHandler")
	local Interacting = {} -- Table of interacting parts
	local ActiveBodies = {}
	local CurrentBodies = {}
	local Registered = {} -- Registered liquid adapters
	
	-- Handles body entry internally.
	local function HandleEntry(Part, Body, Entered)
		-- Check if the interacting part is registered
		if typeof(ActiveBodies[Part]) == "table" then
			-- Fire the signal for the most recent body that was entered/exited
			if Entered == true then
				table.insert(ActiveBodies[Part], Body)
			else
				local Index = table.find(ActiveBodies[Part], Body)
				if Index ~= nil then
					table.remove(ActiveBodies[Part], Index)
				end
			end
		end
	end
	
	-- Retoggles for all registered bodies
	local function TogglePartInteraction(Part, IsInteracting)
		for i, v in pairs(Registered) do
			v.SetInteractingPart(Part, IsInteracting)
		end
	end
	
	function Obj.AddInteractingPart(Part)
		assert(HasCFrame(Part), "The object in Argument 1 must have the CFrame property.")
		
		table.insert(Interacting, Part)
		ActiveBodies[Part] = {}
		
		TogglePartInteraction(Part, true)
	end
	
	function Obj.RemoveInteractingPart(Part)
		TogglePartInteraction(Part, false)
		
		local Index = table.find(Interacting, Part)
		
		if Index ~= nil then
			table.remove(Interacting, Index)
		end
		
		ActiveBodies[Part] = nil
		Index = nil
	end
	
	function Obj.DisconnectAllInteractions()
		for i, v in pairs(Interacting) do
			Obj.RemoveInteractingPart(v)
		end
	end
	
	-- Registers/deregisters a liquid BasePart.
	function Obj.ToggleLiquidRegistry(Body, IsRegistered)
		if IsRegistered == true then
			-- Register if not already registered
			if Registered[Body] == nil then
				local Adapter = LiquidAdapter.New(Body)		
				Registered[Body] = Adapter
				for i, v in pairs(Interacting) do
					Adapter.SetInteractingPart(v)
				end
				--print("a")
				Adapter.EntryStatusChanged = function(Part, Entered)
					--print("b")
					if Util.IsInstance(Part) then
						--print("c")
						HandleEntry(Part, Adapter, Entered)
					end
				end
			end
		else
			-- De-register
			local Adapter = Registered[Body]
			if Adapter ~= nil then
				Adapter.Dispose()
			end

			Registered[Body] = nil
			Adapter = nil
		end
	end
	
	function Obj.RemoveAllLiquids()
		for i, v in pairs(Registered) do
			Obj.ToggleLiquidRegistry(i, false)
		end
	end
	
	Obj.BodyEntryChanged = Signal.New()
	
	Obj.OnDisposal = function()
		Obj.DisconnectAllInteractions()
		Obj.RemoveAllLiquids()
	end
end

return LiquidEntry]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">6b114989da6c0ed6029e0bd9000b97f7</UniqueId>
								</Properties>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBX16AA4B95B217435EB6B3D37A802C502C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Dash</string>
								<string name="ScriptGuid">{919AC0AA-2479-4D5F-95BA-BD80AF2F7F35}</string>
								<ProtectedString name="Source"><![CDATA[--[[
MADELINE CELESTE MADELINE CELESTE MADELINE CELESTE MADELINE CELESTE MADELINE CELESTE MADELINE CELESTE MADELINE CELESTE

make dash zones later because being able to dash at all times is
a bit broken in a jtoh fangame
]]--

local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

--local Object = require(script.Parent.Parent:WaitForChild("BaseInteractive")).GetObjectClass()

local Dash = {}

function Dash.New(Player: Player)
	local ObjDash = {}
	
	local JumpConnection: RBXScriptConnection
	local RespawnConnection: RBXScriptConnection
	local StateChangeConnection: RBXScriptConnection
	local RootPart: BasePart
	local Humanoid: Humanoid
	
	local IsFreefalling = false
	
	ObjDash.TotalDashes = 0
	ObjDash.DashesLeft = 0
	ObjDash.DashCooldown = 0.2
	ObjDash.FreefallCheckDelay = 0.2
	ObjDash.IsRecharging = false
	ObjDash.DashSpeed = game:GetService("StarterPlayer").CharacterWalkSpeed * 2
	ObjDash.DashJumpPower = game:GetService("StarterPlayer").CharacterJumpPower * 1.5
	ObjDash.DashSound = script:WaitForChild("DashActivate")
	
	local function DisconnectStateChange()
		if StateChangeConnection then
			StateChangeConnection:Disconnect()
			StateChangeConnection = nil
		end
	end
	
	local function OnRespawn(Character: Model)
		if Character then
			ObjDash.DashesLeft = 0
			DisconnectStateChange()
			
			RootPart = Character:WaitForChild("HumanoidRootPart")
			Humanoid = Character:WaitForChild("Humanoid")
			
			ObjDash.DashesLeft = ObjDash.TotalDashes
			
			if StateChangeConnection == nil then
				StateChangeConnection = Humanoid.StateChanged:Connect(function(OldState, NewState)
					if NewState == Enum.HumanoidStateType.Landed then
						IsFreefalling = false
						ObjDash.DashesLeft = ObjDash.TotalDashes
					elseif NewState == Enum.HumanoidStateType.Freefall then
						task.wait(ObjDash.FreefallCheckDelay)
						IsFreefalling = true
					end
				end)
			end
		end
	end
	
	function ObjDash.CanDash()
		return ObjDash.DashesLeft > 0 and Humanoid and Humanoid.Health > 0 and IsFreefalling
	end
	
	function ObjDash.RechargeDashes()
		if ObjDash.IsRecharging == false then
			ObjDash.IsRecharging = true
			
			local CooldownElapsed = 0

			while true do
				if CooldownElapsed >= ObjDash.DashCooldown then
					CooldownElapsed = 0
					ObjDash.DashesLeft += 1
				end

				if ObjDash.IsRecharging == false or ObjDash.DashesLeft >= ObjDash.TotalDashes then
					break
				end

				CooldownElapsed += task.wait()
			end
		end
	end
	
	function ObjDash.Disable()
		if RespawnConnection then
			RespawnConnection:Disconnect()
			RespawnConnection = nil
		end
		
		if JumpConnection then
			JumpConnection:Disconnect()
			JumpConnection = nil
		end
		
		DisconnectStateChange()
	end
	
	function ObjDash.Enable()
		OnRespawn(Player.Character)
		
		if RespawnConnection == nil then
			RespawnConnection = Player.CharacterAdded:Connect(OnRespawn)
		end
		
		if JumpConnection == nil then
			local IsDashing = false
			
			JumpConnection = UserInputService.JumpRequest:Connect(function()
				if IsDashing == false and RootPart and ObjDash.CanDash() then
					IsDashing = true
					
					ObjDash.DashesLeft -= 1
					
					-- wait until just before the physics update
					-- for a more consistent boost
					RunService.Stepped:Wait()
					
					local Sound = ObjDash.DashSound
					if Sound then
						Sound:Play()
					end
					
					-- dash
					local MoveDir = Humanoid.MoveDirection
					local Speed = ObjDash.DashSpeed
					Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
					RootPart.AssemblyLinearVelocity = Vector3.new(MoveDir.X * Speed, ObjDash.DashJumpPower, MoveDir.Z * Speed)
					
					-- recharge
					task.spawn(ObjDash.RechargeDashes)
					
					IsDashing = false
				end
			end)
		end
	end
	
	return ObjDash
end

return Dash]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">05f7fe6b1e1da49102a42f22000bb543</UniqueId>
							</Properties>
							<Item class="Sound" referent="RBXE07DCA19090D473D918FC02B1986DD97">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">DashActivate</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://6128977275</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<UniqueId name="UniqueId">1e00a50685a2bc1002a44f3c000bbe8b</UniqueId>
									<float name="Volume">1</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX61C6A2FC479D4251ADA81E0F0517B10A">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">MapLauncher</string>
						<string name="ScriptGuid">{FD1FCE02-D18C-447E-AC04-64CCB12A4EB7}</string>
						<ProtectedString name="Source"><![CDATA[--[[
A base class for running maps and letting them use custom code easily
This also allows for maps to have custom anticheat

By udev2192
]]--

local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local BaseInteractive = require(script.Parent:WaitForChild("Interactives"):WaitForChild("BaseInteractive"))
local Object = BaseInteractive.GetObjectClass()
local Signal = BaseInteractive.GetSignalClass()
local Utils = BaseInteractive.GetGeneralUtils()
local TimeWaiter = require(BaseInteractive.GetUtilPackage():WaitForChild("TimeWaiter"))

local MapLauncher = {}
MapLauncher.__index = MapLauncher

MapLauncher.InteractiveValueId = "Interactive"
MapLauncher.MapsFolderName = "MapContainer"
MapLauncher.SpeedrunDecimalPrecision = 3

MapLauncher.Resources = {
	WinSound = script:WaitForChild("WinSound")
}

--[[
Returns:
<BaseInteractive> - The BaseInteractive class, which is used for implementing
					map mechanics and other things
]]--
function MapLauncher.GetBaseInteractive()
	return BaseInteractive
end

--[[
Creates a difficulty info table

Params:
Index <number> - The index of the difficulty to use as an identifier
Name <string?> - The name of the difficulty
Color <Color3?> - The difficulty's color

Returns:
<table> - The created difficulty info table
]]--
function MapLauncher.CreateDifficulty(Index: number, Name: string?, Color: Color3?)
	assert(typeof(Index) == "number", "Argument 1 must be a number")
	assert(Name == nil or typeof(Name) == "string", "Argument 2 must be a string or nil")
	assert(Color == nil or typeof(Color) == "Color3", "Argument 3 must be a Color3")

	return {
		Index = Index,
		Name = Name or "n/a",
		Color = Color or Color3.fromRGB(128, 128, 128)
	}
end


--[[
Creates a win request table

Params:
Time <number> - The time in milliseconds that the completion took

Returns:
<table> - The created win request table
]]--
function MapLauncher.CreateWinParams(Time: number)
	assert(typeof(Time) == "number", "Argument 1 must be a number")

	return {
		Time = Time
	}
end

--[[
Returns:
<Folder> - The workspace folder used to hold maps
]]--
function MapLauncher.GetMapContainer(): Folder
	local Name = MapLauncher.MapsFolderName
	local Folder = workspace:FindFirstChild(Name)

	if Folder == nil then
		Folder = Instance.new("Folder")
		Folder.Name = Name
		Folder.Parent = workspace
	end

	return Folder
end

function MapLauncher.SpawnLocalPlayerAt(MapSpawn: BasePart)
	BaseInteractive.AssertClient()

	local LocalPlayer = game:GetService("Players").LocalPlayer

	if LocalPlayer then
		local Char = LocalPlayer.Character

		if Char then
			local PrimaryPart = Char.PrimaryPart

			if PrimaryPart then
				if MapSpawn then
					local SpawnCFrame = MapSpawn.CFrame

					PrimaryPart.CFrame = SpawnCFrame + Vector3.new(
						0,
						(BaseInteractive.DefaultCharacterSize.Y / 2) + (MapSpawn.Size.Y / 2),
						0
					)
				end
			end
		end
	end
end

--[[
<table> - Default set of information for maps to use
]]--
MapLauncher.DefaultInfo = {
	-- Credit to Juke's Towers of Hell for the assortment of difficulty rankings
	Difficulties = {
		-- tower game difficulties, as of February 2022
		MapLauncher.CreateDifficulty(1, "Easy", Color3.fromRGB(118, 244, 71)),
		MapLauncher.CreateDifficulty(2, "Medium", Color3.fromRGB(255, 255, 2)),
		MapLauncher.CreateDifficulty(3, "Hard", Color3.fromRGB(254, 124, 0)),
		MapLauncher.CreateDifficulty(4, "Difficult", Color3.fromRGB(255, 12, 4)),
		MapLauncher.CreateDifficulty(5, "Challenging", Color3.fromRGB(193, 0, 0)),
		MapLauncher.CreateDifficulty(6, "Intense", Color3.fromRGB(25, 40, 50)),
		MapLauncher.CreateDifficulty(7, "Remorseless", Color3.fromRGB(201, 1, 201)),
		MapLauncher.CreateDifficulty(8, "Insane", Color3.fromRGB(0, 58, 220)),
		MapLauncher.CreateDifficulty(9, "Extreme", Color3.fromRGB(3, 137, 255)),
		MapLauncher.CreateDifficulty(10, "Terrifying", Color3.fromRGB(1, 255, 255)),
		MapLauncher.CreateDifficulty(11, "Catastrophic", Color3.fromRGB(255, 255, 255)),

		-- rng difficulties (according to the obby community)
		MapLauncher.CreateDifficulty(12, "Horrific", Color3.fromRGB(236, 178, 250)),
		MapLauncher.CreateDifficulty(13, "Unreal", Color3.fromRGB(83, 24, 139)),
		MapLauncher.CreateDifficulty(14, "nil", Color3.fromRGB(101, 102, 109)),
	},

	FallbackDifficulty = MapLauncher.CreateDifficulty(0)
}

--[[
<number> - The time difference in milliseconds that win validation checks
		   can allow between the win time stored on the server
		   and the win time sent by a client
		   
		   This should be slightly above the ping that Roblox counts as
		   a disconnect
]]--
MapLauncher.WinPingAllowance = 11 * 1000

function MapLauncher.ApplyLightingUsing(LightingTable: {}, TweeningInfo: TweenInfo?)
	local Properties = LightingTable.Properties

	if Properties then
		Utils.Tween(
			game:GetService("Lighting"),
			TweeningInfo or TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
			Properties
		)
	end
end

--[[
Constructor function for map launchers

Params:
Model <Instance> - The model of the map
Loader <MapLoader> - The loader being used to run the launcher
]]--
function MapLauncher.New(Model: Instance, Loader: {})
	local Map = Object.New()
	--local Info = require(Model:WaitForChild("Info"))

	-- UserIds in the map
	local UsersInMap = {}

	-- Custom interactive definitions
	local CustomInteractives = {}

	-- Currently loaded interactives
	local LoadedInteractives: {BaseInteractive.InteractiveObject} = {}
	
	local CurrentWinpad: BasePart
	local WinpadTouchConnection: RBXScriptConnection
	local WinpadOriginalColor: Color3
	local WinpadOriginalMaterial: Enum.Material

	Map.Name = ""
	Map.Difficulty = MapLauncher.DefaultInfo.FallbackDifficulty
	Map.Creators = ""
	Map.Description = ""
	Map.ThumbnailId = "https://www.roblox.com/asset/?id=9618869998"

	--[[
	<number> - The minimum win time in seconds
	]]--
	Map.MinTime = 0
	
	--[[
	<MapLoader> - A reference to the map loader being used to launch the map
	]]--
	--Map.Loader = nil
	
	--[[
	Returns:
	<Loader> - Corresponding map loader for the script context (client or server)
	]]--
	function Map.GetLoader()
		return Loader
	end

	--[[
	Returns:
	<string> - The text intended to be displayed when the player is dropped into the map
	]]--
	function Map.GetIntroText()
		local Name = Map.Name
		local Diff = Map.Difficulty
		local Creators = Map.Creators

		local Text = ""

		if Name then
			Text = Name
		end

		if Diff then
			Text ..= " [" .. Diff.Name .. "]"
		end

		if Creators then
			Text ..= " by " .. Creators
		end

		return Text
	end
	
	--[[
	Displays default intro text at the top of the screen
	]]--
	function Map.DisplayIntroText()
		BaseInteractive.DisplayIntroText(Map.GetIntroText(), Map.Difficulty.Color)
	end
	
	--[[
	Applies the map's default lighting
	]]--
	function Map.ApplyLighting(TweeningInfo: TweenInfo?)
		local Default = Model:WaitForChild("DefaultLighting")
		
		if Default then
			--local DefaultTable = require(Default)
			--local Properties = DefaultTable.Properties
			
			--if Properties then
			--	Utils.Tween(
			--		game:GetService("Lighting"),
			--		TweeningInfo or TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
			--		Properties
			--	)
			--end
			
			MapLauncher.ApplyLightingUsing(require(Default), TweeningInfo)
		end
	end
	
	--[[
	Unlinks the winpad from the map
	]]--
	function Map.UnlinkWinpad()
		if WinpadTouchConnection then
			WinpadTouchConnection:Disconnect()
			WinpadTouchConnection = nil
		end
		
		if CurrentWinpad then
			if WinpadOriginalColor then
				CurrentWinpad.Color = WinpadOriginalColor
				WinpadOriginalColor = nil
			end
			
			if WinpadOriginalMaterial then
				CurrentWinpad.Material = WinpadOriginalMaterial
				WinpadOriginalMaterial = nil
			end
			
			CurrentWinpad = nil
		end
	end
	
	--[[
	Links a winpad to the map (winpad refers to the platform you touch to beat a tower)
	]]--
	function Map.LinkWinpad()
		local Winpad: BasePart = Model:FindFirstChild("WinPad")
		
		if Winpad then
			if WinpadTouchConnection == nil then
				CurrentWinpad = Winpad
				
				WinpadTouchConnection = Winpad.Touched:Connect(function(OtherPart)
					if OtherPart == BaseInteractive.GetCharacterHandle().Parts.Hitbox then
						if WinpadTouchConnection then
							WinpadTouchConnection:Disconnect()
							WinpadTouchConnection = nil
						end
						
						Map.UnlinkWinpad()

						local MapTimer = Loader.MapTimer
						MapTimer.Pause()
						Loader.EndMap(true, MapLauncher.CreateWinParams(MapTimer.ElapsedTime * 1000))
						
						--local MusicPlayer = Loader.MusicPlayer
						--MusicPlayer.MainSound = MapLauncher.Resources.WinSound
						--MusicPlayer.PlayMusicZones = false
						
						--local WinpadMask = Winpad:Clone()
						--WinpadMask.Size += Vector3.new(0.1, 0.1, 0.1)
						--WinpadMask.Color = Color3.fromRGB(255, 255, 255)
						--WinpadMask.Material = Enum.Material.Neon
						--WinpadMask.Transparency = 0.5
						--WinpadMask.Parent = Winpad
						
						--local WinTween = TweenService:Create(
						--	WinpadMask,
						--	TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
						--	{Transparency = 1}
						--)
						--WinTween.Completed:Connect(function()
						--	WinTween:Destroy()
						--	WinpadMask:Destroy()
							
						--	Map.UnlinkWinpad()
							
						--	task.wait(1)

						--	local MapTimer = Loader.MapTimer
						--	MapTimer.Pause()
						--	Loader.EndMap(true, MapLauncher.CreateWinParams(MapTimer.ElapsedTime * 1000))
						--end)
						--WinTween:Play()
					end
				end)
			end
			
			if Winpad:GetAttribute("FlashMaterials") == true then
				task.spawn(function()
					if WinpadTouchConnection then
						WinpadOriginalColor = Winpad.Color
						WinpadOriginalMaterial = Winpad.Material
						
						local Elapsed = 0
						local FlashInterval = "FlashInterval"
						local Materials = Enum.Material
						
						local MaterialList = Materials:GetEnumItems()
						local NumMaterials = #MaterialList
						local Air = Materials.Air

						while WinpadTouchConnection do
							if Elapsed > Winpad:GetAttribute(FlashInterval) then
								Elapsed = 0
								
								Winpad.BrickColor = BrickColor.Random()
								
								local NewMaterial = MaterialList[math.random(1, NumMaterials)]
								if NewMaterial ~= Air then
									Winpad.Material = NewMaterial
								end
							end
							
							Elapsed += task.wait()
						end
					end
				end)
			end
		end
	end

	--[[
	Returns if the player's win time is valid
	The actual win time is calculated by the client
	for the sake of speedrunners
	
	Params:
	UserId <number> - The player's UserId
	ClientRunTime <number> - The completion time to validate
	
	Returns:
	<boolean> - If the win time is valid
	]]--
	function Map.IsValidTime(UserId, ClientRunTime)
		print("Checking win time")
		if typeof(ClientRunTime) == "number" and ClientRunTime > 0 then
			print("Time looks good at first glance")
			local EnterLog = UsersInMap[UserId]

			if EnterLog then
				print("Entry log found, check actual time")
				local CurrentServerTime = DateTime.now().UnixTimestampMillis
				
				-- How long the run is supposed to last
				local ServerRunTime = CurrentServerTime - EnterLog.TimeEntered
				print("(unit: milliseconds)\n server time:", ServerRunTime, "\n client time:", ClientRunTime, "\n difference:", math.abs(ServerRunTime - ClientRunTime))
				
				-- Verify that the difference between the server and client provided time
				-- are within the win ping allowance
				
				--local ServerRunTime = math.abs(CurrentServerTime - ServerTime)
				if math.abs(ServerRunTime - ClientRunTime) <= MapLauncher.WinPingAllowance then
					print("win ping check passed")
					if ServerRunTime >= Map.MinTime then
						print("player", UserId, "wins")
						return true
					end
				end
			end
		end

		return false
	end

	--[[
	Returns if the player's win is valid, excluding
	any custom win checks
	
	Params:
	UserId <number> - The player's UserId
	WinParams <table> - The win parameters table sent by the client
	
	Returns:
	<boolean> - If the win is valid
	]]--
	function Map.CanWinDefault(UserId, WinParams)
		print("Now checking if player", UserId, "'s win is valid")
		return typeof(WinParams) == "table" and Map.IsValidTime(UserId, WinParams.Time)
	end

	--[[
	Returns:
	<boolean> - If the user id is playing the map
	]]--
	function Map.IsUserIdPlaying(UserId: number)
		return UsersInMap[UserId] ~= nil
	end

	--[[
	Removes a player from the map's playing list
	
	Params:
	UserId <number> - The player's UserId
	]]--
	function Map.RemoveUserId(UserId: number)
		if UsersInMap[UserId] then
			UsersInMap[UserId] = nil
		end
	end

	--[[
	Adds a player into the map's playing list.
	This will assist in win validation
	
	Params:
	UserId <number> - The player's UserId
	]]--
	function Map.AddUserId(UserId: number)
		UsersInMap[UserId] = {
			TimeEntered = DateTime.now().UnixTimestampMillis
		}
	end

	--[[
	Gets a custom-defined definition added
	by DefineInteractive().
	
	Params:
	Name <string> - The name of the class definition
	
	Returns:
	<table?> - The definition (or nil if it's not defined)
	]]--
	function Map.GetInteractiveDefinition(Type: string)
		assert(typeof(Type) == "string", "Argument 1 must be a string")

		return CustomInteractives[Type]
	end

	--[[
	Removes a custom interactive definition
	
	Params:
	Name <string> - The name of the class definition
	]]--
	function Map.UndefineInteractive(Type: string)
		assert(typeof(Type) == "string", "Argument 1 must be a string")

		if CustomInteractives[Type] then
			CustomInteractives[Type] = nil
		end
	end

	--[[
	Adds a custom interactive class definition so that
	it can be loaded using the default loop
	
	You may know "custom interactive class" as
	"Custom Client Object"
	
	Params:
	Name <string> - The name of the class definition
	Class <table> - The class definition
	]]--
	function Map.DefineInteractive(Type: string, Class: {})
		assert(typeof(Type) == "string", "Argument 1 must be a string")
		assert(typeof(Class) == "table", "Argument 2 must be a class table")

		CustomInteractives[Type] = Class
	end

	--[[
	Shuts down all currently loaded interactives but doesn't dispose
	them so they can be used for later
	
	Useful for quick-restarting a map and certain other things
	]]--
	function Map.ShutdownInteractives()
		for i, v in pairs(LoadedInteractives) do
			local OnShutdown = v.OnShutdown
			
			if OnShutdown then
				OnShutdown()
			end
		end
	end

	--[[
	Starts all currently loaded interactives
	]]--
	function Map.StartInteractives()
		for i, v in pairs(LoadedInteractives) do
			local OnStart = v.OnStart
			
			if OnStart then
				OnStart()
			end
		end
	end
	
	--[[
	Initializes all currently loaded interactives
	]]--
	function Map.InitializeInteractives()
		for i, v in pairs(LoadedInteractives) do
			local OnInitialize = v.OnInitialize
			
			if OnInitialize then
				OnInitialize()
			end
		end
	end

	--[[
	Disposes all currently loaded interactives
	]]--
	function Map.DisposeInteractives()
		for i, v in pairs(LoadedInteractives) do
			v.Dispose()
		end

		LoadedInteractives = {}
	end
	
	--[[
	Spawns the local player's character in the map
	]]--
	function Map.SpawnLocalPlayer()
		--BaseInteractive.AssertClient()
		
		--local LocalPlayer = game:GetService("Players").LocalPlayer
		
		--if LocalPlayer then
		--	local Char = LocalPlayer.Character
			
		--	if Char then
		--		local PrimaryPart = Char.PrimaryPart
				
		--		if PrimaryPart then
		--			local MapSpawn: BasePart = Model:WaitForChild("Spawn")
					
		--			if MapSpawn then
		--				local SpawnCFrame = MapSpawn.CFrame
						
		--				PrimaryPart.CFrame = SpawnCFrame + Vector3.new(
		--					0,
		--					(BaseInteractive.DefaultCharacterSize.Y / 2) + (MapSpawn.Size.Y / 2),
		--					0
		--				)
		--			end
		--		end
		--	end
		--end
		
		MapLauncher.SpawnLocalPlayerAt(Model:WaitForChild("Spawn"))
	end

	--[[
	Load an interactive using the information provided
	in the current launcher instance or
	from a global definition and initializes them
	
	Params:
	Type <string> - The type of interactive to use
	... <any> - Constructor arguments to be handled by the interactive
	]]--
	function Map.LoadInteractive(Type: string, ...: any)
		assert(typeof(Type) == "string", "Argument 1 must be a string")

		local Interact = Map.GetInteractiveDefinition(Type)
		if Interact == nil then
			Interact = BaseInteractive.GetByName(Type)
		end

		if Interact then
			table.insert(LoadedInteractives, Interact.New(...))
		end
	end

	--[[
	Makes the client load and start interactives
	using the default loop
	]]--
	function Map.DefaultLoadInteractives()
		local ClassName = BaseInteractive.ValueClassName
		local InteractId = MapLauncher.InteractiveValueId

		for i, v in pairs(Model:WaitForChild("Interactives"):GetDescendants()) do
			if v.ClassName == ClassName and v.Name == InteractId then
				Map.LoadInteractive(v.Value, v, Map)
			end
		end
	end
	
	--[[
	Displays victory text
	]]--
	function Map.DisplayWinText()
		--local Decimals = MapLauncher.SpeedrunDecimalPrecision
		--local Minutes, Seconds, Milliseconds = TimeWaiter.GetSpeedrunTime(
		--	(Loader.LastMapEndTime - Loader.LastMapStartTime) / 1000
		--	, Decimals
		--)
		
		--BaseInteractive.DisplayIntroText(
		--	"Winner! ("
		--		.. tostring(Minutes) .. ":" .. tostring(Seconds) .. string.format("%." .. tostring(Decimals) .. "d", Milliseconds)
		--	.. ")",
		--	Color3.fromRGB(0, 255, 127)
		--)
		
		BaseInteractive.DisplayIntroText(
			"Winner! ("
				.. TimeWaiter.FormatSpeedrunTime((Loader.LastMapEndTime - Loader.LastMapStartTime) / 1000, 3)
				.. ")",
			Color3.fromRGB(0, 255, 127)
		)
	end

	--[[
	Uses default client win code
	]]--
	function Map.UseDefaultWin()
		Model.Parent = nil
		Map.ShutdownInteractives()
		
		Loader.UseWinPlace("Default")
		Map.DisplayWinText()
	end

	-- Loading signals here

	--[[
	Callback that's fired when a player requests to enter
	the map.
	
	Params:
	Player <Player> - The player that made the request
	
	Expected return:
	<boolean> - Whether or not they can get in
	]]--
	Map.OnMapRequest = function(Player)
		return Map.IsUserIdPlaying(Player.UserId) == false
	end

	--[[
	Callback that's fired when a player claims
	to have won a map
	
	Params:
	Player <Player> - The player that made the request
	WinParams <table> - Win parameters (such as run time)
	
	Expected return:
	<boolean> - Whether or not they actually won
	]]--
	Map.OnWinRequest = function(Player, WinParams)
		print("Win request from", Player.Name)
		return Map.CanWinDefault(Player.UserId, WinParams)
	end

	--[[
	Fired when a player is authorized to enter the map
	
	Params:
	Player <Player> - The player that made the request
	]]--
	Map.OnPlayerEnter = BaseInteractive.CreateSyncedSignal()

	--[[
	Fired when a player leaves the map
	
	Params:
	Player <Player> - The player that made the request
	Beaten <boolean> - If the player beat the map
	]]--
	Map.OnPlayerLeave = BaseInteractive.CreateSyncedSignal()

	--[[
	Callback that's fired when the client requests to initialize the map
	
	Expected return:
	<boolean> - If map initialization was successful.
	]]--
	Map.OnClientInitialize = function()
		Map.DefaultLoadInteractives()
		Map.InitializeInteractives()
		return true
	end

	--[[
	Callback that's fired when the client requests to enter the map
	
	Expected return:
	<boolean> - If map starting was successful.
	]]--
	Map.OnClientStart = function()
		Map.StartInteractives()
		Map.LinkWinpad()
		Model.Parent = MapLauncher.GetMapContainer()
		Map.SpawnLocalPlayer()
		Map.DisplayIntroText()
		
		return true
	end

	--[[
	Callback that's fired when the client requests to leave the map
	
	Params:
	Beaten <boolean> - If the local player beat the map
	]]--
	Map.OnClientEnd = function(Beaten)
		Map.UnlinkWinpad()
		
		if Beaten then
			Map.UseDefaultWin()
		else
			Model.Parent = nil
			Map.ShutdownInteractives()
		end
		
		return true
	end
	
	--[[
	Callback that's fired when the client requests to remove the map
	from the computer's memory
	
	Whatever binded to this callback should make it so interactives
	would have to be loaded again
	]]--
	Map.OnClientRemove = Map.DisposeInteractives
	
	--Map.AddDisposalListener(function()
	--	if RunService:IsClient() then
	--		Map.OnClientEnd()
	--		Map.OnClientRemove()
	--	end
	--end)
	if RunService:IsClient() then
		Map.OnDisposal = Map.OnClientRemove
	end

	return Map
end

return MapLauncher]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3af990717807ced70224850f0004014f</UniqueId>
					</Properties>
					<Item class="Sound" referent="RBX95FDF0D7A7974EC4B17CC47E3565A30D">
						<Properties>
							<BinaryString name="AttributesSerialize"><![CDATA[AwAAAAsAAABBdHRyaWJ1dGlvbgI0AAAAU2hvd2JpeiBQbHVzIDIgLSBHYW1lc2hvd3MgLSAi
SGlnaGVyIFN0YWtlcyAiIldpbiIiIgkAAABTdGFydFRpbWUFAAAAAAwAAABUYXJnZXRWb2x1
bWUGAAAAAAAA8D8=]]></BinaryString>
							<float name="EmitterSize">10</float>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">WinSound</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxassetid://1846251035</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="TimePosition">0</double>
							<UniqueId name="UniqueId">1e67a3483f5404ae02caa52c00497d14</UniqueId>
							<float name="Volume">1</float>
							<float name="xmlRead_MaxDistance_3">10000</float>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX4886EE69801D4A78ACA5F2D8FF67A5C2">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">MapLoader</string>
						<string name="ScriptGuid">{E63E6F0D-BDE0-4C6A-A0F8-9447A27D1D69}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Loads maps to the client.

potential tp sounds:
https://www.roblox.com/library/1253908460
https://www.roblox.com/library/289556450

By udev2192
]]--

local Debris = game:GetService("Debris")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local MapHandles = script.Parent
local RepModules = MapHandles.Parent

local MapHandleGui = MapHandles:WaitForChild("Gui")

local Controllers = MapHandles:WaitForChild("Interactives"):WaitForChild("Controllers")

local BaseReplicator = require(RepModules:WaitForChild("Replicators"):WaitForChild("BaseReplicator"))
local ButtonTimer = require(MapHandleGui:WaitForChild("ButtonTimer"))
local MapLauncher = require(MapHandles:WaitForChild("MapLauncher"))
local MusicPlayer = require(RepModules:WaitForChild("Sound"):WaitForChild("MusicPlayer"))
local Signal = BaseReplicator.GetSignalClass()
local TimerFrame = require(MapHandleGui:WaitForChild("TimerFrame"))
local TimeWaiter = require(RepModules:WaitForChild("Utils"):WaitForChild("TimeWaiter"))

local MapLoader = {}
MapLoader.__index = MapLoader
MapLoader.MapsFolderName = "Maps"
MapLoader.ReplicatorId = script.Name .. "Replicator"
MapLoader.MapLauncherName = "Launcher"

--[[
<number> - The number of seconds the client has to load the map in
]]--
MapLoader.MaxLoadTime = 23

MapLoader.RequestIds = {
	Load = 1,
	Start = 2,
	End = 3
}

MapLoader.Status = {
	WaitingForModel = "Waiting for map model",
	WaitingForObjects = "Waiting for objects",
	WaitingForInitialize = "Initializing map",
	WaitingForServer = "Waiting for server",
	Starting = "Starting",
	Cancelled = "Cancelled"
}

MapLoader.CooldownTime = math.max((Players.RespawnTime * 1000) - 100, 0)

local ServerStoredMaps
if RunService:IsServer() then
	ServerStoredMaps = game:GetService("ServerStorage")
	:WaitForChild("GameStorage")
	:WaitForChild("Maps")
end

local WinPlaces = game:GetService("ReplicatedStorage"):WaitForChild("WinPlaces")
local DefaultLobby = workspace:WaitForChild("Lobby")

function MapLoader.RemovePlayerFromLauncher(Launcher, Player: Player, HasWon: boolean)
	Launcher.OnPlayerLeave.Fire(Player, HasWon)
	Launcher.RemoveUserId(Player.UserId)
end

function MapLoader.ServerCreate()
	BaseReplicator.AssertServer()

	local Loader = BaseReplicator.New(MapLoader.ReplicatorId)	

	-- Active map launchers
	local MapLaunchers = {}

	-- [map name] = descendant count
	local DescendantCount = {}

	-- [user id] = currently loading map
	local MapLoadingCache: {number: Model} = {}

	-- [user] = map they're currently in
	local PlayerMaps: {Player: string} = {}

	local PlayerLeaveConnection

	Loader.CooldownTime = MapLoader.CooldownTime

	--[[
	Refreshes stored map launcher instances.
	]]--
	function Loader.RefreshMapLaunchers()
		for i, v in pairs(ServerStoredMaps:GetChildren()) do
			if v.ClassName == "Model" then
				local Name = v.Name
				MapLaunchers[Name] = require(v:WaitForChild(MapLoader.MapLauncherName)).New(v, Loader)
				DescendantCount[Name] = #v:GetDescendants()
			end
		end
	end

	--[[
	Clears loading cache for a given user id.
	
	Params:
	UserId <number> - The user id of the client
	]]--
	function Loader.RemoveFromLoadCache(UserId: number)
		local Map = MapLoadingCache[UserId]

		if Map then
			MapLoadingCache[UserId] = nil
			Map:Destroy()
			Map = nil
		end
	end

	--[[
	Clears the loading cache.
	]]--
	function Loader.ClearLoadCache()
		for i, v in pairs(MapLoadingCache) do
			v:Destroy()
		end
		MapLoadingCache = {}
	end

	--[[
	Adds a map to the loading cache. Maps that are added to the load cache
	will be destroyed
	
	Params:
	UserId <number> - The user id of the player wanting to load the map
	Map <Model> - The map model to add to the cache
	]]--
	function Loader.AddToLoadCache(UserId: number, Map: Model)
		Loader.RemoveFromLoadCache()
		MapLoadingCache[UserId] = Map

		task.spawn(function()
			local DestroyTime = MapLoader.MaxLoadTime
			local Elapsed = 0

			while MapLoadingCache[UserId] do
				if Elapsed > DestroyTime then
					Loader.RemoveFromLoadCache(UserId)
					break
				end

				Elapsed += task.wait()
			end
		end)
	end

	Loader.OnError = function(Player, Error, RequestParams)
		print(Player.Name .. "'s message experienced an error:", Error.Message)
	end

	-- Handle requests
	Loader.ServerCallback = function(Player: Player, RequestParams: {RequestId: number}, MapName: string, HasWon: boolean, WinParams: {})
		print("Request id", RequestParams.RequestId, "from", Player.Name)

		--local MapClone = nil
		local LoadError = nil
		--local MapName = nil
		--local Info = {}
		local Response = {}

		-- Look for the map in the storage folder
		if typeof(MapName) == "string" and typeof(HasWon) == "boolean" then
			local Ids = MapLoader.RequestIds
			local RequestId = RequestParams.RequestId

			if RequestId == Ids.Load then
				local Map: Model = ServerStoredMaps:WaitForChild(MapName, 1)

				if Map and Map.ClassName == "Model" then
					local MapModelName = Map.Name
					local Launcher = MapLaunchers[MapModelName]

					if Launcher then
						-- Check if the map allows the player to enter
						if Launcher.OnMapRequest(Player) == true then
							local PlayerGui = Player:WaitForChild("PlayerGui", 3)

							if PlayerGui and PlayerGui.ClassName == "PlayerGui" then								
								Response.Info = {
									Name = Launcher.Name,
									Difficulty = Launcher.Difficulty,
									Creators = Launcher.Creators,
									NumDescendants = DescendantCount[MapModelName]
								}
								local MapClone = Map:Clone()

								-- The client will clone the map again
								-- Not ideal, but the server would otherwise crash
								-- with the player loading too many maps at once
								Loader.AddToLoadCache(Player.UserId, MapClone)
								Response.MapInstance = MapClone
								Response.ModelName = MapClone.Name

								MapClone.Parent = PlayerGui
								--task.wait() -- Wait a single frame for replication
							else
								LoadError = "Map loading destination not found"
							end
						end
					else
						LoadError = "Couldn't load map information"
					end
				else
					LoadError = "Map not found"
				end
			elseif RequestId == Ids.Start then
				-- If the player isn't in another map
				-- and if the map allows for their entry,
				-- let them get in
				local UserId = Player.UserId
				local CurrentMap: string = PlayerMaps[UserId]
				if CurrentMap == nil then
					local Launcher = MapLaunchers[MapName]

					if Launcher then
						-- Getting here should mean the player has loaded the map
						-- Destroy the clone from cache
						Loader.RemoveFromLoadCache(UserId)

						-- Let them play the map
						PlayerMaps[UserId] = MapName
						Launcher.AddUserId(UserId)
						Launcher.OnPlayerEnter.Fire(Player)

						Response.Info = {
							Name = Launcher.Name,
							Difficulty = Launcher.Difficulty,
							Creators = Launcher.Creators
						}
					else
						LoadError = "MapLauncher for starting the map session doesn't exist"
					end
				else
					LoadError = "Already in another map"
				end
			elseif RequestId == Ids.End then
				local UserId = Player.UserId
				local CurrentMap: string = PlayerMaps[UserId]
				if CurrentMap ~= nil then
					local Launcher = MapLaunchers[CurrentMap]

					if Launcher then
						local Kicked = false
						local IsWinValid = false

						if HasWon == true then
							if typeof(WinParams) == "table" and Launcher.OnWinRequest(Player, WinParams) then
								IsWinValid = true

								-- Display a win message
								-- or something
							else
								-- Either they didn't actually win,
								-- or the win request was denied from
								-- a bug in the callback
								Kicked = true
								Player:Kick("winner")
							end
						end

						MapLoader.RemovePlayerFromLauncher(Launcher, Player, IsWinValid)
						PlayerMaps[UserId] = nil

						if Kicked then
							return nil
						end

						Response.Info = {
							Name = Launcher.Name,
							Difficulty = Launcher.Difficulty,
							Creators = Launcher.Creators,
							HasWon = IsWinValid
						}
					else
						LoadError = "MapLauncher for ending the map session was somehow erased"
					end
				else
					-- kick because exploiters may try to fire
					-- this for free and instant wins
					Player:Kick("keep yourself safe")
					return nil
				end
			else
				LoadError = "Request id is invalid"
			end
		else
			LoadError = "Invalid arguments"
		end

		if LoadError then
			Response.LoadError = LoadError
		end

		-- Respond. The map should hopefully be replicated
		-- by the time the client receives this table.
		return Response
	end

	PlayerLeaveConnection = Players.PlayerRemoving:Connect(function(Player)
		local UserId = Player.UserId
		local Map = PlayerMaps[UserId]

		if Map then
			local Launcher = MapLaunchers[Map]

			if Launcher then
				MapLoader.RemovePlayerFromLauncher(Launcher, Player, false)
			else
				warn(
					"Map launcher is somehow missing for a player requesting to end a map session (errored for "
						.. Player.Name
						.. ")"
				)
			end

			PlayerMaps[UserId] = nil
		end
	end)

	Loader.AddDisposalListener(function()
		if PlayerLeaveConnection then
			PlayerLeaveConnection:Disconnect()
			PlayerLeaveConnection = nil
		end

		Loader.ClearLoadCache()

		for i, v in pairs(PlayerMaps) do
			local Launcher = MapLaunchers[v]

			if Launcher then
				MapLoader.RemovePlayerFromLauncher(Launcher, i, false)
			end
		end

		PlayerMaps = {}
	end)

	return Loader
end

function MapLoader.ClientCreate(ScreenGui: ScreenGui)
	local Loader = BaseReplicator.New(MapLoader.ReplicatorId)
	local LocalPlayer = Players.LocalPlayer
	local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
	
	local Timer = TimerFrame.New()
	local TimerLabel: TextLabel = Timer.Label

	local ClientMapStorage: {string: {Map: Model, Launcher: {}, Initialized: boolean}} = {}
	local CurrentControllers: {[string]: {}} = {}
	local IsInMap = false
	local IsAttemptingLoad = false
	local IsAttemptingStart = false
	--local CurrentMap: Model
	--local LaunchInst
	
	--local CurrentWinPlace
	local CurrentWinLauncher

	-- Pointer to the currently playing map's table in ClientMapStorage
	local CurrentMap
	
	local HeartbeatConnection

	-- Timestamp that the last response was received
	--local LastLoadTime = 0
	--local RequestCooldown = 0
	
	-- Cooldown expiry timestamp
	local CooldownExpireTime = 0
	local MapBeginTime = 0 -- in seconds
	local EndRetries = 0
	
	Loader.MaxEndRetries = 2

	--Loader.MainRequestId = 0
	Loader.MaxDescendantLoadTime = 5
	
	Loader.LastMapStartTime = 0
	Loader.LastMapEndTime = 0
	
	Loader.Lobby = DefaultLobby
	Loader.LobbyMainMusic = DefaultLobby:WaitForChild("Config"):WaitForChild("MainBGM")
	Loader.TimerGui = Timer.Gui
	Loader.MapTimer = Timer
	
	local MusicPlayerInit = MusicPlayer.New()
	MusicPlayerInit.FindMusicZones = true
	MusicPlayerInit.MainSound = Loader.LobbyMainMusic
	Loader.MusicPlayer = MusicPlayerInit
	
	MusicPlayerInit = nil

	--[[
	<boolean> - Whether or not the loader will save maps that are received
				from the server
	
	Currently unused
	]]--
	--Loader.ShouldSaveMaps = true

	--[[
	<table> - The map info of the currently loading map
	]]--
	Loader.LoadingMapInfo = {}

	Loader.Timeout = 2000
	--Loader.CurrentMapName = nil

	local function FireError(Message: string)
		--LastLoadTime = BaseReplicator.GetCurrentTime()
		Loader.OnLoadError.Fire(Message)
	end

	local function WaitForCooldown()
		--local CurrentTime = BaseReplicator.GetCurrentTime()
		--local CurrentCooldown = CurrentTime - LastLoadTime
		----Loader.CanSendRequest().CooldownRemaining + (LocalPlayer:GetNetworkPing() * 1000)
		--print("Waiting", (CurrentCooldown) / 1000, "seconds")

		--if CurrentCooldown > RequestCooldown then
		--	task.wait((RequestCooldown - CurrentCooldown) / 1000)
		--end
		--local CooldownPassed = math.min(BaseReplicator.GetCurrentTime() - LastLoadTime, RequestCooldown)
		--print("cooldown is", math.min(BaseReplicator.GetCurrentTime() - LastLoadTime, RequestCooldown))
		--if CooldownPassed <= RequestCooldown then
		--	task.wait(CooldownPassed / 1000)
		--end

		--LastLoadTime = BaseReplicator.GetCurrentTime()
		
		--local CooldownLeft = CooldownExpireTime - BaseReplicator.GetCurrentTime()
		--print("wait", CooldownLeft / 1000, "seconds")
		--if CooldownLeft > 0 then
		--	task.wait(CooldownLeft / 1000)
		--end
		
		task.wait(MapLoader.CooldownTime / 1000)
	end
	
	--[[
	Pauses timer updating
	]]--
	--function Loader.PauseTimer()
	--	if HeartbeatConnection then
	--		HeartbeatConnection:Disconnect()
	--		HeartbeatConnection = nil
	--	end
	--end
	
	--[[
	Starts timer updating
	]]--
	--function Loader.StartTimer()
	--	if HeartbeatConnection == nil then
	--		HeartbeatConnection = RunService.Heartbeat:Connect(function()
	--			Timer.SetText(
	--				TimeWaiter.FormatSpeedrunTimeIndividual(
	--					(BaseReplicator.GetCurrentTime() / 1000) - MapBeginTime,
	--					3
	--				)
	--			)
	--		end)
	--	end
	--end
	
	--[[
	Returns the specify controller if currently added
	
	Params:
	Name <string> - The name of the controller to retrieve
	]]--
	function Loader.GetController(Name: string)
		return CurrentControllers[Name]
	end
	
	--[[
	Disposes of all current controllers
	]]--
	function Loader.DisposeAllControllers()
		for i, v in pairs(CurrentControllers) do
			v.Dispose()
		end
		
		CurrentControllers = {}
	end
	
	--[[
	Adds a controller to the loader
	
	Params:
	Name <string> - The name to associate the controller with
	Controller <{}> - The loader object
	]]--
	function Loader.AddController(Name: string, Controller: {})
		CurrentControllers[Name] = Controller
	end
	
	--[[
	Adds all default controllers using "default" configurations
	]]--
	function Loader.AddDefaultControllers()
		local Dash = require(Controllers:WaitForChild("Dash")).New(LocalPlayer)
		Dash.Enable()
		
		CurrentControllers["Dash"] = Dash
		CurrentControllers["Swimmer"] = require(Controllers:WaitForChild("Swimmer")).New(Loader, LocalPlayer)
		CurrentControllers["ButtonTimer"] = ButtonTimer.New(ScreenGui)
	end

	Loader.ResponseReceived.Connect(function(Response)
		--LastLoadTime = BaseReplicator.GetCurrentTime()
		--RequestCooldown = Loader.CanSendRequest().CooldownTime
		CooldownExpireTime = BaseReplicator.GetCurrentTime() + Loader.CanSendRequest().CooldownTime
		--print("loader response received")

		local MapLoad = nil
		local NumDescendants = 0
		local LoadError = nil
		local ResponseTable = Response.Data[1]
		local InitialLoadError = Response.Error
		
		local RequestId = Response.RequestId
		local Ids = MapLoader.RequestIds

		if InitialLoadError then
			LoadError = InitialLoadError.Message
		else
			InitialLoadError = nil

			--print(typeof(ResponseTable))
			if typeof(ResponseTable) == "table" then
				LoadError = ResponseTable.LoadError

				if LoadError == nil then
					local MapInfo = ResponseTable.Info

					if typeof(MapInfo) == "table" then
						if RequestId == Ids.Load then
							Loader.StatusChanged.Fire(MapLoader.Status.WaitingForModel, MapInfo)
							Loader.MapReceived.Fire(MapInfo)
							local Model = PlayerGui:WaitForChild(ResponseTable.ModelName, 5)--Response.MapInstance

							if Model and Model:IsA("Model") then
								--local Map = Instance.new("Model")
								--Map.Name = Model.Name

								-- Attempt to load the first batch of descendants
								NumDescendants = MapInfo.NumDescendants or 1
								Loader.StatusChanged.Fire(MapLoader.Status.WaitingForObjects, MapInfo)
								local NumLoadedDescendants = #Model:GetDescendants()
								local Loaded = false
								local LoadDelay = 0

								--local function Load(d, FireSignal)
								--	LoadDelay = 0

								--	if d.Archivable == true then
								--		d:Clone().Parent = Map
								--		NumLoadedDescendants += 1

								--		if FireSignal then
								--			Loader.DescendantLoaded.Fire(NumLoadedDescendants, NumDescendants)
								--		end
								--	end
								--end

								--for i, v in pairs(FirstDescendants) do
								--	Load(v, false)
								--end
								Loader.LoadingMapInfo = MapInfo
								Loader.DescendantLoaded.Fire(NumLoadedDescendants, NumDescendants)

								-- Wait for other descendants to load
								if NumLoadedDescendants >= NumDescendants then
									Loaded = true
								else
									local DescendantMaxDelay = Loader.MaxDescendantLoadTime
									local AddConnection
									AddConnection = Model.DescendantAdded:Connect(function(d)
										NumLoadedDescendants = math.min(NumLoadedDescendants + 1, NumDescendants)
										Loader.DescendantLoaded.Fire(NumLoadedDescendants, NumDescendants)
									end)

									while true do
										if NumLoadedDescendants >= NumDescendants then
											Loaded = true
											break
										elseif LoadDelay > DescendantMaxDelay then
											LoadError = "Exceeded max loading time for each descendant"
											break
										elseif Model.Parent == nil then
											-- Getting here means the server destroyed the clone
											-- before the client could load the map
											LoadError = "Map took too long to load"
											break
										elseif IsAttemptingLoad == false then
											LoadError = "Client cancelled load request"
											break
										end

										LoadDelay += task.wait()
									end

									AddConnection:Disconnect()
								end

								-- Save if loaded
								if Loaded then
									MapLoad = Model:Clone()
									--task.wait() -- just in case
									Model:Destroy()

									local LoadedMapName = MapLoad.Name
									ClientMapStorage[LoadedMapName] = {
										Map = MapLoad,
										Launcher = require(MapLoad:WaitForChild(MapLoader.MapLauncherName)).New(MapLoad, Loader),
										Initialized = false
									}
									
									IsAttemptingLoad = false
									Loader.MapLoadFinished.Fire(LoadedMapName)
								end

								-- Wait for one frame, just in case
								--task.wait()
							else
								LoadError = "Map instance failed to load"
							end
						elseif RequestId == Ids.Start then
							IsAttemptingStart = false
							
							if CurrentMap then
								local LaunchInst = CurrentMap.Launcher

								if LaunchInst then
									if LaunchInst.Name == MapInfo.Name then
										local Now = BaseReplicator.GetCurrentTime()
										Loader.LastMapStartTime = Now
										Loader.StatusChanged.Fire(MapLoader.Status.Starting, MapInfo)
										if LaunchInst.OnClientStart() == true then
											--Loader.CurrentMapName = ResponseTable.Info.Name
											IsInMap = true
											
											--MapBeginTime = Now / 1000
											Timer.ElapsedTime = 0
											Timer.Start()
											Timer.SetVisible(true)
											
											Loader.OnMapBegin.Fire()
										else
											LoadError = "Map failed to start successfully"
										end
									else
										LoadError = "Attempted to start a map that doesn't match the current one"
									end
								else
									LoadError = "No launcher instance is in session"
								end
							else
								LoadError = "No current map is in session"
							end
						elseif RequestId == Ids.End then
							IsInMap = false

							if CurrentMap then
								local LaunchInst = CurrentMap.Launcher

								if LaunchInst then
									if LaunchInst.Name == MapInfo.Name then
										local PlayerWon = MapInfo.HasWon
										
										if typeof(PlayerWon) == "boolean" then
											if LaunchInst.OnClientEnd(PlayerWon) == true then
												CurrentMap = nil
												Loader.OnMapEnd.Fire()
											else
												--LaunchInst.Dispose()
												--LaunchInst = nil
												LoadError = "Failed to end map session. Please try resetting your character."
											end
										else
											LoadError = "HasWon variable isn't a boolean, couldn't check if player won"
										end
										--Loader.CurrentMapName = nil
									else
										LoadError = "Attempted to end a map that doesn't match the current one"
									end
								else
									LoadError = "No launcher instance is in session"
								end
							else
								LoadError = "No current map is in session"
							end
						end
					else
						LoadError = "No map information was provided"
					end
				end
			else
				LoadError = "Server response didn't include any data"
			end
		end

		if LoadError then
			FireError(LoadError)
			--print("error", LoadError)
		end

		-- Just in case
		if MapLoad then
			MapLoad = nil
		end
	end)

	--[[
	Returns:
	<boolean> - If a map is in session
	]]--
	function Loader.IsPlayingMap()
		return CurrentMap ~= nil and IsInMap == true
	end
	
	--[[
	Returns:
	<boolean> - If a win place is currently active
	]]--
	function Loader.IsInWinPlace()
		return CurrentWinLauncher ~= nil
	end

	--[[
	Checks if a map is already loaded from the server
	
	Params:
	Name <string> - The name of the map's model
	
	Returns:
	<boolean> - If the map is loaded
	]]--
	function Loader.IsMapLoaded(Name: string)
		return ClientMapStorage[Name] ~= nil
	end
	
	--[[
	Attempts to retrieve a launcher instance for a loaded map
	
	Params:
	Name <string> - The name of the map
	
	Returns:
	<MapLauncher> - The map's launcher instance, or nil if it couldn't be found
	]]--
	function Loader.GetMapLauncher(Name: string)
		if Loader.IsMapLoaded(Name) then
			return ClientMapStorage[Name].Launcher
		end
	end

	--[[
	Clears the current map storage. Any maps currently
	loaded would have to reload them from the server.
	]]--
	function Loader.ClearMapStorage()
		--CurrentMap = nil
		for i, v in pairs(ClientMapStorage) do
			v.Launcher.Dispose()
			v.Map:Destroy()
		end
		ClientMapStorage = {}
	end
	
	--[[
	Cancels a map trying to load from the server
	]]--
	function Loader.CancelLoad()
		Loader.Cancel(MapLoader.RequestIds.Load)
		IsAttemptingLoad = false
	end
	
	--[[
	Cancels a map trying to start from the client
	]]--
	function Loader.CancelStart()
		Loader.Cancel(MapLoader.RequestIds.Start)
		IsAttemptingStart = false
	end

	--[[
	Attempts to load a map from the server, if it hasn't been
	loaded already.
	
	Params:
	Name <string> - The name of the map's model.
	]]--
	function Loader.LoadMap(Name: string)
		assert(typeof(Name) == "string", "Argument 1 must be a string.")

		local InitialLoadError

		if Loader.CanSendRequest().CooldownRemaining <= 0 then
			local RequestId = MapLoader.RequestIds.Load

			if Loader.IsRequestActive(RequestId) == false then
				IsAttemptingLoad = true
				Loader.Request(BaseReplicator.CreateRequestParams(RequestId, true, nil, Name, false))
			else
				InitialLoadError = "Already awaiting a server response for map loading"
			end
		else
			InitialLoadError = "Can't make a map loading request because cooldown is still active"
		end

		if InitialLoadError then
			FireError(InitialLoadError)
		end
	end

	--[[
	Ends the map for the local player
	
	Params:
	Beaten <boolean> - Whether or not the map was beaten
	]]--
	function Loader.EndMap(Beaten: boolean, WinParams: {})
		assert(typeof(Beaten) == "boolean", "Argument 1 must be a boolean")

		if Loader.IsPlayingMap() then
			Loader.LastMapEndTime = BaseReplicator.GetCurrentTime()
			Timer.Pause()
			Timer.SetVisible(false)
			
			local End = MapLoader.RequestIds.End

			if Loader.IsRequestActive(End) == false then
				--if Beaten then
				--	Loader.LastMapEndTime = WinParams.Time--BaseReplicator.GetCurrentTime()
				--else
				--	Loader.LastMapEndTime = BaseReplicator.GetCurrentTime()
				--end
				
				Loader.Request(BaseReplicator.CreateRequestParams(End, true, nil, "", Beaten, Beaten and WinParams))
			else
				FireError("Already awaiting a server response for map ending")
			end
		else
			error("Cannot end map because no map is in session.")
		end
	end

	--[[
	Attempts to start the currently loaded map
	]]--
	function Loader.StartMap(MapName: string)
		local StartError

		local MapTable = ClientMapStorage[MapName]

		if MapTable then
			local Launcher = MapTable.Launcher--CurrentMap:WaitForChild(MapLoader.MapLauncherName)
			local MapInfo = {
				Name = Launcher.Name,
				Difficulty = Launcher.Difficulty,
				Creators = Launcher.Creators
			}

			if Launcher then
				-- Initialize if needed
				if MapTable.Initialized == false then
					Loader.StatusChanged.Fire(MapLoader.Status.WaitingForInitialize, MapInfo)

					if Launcher.OnClientInitialize() == true then
						MapTable.Initialized = true
					else
						StartError = "Map failed to initialize on the client"
					end
				end

				-- Start only if initialized successfully
				if MapTable.Initialized == true then
					CurrentMap = MapTable
					IsAttemptingStart = true
					Loader.StatusChanged.Fire(MapLoader.Status.WaitingForServer, MapInfo)
					
					--local TimeToWait = MapLoader.CooldownTime / 1000
					--local Elapsed = 0
					--while true do
					--	if Elapsed > TimeToWait then
					--		break
					--	elseif IsAttemptingStart == false then
					--		StartError = "Client cancelled request to start map"
					--	end
						
					--	Elapsed += task.wait()
					--end

					if StartError == nil then
						local Start = MapLoader.RequestIds.Start
						if Loader.IsRequestActive(Start) == false then
							Loader.Request(BaseReplicator.CreateRequestParams(Start, true, nil, MapName, false))
						else
							StartError = "Already awaiting a server response for round starting"
						end
					end
				end
			else
				StartError = "Launcher not found"
			end
		else
			StartError = "Map named '" .. MapName .. "' wasn't loaded to the client"
		end

		if StartError then
			FireError(StartError)
		end
	end
	
	--[[
	Makes the player leave the win place and return to the lobby spawn
	]]--
	function Loader.ExitWinPlace()
		if CurrentWinLauncher then
			CurrentWinLauncher.OnClientEnd()
			CurrentWinLauncher.Dispose()
			CurrentWinLauncher = nil
		end
		
		local Lobby = Loader.Lobby
		MapLauncher.SpawnLocalPlayerAt(Lobby:WaitForChild("_Spawn"))
		MapLauncher.ApplyLightingUsing(require(Lobby:WaitForChild("DefaultLighting")))
		
		local LoaderMusicPlayer = Loader.MusicPlayer
		local LobbyMusic = Loader.LobbyMainMusic
		
		if LoaderMusicPlayer and LoaderMusicPlayer.MainSound ~= LobbyMusic then
			LoaderMusicPlayer.MainSound = LobbyMusic
		end
		
		Loader.OnMapEnd.Fire()
	end
	
	--[[
	Loads and plays a win place/room to the client
	
	Params:
	<Name> - The winroom's name
	]]--
	function Loader.UseWinPlace(Name: string)
		if CurrentWinLauncher == nil then
			local WinPlace = game:GetService("ReplicatedStorage")
			:WaitForChild("WinPlaces")
			:WaitForChild(Name)
			
			if WinPlace then
				CurrentWinLauncher = require(
					WinPlace
					:WaitForChild("Launcher")
				).New(WinPlace, Loader)

				if CurrentWinLauncher.OnClientInitialize() then
					if CurrentWinLauncher.OnClientStart() then
						return
					end
				end
			end
			
			Loader.ExitWinPlace()
			warn("Returned to lobby because the selected win place launcher failed to start")
		end
	end

	--[[
	Fires when an error occurs
	
	Params:
	Message <string> - The error message
	]]--
	Loader.OnLoadError = Signal.New()

	--[[
	Fires when the loading status changes
	
	Params:
	Status <string> - The loading status
	Info <{[string]: any}> - Information on the currently loading/starting map
	]]--
	Loader.StatusChanged = Signal.New()

	--[[
	Fires when progress changes on loading the map's descendants
	
	Params:
	Loaded <number> - The current number of descendants loaded
	MaxLoad <number> - The total number of descendants being loaded from the server
	]]--
	Loader.DescendantLoaded = Signal.New()

	--[[
	Fires when map loading from server to client is finished
	
	Params:
	MapName <string> - The name of the map model that finished loading
	]]--
	Loader.MapLoadFinished = Signal.New()

	--[[
	Fires when a server response for map loading is received
	
	Params:
	Info <table> - Map info table (name, difficulty, creators)
	]]--
	Loader.MapReceived = Signal.New()

	--[[
	Fires when the loading of a map is finished and the map
	has begun.
	]]--
	Loader.OnMapBegin = Signal.New()
	
	--[[
	Fires when the map has successfully ended
	]]--
	Loader.OnMapEnd = Signal.New()

	Loader.AddDisposalListener(function()
		Loader.ClearMapStorage()
		Loader.EndMap()
		Loader.OnLoadError.DisconnectAll()
		Loader.StatusChanged.DisconnectAll()
		Loader.DescendantLoaded.DisconnectAll()
		Loader.MapLoadFinished.DisconnectAll()
		Loader.MapReceived.DisconnectAll()
		Loader.OnMapBegin.DisconnectAll()
		Loader.OnMapEnd.DisconnectAll()
		
		Timer.Dispose()
	end)
	
	Loader.AddDefaultControllers()
	
	return Loader
end

return MapLoader]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">7102244d17ef658102304f75000b10c0</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX9046C1D75909400ABCF8E79A23B2540C">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Gui</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">43dfcf0d2a77091f023458a10012b5ec</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX11240F350C39444F8EDCBC075F53E1D8">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MapLoad</string>
							<string name="ScriptGuid">{BD3A0667-4040-492B-B314-59F29B61E18B}</string>
							<ProtectedString name="Source"><![CDATA[--[[
GUI for loading maps

By udev2192
]]--

local MapHandles = script.Parent.Parent

local BaseInteractive = require(MapHandles:WaitForChild("Interactives"):WaitForChild("BaseInteractive"))
local BaseComponent = require(MapHandles.Parent
	:WaitForChild("Gui")
	:WaitForChild("Components")
	:WaitForChild("BaseComponent")
)
local Utils = BaseInteractive.GetGeneralUtils()
local TweenGroup = BaseInteractive.GetTweenGroupClass()
local Scheduler = require(BaseInteractive.GetUtilPackage():WaitForChild("Scheduler"))

local LoadStatus = require(MapHandles:WaitForChild("MapLoader")).Status

local MapLoad = {}
MapLoad.ClassName = script.Name

function MapLoad.New()
	local LoadGui = BaseComponent.New("Frame")
	local Tweens = TweenGroup.New()
	local TweenScheduler = Scheduler.New()
	
	TweenScheduler.Sync = true
	
	local PrimaryFrame: Frame = LoadGui.Gui
	local IsFadingIn = false
	local OriginalPositions: {GuiObject: UDim2} = {}
	
	local IsLoadingMap = false
	local CurrentlyLoadingMap: string
	local CurrentMapInfoName: string

	LoadGui.CornerRadius = nil
	LoadGui.TweeningInfo = TweenInfo.new(0.25, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
	LoadGui.HideTweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Sine, Enum.EasingDirection.In)
	LoadGui.BarMoveTweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
	LoadGui.PositionOffset = UDim2.new(0, 0, 0.1, 0)
	LoadGui.VisibleTweenName = "VisibilityTweens"
	LoadGui.BarMoveTweenName = "BarMove"
	LoadGui.TweenDelay = 0.1
	
	PrimaryFrame.Visible = false
	PrimaryFrame.Size = UDim2.new(1, 0, 1, 0)
	PrimaryFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	PrimaryFrame.BackgroundTransparency = 1
	PrimaryFrame.BorderSizePixel = 0
	PrimaryFrame.Name = "MapLoadGuiFrame"
	
	-- Loading meter position at full percent
	LoadGui.LoadingBarPos = UDim2.new(0.5, 0, 0.5, 0)
	
	--[[
	<MapLoader> - The client replicator used by the gui
	]]--
	LoadGui.Replicator = nil
	
	local LoadingImage: ImageLabel = Utils.CreateInstance("ImageLabel", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(1, 0, 1, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),
		
		ImageTransparency = 1,
		BackgroundTransparency = 1,
		BackgroundColor3 = Color3.fromRGB(0, 0, 0),
		BorderSizePixel = 0,
		
		ScaleType = Enum.ScaleType.Crop,
		Parent = PrimaryFrame
	})
	
	local MapInfoLabel: TextLabel = Utils.CreateInstance("TextLabel", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(0.8, 0, 0.1, 0),
		Position = UDim2.new(0.5, 0, 0.225, 0),

		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		TextTransparency = 1,
		TextStrokeTransparency = 1,
		
		TextColor3 = Color3.fromRGB(255, 255, 255),
		TextStrokeColor3 = Color3.fromRGB(0, 0, 0),
		Text = "Map Name [Difficulty] by Creators",
		
		Font = Enum.Font.Gotham,

		Parent = PrimaryFrame
	})
	
	local LoadingStatusFrame: Frame = Utils.CreateInstance("Frame", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(0.8, 0, 0.1, 0),
		Position = UDim2.new(0.5, 0, 0.6, 0),

		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		
		Parent = PrimaryFrame
	})
	
	local StatusText: Frame = Utils.CreateInstance("TextLabel", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(0.5, 0, 1, 0),
		Position = UDim2.new(0.25, 0, 0.5, 0),

		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		TextTransparency = 1,
		TextStrokeTransparency = 1,
		
		TextColor3 = Color3.fromRGB(255, 255, 255),
		TextStrokeColor3 = Color3.fromRGB(0, 0, 0),
		Text = "Loading...",
		TextXAlignment = Enum.TextXAlignment.Left,

		Font = Enum.Font.Gotham,

		Parent = LoadingStatusFrame
	})
	
	local PercentText: Frame = Utils.CreateInstance("TextLabel", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(0.5, 0, 1, 0),
		Position = UDim2.new(0.75, 0, 0.5, 0),

		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		TextTransparency = 1,
		TextStrokeTransparency = 1,

		TextColor3 = Color3.fromRGB(255, 255, 255),
		TextStrokeColor3 = Color3.fromRGB(0, 0, 0),
		Text = "",
		TextXAlignment = Enum.TextXAlignment.Right,

		Font = Enum.Font.Gotham,

		Parent = LoadingStatusFrame
	})
	
	local LoadingMeter: Frame = Utils.CreateInstance("Frame", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(0.8, 0, 0.05, 0),
		Position = UDim2.new(0.5, 0, 0.71, 0),

		BackgroundTransparency = 1,
		BackgroundColor3 = Color3.fromRGB(26, 0, 66),
		BorderSizePixel = 0,

		Parent = PrimaryFrame
	})
	
	local LoadingBar: Frame = Utils.CreateInstance("Frame", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(1, 0, 1, 0),
		Position = LoadGui.LoadingBarPos,

		BackgroundTransparency = 1,
		BackgroundColor3 = Color3.fromRGB(98, 0, 255),
		BorderSizePixel = 0,

		Parent = LoadingMeter
	})
	
	BaseComponent.AddCornerRadius(LoadingMeter, UDim.new(1, 0)):Clone().Parent = LoadingBar
	
	local function GetLoadMeterPos(Percent: number)
		local Pos = LoadGui.LoadingBarPos
		return UDim2.new(Pos.X.Scale * Percent, Pos.X.Offset, Pos.Y.Scale, Pos.Y.Offset)
	end
	
	local function ResetComponentPos()
		local HideOffset = LoadGui.PositionOffset
		
		for i, v in pairs(OriginalPositions) do
			i.Position = v - HideOffset
		end
	end
	
	function LoadGui.SetLoadMeterPercent(Percent: number)
		local BarMoveTweenName = LoadGui.BarMoveTweenName
		Tweens.Kill(BarMoveTweenName)
		PercentText.Text = tostring(math.floor(Percent * 100)) .. "%"
		Tweens.Play(LoadingBar, LoadGui.BarMoveTweenInfo, {
			Size = UDim2.new(Percent, 0, 1, 0),
			Position = GetLoadMeterPos(Percent)
		}, BarMoveTweenName)
	end
	
	for i, v in pairs(PrimaryFrame:GetChildren()) do
		if v:IsA("GuiObject") and v ~= LoadingImage then
			OriginalPositions[v] = v.Position
		end
	end
	ResetComponentPos()
	
	LoadGui.VisibleChanged.Sync = true
	LoadGui.VisibleChanged.Connect(function(IsVisible: boolean)
		TweenScheduler.Pause()
		
		local VisibileTweenName = LoadGui.VisibleTweenName
		Tweens.Kill(VisibileTweenName)
		
		--local StartTransparency
		local Transparency = 0
		local PosOffset
		local TweeningInfo
		
		if IsVisible then
			IsFadingIn = true
			--StartTransparency = 1
			Transparency = 0
			
			PosOffset = UDim2.new(0, 0, 0, 0)
			TweeningInfo = LoadGui.TweeningInfo
			
			if PrimaryFrame.Visible == false then
				ResetComponentPos()
			end
		else
			IsFadingIn = false
			Transparency = 1
			
			PosOffset = LoadGui.PositionOffset
			TweeningInfo = LoadGui.HideTweenInfo
		end
		
		if IsVisible and IsFadingIn then
			PrimaryFrame.Visible = true
		end
		
		-- Tween moving objects
		
		--for i: GuiObject, v: UDim2 in pairs(OriginalPositions) do
		--	local Properties = {}
		--	if i.ClassName == "TextLabel" then
		--		Properties.TextTransparency = Transparency
		--		Properties.TextStrokeTransparency = Transparency
				
		--		if StartTransparency then
		--			i.TextTransparency = StartTransparency
		--			i.TextStrokeTransparency = StartTransparency
		--		end
		--	elseif i == LoadingMeter then
		--		Properties.BackgroundTransparency = Transparency
				
		--		if StartTransparency then
		--			i.BackgroundTransparency = StartTransparency
		--		end
		--	end

		--	i.Position = v + PosOffset
		--	Tweens.Play(i, TweeningInfo, Properties, VisibileTweenName)
		--end
		
		-- Tween others
		local TweenDelay = LoadGui.TweenDelay
		TweenScheduler.Schedule = {
			[0] = function()
				Tweens.Play(LoadingImage, TweeningInfo, {
					BackgroundTransparency = Transparency,
					ImageTransparency = Transparency
				}, VisibileTweenName)
				Tweens.Play(MapInfoLabel, TweeningInfo, {
					TextTransparency = Transparency,
					TextStrokeTransparency = Transparency,
					Position = OriginalPositions[MapInfoLabel] + PosOffset
				}, VisibileTweenName)
			end,
			
			[TweenDelay] = function()
				Tweens.Play(LoadingStatusFrame, TweeningInfo, {
					Position = OriginalPositions[LoadingStatusFrame] + PosOffset
				}, VisibileTweenName)
				Tweens.Play(StatusText, TweeningInfo, {
					TextTransparency = Transparency,
					TextStrokeTransparency = Transparency,
				}, VisibileTweenName)
				Tweens.Play(PercentText, TweeningInfo, {
					TextTransparency = Transparency,
					TextStrokeTransparency = Transparency
				}, VisibileTweenName)
			end,
			
			[TweenDelay * 2] = function()
				Tweens.Play(LoadingMeter, TweeningInfo, {
					BackgroundTransparency = Transparency,
					Position = OriginalPositions[LoadingMeter] + PosOffset
				}, VisibileTweenName)
				Tweens.Play(LoadingBar, TweeningInfo, {
					BackgroundTransparency = Transparency
				}, VisibileTweenName, function()
					if IsVisible == false and IsFadingIn == false then
						PrimaryFrame.Visible = false
						ResetComponentPos()
					end
				end)
			end
		}
		
		TweenScheduler.Time = 0
		TweenScheduler.Resume()
	end)
	
	-- table where: [signal name] = function()
	local Listeners
	
	local function DisconnectListeners()
		local Replicator = LoadGui.Replicator

		if Replicator then
			for i, v in pairs(Listeners) do
				Replicator[i].Disconnect(v)
			end
		end
	end

	local function ConnectListeners()
		local Replicator = LoadGui.Replicator

		if Replicator then
			for i, v in pairs(Listeners) do
				Replicator[i].Connect(v)
			end
		end
	end
	
	local function EndLoad()
		DisconnectListeners()
		IsLoadingMap = false
		LoadGui.SetVisible(false)
	end
	
	local function ResetLoadingStats()
		LoadingBar.Size = UDim2.new(0, 0, 1, 0)
		LoadingBar.Position = GetLoadMeterPos(0)
		StatusText.Text = "Preparing"
		PercentText.Text = "0%"
	end
	
	local function ChangeMapLabel(Info: {})
		if Info then
			local Name = Info.Name
			
			if Name and Name ~= CurrentMapInfoName then
				CurrentMapInfoName = Name

				local Diff = Info.Difficulty
				MapInfoLabel.Text = Info.Name .. " [" .. Diff.Name .. "] by " .. Info.Creators
				MapInfoLabel.TextColor3 = Diff.Color
			end
		end
	end
	
	Listeners = {
		OnLoadError = EndLoad,
		
		StatusChanged = function(Status: string, Info: {})
			StatusText.Text = Status
			
			ChangeMapLabel(Info)
			
			if (Status == LoadStatus.WaitingForInitialize or Status == LoadStatus.Starting) then
				LoadGui.SetLoadMeterPercent(1)
				
				if PrimaryFrame.Visible == false then
					LoadGui.SetVisible(true)
				end
			end
		end,
		
		DescendantLoaded = function(Loaded: number, MaxLoad: number)
			LoadGui.SetLoadMeterPercent(Loaded / MaxLoad)
		end,
		
		MapLoadFinished = function(MapName: string)
			local Replicator = LoadGui.Replicator
			if Replicator and IsLoadingMap and MapName == CurrentlyLoadingMap then
				Replicator.StartMap(CurrentlyLoadingMap)
			else
				EndLoad()
			end
		end,
		
		MapReceived = function(Info: {})
			ResetLoadingStats()
			ChangeMapLabel(Info)
			
			LoadGui.SetVisible(true)
		end,
		
		OnMapBegin = EndLoad
	}
	
	--[[
	Gets this gui to load a map.
	
	Params:
	MapName <string> - The name of the map's model.
	]]--
	function LoadGui.LoadMap(MapName: string)
		if IsLoadingMap == false then
			IsLoadingMap = true
			CurrentlyLoadingMap = MapName
			
			local Replicator = LoadGui.Replicator
			
			ConnectListeners()
			if Replicator.IsMapLoaded(MapName) then
				-- For tweening purposes
				--Tweens.Kill(LoadGui.BarMoveTweenName)
				--LoadingBar.Size = UDim2.new(0, 0, 1, 0)
				--LoadingBar.Position = GetLoadMeterPos(0)
				
				--LoadGui.SetLoadMeterPercent(1)
				--LoadGui.SetVisible(true)
				ResetLoadingStats()
				
				ChangeMapLabel(Replicator.GetMapLauncher(MapName))
				LoadGui.SetVisible(true)
				Replicator.StartMap(MapName)
			else
				Replicator.LoadMap(MapName)
			end
		end
	end
	
	LoadGui.AddDisposalListener(function()
		DisconnectListeners()
		IsLoadingMap = false
		
		TweenScheduler.Dispose()
		Tweens.Dispose()
	end)
	
	return LoadGui
end

return MapLoad]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">43dfcf0d2a77091f023458a10012b618</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX96C7CEB9C85545458DD9B3942DDC6562">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">IntroText</string>
							<string name="ScriptGuid">{0BC1D620-2E4F-4D1C-A861-15B3DA9A7EE2}</string>
							<ProtectedString name="Source"><![CDATA[--[[
Displays a banner that is intended to introduce the user to something as a title

By udev2192
]]--

local BaseComponent = require(game:GetService("ReplicatedStorage")
	:WaitForChild("Modules")
	:WaitForChild("Gui")
	:WaitForChild("Components")
	:WaitForChild("BaseComponent")
)
local Util = BaseComponent.GetUtils()

local IntroText = {}
IntroText.__index = IntroText
IntroText.ClassName = script.Name

function IntroText.New(OriginalText: string?)
	local Intro = BaseComponent.New("Frame")
	
	Intro.CornerRadius = nil
	Intro.ShownSizeXScale = 1
	Intro.HiddenSizeXScale = 0
	Intro.TextShownPositionOffset = UDim2.new(0, 0, 0.1, 0)
	Intro.TextHidePosition = UDim2.new(0.5, 0, 0.3875, 0)
	
	local Gui: Frame = Intro.Gui
	local Theme = Intro.GetTheme()
	
	local IsFadingIn = false
	
	Theme.ApplyProperties(Gui, Gui.ClassName, {
		Visible = false,
		
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(0.5, 0, 0.075, 0),
		Position = UDim2.new(0.5, 0, 0.1, 0),

		Name = "IntroTextFrame",

		BackgroundTransparency = 1,
		BorderSizePixel = 0
	})
	
	local FrameText: TextLabel = Theme.MakeInstance("TextLabel", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(1, 0, 0.975, 0),
		Position = Intro.TextHidePosition,
		
		BackgroundTransparency = 1,
		TextTransparency = 1,
		TextStrokeTransparency = 1,
		BorderSizePixel = 0,
		
		TextStrokeColor3 = Color3.fromRGB(0, 0, 0),
		Text = OriginalText or "",
		
		Parent = Gui
	})
	
	local GradientLine: Frame = Theme.MakeInstance("Frame", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(1, 0, 0, 2),
		Position = UDim2.new(0.5, 0, 1, -1),

		BackgroundTransparency = 1,
		BorderSizePixel = 0,

		Parent = Gui
	})
	
	BaseComponent.AddGradientFade(Gui)
	BaseComponent.AddGradientFade(GradientLine)
	
	Intro.SetProperty("Color", Color3.fromRGB(255, 255, 255), function(NewColor)
		GradientLine.BackgroundColor3 = NewColor
		Gui.BackgroundColor3 = NewColor
		FrameText.BackgroundColor3 = NewColor
		FrameText.TextColor3 = NewColor
	end)
	
	Intro.FrameText = FrameText
	
	Intro.VisibleChanged.Connect(function(IsVisible)
		local TweeningInfo = Intro.TweeningInfo
		
		if TweeningInfo then
			local BgTransparency
			local Transparency
			local TextPos
			
			if IsVisible and IsFadingIn == false then
				IsFadingIn = true
				BgTransparency = 0.5
				Transparency = 0
				TextPos = Intro.TextHidePosition + Intro.TextShownPositionOffset
				
				Gui.Visible = true
			elseif IsVisible == false then
				IsFadingIn = false
				BgTransparency = 1
				Transparency = 1
				TextPos = Intro.TextHidePosition
			end
			
			Util.Tween(Gui, TweeningInfo, {BackgroundTransparency = BgTransparency})
			Util.Tween(FrameText, TweeningInfo, {
				TextTransparency = Transparency,
				--TextStrokeTransparency = Transparency,
				Position = TextPos
			})
			Util.Tween(GradientLine, TweeningInfo, {BackgroundTransparency = Transparency})
			
			task.wait(TweeningInfo.Time)
			
			if IsVisible == false and IsFadingIn == false then
				Gui.Visible = false
			end
		end
	end)
	
	return Intro
end

return IntroText]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">763a7612a43638410224a4390010a18b</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXCB5B47FEEF424522BF2508DC9C50F710">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">LoadingIcon</string>
							<string name="ScriptGuid">{4A27D392-6D5A-47E1-9392-16694A1F890A}</string>
							<ProtectedString name="Source"><![CDATA[--[[
loading icon with a little animation to go with it

]]--

local RunService = game:GetService("RunService")

local BaseComponent = require(game:GetService("ReplicatedStorage")
	:WaitForChild("Modules")
	:WaitForChild("Gui")
	:WaitForChild("Components")
	:WaitForChild("BaseComponent")
)
local Util = BaseComponent.GetUtils()

local LoadingIcon = {}

function LoadingIcon.New()
	local Icon = BaseComponent.New("Frame")
	local Circles = {}
	
	Icon.VisibleChanged.Connect(function(IsVisible)
		
	end)
	
	return Icon
end

return LoadingIcon]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">03543c7372601ba502909837000b970a</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX76566EF5EBC74A91B55823F07DA40CAE">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">TimerFrame</string>
							<string name="ScriptGuid">{FA681617-6380-40C2-BCB6-57D238BD12BE}</string>
							<ProtectedString name="Source"><![CDATA[--[[
timer

ui design comes mostly from Celeste by Extremely OK Games
]]--

local RunService = game:GetService("RunService")

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")
local Utils = RepModules:WaitForChild("Utils")

local BaseComponent = require(
	RepModules
	:WaitForChild("Gui")
	:WaitForChild("Components")
	:WaitForChild("BaseComponent")
)

local TimeWaiter = require(Utils:WaitForChild("TimeWaiter"))
local TweenGroup = require(Utils:WaitForChild("TweenGroup"))

local Timer = {}

function Timer.New()
	local TimerFrameObj = BaseComponent.New("Frame")
	local Tweens = TweenGroup.New()
	local Runner: RBXScriptConnection
	
	TimerFrameObj.TweeningInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
	TimerFrameObj.CornerRadius = nil
	
	--[[
	<number> - The timer's elapsed time in seconds
	]]--
	TimerFrameObj.ElapsedTime = 0
	
	local TimerFrame = TimerFrameObj.Gui
	
	local IsFadingIn = false
	
	TimerFrame.Visible = false
	TimerFrame.Name = "Timer"
	TimerFrame.AnchorPoint = Vector2.new(0, 0.5)
	TimerFrame.Size = UDim2.new(0, 200, 0, 36)
	TimerFrame.Position = UDim2.new(0, 0, 0, 72)
	TimerFrame.BackgroundTransparency = 1
	TimerFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	TimerFrame.BorderSizePixel = 0
	TimerFrame.ClipsDescendants = true
	
	local Background = TimerFrame:Clone()
	Background.AnchorPoint = Vector2.new(0.5, 1)
	Background.Size = UDim2.new(1, 0, 0.5, 0)
	Background.Position = UDim2.new(0.5, 0, 1, 0)
	Background.ZIndex = 1
	Background.Visible = true
	BaseComponent.AddGradientFade(
		Background,
		NumberSequence.new({
			NumberSequenceKeypoint.new(0, 0),
			NumberSequenceKeypoint.new(0.75, 0),
			NumberSequenceKeypoint.new(1, 1)
		})
	)

	--local GradientLineTop = Instance.new("Frame")
	--GradientLineTop.AnchorPoint = Vector2.new(0.5, 0.5)
	--GradientLineTop.Size = UDim2.new(1, 0, 0.05, 0)
	--GradientLineTop.Position = UDim2.new(0.5, 0, 0, 0.025)
	--GradientLineTop.BackgroundTransparency = 1
	--GradientLineTop.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	--BaseComponent.AddGradientFade(GradientLineTop)

	--local GradientLineBottom = GradientLineTop:Clone()
	--GradientLineBottom.Position = UDim2.new(0.5, 0, 0.975, 0)
	
	local TimerText = Instance.new("TextLabel")
	TimerText.AnchorPoint = Vector2.new(0.5, 1)
	TimerText.Size = UDim2.new(0.5, 0, 0.75, 0)
	TimerText.Position = UDim2.new(0.3, 0, 1, 0)
	TimerText.BackgroundTransparency = 1
	TimerText.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	TimerText.TextStrokeTransparency = 1
	TimerText.TextTransparency = 1
	TimerText.TextColor3 = Color3.fromRGB(255, 255, 255)
	TimerText.TextScaled = false
	TimerText.TextSize = 27
	TimerText.Text = TimeWaiter.FormatSpeedrunTime(0, 3)
	TimerText.Font = Enum.Font.Highway
	TimerText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
	TimerText.TextStrokeTransparency = 1
	TimerText.ZIndex = 2
	TimerText.TextXAlignment = Enum.TextXAlignment.Right
	TimerText.TextYAlignment = Enum.TextYAlignment.Bottom
	TimerText.Text = ""
	
	local TimerTextMs = TimerText:Clone()
	TimerTextMs.Size = UDim2.new(0.3, 0, 0.45, 0)
	TimerTextMs.Position = UDim2.new(0.71, 0, 0.92, 0)
	TimerTextMs.TextXAlignment = Enum.TextXAlignment.Left
	TimerTextMs.TextColor3 = Color3.fromRGB(230, 230, 230)
	TimerTextMs.TextSize = 10
	
	--GradientLineBottom.Parent = TimerFrame
	--GradientLineTop.Parent = TimerFrame
	TimerText.Parent = TimerFrame
	TimerTextMs.Parent = TimerFrame
	Background.Parent = TimerFrame
	
	TimerFrameObj.Label = TimerText
	
	function TimerFrameObj.SetText(Minutes: number, Seconds: number, Milliseconds: number)
		TimerText.Text = Minutes .. ":" .. string.format("%.2d", Seconds)
		TimerTextMs.Text = "." .. string.format("%.3d", Milliseconds)
	end
	
	TimerFrameObj.VisibleChanged.Connect(function(IsVisible)
		IsFadingIn = IsVisible
		
		local Transparency
		local TextTransparency
		local LineTransparency = 0
		
		Tweens.KillAll()
		if IsVisible then
			Transparency = 0.5
			TextTransparency = 0
			LineTransparency = 0
			
			TimerFrame.Visible = true
		else
			Transparency = 1
			TextTransparency = 1
			LineTransparency = 1
		end
		
		local TweeningInfo = TimerFrameObj.TweeningInfo
		if TweeningInfo then
			--local LineProperties = {BackgroundTransparency = LineTransparency}
			local TextProperties = {
				TextTransparency = TextTransparency,
				TextStrokeTransparency = TextTransparency
			}
			local Hide
			if IsVisible then
				TimerFrame.Visible = true
			else
				Hide = function()
					if IsFadingIn == false then
						TimerFrame.Visible = false
					end
				end
			end
			
			--Tweens.Play(GradientLineTop, TweeningInfo, LineProperties)
			--Tweens.Play(GradientLineBottom, TweeningInfo, LineProperties)
			Tweens.Play(TimerText, TweeningInfo, TextProperties)
			Tweens.Play(TimerTextMs, TweeningInfo, TextProperties)
			Tweens.Play(Background, TweeningInfo, {BackgroundTransparency = Transparency}, nil, Hide)
			
			--LineProperties = nil
		else
			TimerFrame.Visible = IsVisible and IsFadingIn
		end
	end)
	
	function TimerFrameObj.Pause()
		if Runner then
			Runner:Disconnect()
			Runner = nil
		end
	end
	
	function TimerFrameObj.Start()
		if Runner == nil then
			Runner = RunService.Heartbeat:Connect(function(Delta: number)
				local NewTime = TimerFrameObj.ElapsedTime + Delta
				TimerFrameObj.ElapsedTime = NewTime
				
				TimerFrameObj.SetText(TimeWaiter.FormatSpeedrunTimeIndividual(NewTime, 3))
			end)
		end
	end
	
	TimerFrameObj.AddDisposalListener(Tweens.Dispose)
	
	return TimerFrameObj
end

return Timer]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">337112dcdcced6330290a27d000b95b4</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXB724DBA65AB8444A87875853DA6925A3">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MapPrompt</string>
							<string name="ScriptGuid">{DC0F04D9-CAFA-4166-8844-12363CFADED5}</string>
							<ProtectedString name="Source"><![CDATA[--[[
gui that loads a map from the server, initializes it,
and when done, asks the user if they wanna play it
]]--

local MapHandles = script.Parent.Parent
local RepModules = MapHandles.Parent
local GuiComponents = RepModules:WaitForChild("Gui"):WaitForChild("Components")
local RepUtils = RepModules:WaitForChild("Utils")

local GridMenu = require(GuiComponents:WaitForChild("GridMenu"))
local IconButton = require(GuiComponents:WaitForChild("IconButton"))
local MapLoader = require(MapHandles:WaitForChild("MapLoader"))
local TweenGroup = require(RepUtils:WaitForChild("TweenGroup"))

local CreateInstance: (ClassName: string, Properties: {}) -> Instance = require(RepUtils:WaitForChild("Utility")).CreateInstance

local MapPrompt = {}

function MapPrompt.CreateInfoLabel(Name: string, Size: UDim2, Position: UDim2): TextLabel
	return CreateInstance("TextLabel", {
		Name = Name,
		AnchorPoint = Vector2.new(0.5, 0.5),
		Position = Position,
		Size = Size,
		BackgroundColor3 = Color3.fromRGB(0, 0, 0),
		BackgroundTransparency = 1,
		BorderSizePixel = 0,

		TextColor3 = Color3.fromRGB(255, 255, 255),
		TextStrokeColor3 = Color3.fromRGB(0, 0, 0),
		Font = Enum.Font.Gotham,

		TextTransparency = 1,
		TextStrokeTransparency = 1
	})
end

function MapPrompt.New(Loader: {})
	assert(typeof(Loader) == "table", "Argument 1 must be a Loader object.")
	
	local Prompt = GridMenu.New()
	local PromptTweenGroup = TweenGroup.New()
	local InfoTweenGroup = TweenGroup.New()
	
	local InfoStorage = {}
	local InfoLabels: {[string]: TextLabel} = {}
	
	local LoaderConnections = {}
	local IsFadingIn = false
	local PlayConnection: RBXScriptConnection
	
	Prompt.IsUsingGrid = false
	Prompt.SetTitle("MAP SELECT")
	Prompt.SetImage(CreateInstance("ImageLabel", {
		Name = "BgImage",
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(1, 0, 1, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),
		ScaleType = Enum.ScaleType.Crop,
		BackgroundTransparency = 1,
		ImageTransparency = 0,
		Image = "https://www.roblox.com/asset/?id=9618869998"
	}))
	
	Prompt.IsShowingInfo = false
	Prompt.InfoFrameHidePos = UDim2.new(0.4, 0, 0.554, 0)
	Prompt.InfoFrameShowPos = UDim2.new(0.5, 0, 0.554, 0)
	
	Prompt.StatsTweeningInfo = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	Prompt.PlaySound = script:WaitForChild("PlayClick")
	
	local PromptFrame: Frame = Prompt.Gui
	PromptFrame.ZIndex = 3
	PromptFrame.Size = UDim2.new(0.5, 0, 0.5, 0)
	PromptFrame.Name = "MapPrompt"
	
	local PlayFade: Frame = CreateInstance("Frame", {
		Name = "PlayFadeScreen",
		BackgroundColor3 = Color3.fromRGB(0, 0, 0),
		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(1, 0, 1, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0)
	})
	
	local LoadingText: TextLabel = CreateInstance("TextLabel", {
		Name = "LoadingText",
		Visible = false,
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(0.5, 0, 0.5, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),
		BackgroundTransparency = 1,
		TextTransparency = 1,
		TextStrokeTransparency = 1,
		BorderSizePixel = 0,
		TextColor3 = Color3.fromRGB(255, 255, 255),
		Font = Enum.Font.Gotham,
		TextScaled = true,
	})
	
	---
	local InfoFrame: Frame = CreateInstance("Frame", {
		Name = "Info",
		Visible = false,
		AnchorPoint = Vector2.new(0.5, 0.5),
		Position = Prompt.InfoFrameHidePos,
		Size = UDim2.new(0.8, 0, 0.55, 0),
		BackgroundColor3 = Color3.fromRGB(0, 0, 0),
		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		Parent = PromptFrame
	})
	
	InfoLabels.Title = MapPrompt.CreateInfoLabel(
		"Title",
		UDim2.new(1, 0, 0.3, 0),
		UDim2.new(0.5, 0, 0.15, 0)
	)
	InfoLabels.Description = MapPrompt.CreateInfoLabel(
		"Description",
		UDim2.new(1, 0, 0.3, 0),
		UDim2.new(0.5, 0, 0.85, 0)
	)
	InfoLabels.Creators = MapPrompt.CreateInfoLabel(
		"Creators",
		UDim2.new(1, 0, 0.2, 0),
		UDim2.new(0.5, 0, 0.4, 0)
	)
	InfoLabels.Difficulty = MapPrompt.CreateInfoLabel(
		"Difficulty",
		UDim2.new(1, 0, 0.1, 0),
		UDim2.new(0.5, 0, 0.6, 0)
	)
	
	for i, v in pairs(InfoLabels) do
		v.Parent = InfoFrame
	end
	---
	
	LoadingText.Size = UDim2.new(0.8, 0, 0.2, 0)
	LoadingText.Name = "LoadingText"
	LoadingText.Text = "Loading..."
	LoadingText.Parent = PromptFrame
	
	local PlayButton = IconButton.New("PLAY")
	PlayButton.TweeningInfo = Prompt.StatsTweeningInfo
	
	local PlayInput: TextButton = PlayButton.GetButton()
	
	do
		local PlayButtonGui = PlayButton.Gui
		PlayButtonGui.Size = UDim2.new(0.9, 0, 0.1, 0)
		PlayButtonGui.Position = UDim2.new(0.5, 0, 0.9, 0)
		PlayButtonGui.BackgroundColor3 = Color3.fromRGB(0, 255, 100)
		PlayButtonGui.Parent = PromptFrame
		
		local PlayButtonLabel: TextLabel = PlayButton.GetDisplayLabel()
		PlayButtonLabel.Font = Enum.Font.GothamSemibold
		PlayButtonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	end
	
	Prompt.PlayFadeScreen = PlayFade
	
	local function DisconnectPlay()
		if PlayConnection then
			PlayConnection:Disconnect()
			PlayConnection = nil
		end
	end
	
	local function HideFadeFrame()
		PromptTweenGroup.Play(PlayFade, Prompt.TweeningInfo, {BackgroundTransparency = 1}, nil, function()
			PlayFade.Visible = false
		end)
	end
	
	local function ConnectError()
		LoaderConnections.Error = Loader.OnLoadError.Connect(function(Message: string)
			local Connection = LoaderConnections.Error
			if Connection then
				Connection.Disconnect()
				LoaderConnections.Error = nil
			end

			print("A Loader error occurred:", Message)
			LoadingText.Text = Message
			HideFadeFrame()
		end)
	end
	
	function Prompt.HideInfo()
		if Prompt.IsShowingInfo then
			Prompt.IsShowingInfo = false
			InfoTweenGroup.KillAll()

			local StatsTweeningInfo = Prompt.StatsTweeningInfo

			for i, v in pairs(InfoLabels) do
				InfoTweenGroup.Play(
					v,
					StatsTweeningInfo,
					{TextTransparency = 1, TextStrokeTransparency = 1}
				)
			end

			task.delay(StatsTweeningInfo.Time, function()
				if not Prompt.IsShowingInfo then
					InfoFrame.Visible = false
				end
			end)
		end
	end
	
	function Prompt.ShowInfo()
		if not Prompt.IsShowingInfo then
			Prompt.IsShowingInfo = true
			InfoTweenGroup.KillAll()

			local StatsTweeningInfo = Prompt.StatsTweeningInfo

			for i, v in pairs(InfoLabels) do
				v.TextTransparency = 1
				v.TextStrokeTransparency = 1
				
				InfoTweenGroup.Play(
					v,
					StatsTweeningInfo,
					{TextTransparency = 0, TextStrokeTransparency = 0}
				)
			end
			
			if Prompt.IsShowingInfo then
				InfoFrame.Position = Prompt.InfoFrameHidePos
				InfoTweenGroup.Play(
					InfoFrame,
					StatsTweeningInfo,
					{Position = Prompt.InfoFrameShowPos}
				)
				InfoFrame.Visible = true
			end
		end
	end
	
	function Prompt.DisplayMap(MapName: string, Launcher: {}?)
		Launcher = Launcher or Loader.GetMapLauncher(MapName)
		
		if MapName and Launcher and IsFadingIn then
			-- Hide loading text
			PromptTweenGroup.Play(LoadingText, Prompt.TweeningInfo, {TextStrokeTransparency = 1, TextTransparency = 1}, "LoadingTextFade", function()
				LoadingText.Visible = false
			end)
			
			-- Display map info
			local Difficulty = Launcher.Difficulty

			--InfoFrame.Text =
			--	"Name: <b>" .. Launcher.Name .. "</b><br/><br/>"
			--	.. "Created by: <b>" .. Launcher.Creators .. "</b><br/><br/>"
			--	.. "Description: " .. Launcher.Description .. "<br/><br/>"
			--	.. "Difficulty: <font color=\"#" .. Difficulty.Color:ToHex():upper() .. "\">" .. Difficulty.Name .. "</font>"
			--InfoFrame.Visible = true
			InfoLabels.Title.Text = Launcher.Name
			InfoLabels.Creators.Text = "By: " .. Launcher.Creators
			InfoLabels.Description.Text = Launcher.Description or ""
				
			local DifficultyLabel = InfoLabels.Difficulty
			DifficultyLabel.Text = Difficulty.Name .. " (" .. Difficulty.Index .. ")"
			DifficultyLabel.TextColor3 = Difficulty.Color
			Prompt.ShowInfo()

			--PromptTweenGroup.Play(InfoFrame, Prompt.TweeningInfo, {TextTransparency = 0})
			
			-- Connect play button
			DisconnectPlay()
			PlayConnection = PlayInput.Activated:Connect(function()
				DisconnectPlay()
				print("Now playing:", Launcher.Name)
				
				local MusicPlayer = Loader.MusicPlayer
				
				LoaderConnections.Begin = Loader.OnMapBegin.Connect(function()
					local Connection = LoaderConnections.Begin
					if Connection then
						Connection.Disconnect()
						LoaderConnections.Begin = nil
					end
					
					MusicPlayer.PlayMusicZones = true
					HideFadeFrame()
				end)
				
				MusicPlayer.PlayMusicZones = false
				MusicPlayer.FadeToSound(nil)
				
				local PlaySound = Prompt.PlaySound
				if PlaySound then
					PlaySound:Play()
				end
				
				Prompt.SetVisible(false)
				PlayFade.Visible = true
				PromptTweenGroup.Play(PlayFade, Prompt.TweeningInfo, {BackgroundTransparency = 0})
				task.wait(MapLoader.CooldownTime / 1000)
				Loader.StartMap(MapName)
			end)
			PlayButton.SetVisible(true)
		--else
		--	PromptTweenGroup.Play(InfoFrame, Prompt.TweeningInfo, {TextTransparency = 1})
		end
	end
	
	Prompt.VisibleChanged.Connect(function(IsVisible: boolean)
		IsFadingIn = IsVisible
		local Transparency
		if IsVisible then
			Transparency = 0
			LoadingText.Visible = true
		else
			Transparency = 1
			DisconnectPlay()
			PlayButton.SetVisible(false)
		end
		
		local TweeningInfo = Prompt.TweeningInfo
		if TweeningInfo then
			PromptTweenGroup.Play(LoadingText, TweeningInfo, {TextStrokeTransparency = Transparency, TextTransparency = Transparency}, "LoadingTextFade", function()
				if IsVisible == false and IsFadingIn == false and LoadingText.Visible then
					LoadingText.Visible = false
				end
			end)
			
			if IsVisible == false and IsFadingIn == false then
				--PromptTweenGroup.Play(InfoFrame, TweeningInfo, {TextTransparency = Transparency}, nil, function()
				--	if IsVisible == false and IsFadingIn == false then
				--		InfoFrame.Visible = false
				--	end
				--end)
				Prompt.HideInfo()
			end
		end
	end)
	
	--[[
	Gets this gui to load and prompt a map.
	
	Params:
	MapName <string> - The name of the map's model.
	]]--
	function Prompt.LoadMap(MapName: string)
		print("Requesting load for", MapName)
		
		local BeginConnection = LoaderConnections.Begin
		if BeginConnection then
			BeginConnection.Disconnect()
			BeginConnection = nil
		end
		
		local InitialInfo = Loader.GetMapLauncher(MapName)
		if InitialInfo then
			print("Map is already loaded and initialized, display info")
			Prompt.SetVisible(true)
			Prompt.DisplayMap(MapName, InitialInfo)
		else
			print("Map has not been loaded yet, request it from the server")
			LoadingText.Text = "Loading..."
			ConnectError()
			LoaderConnections.MapLoad = Loader.MapLoadFinished.Connect(function(Name: string)
				if Name == MapName then
					print(MapName, " loaded from the server, display the info")
					
					local Connection = LoaderConnections.MapLoad
					if Connection then
						Connection.Disconnect()
						LoaderConnections.MapLoad = nil
					end

					Prompt.DisplayMap(Name, InitialInfo)
				end
			end)
			
			Prompt.SetVisible(true)
			Loader.LoadMap(MapName)
		end
	end
	
	return Prompt
end

return MapPrompt]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">332480ae2107c2e5029b027b0013a928</UniqueId>
						</Properties>
						<Item class="Sound" referent="RBXE23942E03C4C459CA85BF87616A95A69">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="EmitterSize">10</float>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">PlayClick</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxasset://sounds/HalloweenThunder.wav</url></Content>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<UniqueId name="UniqueId">4bd2b016e6f77a7602ac376c0024243c</UniqueId>
								<float name="Volume">1</float>
								<float name="xmlRead_MaxDistance_3">10000</float>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX11F917FC17DE4796840BBA704518D65C">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">ButtonTimer</string>
							<string name="ScriptGuid">{1A4EA69F-7B52-45A1-8073-D48DB6F83549}</string>
							<ProtectedString name="Source"><![CDATA[--[[
remake of the button part of the GUIScript included in the JToH kit

original script written by Jukereise and Gammattor
remade by udev2192
]]--

local ButtonTimer = {}

ButtonTimer.Resources = {
	DefaultLayout = script:WaitForChild("DefaultLayout")
}

function ButtonTimer.DeattachGlobal()
	if _G.AttachTimer then
		_G.AttachTimer = nil
	end
end

function ButtonTimer.New(ScreenGui: ScreenGui)
	local Timer = {}
	local RunningTimers = {}
	local Frame = Instance.new("Frame")
	Frame.Name = "ButtonFrame"
	Frame.BackgroundTransparency = 1
	Frame.BorderSizePixel = 0
	Frame.AnchorPoint = Vector2.new(0.5, 0.5)
	Frame.Size = UDim2.new(1, 0, 1, 0)
	Frame.Position = UDim2.new(0.5, 0, 0.5, 0)

	local DefaultLayout = ButtonTimer.Resources.DefaultLayout:Clone()
	DefaultLayout.Name = "Layout"
	DefaultLayout.Parent = Frame

	DefaultLayout = nil

	Timer.Gui = Frame

	function Timer.Attach(Button: {}, Label: TextLabel?, Time: number?)
		Label = Label or Instance.new("TextLabel")
		local Color: Color3 = Button.Color
		
		Label.AnchorPoint = Vector2.new(0.5, 0.5)
		Label.Size = UDim2.new(1, 0, 1, 0)
		Label.Position = UDim2.new(0.5, 0, 0.5, 0)
		Label.BackgroundTransparency = 1
		Label.TextStrokeTransparency = 0
		Label.BorderSizePixel = 0
		Label.TextColor3 = Color
		Label.TextStrokeColor3 = Color3.new(1 - Color.r, 1 - Color.g, 1 - Color.b)
		Label.TextTransparency = 0
		Label.Font = Enum.Font.SourceSansBold
		Label.TextScaled = true
		Label.Parent = Frame
		
		local NewTimer = {}
		local RoundedTime = 0
		
		NewTimer.DestroyAtEnd = true
		NewTimer.Label = Label
		NewTimer.IsRunning = false
		NewTimer.TimeLeft = Time or 0
		
		function NewTimer.Dispose()
			NewTimer.IsRunning = false
			Label:Destroy()
			
			local Index = table.find(RunningTimers, NewTimer)
			
			if Index then
				table.remove(RunningTimers, Index)
			end
		end
		
		function NewTimer.Start()
			if NewTimer.IsRunning == false then
				NewTimer.IsRunning = true

				while NewTimer.IsRunning and NewTimer.TimeLeft > 0 do
					--local NewTime = math.max(NewTimer.TimeLeft - , 0)
					local Delta = task.wait()
					
					if NewTimer.IsRunning then
						local NewTime = math.max(NewTimer.TimeLeft - Delta, 0)
						NewTimer.TimeLeft = NewTime
						
						-- for optimization
						local NewRoundedTime = math.ceil(NewTime)
						if NewRoundedTime ~= RoundedTime then
							RoundedTime = NewRoundedTime
							Label.Text = NewRoundedTime
						end
					end
				end
				
				if NewTimer.DestroyAtEnd then
					NewTimer.Dispose()
				end
				
				if NewTimer.TimeLeft <= 0 then
					local OnFinish = NewTimer.OnFinish
					if OnFinish then
						OnFinish()
					end
				end
			end
		end
		
		table.insert(RunningTimers, NewTimer)
		
		return NewTimer
	end

	function Timer.AttachGlobal()
		function _G:AttachTimer(Button: {}, Label: TextLabel?)
			return Timer.Attach(Button, Label)
		end
	end

	function Timer.Dispose()
		Frame:Destroy()
		
		for i, v in pairs(RunningTimers) do
			v.Dispose()
		end
	end
	
	Frame.Parent = ScreenGui
	
	return Timer
end

return ButtonTimer]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0b19dc010bbf745b02da421b0025c12e</UniqueId>
						</Properties>
						<Item class="UIGridLayout" referent="RBX8B5437B643A240639407F148BE37F0C5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim2 name="CellPadding">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>5</YO>
								</UDim2>
								<UDim2 name="CellSize">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>100</YO>
								</UDim2>
								<token name="FillDirection">1</token>
								<int name="FillDirectionMaxCells">0</int>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="HorizontalAlignment">0</token>
								<string name="Name">DefaultLayout</string>
								<token name="SortOrder">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="StartCorner">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">0b19dc010bbf745b02da421b0025ce6e</UniqueId>
								<token name="VerticalAlignment">1</token>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBXD48C79AF9D524B95B547CD86CB1BC8E2">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Util</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1a89f7776a379b84024ab7ba008cf490</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXE244C4C8BE6E4AC3B6D78A4CAD13FD36">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PropertyLock</string>
							<string name="ScriptGuid">{CC08B6B6-69E4-440B-8D6B-7F02A409C98A}</string>
							<ProtectedString name="Source"><![CDATA[--[[
Locks an instance's property to a certain value.

By udev2192
]]--

local Object = require(script.Parent.Parent:WaitForChild("Interactives"):WaitForChild("BaseInteractive")).GetObjectClass()

local PropertyLock = {}
PropertyLock.__index = PropertyLock
PropertyLock.ClassName = script.Name

function PropertyLock.New(Inst: Instance)
	local Lock = {}
	
	local OriginalProperties = {}
	local LockedProperties = {}
	
	-- We can't use Instance.Changed since ValueBase exists
	local ChangeSignals = {}
	
	local function ResetProperty()
		--OriginalProperties[Property] = Inst[Property]
		--Inst[Property] = LockedProperties[Property]
		
		for i, v in pairs(LockedProperties) do
			local New = Inst[i]
			if v ~= New then
				OriginalProperties[i] = New
				Inst[i] = v
			end
		end
	end
	
	--[[
	Lets a locked property be changed again and changes the value
	of the property back to the most recent external change
	
	Params:
	Property <string> - The property to release/unlock
	]]--
	function Lock.Release(Property: string)
		local Connection = ChangeSignals[Property]
		if Connection then
			Connection:Disconnect()
			ChangeSignals[Property] = nil
		end
		
		if LockedProperties[Property] then
			LockedProperties[Property] = nil
		end
		
		Inst[Property] = OriginalProperties[Property]
	end
	
	--[[
	Unlocks every property that was locked by this object
	]]--
	function Lock.ReleaseAll()
		for i, v in pairs(LockedProperties) do
			Lock.Release(i)
		end
	end
	
	--[[
	Locks a property of the provided instance to a certain value
	
	Params:
	Property <string> - The property to set
	Value <any> - The value of the property to lock to
	]]--
	function Lock.Set(Property: string, Value: any)
		assert(typeof(Property) == "string", "Argument 1 must be a string")
		
		if LockedProperties[Property] == nil then
			LockedProperties[Property] = Value
			OriginalProperties[Property] = Inst[Property]
			
			Inst[Property] = Value
		end
		
		if ChangeSignals[Property] == nil then
			ChangeSignals[Property] = Inst:GetPropertyChangedSignal(Property):Connect(ResetProperty)
		end
	end
	
	return Lock
end

return PropertyLock]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">6f633b3d87c77cdd020e34b90003b423</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXBDC24EE906A24B4C8ED611F53F8A25D5">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PointHitbox</string>
							<string name="ScriptGuid">{AFC42AB9-702B-4D9A-A9C0-2615AD5A521C}</string>
							<ProtectedString name="Source"><![CDATA[--[[
A simplified version of the Hitbox class that only handles logic that involves
whether or not a point is inside certain parts

Using this over the Hitbox class saves on memory usage although if you need to
account for a part's size, the Hitbox class should be used instead

This is a test of the engine-supplied OverlapParams

By udev2192
]]--

local RunService = game:GetService("RunService")
local PhysicsService = game:GetService("PhysicsService")

local BaseInteractive = require(script.Parent.Parent
	:WaitForChild("Interactives")
	:WaitForChild("BaseInteractive")
)
local Object = BaseInteractive.GetObjectClass()
local Signal = BaseInteractive.GetSignalClass()

local abs = math.abs
local PartTypes = Enum.PartType

local PointHitbox = {}
PointHitbox.__index = PointHitbox
PointHitbox.ClassName = script.Name

export type Object3d = {
	CFrame: CFrame,
	Size: Vector3,
	Shape: Enum.PartType?
}

--[[
Returns the hypotenuse of two lengths

Params:
a <number> - The first length (usually the base of a triangle)
b <number> - The second length (usually the height of a triangle)

Returns:
<number> - The hypotenuse
]]--
function PointHitbox.Hypotenuse(a: number, b: number) : number
	return math.sqrt(a^2 + b^2)
end

--[[
Creates an Object3d for use by the functions provided here

Params:
CFrame <CFrame> - The CFrame of the object
Size <Vector3> - The size of the object
Shape <Enum.PartType?> - The object's part type, or nil if not applicable

Returns:
<Object3d> - The Object3d created.
]]--
function PointHitbox.NewObject3d(CFrame: CFrame, Size: Vector3, Shape: Enum.PartType?) : Object3d
	return {
		CFrame = CFrame,
		Size = Size,
		Shape = Shape
	}
end

--[[
Returns the distance of two vectors

Params:
Vect1 <Vector3> - The first vector
Vect2 <Vector3> - The second vector

Returns:
<number> - The distance
]]--
function PointHitbox.GetDistance(Vect1: Vector3, Vect2: Vector3) : number
	return (Vect2 - Vect1).Magnitude
end

--[[
Returns if a point in world space is inside a box

Params:
Point <Vector3> - The position of the point in world space
Box <Object3d> - The box to determine if the point is in

Returns:
<boolean> - If the point is in the box
]]--
function PointHitbox.IsPointInBox(Point: Vector3, Box: Object3d) : boolean
	local BoxSize = Box.Size
	local LocalPos = Box.CFrame:PointToObjectSpace(Point)

	return abs(LocalPos.X) <= BoxSize.X / 2 and abs(LocalPos.Y) <= BoxSize.Y / 2 and abs(LocalPos.Z) <= BoxSize.Z / 2
end

--[[
Returns whether or not a point is in a part of some sort

Params:
Point <Vector3> - The position of the point in world space
Part <Object3d> - The part to determine if the point is in

Returns:
<boolean> - If the point is in the part
]]--
function PointHitbox.IsPointInPart(Point: Vector3, Part: Object3d) : boolean
	if Part.Shape == PartTypes.Block then
		return PointHitbox.IsPointInBox(Point, Part)
	else
		return BaseInteractive.IsPointInside(Point, Part, Vector3.zero)
	end
end

function PointHitbox.IsHitboxInside(Hitbox: Object3d, PartToDetect: BasePart)
	local PartShape = PartToDetect.Shape
	local PartTypes = Enum.PartType

	local Params = OverlapParams.new()
	Params.FilterType = Enum.RaycastFilterType.Whitelist
	Params.FilterDescendantsInstances = {PartToDetect}
	Params.MaxParts = 1
	Params.CollisionGroup = PhysicsService:GetCollisionGroupName(PartToDetect.CollisionGroupId)

	local OverlapTable

	if PartShape == PartTypes.Block then
		OverlapTable = workspace:GetPartBoundsInBox(Hitbox.CFrame, Hitbox.Size, Params)
	elseif PartShape == PartTypes.Sphere then
		OverlapTable = workspace:GetPartBoundsInRadius(PartToDetect.CFrame.Position)
	else
		return BaseInteractive.IsPointInside(Hitbox.CFrame.Position, PartToDetect, Hitbox.Size)
	end

	if OverlapTable then
		return table.find(OverlapTable, PartToDetect) ~= nil
	else
		return false
	end
end

--[[
Attempts to accurately detect whether or not Part 1 is overlapping Part 2.

Params:
Part1 <table> - Any 3d object with CFrame, Size, and Shape properties
Part2 <table> - Any 3d object with CFrame, Size, and Shape properties

Returns:
<boolean> - If they overlap
]]--
function PointHitbox.DoPartsOverlap(Part1: Object3d, Part2: Object3d) : boolean	
	--if Part1.Shape == PartTypes.Block then
	local Part1Size = Part1.Size

	if Part1Size == Vector3.zero then
		--return PointHitbox.IsPointInPart(Part1.CFrame.Position, Part2)
		return BaseInteractive.IsPointInside(Part1.CFrame.Position, Part2, Vector3.zero)
	else
		--local Pos = Part1.CFrame.Position
		--local PosX = Pos.X
		--local PosY = Pos.Y
		--local PosZ = Pos.Z
		--local PartCFrame = Part1.CFrame
		--local HalfSizeX = Part1Size.X / 2
		--local HalfSizeY = Part1Size.Y / 2
		--local HalfSizeZ = Part1Size.Z / 2

		return PointHitbox.IsHitboxInside(Part1, Part2)
		-- Find a more accurate way to do this because if the side points fall out,
		-- then even if the center of the hitbox is touching, it will still think it's not
		-- Also try not to use OverlapParams later on
		--local Max

		-- minecraft
		--PointHitbox.IsPointInPart(PartCFrame:PointToWorldSpace(Vector3.new(-HalfSizeX, -HalfSizeY, -HalfSizeZ)), Part2)
		--or PointHitbox.IsPointInPart(PartCFrame:PointToWorldSpace(Vector3.new(HalfSizeX, -HalfSizeY, -HalfSizeZ)), Part2)
		--or PointHitbox.IsPointInPart(PartCFrame:PointToWorldSpace(Vector3.new(-HalfSizeX, HalfSizeY, -HalfSizeZ)), Part2)
		--or PointHitbox.IsPointInPart(PartCFrame:PointToWorldSpace(Vector3.new(-HalfSizeX, -HalfSizeY, HalfSizeZ)), Part2)
		--or PointHitbox.IsPointInPart(PartCFrame:PointToWorldSpace(Vector3.new(HalfSizeX, -HalfSizeY, HalfSizeZ)), Part2)
		--or PointHitbox.IsPointInPart(PartCFrame:PointToWorldSpace(Vector3.new(HalfSizeX, HalfSizeY, -HalfSizeZ)), Part2)
		--or PointHitbox.IsPointInPart(PartCFrame:PointToWorldSpace(Vector3.new(-HalfSizeX, HalfSizeY, HalfSizeZ)), Part2)
		--or PointHitbox.IsPointInPart(PartCFrame:PointToWorldSpace(Vector3.new(HalfSizeX, HalfSizeY, HalfSizeZ)), Part2)

		--PointHitbox.IsPointInPart(Vector3.new(PosX - HalfSizeX, PosY, PosY - HalfSizeY, PosZ - HalfSizeZ), Part2)
		--or PointHitbox.IsPointInPart(Vector3.new(PosX + HalfSizeX, PosY, PosY - HalfSizeY, PosZ - HalfSizeZ), Part2)
		--or PointHitbox.IsPointInPart(Vector3.new(PosX - HalfSizeX, PosY, PosY + HalfSizeY, PosZ - HalfSizeZ), Part2)
		--or PointHitbox.IsPointInPart(Vector3.new(PosX - HalfSizeX, PosY, PosY - HalfSizeY, PosZ + HalfSizeZ), Part2)
		--or PointHitbox.IsPointInPart(Vector3.new(PosX + HalfSizeX, PosY, PosY + HalfSizeY, PosZ - HalfSizeZ), Part2)
		--or PointHitbox.IsPointInPart(Vector3.new(PosX + HalfSizeX, PosY, PosY - HalfSizeY, PosZ + HalfSizeZ), Part2)
		--or PointHitbox.IsPointInPart(Vector3.new(PosY + HalfSizeY, PosY, PosY + HalfSizeY, PosZ - HalfSizeZ), Part2)
		--or PointHitbox.IsPointInPart(Vector3.new(PosY + HalfSizeY, PosY, PosY + HalfSizeY, PosZ + HalfSizeZ), Part2)
	end
	--end
end

function PointHitbox.New()
	local Hit = Object.New(PointHitbox.ClassName)

	local Runner: RBXScriptConnection

	--[[
	<boolean> - Whether or not the point is inside the hit region
	]]--
	Hit.IsEntered = false

	--[[
	<array> - The list of parts that the point/hitbox is touching
	]]--
	Hit.EnteredParts = {}

	--[[
	<array> - The list of parts to determine if the point/hitbox is touching them
	]]--
	Hit.ScannedParts = {}

	--[[
	<CFrame> - The CFrame of the hitbox
	]]--
	Hit.CFrame = CFrame.identity

	--[[
	<Vector3> - The size of the hitbox
	]]--
	Hit.Size = Vector3.zero

	--[[
	<Enum.PartType> - The part/shape type of the hitbox
	]]--
	Hit.Shape = PartTypes.Block

	--[[
	<boolean> - Whether or not to account for the hitbox's size
	]]--
	Hit.ApplySize = true

	--[[
	<boolean> - Whether or not to apply the size negated.
				This is useful for determining if the hitbox
				is completely inside a part.
	]]--
	--Hit.NegateSize = false

	--[[
	<BasePart> - If specified, this part's position (and size if wanted) will be
				 used
	]]--
	Hit.BindedPart = nil

	--[[
	<table> - Any 3d object with a Position property that's used as a "detection center"
	]]--
	Hit.DetectionPart = nil

	--[[
	<number> - The maximum distance that the hitbox center can be from the detection part's
			   center in order to calculate hit status. If this distance is greater, then
			   the hitbox is assumed to be no longer hitting the part.
	]]--
	Hit.DetectionRadius = 0

	--[[
	Performs an entry scan to determine if the point is inside
	This will also fire the EntryChanged event, in case the entry
	status has changed during the operation
	
	Returns:
	<boolean> - Whether or not the point is within the hit region
	]]--
	function Hit.Scan()
		local BindedPart: BasePart = Hit.BindedPart
		local CFrame: CFrame
		local Size: Vector3
		local Shape: Enum.PartType

		if BindedPart then
			local PartCFrame = BindedPart.CFrame
			if PartCFrame then
				CFrame = PartCFrame
			end

			if Hit.ApplySize == true then
				local PartSize = BindedPart.Size

				if PartSize then
					Size = PartSize
				else
					Size = Vector3.zero
				end

				if BindedPart:IsA("Part") then
					local PartShape = BindedPart.Shape

					if PartShape then
						Shape = PartShape
					end
				else
					Shape = PartTypes.Block
				end
			else
				Size = Vector3.zero
				Shape = PartTypes.Block
			end
		else
			CFrame = Hit.CFrame
			Shape = PartTypes.Block

			if Hit.ApplySize == true then
				Size = Hit.Size
			else
				Size = Vector3.zero
			end
		end

		if Hit.ApplySize == true then
			if BindedPart then
				local PartSize = BindedPart.Size

				if PartSize then
					Size = PartSize
				else
					Size = Vector3.zero
				end
			else
				Size = Hit.Size
			end
		else
			Size = Vector3.zero
		end

		--if Hit.NegateSize == true then
		--	Size *= -1
		--end

		-- Determine whether or not the positions are close enough
		-- to move onto accurate hit detection
		-- If not, assume that the hitbox is outside the hit region
		local DetectionPart = Hit.DetectionPart

		if DetectionPart then
			local Radius = Hit.DetectionRadius
			if Radius <= 0 or PointHitbox.GetDistance(CFrame.Position, DetectionPart.Position) > Radius then
				if Hit.IsEntered == true and #Hit.EnteredParts > 0 then
					Hit.EnteredParts = {}
					Hit.IsEntered = false
					Hit.EntryChanged.Fire(false)
				end

				return false
			end
		end

		local Entered = {}
		local HitboxToUse = PointHitbox.NewObject3d(CFrame, Size, Shape)

		for i, v in pairs(Hit.ScannedParts) do
			if PointHitbox.DoPartsOverlap(HitboxToUse, v) then
				table.insert(Entered, v)
			end
		end

		-- Detect whether or not entry status has changed
		local IsEntered = Hit.IsEntered
		local Changed
		if IsEntered == true and #Entered <= 0 then
			Hit.IsEntered = false
			IsEntered = false

			Changed = true
		elseif IsEntered == false and #Entered > 0 then
			Hit.IsEntered = true
			IsEntered = true

			Changed = true
		else
			Changed = false
		end

		-- This comes first for thread safety
		Hit.EnteredParts = Entered

		if Changed then
			Hit.EntryChanged.Fire(IsEntered)
		end

		return IsEntered
	end

	--[[
	Stops entry detection
	]]--
	function Hit.Stop()
		if Runner then
			Runner:Disconnect()
			Runner = nil
		end
	end

	--[[
	Starts entry detection
	]]--
	function Hit.Start()
		if Runner == nil then
			Runner = RunService.Heartbeat:Connect(Hit.Scan)
		end
	end

	--[[
	Fired when the point entry status changes
	
	Params:
	IsEntered <boolean> - Whether or not the point is inside the hit region
	]]--
	Hit.EntryChanged = Signal.New()

	Hit.OnDisposal = function()
		Hit.Stop()
		Hit.EntryChanged.DisconnectAll()
	end

	return Hit
end

return PointHitbox]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">20e9362802a12bfc0208b3e400024a41</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX126B2093879C4EAABF7101BA56FC1F94">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">OldPointHitbox</string>
							<string name="ScriptGuid">{14ED648A-DD52-416E-9D4C-86B7D43E4294}</string>
							<ProtectedString name="Source"><![CDATA[--[[
A simplified version of the Hitbox class that only handles logic that involves
whether or not a point is inside certain parts

Using this over the Hitbox class saves on memory usage although if you need to
account for a part's size, the Hitbox class should be used instead

By udev2192
]]--

local RunService = game:GetService("RunService")

local BaseInteractive = require(script.Parent.Parent
	:WaitForChild("Interactives")
	:WaitForChild("BaseInteractive")
)
local Object = BaseInteractive.GetObjectClass()
local Signal = BaseInteractive.GetSignalClass()

local PointHitbox = {}
PointHitbox.__index = PointHitbox
PointHitbox.ClassName = script.Name

function PointHitbox.New()
	local Hit = Object.New(PointHitbox.ClassName)
	
	local Runner: RBXScriptConnection
	
	--[[
	<boolean> - Whether or not the point is inside the hit region
	]]--
	Hit.IsEntered = false
	
	--[[
	<array> - The list of parts that the point/hitbox is touching
	]]--
	Hit.EnteredParts = {}
	
	--[[
	<array> - The list of parts to determine if the point/hitbox is touching them
	]]--
	Hit.ScannedParts = {}
	
	--[[
	<Vector3> - The point to use as a "hitbox"
	]]--
	Hit.Position = Vector3.zero
	
	--[[
	<Vector3> - The size of the hitbox
	]]--
	Hit.Size = Vector3.zero
	
	--[[
	<boolean> - Whether or not to account for the hitbox's size
	]]--
	Hit.ApplySize = true
	
	--[[
	<boolean> - Whether or not to apply the size negated.
				This is useful for determining if the hitbox
				is completely inside a part.
	]]--
	Hit.NegateSize = false
	
	--[[
	<BasePart> - If specified, this part's position (and size if wanted) will be
				 used
	]]--
	Hit.BindedPart = nil
	
	--[[
	Performs an entry scan to determine if the point is inside
	This will also fire the EntryChanged event, in case the entry
	status has changed during the operation
	
	Returns:
	<boolean> - Whether or not the point is within the hit region
	]]--
	function Hit.Scan()
		local BindedPart = Hit.BindedPart
		local Position: Vector3
		local Size: Vector3

		if BindedPart then
			local PartPos = BindedPart.Position
			if PartPos then
				Position = PartPos
			end
			
			if Hit.ApplySize == true then
				local PartSize = BindedPart.Size
				
				if PartSize then
					Size = PartSize
				else
					Size = Vector3.zero
				end
			else
				Size = Vector3.zero
			end
		else
			Position = Hit.Position
			
			if Hit.ApplySize == true then
				Size = Hit.Size
			else
				Size = Vector3.zero
			end
		end
		
		if Hit.NegateSize == true then
			Size *= -1
		end

		local Entered = {}

		for i, v in pairs(Hit.ScannedParts) do
			if BaseInteractive.IsPointInside(Position, v, Size) then
				table.insert(Entered, v)
			end
		end

		-- Detect whether or not entry status has changed
		local IsEntered = Hit.IsEntered
		local Changed
		if IsEntered == true and #Entered <= 0 then
			Hit.IsEntered = false
			IsEntered = false
			
			Changed = true
		elseif IsEntered == false and #Entered > 0 then
			Hit.IsEntered = true
			IsEntered = true
			
			Changed = true
		else
			Changed = false
		end

		-- This comes first for thread safety
		Hit.Parts = Entered

		if Changed then
			Hit.EntryChanged.Fire(IsEntered)
		end
		
		return IsEntered
	end
	
	--[[
	Stops entry detection
	]]--
	function Hit.Stop()
		if Runner then
			Runner:Disconnect()
			Runner = nil
		end
	end
	
	--[[
	Starts entry detection
	]]--
	function Hit.Start()
		if Runner == nil then
			Runner = RunService.Heartbeat:Connect(Hit.Scan)
		end
	end
	
	--[[
	Fired when the point entry status changes
	
	Params:
	IsEntered <boolean> - Whether or not the point is inside the hit region
	]]--
	Hit.EntryChanged = Signal.New()
	
	Hit.OnDisposal = function()
		Hit.Stop()
		Hit.EntryChanged.DisconnectAll()
	end
	
	return Hit
end

return PointHitbox]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">31cd09bb97eaf056025c01d50151f1c6</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXDBAE26E931324770845F0359F2169CA3">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Bezier</string>
							<string name="ScriptGuid">{221CE17D-7A39-4E17-9459-65CC696BB9B7}</string>
							<ProtectedString name="Source"><![CDATA[--[[
Bezier.lua by udev2192

Handles operations with bezier curves

Updated in 2022 for performance improvements

Thanks to Roblox for referencing some of the math functions:
https://developer.roblox.com/en-us/articles/Bezier-curves
]]--

type PossibleCalcTypes = number | Vector3

local Bezier = {}

-- For interpolation
function Bezier.Lerp(a, b, t)
	return a + (b - a) * t
end

-- For inverse interpolation
-- c is what you wanna convert back into time,
-- which is a value that can be used with Bezier.Lerp
function Bezier.InverseLerp(a, b, c)
	return (c - a)/(b - a)
end

function Bezier.Linear(t, p0, p1)
	return p0 + (p1 - p0) * t
	--return (1 - t) * p0 + t * p1
end

function Bezier.Quadratic(t, p0, p1, p2)
	return (1 - t)^2 * p0 + 2 * (1 - t) * t * p1 + t^2 * p2
end

function Bezier.Cubic(t, p0, p1, p2, p3)
	return (1 - t)^3 * p0 + 3 * (1 - t)^2 * t * p1 + 3 * (1 - t) * t^2 * p2 + t^3 * p3
end

--[[
Calculates the course of a new bezier curve and returns it.

Params:
Degree <number> - Calculation degree (linear, quadratic, or cubic)
				  (any number between 1 and 3)
NumSegments <number> - Number of segments to calculate
					(exceeding 1800 may cause a crash on some devices)
Points <{number | Vector3}> - Numbers or Vector3s to calculate points for
							  (should range between 2 to 4 for best results)
]]--
function Bezier.New(Degree: number, NumSegments: number, Points: {PossibleCalcTypes})
	local p0 = Points[1]
	local p1 = Points[2]
	local p2
	local p3
	local f -- Math function used for calculating the bezier
	
	if Degree == 1 then
		f = Bezier.Linear
	elseif Degree == 2 then
		p2 = Points[3]
		f = Bezier.Quadratic
	elseif Degree == 3 then
		p2 = Points[3]
		p3 = Points[4]
		f = Bezier.Cubic
	else
		error("Degree (argument 1) must be between 1 and 3.")
	end
	
	local NewBz = {}
	local Result: {PossibleCalcTypes} = {}
	
	-- Calculate the bezier segments
	local SegmentIndex = 0
	while SegmentIndex <= NumSegments do
		table.insert(Result, f(SegmentIndex / NumSegments, p0, p1, p2, p3))
		SegmentIndex += 1
	end
	
	-- Provide functions to do things with the segments
	
	--[[
	Gets and returns the resulting segments.
	The number of items in this array is the specified
	number of segments plus 1
	
	Returns:
	<{number | Vector3}> - The resulting segments
	]]--
	function NewBz.GetAllSegments(): {PossibleCalcTypes}
		return Result
	end
	
	--[[
	Returns a segment from the given time (0-1)
	
	Params:
	Time <number> - The time
	
	Returns:
	<number | Vector3> - The resulting segment
	]]--
	function NewBz.Lerp(Time: number): PossibleCalcTypes
		return Result[math.floor(Time * SegmentIndex)]
	end
	
	--[[
	"Smoothly" interpolates through the segments by getting
	two calculated values, then interpolating themselves.
	
	Params:
	Time <number> - The time
	
	Returns:
	<number | Vector3> - The resulting segment
	]]--
	function NewBz.SmoothLerp(Time: number): PossibleCalcTypes
		if Time <= 0 then
			return Result[1]
		elseif Time <= 1 then
			local FirstIndex = math.floor(Time * SegmentIndex)
			local SecondIndex = FirstIndex + 1
			
			local FirstResult = Result[FirstIndex]
			local SecondResult = Result[SecondIndex]
			if FirstResult and SecondResult then
				--print(Result[FirstIndex])
				--print(Bezier.InverseLerp(FirstIndex / SegmentIndex, SecondIndex / SegmentIndex, Time))
				return Bezier.Lerp(
					FirstResult,
					SecondResult,
					Bezier.InverseLerp(FirstIndex / SegmentIndex, SecondIndex / SegmentIndex, Time)--Bezier.InverseLerp(FirstIndex, SecondIndex, Time)
				)
			else
				return FirstResult or SecondResult or Result[1]
			end
		else
			return Result[SegmentIndex]
		end
	end
	
	return NewBz
end

return Bezier]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">135020c8d7ddaf87027e15410042ea00</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX21FAB554041F45A9AA39964A6B88CCF4">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Globals</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">512a5e6b44701b830252ca34002b59f6</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXF1A5711A32D64A88A0A5B3D09F548406">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BGMPlayer</string>
							<string name="ScriptGuid">{5DA51D89-FACE-4C82-B3D3-EF368A195D7F}</string>
							<ProtectedString name="Source"><![CDATA[--[[
Global BGM player
]]--

local GLOBAL_NAME = "GlobalMusicPlayer"

local MapHandles = script.Parent.Parent
local BaseInteractive = require(MapHandles:WaitForChild("Interactives"):WaitForChild("BaseInteractive"))

local GlobalMusicPlayer = BaseInteractive.GetGlobal(GLOBAL_NAME)

if GlobalMusicPlayer then
	return GlobalMusicPlayer
else
	GlobalMusicPlayer = require(MapHandles.Parent:WaitForChild("Sound"):WaitForChild("MusicPlayer")).New()
	BaseInteractive.SetGlobal(GLOBAL_NAME, GlobalMusicPlayer)
	return GlobalMusicPlayer
end]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">512a5e6b44701b830252ca34002b5a02</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX2A89B693F15644BEB269D8AA1C7E3FB7">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">DefaultWinLauncher</string>
						<string name="ScriptGuid">{5899935E-CA39-48D4-9775-B930B93F1330}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Default launcher for win places
]]--

local MapLauncher = require(script.Parent:WaitForChild("MapLauncher"))
local BaseInteractive = MapLauncher.GetBaseInteractive()

local Launcher = {}

function Launcher.GetWinPlaceContainer()
	return game:GetService("ReplicatedStorage"):WaitForChild("WinPlaces")
end

function Launcher.New(Model: Model, Loader: {})
	local Map = MapLauncher.New(Model, Loader)
	
	local ExitConnection

	-- The map's name
	Map.Name = "Win Place"

	-- Number enclosed in brackets specifies the difficulty
	-- (1-14)
	Map.Difficulty = MapLauncher.DefaultInfo.FallbackDifficulty

	-- Whoever created the map
	Map.Creators = ""
	
	local function DisconnectExit()
		if ExitConnection then
			ExitConnection:Disconnect()
		end
	end
	
	Map.OnClientStart = function()
		Map.ApplyLighting()
		Map.StartInteractives()
		
		ExitConnection = Model:WaitForChild("Exit").Touched:Connect(function(OtherPart)
			if OtherPart == BaseInteractive.GetCharacterHandle().Parts.Hitbox then
				DisconnectExit()
				Loader.ExitWinPlace()
			end
		end)
		
		Model.Parent = MapLauncher.GetMapContainer()
		
		local Humanoid = BaseInteractive.GetCharacterHandle().Parts.Humanoid
		if Humanoid then
			Humanoid.Health = Humanoid.MaxHealth
		end
		
		Map.SpawnLocalPlayer()
		Loader.MusicPlayer.MainSound = Model:WaitForChild("WinMusic")
		
		return true
	end
	
	local DefaultEnd = Map.OnClientEnd
	Map.OnClientEnd = function()
		DisconnectExit()
		DefaultEnd()
		Model.Parent = Launcher.GetWinPlaceContainer()
	end

	return Map
end

return Launcher]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">78aa06c01e61697f027658b4000ce66d</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX23B9DCD441934CF79658CF895637F40B">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Gui</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0ee705e8faf759c20180fd200001887b</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX168EA5437BE3402C80AD958DD009A010">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">BrowserLib</string>
						<string name="ScriptGuid">{9B7E3A96-2A43-435F-B5F4-8879E6D3150C}</string>
						<ProtectedString name="Source"><![CDATA[--[[
BrowserLib.lua by udev2192

The module that contains all the functions to boost the efficiency of the Map Browser development

Make sure to put sizes and positions according to the anchor point Vector2.new(0.5,0.5)

This module is designed for client use

Revamped 9 March 2021 to be less confusing and more OOP based
]]--

local mod = {}

-- CONSTANTS --
local DEFAULT_FONT = Enum.Font.GothamBold -- When a font is not specified when applicable, this font will be applied
local UI_COLOR_SEQUENCE = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(128, 0, 255)), ColorSequenceKeypoint.new(1,Color3.fromRGB(204, 0, 255))}) -- The color sequence of the UIGradients used by the text objects
local GRADIENT_ROTATION_INCREMENT = 0.5 -- How much rotating gradients rotate by for each frame
local TWEEN_INFO = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out) -- The TweenInfo used to Tween objects
local CORNER_RADIUS = 0 -- How much to round the corner of the GUI objects out of 1 (leave at 0 to turn this off)
local DEFAULT_LAYER = 2 -- The default ZIndex a GUI object is set to when one is not specified
---------------

-- Property Configuration --
local Defaults = {
	-- Format: ["Instance/Class name"] = {Properties}
	["TextButton"] = {
		AnchorPoint = Vector2.new(0.5,0.5),
		Size = UDim2.new(0.25,0,0.25,0),
		Position = UDim2.new(0.5,0,0.5,0),

		BackgroundColor3 = Color3.new(0,0,0),
		TextColor3 = Color3.new(1,1,1),
		Font = DEFAULT_FONT,
		Text = "Blank Text",
		TextScaled = true,
		BorderMode = Enum.BorderMode.Inset,
		BorderColor3 = Color3.new(1,1,1),
		BorderSizePixel = 2,
		ZIndex = DEFAULT_LAYER
	},

	["TextLabel"] = {
		AnchorPoint = Vector2.new(0.5,0.5),
		Size = UDim2.new(0.25,0,0.25,0),
		Position = UDim2.new(0.5,0,0.5,0),

		BackgroundTransparency = 1,
		TextColor3 = Color3.new(1,1,1),
		Font = DEFAULT_FONT,
		Text = "Blank Text",
		TextScaled = true,
		BorderMode = Enum.BorderMode.Inset,
		BorderSizePixel = 0,
		TextStrokeTransparency = 0,
		ZIndex = DEFAULT_LAYER
	},

	["TextBox"] = {
		AnchorPoint = Vector2.new(0.5,0.5),
		Size = UDim2.new(0.25,0,0.25,0),
		Position = UDim2.new(0.5,0,0.5,0),
		
		BackgroundTransparency = 1,
		TextColor3 = Color3.new(1,1,1),
		Font = DEFAULT_FONT,
		PlaceholderText = "Blank Placeholder Text",
		Text = "",
		TextScaled = true,
		BorderMode = Enum.BorderMode.Inset,
		BorderColor3 = Color3.new(1,1,1),
		BorderSizePixel = 0,
		ZIndex = DEFAULT_LAYER,
	},

	["Frame"] = {
		AnchorPoint = Vector2.new(0.5,0.5),
		Size = UDim2.new(0.25,0,0.25,0),
		Position = UDim2.new(0.5,0,0.5,0),

		BorderMode = Enum.BorderMode.Inset,
		BorderColor3 = Color3.new(1,1,1),
		BorderSizePixel = 2,
		BackgroundColor3 = Color3.new(1,1,1),
		BackgroundTransparency = 0.75,
		ClipsDescendants = true,
		ZIndex = DEFAULT_LAYER
	}
}
----------------------------

-- UI framework:
local ClickConnections = {} -- Stores the Activated connections for buttons
local GradientConnections = {} -- Stores the Stepped connections for GUI objects with rotating gradients
local TextBoxConnections = {} -- Stores the FocusLost connections when a function is binded to the FunctionOnInput

local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local ScreenGui = script.Parent

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilModules = RepModules:WaitForChild("Utils")

-- Reference the utility library
local Util = UtilModules:WaitForChild("Utility")
if Util:IsA("ModuleScript") then
	Util = require(Util)
end

-- Apply property configurations:
for i, v in pairs(Defaults) do
	if typeof(v) == "table" then
		Util.SetPropertyDefaults(i, v)
	end
end

-- Make some constants accessible by other scripts/modules
mod.ColorSequence = UI_COLOR_SEQUENCE
mod.ModuleFont = DEFAULT_FONT

-- Functions/methods (new):
function mod.ApplyFinishes(Object) -- Applies finishing touches to the provided instance
	if typeof(Object) == "Instance" then
		-- Apply the gradient
		local Gradient = Instance.new("UIGradient") -- Add the gradient to make a cool ui effect
		Gradient.Color = UI_COLOR_SEQUENCE
		Gradient.Rotation = 90
		Gradient.Parent = Object

		-- Apply the corner radius
		if CORNER_RADIUS > 0 then
			local Corner = Instance.new("UICorner")
			Corner.CornerRadius = UDim.new(CORNER_RADIUS, 0)
			Corner.Parent = Object
		end

		-- Return the redesigned GUI object
		return Object
	else
		warn("Object type must be an Instance.")
		return nil
	end
end

function mod.RotateGradient(Object, IsRotating) -- Rotates the ui gradient for the specified gui object an even cooler effect
	if Object ~= nil and Object:IsA("GuiObject") then
		if IsRotating ~= nil and typeof(IsRotating) == "boolean" then
			local Gradient = Object:WaitForChild("UIGradient", 4)
			if Gradient then
				if IsRotating then
					GradientConnections[Object] = RunService.Stepped:Connect(function()
						Gradient.Rotation = Gradient.Rotation + GRADIENT_ROTATION_INCREMENT
					end)
				else
					if GradientConnections[Object] ~= nil then
						GradientConnections[Object]:Disconnect()
						GradientConnections[Object] = nil
					end
				end
			else
				warn("Couldn't find a UIGradient in the specified GUI object.")
			end
		else
			warn("IsRotating (argument 2) isn't specified or isn't a boolean (true/false).")
		end
	else
		warn("The object (argument 1) isn't specified or isn't a GUI object.")
	end
end

function mod.New(Type, Properties) -- Constructs a recognized Instance by this UI framework
	-- Please use this over the old constructors as this one is much more simplified
	if typeof(Defaults[Type]) == "table" then
		-- Make the object
		local Object = Util.CreateInstance(Type, Properties)

		-- Finish off the object
		mod.ApplyFinishes(Object)

		-- Return the finished object
		return Object
	else
		warn(tostring(Type) .. " isn't recognized by this version of BrowserLib.")
	end
end

return mod

--[[
Old functions/methods (please don't use any of these as they are much harder to use):
function mod.MakeButton(Text, Size, Position)
	local Button = Util.CreateInstance("TextButton", {
		-- Make the UI object
		Text = Text,
		Size = Size,
		Position = Position
	})
	
	mod.ApplyFinishes(Button)
	
	return Button
end

function mod.MakeLabel(Text, Size, Position)
	local Label = Util.CreateInstance("TextButton", {
		-- Make the UI object
		Text = Text,
		Size = Size,
		Position = Position
	})

	mod.ApplyFinishes(Label)
	
	return Label
end

function mod.MakeTextBox(PlaceholderText, Size, Position, Parent, FunctionOnInput, Layer, Font)
	-- FunctionOnInput should account for the first parameter that is passed to it, which is the text entered
	local TextBox = Instance.new("TextBox") -- Make the TextBox
	TextBox.AnchorPoint = Vector2.new(0.5,0.5)
	TextBox.Size = Size
	TextBox.Position = Position
	TextBox.BackgroundTransparency = 1
	TextBox.TextColor3 = Color3.new(1,1,1)
	TextBox.Font = Font or DEFAULT_FONT
	TextBox.PlaceholderText = PlaceholderText or "Blank Placeholder Text"
	TextBox.Text = ""
	TextBox.TextScaled = true
	TextBox.BorderMode = Enum.BorderMode.Inset
	TextBox.BorderColor3 = Color3.new(1,1,1)
	TextBox.BorderSizePixel = 0
	TextBox.ZIndex = Layer or DEFAULT_LAYER

	if CORNER_RADIUS > 0 then
		local Corner = Instance.new("UICorner")
		Corner.CornerRadius = UDim.new(CORNER_RADIUS, 0)
		Corner.Parent = TextBox
	end
	
	if FunctionOnInput ~= nil then
		if typeof(FunctionOnInput) == "function" then
			TextBox.FocusLost:Connect(function()
				local TextBoxText = TextBox.Text
				FunctionOnInput(TextBoxText)
				TextBoxText = nil
			end)
		else
			warn("When choosing to specify the FunctionOnInput (argument 5), make sure it is a function and that the first argument of that function will have the text entered passed to")
		end
	end

	TextBox.Parent = Parent or ScreenGui
	return TextBox
end

function mod.BindFunction(Button, FunctionWhenClicked)
	if Button ~= nil and Button:IsA("TextButton") then
		if FunctionWhenClicked ~= nil and typeof(FunctionWhenClicked) == "function" then
			ClickConnections[Button] = Button.Activated:Connect(FunctionWhenClicked) -- Bind the specified function
		else
			warn("FunctionWhenClick (argument 2) isn't specified or isn't a function so the button will do nothing.")
		end
	else
		warn("The Button specified (argument 1) isn't provided or isn't a TextButton.")
	end
end

function mod.UnbindFunction(Button)
	if Button ~= nil and Button:IsA("TextButton") then
		if ClickConnections[Button] ~= nil then
			ClickConnections[Button]:Disconnect()
			ClickConnections[Button] = nil
		end
	else
		warn("The button isn't specified in the first and only argument or the object provided isn't a TextButton.")
	end
end

function mod.UnbindFunctionOnInput(TextBox)
	if TextBox ~= nil and TextBox:IsA("TextBox") then
		if TextBoxConnections[TextBox] ~= nil then
			TextBoxConnections[TextBox]:Disconnect()
			TextBoxConnections[TextBox] = nil
		end
	else
		warn("The TextBox isn't specified in the first and only argument or the object provided isn't a TextBox.")
	end
end

function mod.MakeFrame(Size, Position, Parent, Layer, AddColor)
	local Frame = Instance.new("Frame") -- Make the Frame
	Frame.AnchorPoint = Vector2.new(0.5,0.5)
	Frame.Size = Size
	Frame.Position = Position
	Frame.BorderMode = Enum.BorderMode.Inset
	Frame.BorderColor3 = Color3.new(1,1,1)
	Frame.BorderSizePixel = 2
	if AddColor then
		Frame.BackgroundColor3 = Color3.new(1,1,1)
	else
		Frame.BackgroundColor3 = Color3.new(0,0,0)
	end
	Frame.BackgroundTransparency = 0.75
	Frame.ClipsDescendants = true
	Frame.ZIndex = Layer or DEFAULT_LAYER
	
	if AddColor then
		local Gradient = Instance.new("UIGradient") -- Add the gradient to make a cool ui effect
		Gradient.Color = UI_COLOR_SEQUENCE
		Gradient.Rotation = 90
		Gradient.Parent = Frame
	end

	if CORNER_RADIUS > 0 then
		local Corner = Instance.new("UICorner")
		Corner.CornerRadius = UDim.new(CORNER_RADIUS, 0)
		Corner.Parent = Frame
	end
	
	Frame.Parent = Parent or ScreenGui
	return Frame
end

function mod.AddARC(GuiObject, Ratio)
	-- Add an AspectRatioConstraint to a GUIObject which is needed in certain UI design cases
	if GuiObject:IsA("GuiBase") then
		local AspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
		AspectRatioConstraint.AspectRatio = Ratio or 1
		AspectRatioConstraint.DominantAxis = Enum.DominantAxis.Height
		AspectRatioConstraint.Parent = GuiObject

		return AspectRatioConstraint
	end
end

function mod.Tween(Object, PropertiesToTween, DelayThread) -- The DelayThread should be true/false and specifes whether the tween delays the current thread or not
	if Object ~= nil then
		if PropertiesToTween ~= nil and typeof(PropertiesToTween) == "table" then
			if DelayThread == nil or typeof(DelayThread) == "boolean" then
				local Tween = TweenService:Create(Object, TWEEN_INFO, PropertiesToTween)
				local function PlayTween()
					Tween:Play()
					Tween.Completed:Wait()
					Tween:Destroy()
					Tween = nil
				end
				if DelayThread then
					PlayTween()
				else
					coroutine.wrap(PlayTween)()
				end
				return Tween
			else
				warn("When specified, the DelayThread argument (argument 3) should be a boolean (true/false) detailing whether to yield the current thread while the tween is playing or not")
			end
		else
			warn("PropertiesToTween (argument 2) isn't specified or isn't a table of object properties to tween.")
		end
	else
		warn("The Object (argument 1) isn't specified")
	end
end
--]]]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eac</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX16CB634F76834F3F960EAA3EAF9A641C">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Themes</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd200001887c</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX0F129D46D1F8458D9234FD457B1624D0">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Wavy</string>
							<string name="ScriptGuid">{AB4C496C-231A-4232-B0F5-093377636F56}</string>
							<ProtectedString name="Source"><![CDATA[--[[
This is a simplistic/aEsThEtIc gui theme.

Originally designed for the FE2 Map Browser, which is a
long abandoned project.

By udev2192
]]--

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")
local Utils = RepModules:WaitForChild("Utils")
local BaseScheme = require(Utils:WaitForChild("BaseScheme"))

RepModules, Utils = nil, nil

local Wavy = BaseScheme.GetScheme("UI_" .. script.Name)

-- CONSTANTS --
local DEFAULT_FONT = Enum.Font.Gotham -- When a font is not specified when applicable, this font will be applied
local UI_COLOR_SEQUENCE = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(128, 0, 255)), ColorSequenceKeypoint.new(1,Color3.fromRGB(204, 0, 255))}) -- The color sequence of the UIGradients used by the text objects
local GRADIENT_ROTATION_INCREMENT = 0.5 -- How much rotating gradients rotate by for each frame
local TWEEN_INFO = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out) -- The TweenInfo used to Tween objects
local CORNER_RADIUS = 0 -- How much to round the corner of the GUI objects out of 1 (leave at 0 to turn this off)
local DEFAULT_LAYER = 2 -- The default ZIndex a GUI object is set to when one is not specified
---------------

-- Property Configuration --
local Defaults = {
	-- Format: ["Instance/Class name"] = {Properties}
	["TextButton"] = {
		AnchorPoint = Vector2.new(0.5,0.5),
		Size = UDim2.new(0.25,0,0.25,0),
		Position = UDim2.new(0.5,0,0.5,0),

		BackgroundColor3 = Color3.new(0,0,0),
		TextColor3 = Color3.new(1,1,1),
		Font = DEFAULT_FONT,
		Text = "Blank Text",
		TextScaled = true,
		BorderMode = Enum.BorderMode.Inset,
		BorderColor3 = Color3.new(1,1,1),
		BorderSizePixel = 2,
		ZIndex = DEFAULT_LAYER
	},

	["TextLabel"] = {
		AnchorPoint = Vector2.new(0.5,0.5),
		Size = UDim2.new(0.25,0,0.25,0),
		Position = UDim2.new(0.5,0,0.5,0),

		BackgroundTransparency = 1,
		TextColor3 = Color3.new(1,1,1),
		Font = DEFAULT_FONT,
		Text = "Blank Text",
		TextScaled = true,
		BorderMode = Enum.BorderMode.Inset,
		BorderSizePixel = 0,
		TextStrokeTransparency = 0,
		ZIndex = DEFAULT_LAYER
	},

	["TextBox"] = {
		AnchorPoint = Vector2.new(0.5,0.5),
		Size = UDim2.new(0.25,0,0.25,0),
		Position = UDim2.new(0.5,0,0.5,0),
		
		BackgroundTransparency = 1,
		TextColor3 = Color3.new(1,1,1),
		Font = DEFAULT_FONT,
		PlaceholderText = "Blank Placeholder Text",
		Text = "",
		TextScaled = true,
		BorderMode = Enum.BorderMode.Inset,
		BorderColor3 = Color3.new(1,1,1),
		BorderSizePixel = 0,
		ZIndex = DEFAULT_LAYER,
	},

	["Frame"] = {
		AnchorPoint = Vector2.new(0.5,0.5),
		Size = UDim2.new(0.25,0,0.25,0),
		Position = UDim2.new(0.5,0,0.5,0),

		BorderMode = Enum.BorderMode.Inset,
		BorderColor3 = Color3.new(1,1,1),
		BorderSizePixel = 2,
		BackgroundColor3 = Color3.new(1,1,1),
		BackgroundTransparency = 0.75,
		ClipsDescendants = true,
		ZIndex = DEFAULT_LAYER
	}
}
----------------------------

-- UI framework:
local ClickConnections = {} -- Stores the Activated connections for buttons
local GradientConnections = {} -- Stores the Stepped connections for GUI objects with rotating gradients
local TextBoxConnections = {} -- Stores the FocusLost connections when a function is binded to the FunctionOnInput

local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local ScreenGui = script.Parent

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilModules = RepModules:WaitForChild("Utils")

-- Reference the utility library
local Util = UtilModules:WaitForChild("Utility")
if Util:IsA("ModuleScript") then
	Util = require(Util)
end

-- Apply property configurations:
for i, v in pairs(Defaults) do
	if typeof(v) == "table" then
		Util.SetPropertyDefaults(i, v)
	end
end

-- Make some constants accessible by other scripts/modules
Wavy.ColorSequence = UI_COLOR_SEQUENCE
Wavy.ModuleFont = DEFAULT_FONT

-- Apply defaults
Wavy.Defaults = Defaults

-- Functions/methods (new):
function Wavy.ApplyFinishes(Object) -- Applies finishing touches to the provided instance
	if typeof(Object) == "Instance" then
		-- Apply the gradient
		local Gradient = Instance.new("UIGradient") -- Add the gradient to make a cool ui effect
		Gradient.Color = UI_COLOR_SEQUENCE
		Gradient.Rotation = 90
		Gradient.Parent = Object

		-- Apply the corner radius
		if CORNER_RADIUS > 0 then
			local Corner = Instance.new("UICorner")
			Corner.CornerRadius = UDim.new(CORNER_RADIUS, 0)
			Corner.Parent = Object
		end

		-- Return the redesigned GUI object
		return Object
	else
		warn("Object type must be an Instance.")
		return nil
	end
end

function Wavy.RotateGradient(Object, IsRotating) -- Rotates the ui gradient for the specified gui object an even cooler effect
	if Object ~= nil and Object:IsA("GuiObject") then
		if IsRotating ~= nil and typeof(IsRotating) == "boolean" then
			local Gradient = Object:WaitForChild("UIGradient", 4)
			if Gradient then
				if IsRotating then
					GradientConnections[Object] = RunService.Stepped:Connect(function()
						Gradient.Rotation = Gradient.Rotation + GRADIENT_ROTATION_INCREMENT
					end)
				else
					if GradientConnections[Object] ~= nil then
						GradientConnections[Object]:Disconnect()
						GradientConnections[Object] = nil
					end
				end
			else
				warn("Couldn't find a UIGradient in the specified GUI object.")
			end
		else
			warn("IsRotating (argument 2) isn't specified or isn't a boolean (true/false).")
		end
	else
		warn("The object (argument 1) isn't specified or isn't a GUI object.")
	end
end

-- Kept for backwards compatibility.
function Wavy.New(Type, Properties) -- Constructs a recognized Instance by this UI framework
	-- Please use this over the old constructors as this one is much more simplified
	if typeof(Defaults[Type]) == "table" then
		-- Make the object
		local Object = Util.CreateInstance(Type, Properties)

		-- Finish off the object
		Wavy.ApplyFinishes(Object)

		-- Return the finished object
		return Object
	else
		warn(tostring(Type) .. " isn't recognized by this version of BrowserLib.")
	end
end

return Wavy

--[[
Old functions/methods (please don't use any of these as they are much harder to use):
function mod.MakeButton(Text, Size, Position)
	local Button = Util.CreateInstance("TextButton", {
		-- Make the UI object
		Text = Text,
		Size = Size,
		Position = Position
	})
	
	mod.ApplyFinishes(Button)
	
	return Button
end

function mod.MakeLabel(Text, Size, Position)
	local Label = Util.CreateInstance("TextButton", {
		-- Make the UI object
		Text = Text,
		Size = Size,
		Position = Position
	})

	mod.ApplyFinishes(Label)
	
	return Label
end

function mod.MakeTextBox(PlaceholderText, Size, Position, Parent, FunctionOnInput, Layer, Font)
	-- FunctionOnInput should account for the first parameter that is passed to it, which is the text entered
	local TextBox = Instance.new("TextBox") -- Make the TextBox
	TextBox.AnchorPoint = Vector2.new(0.5,0.5)
	TextBox.Size = Size
	TextBox.Position = Position
	TextBox.BackgroundTransparency = 1
	TextBox.TextColor3 = Color3.new(1,1,1)
	TextBox.Font = Font or DEFAULT_FONT
	TextBox.PlaceholderText = PlaceholderText or "Blank Placeholder Text"
	TextBox.Text = ""
	TextBox.TextScaled = true
	TextBox.BorderMode = Enum.BorderMode.Inset
	TextBox.BorderColor3 = Color3.new(1,1,1)
	TextBox.BorderSizePixel = 0
	TextBox.ZIndex = Layer or DEFAULT_LAYER

	if CORNER_RADIUS > 0 then
		local Corner = Instance.new("UICorner")
		Corner.CornerRadius = UDim.new(CORNER_RADIUS, 0)
		Corner.Parent = TextBox
	end
	
	if FunctionOnInput ~= nil then
		if typeof(FunctionOnInput) == "function" then
			TextBox.FocusLost:Connect(function()
				local TextBoxText = TextBox.Text
				FunctionOnInput(TextBoxText)
				TextBoxText = nil
			end)
		else
			warn("When choosing to specify the FunctionOnInput (argument 5), make sure it is a function and that the first argument of that function will have the text entered passed to")
		end
	end

	TextBox.Parent = Parent or ScreenGui
	return TextBox
end

function mod.BindFunction(Button, FunctionWhenClicked)
	if Button ~= nil and Button:IsA("TextButton") then
		if FunctionWhenClicked ~= nil and typeof(FunctionWhenClicked) == "function" then
			ClickConnections[Button] = Button.Activated:Connect(FunctionWhenClicked) -- Bind the specified function
		else
			warn("FunctionWhenClick (argument 2) isn't specified or isn't a function so the button will do nothing.")
		end
	else
		warn("The Button specified (argument 1) isn't provided or isn't a TextButton.")
	end
end

function mod.UnbindFunction(Button)
	if Button ~= nil and Button:IsA("TextButton") then
		if ClickConnections[Button] ~= nil then
			ClickConnections[Button]:Disconnect()
			ClickConnections[Button] = nil
		end
	else
		warn("The button isn't specified in the first and only argument or the object provided isn't a TextButton.")
	end
end

function mod.UnbindFunctionOnInput(TextBox)
	if TextBox ~= nil and TextBox:IsA("TextBox") then
		if TextBoxConnections[TextBox] ~= nil then
			TextBoxConnections[TextBox]:Disconnect()
			TextBoxConnections[TextBox] = nil
		end
	else
		warn("The TextBox isn't specified in the first and only argument or the object provided isn't a TextBox.")
	end
end

function mod.MakeFrame(Size, Position, Parent, Layer, AddColor)
	local Frame = Instance.new("Frame") -- Make the Frame
	Frame.AnchorPoint = Vector2.new(0.5,0.5)
	Frame.Size = Size
	Frame.Position = Position
	Frame.BorderMode = Enum.BorderMode.Inset
	Frame.BorderColor3 = Color3.new(1,1,1)
	Frame.BorderSizePixel = 2
	if AddColor then
		Frame.BackgroundColor3 = Color3.new(1,1,1)
	else
		Frame.BackgroundColor3 = Color3.new(0,0,0)
	end
	Frame.BackgroundTransparency = 0.75
	Frame.ClipsDescendants = true
	Frame.ZIndex = Layer or DEFAULT_LAYER
	
	if AddColor then
		local Gradient = Instance.new("UIGradient") -- Add the gradient to make a cool ui effect
		Gradient.Color = UI_COLOR_SEQUENCE
		Gradient.Rotation = 90
		Gradient.Parent = Frame
	end

	if CORNER_RADIUS > 0 then
		local Corner = Instance.new("UICorner")
		Corner.CornerRadius = UDim.new(CORNER_RADIUS, 0)
		Corner.Parent = Frame
	end
	
	Frame.Parent = Parent or ScreenGui
	return Frame
end

function mod.AddARC(GuiObject, Ratio)
	-- Add an AspectRatioConstraint to a GUIObject which is needed in certain UI design cases
	if GuiObject:IsA("GuiBase") then
		local AspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
		AspectRatioConstraint.AspectRatio = Ratio or 1
		AspectRatioConstraint.DominantAxis = Enum.DominantAxis.Height
		AspectRatioConstraint.Parent = GuiObject

		return AspectRatioConstraint
	end
end

function mod.Tween(Object, PropertiesToTween, DelayThread) -- The DelayThread should be true/false and specifes whether the tween delays the current thread or not
	if Object ~= nil then
		if PropertiesToTween ~= nil and typeof(PropertiesToTween) == "table" then
			if DelayThread == nil or typeof(DelayThread) == "boolean" then
				local Tween = TweenService:Create(Object, TWEEN_INFO, PropertiesToTween)
				local function PlayTween()
					Tween:Play()
					Tween.Completed:Wait()
					Tween:Destroy()
					Tween = nil
				end
				if DelayThread then
					PlayTween()
				else
					coroutine.wrap(PlayTween)()
				end
				return Tween
			else
				warn("When specified, the DelayThread argument (argument 3) should be a boolean (true/false) detailing whether to yield the current thread while the tween is playing or not")
			end
		else
			warn("PropertiesToTween (argument 2) isn't specified or isn't a table of object properties to tween.")
		end
	else
		warn("The Object (argument 1) isn't specified")
	end
end
--]]]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ead</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX046D9CEC34804E6ABA259934A524ADEC">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Components</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd200001887d</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXCBCC1A403DAE4FD2A94EF3FBAD18D7CC">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GridMenu</string>
							<string name="ScriptGuid">{62E62259-21F5-4978-9802-47BC553B099D}</string>
							<ProtectedString name="Source"><![CDATA[--[[
This component provides a menu that has multiple options the user can select
via a grid of options.

Default UI scheme is designed for specific games

By udev2192
]]--

local ZERO_UDIM2 = UDim2.new(0, 0, 0, 0)
local PRIMARY_COMPONENT_ZINDEX = 3
local MENU_FRAME_ZINDEX = 1
local CLOSE_BUTTON_NAME = "CloseButton"

local Package = script.Parent
local BaseComponent = require(Package:WaitForChild("BaseComponent"))
local IconButton = require(Package:WaitForChild("IconButton"))
local Util = BaseComponent.GetUtils()

local GridMenu = {}
GridMenu.__index = GridMenu

-- The default name used for the GridMenu gui instance.
GridMenu.GuiName = script.Name

--[[
The color used by the closed button create in the
corresponding constructor.
]]--
GridMenu.CloseButtonColor = Color3.fromHSV(0, 1, 0.6)

GridMenu.CloseButtonCornerRadius = BaseComponent.DefaultCornerRadius
GridMenu.ContentFrameSize = UDim2.new(0.85, 0, 0.6, 0)
--GridMenu.CloseButtonAspectRatio = 1

-- The color gradient of the line at the top of the menu
GridMenu.HeaderLineGradient = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromHSV(0, 0, 1)),
	ColorSequenceKeypoint.new(1, Color3.fromHSV(0, 0, 0.5))
})

-- Toggles a component/GUI instance's visibility.
local function ToggleGuiVisibility(Gui, IsVisible)
	if typeof(Gui) == "Instance" then
		Gui.Visible = IsVisible
	elseif typeof(Gui) == "table" and Gui.SetVisible ~= nil then
		Gui.SetVisible(IsVisible)
	end
end

-- Gets the GUI instance from a component.
local function GetGuiFromComponent(Component)
	if typeof(Component) == "Instance" then
		return Component
	elseif typeof(Component) == "table" and Component.Gui ~= nil then
		return Component.Gui
	else
		return nil
	end
end

function GridMenu.New()
	local Menu = BaseComponent.New("Frame")
	local IsFadingIn = false
	
	local CloseButtonInit = IconButton.New("X")
	local CloseConnection
	local IsClosing = false
	
	local DefaultCornerRadius = BaseComponent.DefaultCornerRadius

	Menu.CloseButton = CloseButtonInit
	
	-- The contents in the content frame.
	local Contents = {}
	
	local ContentFrameSize = GridMenu.ContentFrameSize
	
	-- If the menu will override a GUI instance's
	-- layout order.
	Menu.OverridesLayoutOrder = true
	
	-- The next size of the line displayed at the top.
	Menu.HeaderLineSize = UDim2.new(ContentFrameSize.X.Scale, ContentFrameSize.X.Offset, 0.01, 0)
	
	-- The next position of the menu frame.
	Menu.FramePosition = UDim2.new(0.5, 0, 0.5, 0)
	
	-- The position offset of the menu frame when it gets hidden.
	Menu.FrameHideOffset = UDim2.new(0, 0, 0, 0)--UDim2.new(0, 0, 0.1, 0)
	
	-- Background image transparency when the menu is made visible.
	Menu.BackImageTransparency = 0.5
	
	Menu.CornerRadius = UDim.new(0, 10)
	
	Menu.Rows = 2
	Menu.Columns = 5
	Menu.ContentPadding = UDim2.new(0.05, 0, 0.05, 0)
	
	local function GetHiddenHeaderLineSize()
		local LineSize = Menu.HeaderLineSize or ZERO_UDIM2
		
		return UDim2.new(0, 0, LineSize.Y.Scale, LineSize.Y.Offset)
	end
	
	local function GetFrameHiddenPos()
		return Menu.FramePosition + Menu.FrameHideOffset
	end
	
	local function ToggleCloseVisible(IsVisible)
		local CloseButton = Menu.CloseButton
		if CloseButton ~= nil then
			CloseButton.SetVisible(Menu.ShowsCloseButton and IsVisible)
		end
	end
	
	Menu.SetProperty("ShowsCloseButton", true, function(IsVisible)
		IsVisible = IsVisible and IsFadingIn
		
		CloseButtonInit.Gui.Visible = IsVisible
	end)
	
	-- Create the GUI components
	local MenuFrame = Menu.Gui
	MenuFrame.Visible = false
	MenuFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	MenuFrame.BackgroundTransparency = 1
	MenuFrame.ClipsDescendants = true
	MenuFrame.ZIndex = MENU_FRAME_ZINDEX
	MenuFrame.Name = GridMenu.GuiName
	MenuFrame.Position = GetFrameHiddenPos()
	assert(MenuFrame ~= nil, "The GUI from the BaseComponent is missing.")
	
	local Theme = Menu.GetTheme()
	
	local TitleLabel = Theme.MakeInstance("TextLabel", {
		Font = Enum.Font.GothamBold,
		Size = UDim2.new(ContentFrameSize.X.Scale, ContentFrameSize.X.Offset, 0.1, 0),
		Position = UDim2.new(0.5, 0, 0.15, 0),
		TextTransparency = 1,
		TextStrokeTransparency = 1,
		BackgroundTransparency = 1,
		Text = "Title",
		Name = "Title",
		
		TextXAlignment = Enum.TextXAlignment.Left,
		
		ZIndex = PRIMARY_COMPONENT_ZINDEX,
		
		Parent = MenuFrame
	})
	
	local HeaderLine = Theme.MakeInstance("Frame", {
		Size = GetHiddenHeaderLineSize(),
		Position = UDim2.new(0.5, 0, 0.25, 0),
		BorderSizePixel = 0,
		BackgroundColor3 = Color3.fromRGB(255, 255, 255),
		BackgroundTransparency = 0,
		Name = "HeaderLine",
		
		ZIndex = PRIMARY_COMPONENT_ZINDEX,
		
		Parent = MenuFrame
	})
	
	local CloseButtonGui = CloseButtonInit.Gui
	if CloseButtonGui ~= nil then
		ToggleCloseVisible(false)
		CloseButtonGui.BackgroundColor3 = GridMenu.CloseButtonColor

		CloseButtonGui.AnchorPoint = Vector2.new(0.5, 0.5)
		CloseButtonGui.Size = UDim2.new(0.1, 0, 0.1, 0)
		CloseButtonGui.Position = UDim2.new(0.9, 0, 0.125, 0)
		
		--BaseComponent.AddAspectRatio(CloseButtonGui, GridMenu.CloseButtonAspectRatio)

		CloseButtonGui.ZIndex = PRIMARY_COMPONENT_ZINDEX

		CloseButtonGui.Name = CLOSE_BUTTON_NAME

		CloseConnection = CloseButtonInit.GetButton().Activated:Connect(function()
			if IsClosing == false then
				IsClosing = true

				Menu.SetVisible(false)

				IsClosing = false
			end
		end)
		
		BaseComponent.AddCornerRadius(CloseButtonGui, GridMenu.CloseButtonCornerRadius)

		CloseButtonGui.Parent = Menu.Gui
	else
		error("Close button IconButton is missing the .Gui property.")
	end

	CloseButtonInit = nil
	
	-- Initialize the frame that display the buttons/labels
	local ContentFrame = Theme.MakeInstance("Frame", {
		Size = GridMenu.ContentFrameSize,
		Position = UDim2.new(0.5, 0, 0.6, 0),
		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		ClipsDescendants = true,
		Name = "ContentFrame",
		
		ZIndex = PRIMARY_COMPONENT_ZINDEX,
		
		Parent = MenuFrame
	})
	
	-- Apply a grid layout to the content frame
	local Layout = Theme.MakeInstance("UIGridLayout", {
		SortOrder = Enum.SortOrder.LayoutOrder,

		HorizontalAlignment = Enum.HorizontalAlignment.Center,
		VerticalAlignment = Enum.VerticalAlignment.Center
	})
	
	Menu.ContentFrame = ContentFrame
	
	--[[
	Updates the layout of the content frame.
	]]--
	function Menu.UpdateLayout()
		local Padding = Menu.ContentPadding
		Layout.CellPadding = Padding
		Layout.CellSize = BaseComponent.GetGridItemSize(Menu.Rows, Menu.Columns, Padding)
	end
	
	Menu.UpdateLayout()
	
	--[[
	<boolean> - If the grid layout is currently being used.
	]]--
	Menu.SetProperty("IsUsingGrid", false, function(IsUsing)
		if IsUsing == true then
			Menu.UpdateLayout()
			Layout.Parent = ContentFrame
		else
			if Layout.Parent ~= nil then
				Layout.Parent = nil
			end
		end
	end)
	
	-- Apply a gradient to the animation line
	Theme.MakeInstance("UIGradient", {
		Color = GridMenu.HeaderLineGradient,
		Rotation = 0,
		Transparency = NumberSequence.new({
			NumberSequenceKeypoint.new(0, 1),
			NumberSequenceKeypoint.new(0.5, 0),
			NumberSequenceKeypoint.new(1, 1)
		}),
		Parent = HeaderLine
	})
	
	-- Give the menu rounded corners
	local MenuCorner = BaseComponent.AddCornerRadius(MenuFrame, DefaultCornerRadius)
	
	DefaultCornerRadius, ContentFrameSize = nil
	
	-- Refreshes the stored components' layout order.
	local function RefreshLayoutOrder()
		if Menu.OverridesLayoutOrder == true then
			for i, v in pairs(Contents) do
				local Gui = GetGuiFromComponent(v)
				
				if Gui ~= nil then
					Gui.LayoutOrder = i
				end
				
				Gui = nil
			end
		end
	end
	
	-- Visibility handler
	local function OnVisibleChanged(IsVisible)	
		local Transparency
		local NewImageTransparency
		local NewHeaderLineSize
		local DestinationPos
		local DestinationOffsetted = GetFrameHiddenPos()
		
		-- Determine destination tween variables
		if IsVisible == true then
			Transparency = 0
			NewImageTransparency = Menu.BackImageTransparency or 0
			
			NewHeaderLineSize = Menu.HeaderLineSize
			DestinationPos = Menu.FramePosition
			
			IsFadingIn = true
		else
			Transparency = 1
			NewImageTransparency = 1
			
			NewHeaderLineSize = GetHiddenHeaderLineSize()
			DestinationPos = GetFrameHiddenPos()
			
			IsFadingIn = false
		end
		
		-- Animate
		local Info = Menu.TweeningInfo
		if Info ~= nil then
			if IsFadingIn == true and IsVisible == true then
				MenuFrame.Visible = true
			end
			
			ToggleCloseVisible(IsVisible)
			
			Util.Tween(MenuFrame, Info, {Position = DestinationPos, BackgroundTransparency = Transparency})
			Util.Tween(HeaderLine, Info, {Size = NewHeaderLineSize})
			Util.Tween(TitleLabel, Info, {TextTransparency = Transparency})
			
			--if BackgroundImage ~= nil then
			--	Util.Tween(BackgroundImage, Info, {ImageTransparency = NewImageTransparency})
			--end
			
			for i, v in pairs(Contents) do
				ToggleGuiVisibility(v, IsVisible)
			end
			
			task.wait(Info.Time)
			
			if IsFadingIn == false and IsVisible == false then
				MenuFrame.Visible = false
				MenuFrame.Position = DestinationOffsetted
			end
		end
	end
	
	--[[
	Returns:
	<boolean> - If the GUI is currently trying to be shown.
	]]--
	function Menu.IsFadingIn()
		return IsFadingIn
	end
	
	--[[
	Sets the title displayed at the top of the menu.
	
	Params:
	Title <string> - The title to display.
	]]--
	function Menu.SetTitle(Title)
		assert(typeof(Title) == "string", "Argument 1 must be a string.")
		
		TitleLabel.Text = Title
	end
	
	--[[
	Adds a component to the content frame.
	
	Params:
	Component <variant> - The component or GUI instance to add.
	LayoutOrder <number> - An optional argument that specifies
						   the component to add's layout order.
	]]--
	function Menu.AddComponent(Component, LayoutOrder)
		if typeof(LayoutOrder) == "number" then
			table.insert(Contents, LayoutOrder, Component)
		else
			table.insert(Contents, Component)
		end
		
		RefreshLayoutOrder()
		GetGuiFromComponent(Component).Parent = ContentFrame
	end
	
	--[[
	Destroys the close button used and disconnects the
	event code used to make it work.
	]]--
	function Menu.DestroyCloseButton()
		local CloseButton = Menu.CloseButton
		if CloseButton ~= nil then
			CloseButton.Dispose()
			CloseButton = nil
		end

		if CloseConnection ~= nil then
			CloseConnection:Disconnect()
			CloseConnection = nil

			IsClosing = nil
		end
	end
	
	--[[
	Removes a component from the content frame.
	
	Params:
	Component <variant> - The component or GUI instance to remove.
	]]--
	function Menu.RemoveComponent(Component)
		local Index = table.find(Contents, Component)
		if Index ~= nil then
			-- Maually remove from the table to preserve
			-- the layout order of other components.
			Contents[Index] = nil
		end
		
		GetGuiFromComponent(Component).Parent = nil
		RefreshLayoutOrder()
	end
	
	Menu.VisibleChanged.Connect(OnVisibleChanged)
	
	Menu.AddDisposalListener(function()
		Menu.VisibleChanged.Disconnect(OnVisibleChanged)
		Menu.DestroyCloseButton()
		
		-- Only destroy Layout and MenuFrame because
		-- it contains all the other UI components
		-- used to make the menu.
		Layout:Destroy()
		MenuFrame:Destroy()
		
		-- Then, garbage collect the GUI.
		MenuFrame, TitleLabel, HeaderLine, ContentFrame = nil, nil, nil, nil
	end)
	
	return Menu
end

return GridMenu]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eae</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX6A9D5D5DB4794D26A31C5A7EDB84FF3C">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BaseComponent</string>
							<string name="ScriptGuid">{01558004-C3B3-4CC7-A767-C76A98830262}</string>
							<ProtectedString name="Source"><![CDATA[--[[
This acts as a base container/interface for a UI component.

Hiding/showing handling functions can be binded to signals
that are provided.

By udev2192
]]--

local UI_CORNER_CLASS_NAME = "UICorner"

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")
local Themes = script.Parent.Parent:WaitForChild("Themes")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))
local Utils = require(UtilRepModules:WaitForChild("Utility"))

local BaseComponent = {}
BaseComponent.__index = BaseComponent

export type Component = Object.ObjectPool & {
	Gui: GuiObject,
	TweeningInfo: TweenInfo,
	HandleBeforeDispose: boolean,
	AutoDestroyGui: boolean,
	BackImageTransparency: number,
	CornerRadius: UDim?,
	
	GetTheme: () -> {},
	GetBackground: () -> ImageLabel,
	SetVisible: (IsVisible: boolean) -> (),
	SetImage: (Image: ImageLabel, DestroyLast: boolean) -> (),
	
	VisibleChanged: Signal.Signal,
}

BaseComponent.BgImageDefaultZIndex = 2
BaseComponent.DefaultTheme = "Wavy"

BaseComponent.AspectRatioDominantAxis = Enum.DominantAxis.Height

-- For reference
BaseComponent.DefaultCornerRadius = UDim.new(0, 10)
BaseComponent.DefaultGradientFade = NumberSequence.new({
	NumberSequenceKeypoint.new(0, 1),
	NumberSequenceKeypoint.new(0.25, 0.25),
	NumberSequenceKeypoint.new(0.75, 0.25),
	NumberSequenceKeypoint.new(1, 1)
})

--[[
Returns:
<table> - The table of general utility functions
]]--
function BaseComponent.GetUtils()
	return Utils
end

--[[
Calculates a cell size to be used with a UIGridLayout
based on the number of rows, columns, and the cell padding

Params:
Rows <number> - The desired number of rows
Columns <number> - The desired number of columns
Padding <UDim2> - THe desired content padding
]]--
function BaseComponent.GetGridItemSize(Rows: number, Columns: number, Padding: number): UDim2
	return UDim2.new(
		(1 / math.max(Rows, 1)) - Padding.X.Scale,
		-Padding.X.Offset,
		(1 / math.max(Columns, 1)) - Padding.Y.Scale,
		-Padding.Y.Offset
	)
end

--[[
Adds a UIGradient fade to the specified GUI component

Params:
Ui <Instance> - The UI object to apply the gradient to
Transparency <NumberSequence?> - The transparency sequence to use

Returns:
<UIGradient> - The UIGradient created
]]--
function BaseComponent.AddGradientFade(Ui: Instance?, Transparency: NumberSequence?): UIGradient
	return Utils.CreateInstance("UIGradient", {
		Transparency = Transparency or BaseComponent.DefaultGradientFade,
		Parent = Ui
	})
end

--[[
Applies a UI corner to the UI component provided.

Params:
Ui <Instance> - The component to apply a UI corner to.
Radius <UDim> - The radius to apply.

Returns:
<UIAspectRatioConstraint> - The aspect ratio constraint used.
]]--
function BaseComponent.AddCornerRadius(Ui: Instance, Radius: UDim): UICorner
	return Utils.CreateInstance("UICorner", {
		CornerRadius = Radius or BaseComponent.DefaultCornerRadius,
		Parent = Ui
	})
end

--[[
Applies an aspect ratio to a UI component.

Params:
Ui <Instance> - The component to apply an aspect ratio to.
Ratio <number> - The aspect ratio of the component (from 0-1).

Returns:
<UIAspectRatioConstraint> - The aspect ratio constraint used.
]]--
function BaseComponent.AddAspectRatio(Ui: Instance, Ratio: number): UIAspectRatioConstraint
	return Utils.CreateInstance("UIAspectRatioConstraint", {
		DominantAxis = BaseComponent.AspectRatioDominantAxis,
		AspectRatio = Ratio,
		Parent = Ui
	})
end

--[[
Fades to a certain text color for a text-based GUI component

Params:
TextObject <GuiObject> - The text based component to fade
Color <Color3> - The destination text color.
Duration <number> - How long to do the fade

Returns:
<BaseTween> - The tween created
]]--
function BaseComponent.FadeTextColor(TextObject: GuiObject, Color: Color3, Duration: number): Tween
	return Utils.Tween(
		TextObject,
		TweenInfo.new(Duration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
		{TextColor3 = Color}
	)
end

--[[
Creates a frame that can be used as a button overlay for hover/click effects

Params:
Button <GuiObject> - The GuiObject to use when creating the overlay
Radius <UDim> (optional) - If specified, creates a UICorner to go with
						   the overlay using this argument as the radius

Returns:
<Frame> - The overlay created
]]--
function BaseComponent.CreateButtonOverlay(Button: GuiObject, Radius: UDim?) : Frame
	local Frame = Utils.CreateInstance("Frame", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(1, 0, 1, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),

		BackgroundTransparency = 1,
		BackgroundColor3 = Color3.new(1, 1, 1),
		BorderSizePixel = 0
	})
	
	if Radius then
		BaseComponent.AddCornerRadius(Frame, Radius)
	end
	
	return Frame
end

--[[
Constructs the BaseComponent.

Params:
ClassName (string) - The name of the instance/class to construct
ThemeName (string) (optional) - The name of the theme used to construct
							  	the instance/class.
							  	
Returns:
<BaseComponent> - The constructed object
]]--
function BaseComponent.New(ClassName: string, ThemeName: string?): Component
	assert(typeof(ClassName) == "string", "Argument 1 must be a string.")

	ThemeName = ThemeName or BaseComponent.DefaultTheme

	local Obj = Object.New("BaseComponent")

	-- Create the GUI based on the theme provided.
	local UsedTheme = require(Themes:WaitForChild(ThemeName))

	local IsFadingIn = false
	
	local FrameCorner
	local BackgroundImage
	local BGImageCorner

	--[[
	The GUI created from initialization.
	]]--
	Obj.Gui = UsedTheme.MakeInstance(ClassName)

	--[[
	The object's preferred tweening info/animation style.
	]]--
	Obj.TweeningInfo = TweenInfo.new(0.25, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)

	--[[
	If the hiding animation is played when
	the object is being disposed.
	]]--
	Obj.HandleBeforeDispose = true

	--[[
	If the GUI is destroyed when Dispose()
	is called. This waits for the hide animation
	to be finished if it will be played during
	object disposal.
	]]--
	Obj.AutoDestroyGui = true

	--[[
	<number> - How transparent the background image is.
	]]--
	Obj.BackImageTransparency = 0.5
	
	--[[
	<UDim?> - The dimensions of the UI's corner radius.
	]]--
	Obj.SetProperty("CornerRadius", BaseComponent.DefaultCornerRadius, function(Radius)
		if Radius == nil or Radius == UDim.new(0, 0) then
			if FrameCorner ~= nil then
				FrameCorner:Destroy()
				FrameCorner = nil
			end
		else
			local Gui = Obj.Gui
			if Gui ~= nil then
				local Corner = Gui:FindFirstChildOfClass(UI_CORNER_CLASS_NAME)
					or Instance.new(UI_CORNER_CLASS_NAME)
				FrameCorner = Corner
				
				if Corner ~= nil then
					Corner.CornerRadius = Radius
					Corner.Parent = Gui
				end
			end
		end
		
		if BGImageCorner ~= nil then
			BGImageCorner.CornerRadius = Radius
		end
	end)

	--[[
	Fired when the GUI is requested to be visible or invisble.
	
	Params:
	Visible (boolean) - Whether the GUI is being requested for
						visibility or not.
	]]--
	Obj.VisibleChanged = Signal.New()

	--[[
	Returns the GUI scheme associated.
	]]--
	function Obj.GetTheme()
		return UsedTheme
	end
	
	--[[
	Returns:
	<ImageLabel> - The ImageLabel used as the background. If none is
				   currently set, nil is returned.
	]]--
	function Obj.GetBackground()
		return BackgroundImage
	end

	--[[
	Toggles the GUI's visibility and fires it.
	
	Params:
	IsVisible (boolean) - Whether or not to make the GUI visible.
	]]--
	function Obj.SetVisible(IsVisible)
		local Gui = Obj.Gui
		local VisibleChanged = Obj.VisibleChanged

		if Gui ~= nil and VisibleChanged ~= nil then
			if IsVisible == true then
				--Gui.Visible = true
				IsFadingIn = true
				VisibleChanged.Fire(true)
			else
				IsFadingIn = false
				VisibleChanged.Fire(false)
				--Gui.Visible = false
			end

			if BackgroundImage ~= nil then
				if IsVisible == IsFadingIn then
					local BGTransparency

					if IsFadingIn == true then
						BGTransparency = Obj.BackImageTransparency or 0
					else
						BGTransparency = 1
					end

					local TweeningInfo = Obj.TweeningInfo

					if TweeningInfo ~= nil then
						coroutine.wrap(function()
							if IsVisible == IsFadingIn and IsFadingIn == true then
								BackgroundImage.Visible = true
							end

							local Tween = Utils.Tween(
								BackgroundImage,
								TweeningInfo,
								{ImageTransparency = BGTransparency}
							)

							task.wait(TweeningInfo.Time)

							-- See if it animated back before
							-- toggling visibility
							if IsVisible == IsFadingIn and IsFadingIn == false then
								BackgroundImage.Visible = false
								BackgroundImage.ImageTransparency = 1
							end
						end)()
					else
						if IsVisible == IsFadingIn then
							BackgroundImage.ImageTransparency = BGTransparency
						end
					end 
				end
			end
		end

		Gui, VisibleChanged = nil, nil
	end

	--[[
	Sets the ImageLabel instance to use as a background.
	If an ImageLabel is provided, its ZIndex, Transparency,
	and Parent properties will be overriden.
	
	A UI corner will also be added to the ImageLabel.
	
	Params:
	Image <ImageLabel> - The image label instance to use.
						 Specify with nil the current one.
	DestroyLast <boolean> - Whether or not to destroy the
							last background image.
	]]--
	function Obj.SetImage(Image, DestroyLast)
		assert(Image == nil or (typeof(Image) == "Instance" and Image:IsA("ImageLabel")), "Argument 1 must be an ImageLabel or nil.")

		local LastImage

		if Image ~= nil then
			if DestroyLast == true then
				LastImage = BackgroundImage
			end

			BackgroundImage = Image
			BGImageCorner = BaseComponent.AddCornerRadius(Image, BaseComponent.DefaultCornerRadius)

			Image.ZIndex = BaseComponent.BgImageDefaultZIndex

			local Gui = Obj.Gui
			if Gui ~= nil then
				if Gui.Visible == true then
					Image.ImageTransparency = Obj.BackImageTransparency or 0
					Image.Visible = true
				else
					Image.ImageTransparency = 1
					Image.Visible = false
				end

				Image.Parent = Gui
			end
		elseif BackgroundImage ~= nil then
			BackgroundImage.Parent = nil
			BackgroundImage, BGImageCorner = nil
		end

		if DestroyLast == true then
			LastImage = LastImage or BackgroundImage

			if LastImage ~= nil then
				LastImage:Destroy()
			end
		end
	end

	Obj.OnDisposal = function()
		if Obj.HandleBeforeDispose == true then
			Obj.SetVisible(false)
		end

		local VisibleChanged = Obj.VisibleChanged
		if VisibleChanged ~= nil then
			VisibleChanged.DisconnectAll()
		end
		VisibleChanged = nil
		
		Obj.SetImage(nil)

		if Obj.AutoDestroyGui == true then
			local Gui = Obj.Gui
			if Gui ~= nil then
				Gui:Destroy()
			end
			Gui = nil
		end

		UsedTheme = nil
	end

	return Obj
end

return BaseComponent]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eaf</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX3CFC13C9BA624068B92AB9CD2AFD4A60">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">IconButton</string>
							<string name="ScriptGuid">{72500B33-BA84-4E21-8F45-EBEF02FEAA21}</string>
							<ProtectedString name="Source"><![CDATA[--[[
A text button but with an icon and animation to go with it.

You can set if it's clickable (so there won't have to be a separate
class for the TextLabel variant)

The image itself is also able to be toggled.

By udev2192
]]--

local ZERO_UDIM2 = UDim2.new(0, 0, 0, 0)

local BaseComponent = require(script.Parent:WaitForChild("BaseComponent"))
local Util = BaseComponent.GetUtils()

local IconButton = {}
IconButton.__index = IconButton

local DefaultSounds = script:WaitForChild("DefaultSounds")

local function AssertBoolean(Value, ArgNum)
	assert(typeof(Value) == "boolean", "Argument " .. ArgNum .. " must be a boolean")
end

function IconButton.New(ButtonText)
	local Button = BaseComponent.New("Frame")
	local ButtonGui = Button.Gui
	local Theme = Button.GetTheme()
	
	local IsFadingIn = false
	local HoverEffectFadingIn = false
	local ClickEffectEnabled = false
	
	local ClickEffectConnections = {}
	
	local HoverEffectFrame: Frame
	
	-- The background transparency of the button when it's visible.
	Button.BackTransparency = 0
	
	Button.HoverEffectSizeOffset = UDim2.new(0.1, 0, 0.1, 0)
	Button.ClickSizeOffset = UDim2.new(0, 10, 0, 10)--UDim2.new(0.1, 0, 0.1, 0)
	Button.ClickEffectTweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
	
	Button.ClickSound = DefaultSounds:WaitForChild("Click")
	Button.HoverOnSound = DefaultSounds:WaitForChild("HoverOn")
	Button.HoverOffSound = nil
	
	Theme.ApplyProperties(ButtonGui, ButtonGui.ClassName, {
		Visible = false,
		Size = UDim2.new(0.5, 0, 0.1, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),
		BackgroundTransparency = 1,
		BackgroundColor3 = Color3.fromRGB(0, 0, 0),
		BorderSizePixel = 0,
		ClipsDescendants = false,
		Name = script.Name
	})
	
	-- Create the GUI components that make up the button.
	local RealButton = Theme.MakeInstance("TextButton", {
		-- The actual button.
		Visible = true,
		
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(1, 0, 1, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),
		
		TextStrokeTransparency = 1,
		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		Text = "",
		Name = "InputReceiver",
		
		ZIndex = 3,
		AutoButtonColor = false,
		ClipsDescendants = false,
		
		Parent = ButtonGui
	})
	
	local ButtonText = Theme.MakeInstance("TextLabel", {
		Size = UDim2.new(0.9, 0, 0.9, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),
		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		TextTransparency = 1,
		TextStrokeTransparency = 1,
		Text = ButtonText or "BUTTON",
		Name = "ButtonText",
		
		ZIndex = 2,
		Parent = ButtonGui
	})
	
	local IconFrame = Theme.MakeInstance("ImageLabel", {
		Visible = false,
		Size = UDim2.new(0.3, 0, 0.5, 0),
		Position = UDim2.new(0.3, 0, 0.5, 0),
		ImageTransparency = 1,
		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		ImageColor3 = ButtonText.TextColor3,
		ScaleType = Enum.ScaleType.Fit,
		Image = "",
		Name = "Icon",
		
		ZIndex = 2,
		Parent = ButtonGui
	})
	
	-- Give the button rounded corners
	--local UICorner = Theme.MakeInstance("UICorner", {
	--	CornerRadius = IconButton.DefaultCornerRadius,
	--	Parent = ButtonGui
	--})
	
	-- Visibility handler
	local function OnVisibleChanged(IsVisible)	
		local Transparency = 0
		local BGTransparency = 0
		local NewHeaderLineSize = nil
		local DestinationPos = nil

		-- Determine destination tween variables
		if IsVisible == true then
			Transparency = 0
			BGTransparency = Button.BackTransparency

			IsFadingIn = true
		else
			Transparency = 1
			BGTransparency = 1

			IsFadingIn = false
		end

		-- Animate
		local Info = Button.TweeningInfo
		if Info ~= nil then
			if IsFadingIn == true and IsVisible == true then
				ButtonGui.Visible = true
			end
			
			Util.Tween(ButtonGui, Info, {BackgroundTransparency = BGTransparency})
			Util.Tween(ButtonText, Info, {TextTransparency = Transparency, TextStrokeTransparency = 1})
			Util.Tween(IconFrame, Info, {ImageTransparency = Transparency})

			task.wait(Info.Time)

			if IsFadingIn == false and IsVisible == false then
				ButtonGui.Visible = false
			end
		end
	end
	
	--[[
	Returns:
	
	<TextButton> - The actual button that you can bind input to.
	]]--
	function Button.GetButton()
		return RealButton
	end
	
	--[[
	Returns:
	
	<TextLabel> - The display text label for the button.
	]]--
	function Button.GetDisplayLabel()
		return ButtonText
	end
	
	--[[
	Sets the text displayed on the button.
	
	Params:
	Text <string> - The text to display.
	]]--
	function Button.SetText(Text)
		ButtonText.Text = Text
	end
	
	--[[
	Sets the icon displayed via the specified url.
	
	Params:
	URL <Color3> - The URL of the image to display.
				   If this argument is nil, the image is hidden
				   and the button text is centered.
	]]--
	function Button.SetIcon(URL)
		if URL ~= nil then
			ButtonText.Size = UDim2.new(0.6, 0, 0.9, 0)
			ButtonText.Position = UDim2.new(0.6, 0, 0.5, 0)
			
			IconFrame.Image = URL
			IconFrame.Visible = true
		else
			IconFrame.Visible = false
			IconFrame.Image = ""
			
			ButtonText.Size = UDim2.new(0.9, 0, 0.9, 0)
			ButtonText.Position = UDim2.new(0.5, 0, 0.5, 0)
		end
	end
	
	--[[
	Sets the color of the UI components that make up the button.
	
	Params:
	NewColor <string> - The color to change to.
	]]--
	function Button.SetColor(NewColor)
		ButtonText.TextColor3 = NewColor
		IconFrame.ImageColor3 = NewColor
	end
	
	--[[
	Sets if rich text is enabled.
	
	Params:
	UseRichText <boolean> - Whether or not to use rich text.
	]]--
	function Button.SetRichTextEnabled(UseRichText)
		AssertBoolean(UseRichText, 1)
		
		ButtonText.RichText = UseRichText
	end
	
	--[[
	Sets if the button can take in input (including clicks).
	
	Params:
	IsEnabled <boolean> - Whether or not to use rich text.
	]]--
	function Button.SetInputEnabled(IsEnabled)
		AssertBoolean(IsEnabled, 1)
		
		RealButton.Visible = IsEnabled
	end
	
	local function SetClickFrameToMaxSize()
		Util.Tween(HoverEffectFrame, TweenInfo, {
			Size = RealButton.Size + Button.HoverEffectSizeOffset
		})
	end
	
	--[[
	<boolean> - Whether or not there is a hover and click animation
	]]--
	Button.SetProperty("ClickEffectEnabled", true, function(Enabled)
		if Enabled then
			if ClickEffectEnabled == false then
				ClickEffectEnabled = true
				
				table.insert(ClickEffectConnections, RealButton.MouseLeave:Connect(function()
					HoverEffectFadingIn = false
					
					if HoverEffectFrame then
						local TweeningInfo = Button.ClickEffectTweenInfo
						Util.Tween(HoverEffectFrame, TweeningInfo, {
							BackgroundTransparency = 1,
						})
						
						local Sound = Button.HoverOffSound
						if Sound then
							Sound:Play()
						end
						
						local Elapsed = 0
						local WaitTime = TweeningInfo.Time
						while true do
							if HoverEffectFadingIn == false and HoverEffectFrame and Elapsed < WaitTime then
								Elapsed += task.wait()
							else
								break
							end
						end

						if HoverEffectFadingIn == false and HoverEffectFrame then
							HoverEffectFrame:Destroy()
							HoverEffectFrame = nil
						end
					end
				end))
				
				table.insert(ClickEffectConnections, RealButton.MouseEnter:Connect(function()
					HoverEffectFadingIn = true
					
					if HoverEffectFrame == nil then
						HoverEffectFrame = BaseComponent.CreateButtonOverlay(RealButton, Button.CornerRadius)
						HoverEffectFrame.Parent = RealButton
					end
					
					Util.Tween(HoverEffectFrame, Button.ClickEffectTweenInfo, {
						BackgroundTransparency = 0.5
					})
					
					local Sound = Button.HoverOnSound
					if Sound then
						Sound:Play()
					end
				end))
				
				table.insert(ClickEffectConnections, RealButton.Activated:Connect(function()
					local ClickFrame = BaseComponent.CreateButtonOverlay(RealButton, Button.CornerRadius)
					ClickFrame.BackgroundTransparency = 0.5
					ClickFrame.Parent = RealButton
					
					local TweeningInfo = Button.ClickEffectTweenInfo
					Util.Tween(ClickFrame, TweeningInfo, {
						Size = RealButton.Size + Button.ClickSizeOffset,
						BackgroundTransparency = 1
					})
					
					local Sound = Button.ClickSound
					if Sound then
						Sound:Play()
					end
					
					task.wait(TweeningInfo.Time)
					ClickFrame:Destroy()
				end))
			end
		else
			if ClickEffectEnabled then
				for i, v in pairs(ClickEffectConnections) do
					v:Disconnect()
				end
				
				ClickEffectConnections = {}
				ClickEffectEnabled = false
			end
		end
	end)
	
	--Button.SetProperty("CornerRadius", BaseComponent.DefaultCornerRadius, function(Radius)
	--	UICorner.CornerRadius = Radius
	--end)
	
	Button.VisibleChanged.Connect(OnVisibleChanged)
	
	Button.AddDisposalListener(function()
		ButtonGui:Destroy()
		Button.ClickEffectEnabled = false
	end)
	
	return Button
end

return IconButton]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018eb0</UniqueId>
						</Properties>
						<Item class="Folder" referent="RBXD9DD44D37B7749D5956A95DAF9F29C95">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">DefaultSounds</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">51fe0be2f3123e160210a323000852dc</UniqueId>
							</Properties>
							<Item class="Sound" referent="RBX2731DEDCDBC943899481267E52652D14">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Click</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://12221976</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<UniqueId name="UniqueId">51fe0be2f3123e160210a323000852c6</UniqueId>
									<float name="Volume">0.5</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBXF516A2EDA3C54BF3937D3375CB99175A">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">HoverOn</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://12222170</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<UniqueId name="UniqueId">51fe0be2f3123e160210a323000852b0</UniqueId>
									<float name="Volume">0.5</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBXC7EF341036BB48ACB85352E21CA6B07F">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GradientFrame</string>
							<string name="ScriptGuid">{837987C4-08FC-46D9-8841-F726298DC2C1}</string>
							<ProtectedString name="Source"><![CDATA[--[[
A frame with a customizable gradient.

By udev2192
]]--

local ZERO_UDIM2 = UDim2.new(0, 0, 0, 0)

local BaseComponent = require(script.Parent:WaitForChild("BaseComponent"))

local GradientFrame = {}
GradientFrame.__index = GradientFrame
GradientFrame.UiClassName = "Frame"
GradientFrame.GradientClassName = "UIGradient"

--[[
<table> - A set of gradient transparency presets for convienence.
]]--
GradientFrame.TransparencyPresets = {
	Underline = NumberSequence.new(
		{
			NumberSequenceKeypoint.new(0, 1),
			NumberSequenceKeypoint.new(0.25, 0),
			NumberSequenceKeypoint.new(0.75, 0),
			NumberSequenceKeypoint.new(1, 1)
		}
	)
}

function GradientFrame.New()
	local Frame = BaseComponent.New(GradientFrame.UiClassName)
	local Theme = BaseComponent.GetTheme()

	local FrameGui = Frame.Gui

	local CurrentGradient

	Theme.ApplyProperties(FrameGui, {
		Visible = false
	})

	--[[
	Stamps a clone of the provided UIGradient onto
	the frame
	
	Params:
	Gradient <UIGradient> - The UIGradient to attach.
							Pass nil to this argument to
							get rid of the gradient.
	IsCloning <boolean> - If the clone of the gradient will be used
						  (optional, defaults to true)
	]]--
	function Frame.SetGradient(Gradient, IsCloning)
		if IsCloning == nil then
			IsCloning = true
		end

		if Gradient ~= nil then
			if CurrentGradient ~= nil then
				Frame.SetGradient(nil)
			end

			local Used

			if IsCloning == true then
				Used = Gradient:Clone()
			else
				Used = Gradient
			end

			CurrentGradient = Used
			Used.Parent = FrameGui
		else
			CurrentGradient:Destroy()
			CurrentGradient = nil
		end
	end

	--[[
	Stamps a UIGradient onto the frame using a ColorSequence.
	
	Params:
	Color <ColorSequence> - The color sequence to use.
	
	Returns:
	<UIGradient> - The UIGradient made
	]]--
	function Frame.SetGradientColor(Color)
		local Gradient = Instance.new("UIGradient")
		Gradient.Color = Color

		Frame.SetGradient(Gradient, false)

		return Gradient
	end

	return Frame
end

return GradientFrame]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">277710896d65f34c0188ec8e000232c5</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX8F72BC39E2C8455886AA991E6F46E473">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MenuSet</string>
							<string name="ScriptGuid">{C6FD0529-8D90-4D72-BE97-910CE926E8A1}</string>
							<ProtectedString name="Source"><![CDATA[--[[
Provides a GUI-based structure that can hold multiple instances of the GridMenu.

In other words, this makes sets of menus much easier to handle. This is because
it makes sure only one gui frame is displayed at a time.

By udev2192
]]--

local BaseComponent = require(script.Parent:WaitForChild("BaseComponent"))

local MenuSet = {}
MenuSet.__index = MenuSet
MenuSet.ClassName = script.Name
MenuSet.GuiClassName = "Frame"

local function AssertString(ArgNum, String)
	assert(typeof(String) == "string", "Argument " .. ArgNum .. " must be a string.")
end

function MenuSet.New()
	local Set = BaseComponent.New(MenuSet.GuiClassName)
	local Gui = Set.Gui
	
	Gui.Name = MenuSet.ClassName
	Gui.ClipsDescendants = false
	Gui.BackgroundTransparency = 1
	
	-- Stored gui components
	local Stored = {}
	local Listeners = {}
	
	-- Shown gui ids
	local Shown = {}
	
	--[[
	<boolean> - Whether or not to limit the frames shown at a certain time
				to 1.
	]]--
	Set.SingleFrameOnly = true
	
	--[[
	<string> - The string identifier of the
			   menu being shown.
			   If none are being shown,
			   this field is nil.
	]]--
	Set.ShownId = nil
	
	--[[
	<Vector2> - A specific anchor point to enforce.
			  	Leave this value as nil to not enforce this.
	]]--
	Set.GuiAnchorPoint = Vector2.new(0.5, 0.5)
	
	--[[
	<UDim2> - A specific GUI size to enforce.
			  Leave this value as nil to not enforce this.
	]]--
	Set.GuiSize = UDim2.new(1, 0, 1, 0)
	
	--[[
	<UDim2> - A specific GUI position to enforce.
			  Leave this value as nil to not enforce this.
	]]--
	Set.GuiPosition = UDim2.new(0.5, 0, 0.5, 0)
	
	--[[
	Params:
	<string> - The string identifier that refers to the menu
			   requesting to be hidden.
	]]--
	function Set.Hide(Name)
		local Component = Stored[Name]

		if Component ~= nil then
			Set.ShownId = nil

			local ShowIndex = table.find(Shown, Name)
			if ShowIndex ~= nil then
				table.remove(Shown, ShowIndex)
			end

			Component.SetVisible(false)
		end
	end

	--[[
	Hides all of the currently shown menus.
	]]--
	function Set.HideAll()
		for i, v in pairs(Shown) do
			Set.ShownId = nil
			Set.Hide(v)
		end
	end

	--[[
	Params:
	<string> - The string identifier that refers to the menu
			   requesting to be shown.
	]]--
	function Set.Show(Name)
		local Component = Stored[Name]

		if Component ~= nil then
			-- Hide the previous
			if Set.SingleFrameOnly == true then
				local LastId = Set.ShownId
				if LastId ~= nil then
					Set.Hide(LastId)
				end
			end

			-- Show the current
			table.insert(Shown, Name)
			Set.ShownId = Name
			Component.SetVisible(true)
		end
	end
	
	--[[
	Removes a component from the set.
	
	Params:
	<string> - The string identifier that refers
			   to the component being removed.
	]]--
	function Set.Remove(Name)
		Stored[Name] = nil
		
		local Connection = Listeners[Name]
		if Connection ~= nil then
			Connection:Disconnect()
			Listeners[Name] = nil
			Connection = nil
		end
	end
	
	--[[
	Adds a component to the set. The specified
	component will get reparented to the gui set's frame.
	
	Params:
	<string> - The string identifier for the gui.
	<BaseComponent> - The component itself.
	]]--
	function Set.Add(Name, NewGui)
		AssertString(1, Name)
		assert(typeof(NewGui) == "table" and NewGui.SetVisible ~= nil, "Argument 2 must be a BaseComponent.")
		
		Stored[Name] = NewGui
		
		local CloseButton = NewGui.CloseButton
		if CloseButton ~= nil then
			Listeners[Name] = CloseButton.GetButton().Activated:Connect(function()
				Set.Hide(Name)
			end)
		end
		
		local ActualGui = NewGui.Gui
		if ActualGui ~= nil then
			local Anchor = Set.GuiAnchorPoint
			local Size = Set.GuiSize
			local Pos = Set.GuiPosition
			
			if Anchor ~= nil then
				ActualGui.AnchorPoint = Anchor
			end
			if Size ~= nil then
				ActualGui.Size = Size
			end
			if Pos ~= nil then
				ActualGui.Position = Pos
			end
			
			ActualGui.Parent = Gui
		end
	end
	
	Set.AddDisposalListener(Set.HideAll)
	
	return Set
end

return MenuSet]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">06b102e85829aad701aa47c90002fe34</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX96D909EE87494DE7B74A0390E9723FD8">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">NpcDialog</string>
							<string name="ScriptGuid">{2D9E5745-F475-4DF4-9C29-BC2D2A469B5E}</string>
							<ProtectedString name="Source"><![CDATA[--[[
Displays a GUI that can be used to display an NPC dialog

By udev2192
]]--

local UIComponents = script.Parent

local BaseComponent = require(UIComponents:WaitForChild("BaseComponent"))
local IconButton = require(UIComponents:WaitForChild("IconButton"))

local UtilRepModules = UIComponents.Parent.Parent:WaitForChild("Utils")

local Signal = require(
	UtilRepModules
	:WaitForChild("Signal")
)

local Util = BaseComponent.GetUtils()
local TweenGroup = require(UtilRepModules:WaitForChild("TweenGroup"))

local NpcDialog = {}
NpcDialog.__index = NpcDialog

NpcDialog.ClassName = script.Name
NpcDialog.DefaultBackgroundColor = Color3.fromRGB(0, 0, 0)

--[[
<table> - Dialog context actions by string
]]--
NpcDialog.ContextActions = {
	Start = "Start",
	Continue = "...",
	SkipToEnd = "Skip to End",
	Close = "Leave"
}

--[[
<NpcDialog.TypeActions> - A list of typing actions for the grapheme animation
]]--
NpcDialog.TypeActions = {
	Write = 1,
	Wait = 2,
	Call = 3,
	SetOptions = 4
}

function NpcDialog.Lerp(a, b, t)
	return a + (b - a) * t
end

function NpcDialog.New()
	local Dialog = BaseComponent.New("Frame")
	local Gui = Dialog.Gui
	local Theme = Dialog.GetTheme()

	local CornerRadii = {}
	local DialogOptions = {}
	
	--local OptionButtons = {}
	--local OptionButtonEvents = {}

	-- [character #] = duration in seconds
	--local Delays = {}
	local CompiledActionMap = {}
	local ActionMapOptionIds = {}

	-- Names originally assigned to each option
	-- (order matters so the RemoveOption function works)
	local OptionButtonIds = {}

	local IsWritingGraphemes = false
	local IsUsingTextList = false
	local IsUsingActionMap = false
	local IsUsingContinueButton = false
	local IsFadingIn = false

	local DestinationGraphemeCount = 0
	local TotalMaxGraphemes = 0
	local TextListIndex = 0

	local CurrentTextList
	local DialogTextClickEvent
	local ActionMapFullString

	Dialog.FrameSize = UDim2.new(1, 0, 0.25, 0)
	Dialog.FramePosition = UDim2.new(0.5, 0, 0.75, 0)
	Dialog.HiddenSizeOffset = UDim2.new(-0.075, 0, -0.075, 0)
	Dialog.BackTransparency = 0.5
	Dialog.MinColumns = 5
	Dialog.OptionsPadding = UDim2.new(0.1, 0, 0.1, 0)
	Dialog.ClearWhenHidden = true
	
	--[[
	<string?> - The id of the last selected option
	]]--
	Dialog.LastAnswerId = nil

	Gui.Visible = false
	Gui.AnchorPoint = Vector2.new(0.5, 0.5)
	Gui.Size = Dialog.FrameSize
	Gui.Position = Dialog.FramePosition

	Gui.BackgroundColor3 = NpcDialog.DefaultBackgroundColor
	Gui.BackgroundTransparency = 1
	Gui.BorderSizePixel = 0
	Gui.Name = NpcDialog.ClassName

	BaseComponent.AddAspectRatio(Gui, 2.75)

	local DialogTextBG = Theme.MakeInstance("TextButton", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(0.63, 0, 1, 0),
		Position = UDim2.new(0.315, 0, 0.5, 0),

		BackgroundTransparency = 1,
		BackgroundColor3 = NpcDialog.DefaultBackgroundColor,
		BorderSizePixel = 0,

		TextTransparency = 1,
		TextStrokeTransparency = 1,
		Text = "",

		AutoButtonColor = false,

		Parent = Gui
	})

	local OptionsFrame = Theme.MakeInstance("Frame", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(0.33, 0, 1, 0),
		Position = UDim2.new(0.835, 0, 0.5, 0),

		BackgroundTransparency = 1,
		BackgroundColor3 = NpcDialog.DefaultBackgroundColor,
		BorderSizePixel = 0,

		Name = "OptionsFrame",

		Parent = Gui
	})

	local OptionsGridHandler = Theme.MakeInstance("UIGridLayout", {
		SortOrder = Enum.SortOrder.LayoutOrder,

		HorizontalAlignment = Enum.HorizontalAlignment.Center,
		VerticalAlignment = Enum.VerticalAlignment.Center,

		CellPadding = Dialog.OptionsPadding,
		CellSize = BaseComponent.GetGridItemSize(1, Dialog.MinColumns, Dialog.OptionsPadding),

		Parent = OptionsFrame
	})

	local DialogText = Theme.MakeInstance("TextLabel", {
		AnchorPoint = Vector2.new(0.5, 0.5),
		Size = UDim2.new(0.9, 0, 0.9, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),

		TextXAlignment = Enum.TextXAlignment.Left,
		TextYAlignment = Enum.TextYAlignment.Top,

		BorderSizePixel = 0,
		MaxVisibleGraphemes = 0,

		BackgroundTransparency = 1,
		TextStrokeTransparency = 1,
		TextTransparency = 1,

		Font = Enum.Font.Gotham,

		Parent = DialogTextBG
	})

	-- Extra rounded corners
	for i, v in pairs({DialogTextBG, OptionsFrame}) do
		table.insert(CornerRadii, BaseComponent.AddCornerRadius(v, Dialog.CornerRadius))
	end

	local function HideGui()
		Gui.Visible = false

		Gui.BackgroundTransparency = 1
		Gui.Size = Dialog.FrameSize + Dialog.HiddenSizeOffset
	end

	HideGui()

	--[[
	<number> - The scrolling speed of the dialog in
			   characters per second.
	]]--
	Dialog.ScrollSpeed = 30

	--[[
	<array> - An array of strings to type when scrolling
			  through the dialog. This is useful for
			  text-only dialogs, where the only option
			  is continuing to the next bit of text
	]]--
	Dialog.TextList = {}
	
	Dialog.CharacterTypeSound = script:WaitForChild("CharacterTypeSound")

	--[[
	<string> - The next string to display on the dialog
	]]--
	Dialog.SetProperty("NextString", "", function(NewString)
		TotalMaxGraphemes = string.len(NewString)
		DialogText.Text = NewString
	end)

	--[[
	<array> - The currently used action map. This is intended to be set
			  using values from Dialog.ActionMap
	]]--
	Dialog.SetProperty("CurrentActionMap", {}, function(Map: {{[number]: any}})
		DialogText.MaxVisibleGraphemes = 0
		DialogText.Text = ""
		ActionMapFullString = ""
		--Delays = {}
		CompiledActionMap = {}

		local Length = #Map

		if Length > 0 then
			local Write = NpcDialog.TypeActions.Write

			for i, v in ipairs(Map) do
				if v[1] == Write then
					local Str = v[2]
					ActionMapFullString ..= Str
					--elseif v[1] == Wait then
					--	table.insert(Delays, {NextString:len(), v[2]})
					--	ActionMapFullString ..= NextString
					--	NextString = ""
					table.insert(CompiledActionMap, {Write, Str:len()})
				else
					table.insert(CompiledActionMap, v)
				end
			end
		end
	end)
	
	--[[  
	<array>
	A list of actions for the npc dialog to iterate over using
	UseActionMap().
	
	An example usage of ActionMap would be:
	local CurrentDialog = NpcDialog.New()
	local Actions = NpcDialog.TypeActions
	CurrentDialog.ActionMap = {
		{Actions.Write, "Hello!"}
		{Actions.Wait, 0.5}
		{Actions.Write, " This is an example of a dialog with a delay."}
	}
	CurrentDialog.UseActionMap()
	]]--
	Dialog.SetProperty("ActionMap", {}, function(Map: {{[number]: any}})
		Dialog.CurrentActionMap = Map
	end)

	--[[
	Sets the corner radius of the components used by the dialog
	
	Params:
	Radius <UDim> - The radius dimensions to use.
	]]--
	function Dialog.SetCornerRadius(Radius)
		Dialog.CornerRadius = Radius
	end

	--[[
	Stops the typing "animation"
	]]--
	function Dialog.Pause()
		IsUsingActionMap = false
		IsWritingGraphemes = false
	end

	--[[
	Clears the NPC dialog text
	]]--
	function Dialog.Clear()
		DestinationGraphemeCount = 0
		DialogText.MaxVisibleGraphemes = 0
	end

	--local function RefreshOptionLayout()
	--	for i, v in ipairs(OptionButtons) do
	--		local Button = v.Button

	--		if Button then
	--			Button.Gui.LayoutOrder = i
	--		end
	--	end
	--end
	
	local function RemoveOptionByIndex(Index: number, Table: {})
		if Table == nil then
			Table = DialogOptions[Index]
			
			if Table == nil then
				return
			end
		end
		
		table.remove(DialogOptions, Index)
		
		Table.Connection:Disconnect()
		Table.Button.Dispose()
	end
	
	--[[
	Removes a dialog option and destroys it
	
	Params:
	Id <string> - The option's string identifier
	]]--
	function Dialog.RemoveOption(Id)
		assert(typeof(Id) == "string", "Argument 1 must be a string")
		
		for i, v in ipairs(DialogOptions) do
			if Id == v.Id then
				RemoveOptionByIndex(i, v)
				break
			end
		end

		--local Connection = OptionButtonEvents[Id]
		--if Connection then
		--	Connection:Disconnect()

		--	OptionButtonEvents[Id] = nil
		--	Connection = nil
		--end

		--local Index = table.find(OptionButtonIds, Id)
		----print(Name, 1)
		--if Index then
		--	--print(Name, 2)
		--	OptionButtons[Index].Dispose()

		--	table.remove(OptionButtons, Index)
		--	table.remove(OptionButtonIds, Index)
		--end
	end

	--[[
	Removes all currently stored options
	]]--
	function Dialog.ClearOptions()	
		--while #OptionButtonIds > 0 do
		--	Dialog.RemoveOption(OptionButtonIds[1])
		--end
		while #DialogOptions > 0 do
			RemoveOptionByIndex(1)
		end
	end

	--[[
	Creates a dialog option using an IconButton
	(Please use this in a synchronized thread since RemoveOption()
	might break if you don't)
	
	Params:
	Id <string> - An internal identifier for the option
	Name <string> - The option's name/text
	Order <number> (optional) - The order to place the button from top-left
								to bottom-right. If left unspecified, the
								button will be placed at the bottom-right
	
	Returns:
	<IconButton> - The button created
	]]--
	function Dialog.AddOption(Id: string, Name: string, Order: number?, Callback: () -> ()?)
		assert(typeof(Id) == "string", "Argument 1 must be a string")
		assert(typeof(Name) == "string", "Argument 2 must be a string")
		assert(Order == nil or typeof(Order) == "number", "Argument 3 must be a number or nil")
		assert(Callback == nil or typeof(Callback) == "function", "Argument 4 must be a function or nil")

		-- Important to check we're not creating
		-- a duplicate option to prevent problems with
		-- RemoveOption()
		--assert(table.find(OptionButtonIds, Id) == nil, "The option by the name of '" .. Name .. "' already exists")

		local Option = IconButton.New(Name)
		local IsClicked = false
		Option.AutoDestroyGui = true
		Option.CornerRadius = Dialog.CornerRadius
		
		local OptionTable = {
			Id = Id,
			Button = Option,
			Connection = Option.GetButton().Activated:Connect(function()
				if not IsClicked then
					IsClicked = true
					Dialog.LastAnswerId = Id
					Dialog.OptionSelected.Fire(Id)

					if Callback then
						Callback()
					end

					IsClicked = false
				end
			end)
		}
		
		if Order then
			table.insert(DialogOptions, Order, OptionTable)
		else
			table.insert(DialogOptions, OptionTable)
		end
		
		Option.Gui.Parent = OptionsFrame

		--if Order then
		--	table.insert(OptionButtonIds, Order, Id)
		--	table.insert(OptionButtons, Order, Option)
		--else
		--	table.insert(OptionButtonIds, Id)
		--	table.insert(OptionButtons, Option)
		--end
		
		-- For easy listener binding to Dialog.ActionRequested

		--RefreshOptionLayout()
		--Option.Gui.Parent = OptionsFrame

		return Option
	end
	
	--[[
	Hides the dialog options
	]]--
	function Dialog.HideOptions()
		for i, v in ipairs(DialogOptions) do
			local Button = v.Button

			if Button then
				Button.SetVisible(false)
			end
		end
	end
	
	--[[
	Shows the dialog options
	]]--
	function Dialog.ShowOptions()
		for i, v in ipairs(DialogOptions) do
			local Button = v.Button

			if Button then
				Button.Gui.LayoutOrder = i
				Button.SetVisible(true)
			end
		end
	end

	--[[
	Returns:
	<boolean> - If the typing animation is currently being played
	]]--
	function Dialog.IsTyping()
		return IsWritingGraphemes
	end

	--[[
	Returns:
	<number> - The current number of characters typed
	]]--
	function Dialog.GetCharactersTyped()
		return DialogText.MaxVisibleGraphemes
	end

	--[[
	Skips to the end of the typing sequence
	]]--
	function Dialog.FinishTyping()
		Dialog.Pause()
		DialogText.MaxVisibleGraphemes = TotalMaxGraphemes
	end

	--[[
	"Types" some text onto the dialog.
	
	Params:
	NumGraphemes <number> - The amount of graphemes to type next.
	]]--
	function Dialog.Type(NumGraphemes)
		assert(typeof(NumGraphemes) == "number", "Argument 1 must be a number.")

		local PromptedString = Dialog.NextString

		if PromptedString then
			DestinationGraphemeCount = math.floor(math.min(DestinationGraphemeCount + NumGraphemes, TotalMaxGraphemes))
		end

		if not IsWritingGraphemes then
			IsWritingGraphemes = true

			local CurrentGraphemes = DialogText.MaxVisibleGraphemes
			local CharTypeSound = Dialog.CharacterTypeSound

			while IsWritingGraphemes do
				local NextString = Dialog.NextString

				if NextString then
					CurrentGraphemes = math.min(
						math.ceil(CurrentGraphemes + (Dialog.ScrollSpeed * task.wait())),
						DestinationGraphemeCount
					)

					if IsWritingGraphemes then
						DialogText.MaxVisibleGraphemes = math.min(CurrentGraphemes, DestinationGraphemeCount)
						
						if CharTypeSound and CharTypeSound.IsLoaded == true and CharTypeSound.TimeLength > 0 then
							local Sound: Sound = CharTypeSound:Clone()
							Sound.Name = "Playing_" .. CharTypeSound.Name
							Sound.Looped = false
							Sound.Parent = script
							
							if Sound.IsLoaded then
								Sound:Play()
								Sound.Ended:Connect(function()
									Sound:Destroy()
									Sound = nil
								end)
							end
						end
					else
						break
					end

					if CurrentGraphemes >= DestinationGraphemeCount then
						break
					end
				else
					break
				end
			end

			IsWritingGraphemes = false
		end
	end
	
	local function ClearActionMapOptions()
		for i, v in pairs(ActionMapOptionIds) do
			Dialog.RemoveOption(v)
		end
		ActionMapOptionIds = {}
	end

	--[[
	Pauses the proceeding of the dialog
	specified by the ActionMap array
	]]--
	--function Dialog.StopActionMap()
	--	IsUsingActionMap = false
	--	Dialog.Pause()
	--end

	--[[
	Goes through the actions in the current ActionMap array
	]]--
	function Dialog.UseCurrentActionMap(ActionMap: {})
		ClearActionMapOptions()
		Dialog.Pause()
		
		Dialog.Clear()
		Dialog.NextString = ActionMapFullString

		-- Type, then wait if needed
		--local TypedChars = 0

		if #CompiledActionMap > 0 then
			IsUsingActionMap = true
			
			local TypeActions = NpcDialog.TypeActions
			local Write = TypeActions.Write
			local Wait = TypeActions.Wait
			local Call = TypeActions.Call
			local SetOptions = TypeActions.SetOptions
			TypeActions = nil

			--for i, v in ipairs(ActionMap) do
			--	local FirstNumChars = v[1]
			--	local Delay = v[2]

			--	TypedChars += FirstNumChars

			--	Dialog.Type(FirstNumChars)

			--	local Elapsed = 0
			--	while IsUsingActionMap and Elapsed <= Delay do
			--		Elapsed += task.wait()
			--	end

			--	if IsUsingActionMap == false then
			--		break
			--	end
			--end

			--if IsUsingActionMap and TypedChars < TotalMaxGraphemes then
			--	Dialog.Type(TotalMaxGraphemes - TypedChars)
			--end

			for i, v in ipairs(CompiledActionMap) do
				local Act = v[1]
				if Act == Write then
					Dialog.Type(v[2])
				elseif Act == Wait then
					local Delay = v[2]
					local Elapsed = 0
					
					while IsUsingActionMap and Elapsed <= Delay do
						Elapsed += task.wait()
					end
				elseif Act == Call then
					v[2]()
				elseif Act == SetOptions then
					Dialog.ClearOptions()
					
					--print("set options", #v[2])
					
					for i2, v2 in ipairs(v[2]) do
						local ActionMap = v2.ActionMap
						
						if ActionMap then
							local Id = v2.Id
							table.insert(ActionMapOptionIds, Id)
							Dialog.AddOption(Id, v2.Name, nil, function()
								Dialog.HideOptions()
								Dialog.CurrentActionMap = ActionMap
								Dialog.UseCurrentActionMap()
							end)
							--print("added action map:", Id, ", table size is now", #ActionMapOptionIds)
						end
					end
					
					if #DialogOptions > 0 then
						--print("try showing options")
						Dialog.ShowOptions()
					end
				end
				
				if IsUsingActionMap == false then
					ClearActionMapOptions()
					return
				end
			end
			
			IsUsingActionMap = false
		end
	end
	
	--[[
	Uses the master action map.
	See Dialog.ActionMap for details
	]]--
	function Dialog.UseActionMap()
		Dialog.Pause()
		Dialog.Clear()
		
		Dialog.CurrentActionMap = Dialog.ActionMap
		Dialog.UseCurrentActionMap()
	end

	local function OnTextListStep(Action)
		if Action == NpcDialog.ContextActions.Continue then
			if IsWritingGraphemes then
				Dialog.FinishTyping()
			else
				TextListIndex += 1

				if TextListIndex <= #CurrentTextList then
					Dialog.Pause()
					Dialog.Clear()
					Dialog.NextString = CurrentTextList[TextListIndex]
					Dialog.Type(TotalMaxGraphemes)
				else
					Dialog.StopTextList()
					Dialog.SetVisible(false)
				end
			end
		end
	end

	--[[
	Cancels the proceeding of the dialog
	specified by the TextList array
	]]--
	function Dialog.StopTextList()
		Dialog.ActionRequested.Disconnect(OnTextListStep)
		IsUsingTextList = false
	end

	--[[
	Goes through the text specified in the TextList property
	]]--
	function Dialog.UseTextList()
		local TextList = Dialog.TextList
		assert(typeof(TextList) == "table", "TextList property must be an array.")

		if IsUsingTextList == false and #TextList > 0 then
			IsUsingTextList = true

			TextListIndex = 0
			CurrentTextList = TextList

			Dialog.ActionRequested.Connect(OnTextListStep)
			Dialog.ActionRequested.Fire(NpcDialog.ContextActions.Continue)
		end
	end

	--[[
	Goes through 
	]]--

	--[[
	Returns:
	<TextLabel> - The text container used by the dialog
	]]--
	function Dialog.GetTextLabel()
		return DialogText
	end

	--[[
	<boolean> - If the continue button is enabled
	]]--
	Dialog.SetProperty("UseContinueButton", false, function(IsEnabled)
		if IsEnabled then
			if not IsUsingContinueButton then
				IsUsingContinueButton = true
				
				local Continue = NpcDialog.ContextActions.Continue
				Dialog.AddOption(Continue, Continue)
			end
		else
			if IsUsingContinueButton then
				Dialog.RemoveOption(NpcDialog.ContextActions.Continue)
				IsUsingContinueButton = false
			end
		end
	end)

	--[[
	<boolean> - If clicking the dialog text label finishes the typing
				animation and/or fires the "continue" action
	]]--
	Dialog.SetProperty("TapToFinishEnabled", false, function(IsEnabled)
		if IsEnabled then
			if not DialogTextClickEvent then
				local IsClicked = false

				DialogTextClickEvent = DialogTextBG.Activated:Connect(function()
					if not IsClicked then
						IsClicked = true

						if not IsUsingTextList then
							Dialog.FinishTyping()
						end

						Dialog.ActionRequested.Fire(NpcDialog.ContextActions.Continue)
						IsClicked = false
					end
				end)
			end
		else
			if DialogTextClickEvent then
				DialogTextClickEvent:Disconnect()
				DialogTextClickEvent = nil
			end
		end
	end)

	--[[
	Fired when a dialog action is requested
	
	Params:
	Action <string> - A numeric identifier used to determine which
					  action to use (see NpcDialog.ContextActions)
	]]--
	Dialog.ActionRequested = Signal.New()
	
	--[[
	Fired when a dialog option is selected
	
	Params:
	Id <string> - The option's string identifier
	]]--
	Dialog.OptionSelected = Signal.New()

	local function OnVisibleChanged(IsVisible)
		local NewTransparency
		local NewBgTransparency
		local NewSize

		if IsVisible then
			NewTransparency = 0
			NewBgTransparency = Dialog.BackTransparency
			NewSize = Dialog.FrameSize

			IsFadingIn = true
		else
			NewTransparency = 1
			NewBgTransparency = 1
			NewSize = Dialog.FrameSize + Dialog.HiddenSizeOffset

			IsFadingIn = false

			Dialog.ActionRequested.Fire(NpcDialog.ContextActions.Close)
			if Dialog.ClearWhenHidden then
				ClearActionMapOptions()
				Dialog.Pause()
				Dialog.Clear()
			end
		end

		-- To do: finish the look and animations lol
		local TweeningInfo = Dialog.TweeningInfo

		if IsVisible and IsFadingIn then
			Gui.Visible = true
		end

		if TweeningInfo then
			local BgFade = {
				BackgroundTransparency = NewBgTransparency
			}

			Util.Tween(Gui, TweeningInfo, {
				Size = NewSize,
			})

			Util.Tween(DialogTextBG, TweeningInfo, BgFade)
			Util.Tween(OptionsFrame, TweeningInfo, BgFade)

			--for i, v in pairs(OptionButtons) do
			--	task.spawn(v.SetVisible, IsVisible)
			--end
			Dialog.HideOptions()

			Util.Tween(DialogText, TweeningInfo, {
				TextTransparency = NewTransparency
			})

			task.wait(TweeningInfo.Time)
		end

		if IsVisible == false and IsFadingIn == false then
			HideGui()
		end
	end

	Dialog.VisibleChanged.Connect(OnVisibleChanged)
	Dialog.AddDisposalListener(function()
		Dialog.Pause()
		Dialog.Clear()
		Dialog.ClearOptions()
		
		Gui:Destroy()
	end)

	return Dialog
end

return NpcDialog]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3a4ad51a698f152101d45d06000244f9</UniqueId>
						</Properties>
						<Item class="Sound" referent="RBXB2A3709A50D042419C08FF2955AF390E">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="EmitterSize">10</float>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">CharacterTypeSound</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxassetid://9120299810</url></Content>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<UniqueId name="UniqueId">29eac5171ad62b1e026278df00326b1e</UniqueId>
								<float name="Volume">0.5</float>
								<float name="xmlRead_MaxDistance_3">10000</float>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX24F792469CC04A9C99922E0E294A0F0F">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Sound</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018881</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX0904A0349DBC4943AAC65B33C25BF1BF">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">OldBGM</string>
						<string name="ScriptGuid">{2B6E39EB-DAAE-4386-ABAB-8649EDCA426E}</string>
						<ProtectedString name="Source"><![CDATA[-- Provides an object that is used to play background music.

-- This is the legacy background music player and therefore, is deprecated.

-- By udev2192

local MarketplaceService = game:GetService("MarketplaceService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local BGM = {}

-- The default BGM url.
BGM.DefaultURL = ""

-- Gets the sound information by asset id.
local function GetInfoByURL(Id)
	local Success, Result = pcall(function()
		return MarketplaceService:GetProductInfo(Id)
	end)
	
	if Success == true then
		return Result
	else
		return ""
	end
end

local function IsSoundLoaded(Sound)
	return Sound.IsLoaded == true and Sound.TimeLength > 0
end

local function IsSoundURL(URL)
	return URL ~= nil and typeof(URL) == "string" and URL ~= ""
end

local function FadeSound(Sound, Vol, Dur)
	assert(typeof(Sound) == "Instance" and Sound:IsA("Sound"), "Argument 1 must be a sound instance.")
	
	return Util.Tween(Sound, TweenInfo.new(Dur, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Volume = Vol})
end

function BGM.New()
	local Obj = Object.New("ClientBGM")
	Obj.SoundInstance = nil
	Obj.IsLoaded = false
	
	-- By default, the name of the sound asset
	-- that was just loaded.
	Obj.AssetInfo = ""
	
	-- The length of the music transition in seconds.
	Obj.FadeTime = 1
	
	-- Sets if the audio plays the new URL as soon as it's changed
	Obj.Autoplay = true
	
	-- Fades to a new sound by URL
	-- If URL is nil, the sound will fade out and stop
	local function FadeToURL(URL)
		local OldSound = Obj.SoundInstance
		
		if Obj.FadeTime > 0 then	
			-- Fade over the duration
			local FadeTime = Obj.FadeTime or 1
			if OldSound ~= nil then
				coroutine.wrap(function()
					local Tween = FadeSound(OldSound, 0, FadeTime)
					if Util.IsTweenPlaying(Tween) then
						Tween.Completed:Wait()
					end
					OldSound:Destroy()
					OldSound = nil
				end)()
			end
			
			if IsSoundURL(URL) == true then
				local NewSound = Instance.new("Sound")
				Obj.SoundInstance = NewSound
				NewSound.SoundId = URL
				NewSound.Volume = 0
				NewSound.Looped = true
				NewSound.Parent = script

				-- Fade in the new sound once it loads
				coroutine.wrap(function()
					if NewSound.IsLoaded == false then
						NewSound.Loaded:Wait()
					end
					if IsSoundLoaded(NewSound) then
						NewSound:Play()
						FadeSound(NewSound, Obj.Volume, FadeTime)
					else
						NewSound:Destroy()
						warn("Failed to load sound: " .. URL)
					end

					NewSound = nil
				end)()
			else
				Obj.SoundInstance = nil
			end
		else
			-- Immediately switch
			if IsSoundURL(URL) == true then
				local Sound = Obj.SoundInstance
				if Sound == nil then
					Sound = Instance.new("Sound")
				end
				Sound.SoundId = URL
				Sound.Looped = true
				Sound.Volume = Obj.Volume
				Sound.Parent = script
				Sound:Play()

				Obj.SoundInstance = Sound
			else
				local Sound = Obj.SoundInstance
				if Sound ~= nil then
					Sound:Destroy()
					Sound = nil
				end
				Obj.SoundInstance = nil
			end
		end
	end
	
	local function UpdateInfoInternally(URL)
		-- Find the id in the URL string, if needed
		if typeof(URL) == "string" then
			URL = string.split(URL, "://")[2]
			if URL ~= nil then
				URL = tonumber(URL)
			end
		end
		
		-- Request the info
		if typeof(URL) == "number" then
			local Info = GetInfoByURL(URL or 0)
			Obj.AssetInfo = Info
			Object.FireCallback(Obj.AssetInfoChanged, Info)
			return Info
		end
	end
	
	-- Gets the sound info of the currently loaded sound.
	-- This yields the current thread.
	function Obj.UpdateSoundInfo()
		local Sound = Obj.SoundInstance
		if Sound ~= nil then
			UpdateInfoInternally(Sound.SoundId)
		else
			return ""
		end
	end
	
	-- Re(-starts) the BGM playback.
	function Obj.Play()
		FadeToURL(Obj.SoundURL)
	end
	
	-- Fades out the BGM playback
	function Obj.Stop()
		FadeToURL(nil)
	end
	
	Obj.SetProperty("Volume", 0.5, function(vol)
		local Sound = Obj.SoundInstance
		if Sound ~= nil then
			Sound.Volume = vol
		end
		Sound = nil
	end)
	
	Obj.SetProperty("SoundURL", BGM.DefaultURL, function(URL)
		if Obj.Autoplay == true then
			FadeToURL(Util.FormatAssetId(URL))
		end
		coroutine.wrap(UpdateInfoInternally)(URL)
	end)
	
	-- Fires when the asset info loaded into the BGM object changes.
	Obj.AssetInfoChanged = nil
	
	return Obj
end

return BGM]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ebb</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX1BA6ACECFC32440994A0DA3B7F9EBC0C">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">SoundPlayer</string>
						<string name="ScriptGuid">{E4F16ECC-1305-4135-8560-585AA077AA5B}</string>
						<ProtectedString name="Source"><![CDATA[-- Utility module for playing a sound by its id.

local SoundService = game:GetService("SoundService")
local Debris = game:GetService("Debris")

local SoundPlayer = {}
SoundPlayer.GlobalId = "SoundPlayerModuleGlobals"

SoundPlayer.__index = SoundPlayer

-- Returns a formatted asset ID relative to the one specified
local function FormatAssetId(AssetId)
	-- Format and return the correct asset id according to the type of the asset ID
	if typeof(AssetId) == "string" then
		return AssetId
	elseif typeof(AssetId) == "number" then
		return "rbxassetid://" .. AssetId
	else
		-- Since the asset id couldn't be formatted, return a blank string
		return ""
	end
end

local SoundGroupInit = nil
local function Initialize()
	if _G[SoundPlayer.GlobalId] == nil then
		_G[SoundPlayer.GlobalId] = {}
		if _G[SoundPlayer.GlobalId].IsInitialized == nil then
			_G[SoundPlayer.GlobalId].IsInitialized = true

			SoundGroupInit = Instance.new("SoundGroup")
			SoundGroupInit.Volume = 1
			SoundGroupInit.Name = SoundPlayer.GlobalId
			SoundGroupInit.Parent = SoundService
		else
			SoundGroupInit = SoundService:WaitForChild(SoundPlayer.GlobalId)
		end
	end
end

Initialize()

-- The SoundGroup for the module.
SoundPlayer.SoundGroup = SoundGroupInit

SoundGroupInit = nil

-- Returns if the provided sound instance has 
-- properly loaded.
function SoundPlayer.IsSoundLoaded(Sound)
	assert(typeof(Sound) == "Instance" and Sound:IsA("Sound"), "Argument 1 must be a Sound instance.")
	
	return Sound.IsLoaded == true and Sound.TimeLength > 0
end

-- Plays a sound once under the sound group.
function SoundPlayer.PlaySound(Id)
	local Group = SoundPlayer.SoundGroup
	
	if Group ~= nil then
		local Sound = Instance.new("Sound")
		Sound.SoundId = FormatAssetId(Id)
		Sound.Volume = 1
		Sound.SoundGroup = Group
		Sound.Parent = Group
		
		if SoundPlayer.IsSoundLoaded(Sound) then
			Sound.Loaded:Wait()
		end
		
		Sound:Play()
		Debris:AddItem(Sound, Sound.TimeLength)
		
		return Sound
	end
	
	Group = nil
end

return SoundPlayer]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ebc</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX681D2BA79B2D4C3A8AC5789382621EB7">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">BGMPlayerOldHitbox</string>
						<string name="ScriptGuid">{7C15F167-572A-4709-9DE0-88F74EDF2714}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Provides an object that is used to play background music.

This is the successor of the old MusicPlayer. This includes support
for a set music url and the usage of music zones.
The code is also much more clean than the last.

Thanks to Jukereise for the concept of the music zones
(Meaning music zones are in the form of models)

This version revamps the coding from the last version of the BGM player
because it got way too messy

By udev2192
]]--

local CollectionService = game:GetService("CollectionService")
local MarketplaceService = game:GetService("MarketplaceService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local Adapters = RepModules:WaitForChild("Adapters")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Hitbox = require(Adapters:WaitForChild("Hitbox"))
local InstCollector = require(Adapters:WaitForChild("InstanceCollector"))

local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local SoundFader = require(script.Parent:WaitForChild("SoundFader"))

ReplicatedStorage, RepModules, Adapters, UtilRepModules = nil

local MusicPlayer = {}

-- The default BGM url.
MusicPlayer.DefaultURL = ""

-- The search keyword of a music zone.
MusicPlayer.MUSIC_ZONE_KEYWORD = "^_MusicZone"

-- The name of the sound instance in a music zone.
MusicPlayer.SOUND_NAME = "Sound"

-- The name of the parts folder instance in a music zone.
MusicPlayer.PARTS_FOLDER_NAME = "Parts"

-- The name of the "attribution" sound attribute to use when citing sounds.
MusicPlayer.ATTRIBUTION_INDEX = "Attribution"

MusicPlayer.START_TIME_ATTRIBUTE = "StartTime"
MusicPlayer.TARGET_VOLUME_ATTRIBUTE = "TargetVolume"

MusicPlayer.URL_SOUND_COLLECTION = "MusicPlayer_SoundsPlayedByUrlCollection"

MusicPlayer.LoadingAttribution = "[Loading]"

-- Where to look for music zones.
MusicPlayer.MusicZoneLocation = workspace --:WaitForChild("Areas")

-- Music modes that are used to determine the behavior
-- that triggers music playback.
MusicPlayer.MusicMode = {
	-- Play by using a set sound URL
	ByURL = 0,

	-- Play by using a sound instance
	BySound = 1,

	-- Play by using sound URLs from music zones.
	ByMusicZone = 2
}

-- Gets the sound information by asset id.
local function GetInfoById(Id)
	local Success, Result = pcall(function()
		return MarketplaceService:GetProductInfo(Id)
	end)

	if Success == true then
		return Result.Name
	else
		return ""
	end
end

local function IsPart(Part)
	return Util.IsInstance(Part) and Part:IsA("BasePart")
end

local function IsSoundLoaded(Sound)
	return Sound.IsLoaded == true and Sound.TimeLength > 0
end

local function IsSoundURL(URL)
	return URL ~= nil and typeof(URL) == "string" and URL ~= ""
end

local function FadeSound(Sound, Vol, Dur)
	assert(typeof(Sound) == "Instance" and Sound:IsA("Sound"), "Argument 1 must be a sound instance.")

	return Util.Tween(Sound, TweenInfo.new(Dur, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Volume = Vol})
end

local function IsMusicZone(Inst)
	return Util.IsInstance(Inst) and (string.match(Inst.Name, MusicPlayer.MUSIC_ZONE_KEYWORD) ~= nil)
end

local function GetSoundAttributionProperty(Sound)
	return Sound:GetAttribute(MusicPlayer.ATTRIBUTION_INDEX)
end

local HitStatus = Hitbox.HitStatus
Hitbox = nil

--[[
Gets a sound instance's attribution.

Params:
Sound <Sound> - The sound instance to retrieve
				the attribution from.
]]--
function MusicPlayer.GetAttributionBySound(Sound)
	assert(Sound ~= nil, "Argument 1 is missing.")

	-- See if there's an "Attribution" attribute on
	-- the sound instance
	local AttributionAttr = GetSoundAttributionProperty(Sound)
	if AttributionAttr ~= nil then
		return tostring(AttributionAttr)
	end

	-- If all else fails, find the id in the URL string, if needed
	-- Conversion to a number is needed because
	-- MarketplaceService:GetProductInfo()
	-- only accepts asset IDs.
	local Url = Sound.SoundId
	if typeof(Url) == "string" then
		Url = string.split(Url, "://")[2]
		if Url ~= nil then
			Url = tonumber(Url)
			return GetInfoById(Url)
		end
	end

	return nil
end

function MusicPlayer.New()
	-- Subclass the sound fader for the sake of memory usage
	local Obj = SoundFader.New()

	local AssetInfo = {} -- Asset info override table
	local CurrentMusicZones = {}

	local SoundVolumes = {} -- Sound instance volumes
	local TimePositions = {} -- Sound instance time positions

	local ZoneParts = {} -- Music zone BaseParts

	local CurrentHitbox
	local CurrentMusicZone
	local ZoneCollector

	-- The volume of the previous sound
	local PreviousVolume

	-- By default, the name of the sound asset
	-- that was just loaded.
	Obj.AssetInfo = ""

	-- If the audio plays the new URL as soon as it's changed
	Obj.Autoplay = true

	--[[
	<boolean> - If attributions are saved when they're loaded.
	]]--
	Obj.SaveAttributions = true

	-- The most recent method of music playback.
	Obj.LastMusicMode = MusicPlayer.MusicMode.ByURL

	local function ChangeAttribution(Info)
		Obj.AssetInfo = Info
		Obj.AttributionChanged.Fire(Info)
	end

	local function UpdateInfoInternally(Sound)
		local SoundId = Sound and Sound.SoundId
		local Info = AssetInfo[SoundId]

		if Info == nil then
			-- Indicate that the info is being requested
			-- Only do this if not overriden because the
			-- info may not be available instantly
			if GetSoundAttributionProperty(Sound) == nil then
				ChangeAttribution(MusicPlayer.LoadingAttribution)
			end

			-- Request the info through other methods
			-- if not overriden
			Info = MusicPlayer.GetAttributionBySound(Sound)

			-- Save the attribution if permitted
			if Obj.SaveAttributions == true and Info ~= nil and Info ~= "" then
				Obj.SetAssetInfo(SoundId, Info)
			end
		end
		Info = Info or ""

		-- Indicate changes
		ChangeAttribution(Info)

		return Info
	end

	local function ResetSound(Sound)
		Sound:Pause()

		Sound.TimePosition = TimePositions[Sound] or 0
		Sound.Volume = SoundVolumes[Sound] or 0

		TimePositions[Sound] = nil
		SoundVolumes[Sound] = nil
		
		-- If the sound was played using FadeToURL, it will most likely
		-- need to be garbage collected
		local UrlTag = MusicPlayer.URL_SOUND_COLLECTION
		if CollectionService:HasTag(Sound, UrlTag) then
			CollectionService:RemoveTag(Sound, UrlTag)
			Sound:Destroy()
		end
	end

	--[[
	Listener for sound fade completion.
	
	Pause old bgm playback only on fade completion to ensure
	that reversing it mid-way is possible
	
	If a song is faded out, the sound properties are reset here
	]]--
	local function ResetOldSounds(OldSounds)
		for i, Sound in pairs(OldSounds) do
			if Sound ~= Obj.CurrentSound then
				ResetSound(Sound)
			end
		end
	end

	Obj.ReverseCompleted.Connect(ResetOldSounds)
	Obj.Completed.Connect(ResetOldSounds)

	-- Fades to a new sound instance.
	-- If no sound instances are provided, the music fades out.
	-- This function returns the old sound instance for convenience
	function Obj.FadeToSound(NewSound, DestroyOldSound)
		local OldSound = Obj.CurrentSound

		-- Update the sound instance if the new sound doesn't match
		-- the one currently playing
		local URL = NewSound and NewSound.SoundId
		if URL ~= Obj.CurrentSoundId then
			Obj.CurrentSoundId = URL

			-- Update song citation
			coroutine.wrap(UpdateInfoInternally)(NewSound)

			-- Initialize music transition
			local FadeTime = Obj.TransitionTime or 1

			-- Get initial sound info
			local TargetVolume = (
				SoundVolumes[NewSound]
					or tonumber(NewSound:GetAttribute(MusicPlayer.TARGET_VOLUME_ATTRIBUTE) or 1) or 1)
				* (Obj.MasterVolume or 1)
			local StartTime = TimePositions[NewSound]
				or tonumber(NewSound:GetAttribute(MusicPlayer.START_TIME_ATTRIBUTE) or 0)
				or 0

			local IsStillPlaying = SoundVolumes[NewSound] ~= nil

			-- Store initial sound info for later use
			SoundVolumes[NewSound] = TargetVolume
			TimePositions[NewSound] = StartTime

			-- Fade to the new sound
			PreviousVolume = TargetVolume

			if IsStillPlaying == false then
				NewSound.Volume = 0
			end
			NewSound:Resume()

			-- Obj.CurrentSound is set here
			Obj.TargetVolume = TargetVolume
			Obj.Switch(NewSound)

			-- Destroy the old sound(s) if needed
			if OldSound and DestroyOldSound then
				task.spawn(function()
					if FadeTime > 0 then
						task.wait(FadeTime)
					end

					OldSound:Destroy()
				end)
			end
		end

		return OldSound
	end

	-- Fades to a new sound by URL
	-- If URL is nil, the sound will fade out and stop
	function Obj.FadeToURL(URL, DestroyOldSound)
		local CurrentSound = Obj.CurrentSound
		
		if CurrentSound then
			if URL ~= CurrentSound.SoundId then
				Obj.LastMusicMode = MusicPlayer.MusicMode.ByURL

				local NewSound = nil
				if URL ~= nil and URL ~= "" then
					local TargetVolume = (Obj.URLVolume or 1)
					
					NewSound = Instance.new("Sound")
					NewSound.SoundId = Util.FormatAssetId(URL)
					NewSound.Volume = TargetVolume 
					NewSound.Looped = true
					NewSound.TimePosition = 0
					
					NewSound:SetAttribute(MusicPlayer.TARGET_VOLUME_ATTRIBUTE, TargetVolume)

					CollectionService:AddTag(NewSound, MusicPlayer.URL_SOUND_COLLECTION)
					NewSound.Parent = script

					-- Wait for the new sound to load
					if NewSound.IsLoaded == false then
						NewSound.Loaded:Wait()
					end
				end

				-- Set to destroy the old sound automatically if the
				-- last music mode was by URL
				local DestroysLastSound = false
				if DestroyOldSound == false then
					if Obj.LastMusicMode == MusicPlayer.MusicMode.ByURL then
						DestroysLastSound = true
					end
				end

				-- If there's a new sound and it loaded, play it
				local OldSound = nil
				if NewSound ~= nil and IsSoundLoaded(NewSound) == true then
					OldSound = Obj.FadeToSound(NewSound, DestroysLastSound)
				end
			end
		end
	end

	-- Fades to the primary sound or sound URL.
	local function FadeToPrimarySound()
		local Sound = Obj.MainSound

		if Sound ~= nil then
			Obj.LastMusicMode = MusicPlayer.MusicMode.BySound
			Obj.FadeToSound(Sound)
		else
			Obj.FadeToURL(Obj.SoundURL)
		end

		Sound = nil
	end

	-- Fades to a song by music zone.
	local function FadeToMusicZone(Zone)
		if Zone ~= nil then
			-- Find the sound object in the music zone model
			-- then use it
			local Sound = Zone:FindFirstChild(MusicPlayer.SOUND_NAME)

			if Sound ~= nil then
				Obj.LastMusicMode = MusicPlayer.MusicMode.ByMusicZone
				Obj.FadeToSound(Sound)
			end
		else
			coroutine.wrap(FadeToPrimarySound)()
		end
	end

	-- Removes a music zone from its storage array.
	-- Returns true if the zone was successfully unlisted.
	local function UnlistMusicZone(ZoneModel)
		-- Remove music zone
		local Index = table.find(CurrentMusicZones, ZoneModel)
		if Index ~= nil then
			table.remove(CurrentMusicZones, Index)
			return true
		end

		return false
	end

	-- Hitbox change listener.
	local function OnHitChange(Part, HitResult)
		if IsPart(Part) == true then
			HitResult = HitResult.Status

			-- Take the next action by hit result
			-- (Music zones are by part parent)
			local ZoneModel = Part.Parent.Parent
			local IsChanging = false

			if HitResult == HitStatus.CompletelyInside then
				-- Add music zone
				if IsMusicZone(ZoneModel) == true then
					IsChanging = true

					-- Unlist before relisting, to prevent certain problems
					-- with code sync
					UnlistMusicZone(ZoneModel)
					table.insert(CurrentMusicZones, ZoneModel)
				end
			elseif HitResult == HitStatus.NotTouching then
				IsChanging = UnlistMusicZone(ZoneModel)
			end

			-- Fade to the music zone at the end of the list
			if CurrentMusicZones ~= nil then
				if IsChanging == true then
					local NextZoneModel = CurrentMusicZones[#CurrentMusicZones]

					FadeToMusicZone(NextZoneModel)

					-- Set as the current music zone for debouncing
					CurrentMusicZone = NextZoneModel
				end
			else
				CurrentMusicZone = nil
				Obj.FadeToSound(nil)
			end
		end
	end

	-- Sets if the specified model music zone has
	-- its parts binded to the hitbox
	local function SetZoneConnected(Zone, IsConnected)
		local Hitbox = CurrentHitbox

		if Hitbox ~= nil then
			if IsConnected == true then
				if IsMusicZone(Zone) == true then
					SetZoneConnected(Zone, false)

					-- Reconnect the parts to the hitbox.
					local Parts = Zone:WaitForChild(MusicPlayer.PARTS_FOLDER_NAME or "Parts")
					if Parts ~= nil then
						Parts = Parts:GetChildren()

						ZoneParts[Zone] = Parts
						for i, v in pairs(Parts) do
							if IsPart(v) == true then
								Hitbox.ConnectPart(v)
							end
						end
					end
				end
			else
				local Parts = ZoneParts[Zone]

				if Parts ~= nil then
					for i, v in pairs(Parts) do
						Hitbox.DisconnectPart(v)
					end
				end
			end
		end
	end

	-- Sets if the music zone instance collector is being used
	local function SetInstancesCollected(IsCollecting)
		if IsCollecting == true then
			SetInstancesCollected(false)

			local ZoneLocation = MusicPlayer.MusicZoneLocation
			if ZoneLocation ~= nil then
				ZoneCollector = InstCollector.New(MusicPlayer.MUSIC_ZONE_KEYWORD)

				-- Reconnect events.
				ZoneCollector.InstanceRemoved = function(Inst)
					SetZoneConnected(Inst, false)
				end

				ZoneCollector.InstanceFound = function(Inst)
					SetZoneConnected(Inst, true)
				end

				-- Start the collection.
				ZoneCollector.AdaptInstance(ZoneLocation)
			end
		else
			if ZoneCollector ~= nil then
				ZoneCollector.Dispose()
				ZoneCollector = nil
			end
		end
	end

	-- Stores a URL's asset information. That information
	-- is then used by Obj.GetSoundInfo().
	function Obj.SetAssetInfo(URL, Info)
		AssetInfo[URL] = Info
	end


	-- Binds a Hitbox to be used by the MusicZone handler.
	function Obj.BindHitbox(Hitbox)
		if Hitbox ~= nil then
			CurrentHitbox = Hitbox

			Hitbox.HitStatusChanged.Connect(OnHitChange)
		else
			if CurrentHitbox ~= nil then
				CurrentHitbox.HitStatusChanged.Disconnect(OnHitChange)
				CurrentHitbox = nil
			end
		end
	end

	-- Gets the sound info of the currently loaded sound.
	-- This yields the current thread.
	function Obj.GetSoundInfo()
		local Sound = Obj.CurrentSound
		if Sound ~= nil then
			return UpdateInfoInternally(Sound)
		else
			return ""
		end
	end

	-- Re(-starts) the main BGM playback.
	function Obj.Restart()
		FadeToPrimarySound()
	end

	-- Fades out the main BGM playback
	function Obj.StopMain()
		Obj.FadeToSound(nil)
	end

	-- The volume used when the music is played by URL.
	Obj.SetProperty("URLVolume", 1, function(vol)
		local Sound = Obj.CurrentSound
		if Sound ~= nil then
			Sound.Volume = vol
		end
		Sound = nil
	end)

	-- The master volume of the BGM player.
	-- This multiplies the currently playing sound's
	-- volume so:
	-- (0 = muted, 1 = full volume)
	Obj.SetProperty("MasterVolume", 1, function(Vol)
		local Sound = Obj.CurrentSound

		if Sound ~= nil then
			local OriginalVolume = SoundVolumes[Sound]
			if OriginalVolume ~= nil then

				-- Disconnection of sound completion is needed to
				-- interrupt tweens.
				if Obj ~= nil then
					Obj.Stop()
				end

				Sound.Volume = OriginalVolume * Vol
			end
		end
	end)

	-- The primary sound instance to play the background music.
	-- Also used if the hitbox isn't in any music zone.
	Obj.SetProperty("MainSound", nil, function(Sound)
		if Obj.Autoplay == true then
			Obj.LastMusicMode = MusicPlayer.MusicMode.BySound
			coroutine.wrap(Obj.FadeToSound)(Sound)
		end
	end)

	-- The sound URL used to play the background music.
	-- Used as a backup if MainSound isn't provided.
	-- Also used if the hitbox isn't in any music zone.
	Obj.SetProperty("MainURL", MusicPlayer.DefaultURL, function(URL)
		if Obj.Autoplay == true then
			coroutine.wrap(Obj.FadeToURL)(Util.FormatAssetId(URL), true)
		end
	end)

	-- If the music zones will be in use
	Obj.SetProperty("UsesMusicZones", false, function(UsingMusicZones)
		local MusicMode = MusicPlayer.MusicMode

		if UsingMusicZones == false then
			-- Disconnect the music zone collector
			SetInstancesCollected(false)

			-- Disconnect music zones
			for i, v in pairs(ZoneParts) do
				SetZoneConnected(i, false)
			end

			-- Fade back to the main url
			coroutine.wrap(Obj.FadeToURL)(Obj.MainURL)
		elseif UsingMusicZones == true then
			-- Connect the music zone collector
			SetInstancesCollected(true)
		end
	end)

	--[[
	Fires when the sound info loaded into the BGM object changes.
	
	Params:
	Attribution <string> - The asset info/attribution.
	]]--
	Obj.AttributionChanged = Signal.New()

	-- Pause sound instance on disposal
	Obj.AddDisposalListener(function()
		Obj.AttributionChanged.Dispose()
		Obj.ReverseCompleted.Disconnect(ResetOldSounds)
		Obj.Completed.Disconnect(ResetOldSounds)
		Obj.BindHitbox(nil)
		
		Obj.UsesMusicZones = false
		Obj.MainURL = ""
		
		local CurrentSound = Obj.CurrentSound
		if CurrentSound ~= nil then
			ResetSound(CurrentSound)
		end
		CurrentSound = nil
	end)

	return Obj
end

return MusicPlayer]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ebd</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXA885C68FE32445899F2F65C80E44604B">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">OldSoundFader</string>
						<string name="ScriptGuid">{AC09F03E-F6DD-47C9-A4BA-F8832E4251CB}</string>
						<ProtectedString name="Source"><![CDATA[-- A utility object that fades from an old sound to a new sound
-- over a provided duration. Inherits from TimeWaiter.

-- By udev2192

local TweenService = game:GetService("TweenService")

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local TimeWaiter = require(UtilRepModules:WaitForChild("TimeWaiter"))

RepModules, UtilRepModules = nil, nil

local SoundFader = {}

function SoundFader.New(Duration)
	local Fader = TimeWaiter.New(Duration)
	
	local OldTween = nil
	local NewTween = nil
	
	-- Original sound volumes before the next animation
	-- Stored in the object's table in case these
	-- need to be modified externally.
	Fader.OldVolume = 0
	Fader.NewVolume = 0
	
	-- The sound to fade from.
	Fader.OldSound = nil
	
	-- The sound to fade to.
	Fader.NewSound = nil
	
	-- If the old sound is paused after animation when
	-- Start() is called.
	-- This also determines if the new sound is paused
	-- when the reverse animation is completed.
	Fader.AutoPause = true
	
	-- If the new sound is played automatically
	-- when Start() is called.
	Fader.AutoPlay = true
	
	-- Fade easing style.
	Fader.EaseStyle = Enum.EasingStyle.Linear
	
	-- Fade easing direction.
	Fader.EaseDirection = Enum.EasingDirection.Out
	
	-- The target volume of the animations.
	Fader.TargetVolume = 1
	
	-- Utility function for getting the sounds to fade.
	-- Returns the OldSound first and then the NewSound
	local function GetSounds()
		return Fader.OldSound, Fader.NewSound
	end
	
	-- Cancels the current tweens.
	local function StopTweens()
		if OldTween ~= nil then
			OldTween:Destroy()
		end
		OldTween = nil
		
		if NewTween ~= nil then
			NewTween:Destroy()
		end
		NewTween = nil
	end
	
	-- Fade-out-all completion listener.
	local function FadedOutAll()
		Fader.Waited.Disconnect(FadedOutAll)

		StopTweens()

		-- Pause all the sounds if told to do so
		if Fader.AutoPause == true then
			local OldSound, NewSound = GetSounds()
			if OldSound ~= nil and NewSound ~= nil then
				OldSound:Pause()
				NewSound:Pause()
			end
			OldSound, NewSound = nil, nil
		end
	end
	
	-- Reverse animation completion listener.
	local function OnAnimationReverse()
		Fader.Waited.Disconnect(OnAnimationReverse)
		
		StopTweens()
		
		-- Pause the new sound if told to do so
		if Fader.AutoPause == true then
			local NewSound = Fader.NewSound
			if NewSound ~= nil then
				NewSound:Pause()
			end
			NewSound = nil
		end
	end
	
	-- Animation completion listener.
	-- This is where auto pause/play is handled.
	local function OnWaitComplete()
		Fader.Waited.Disconnect(OnWaitComplete)
		
		StopTweens()
		
		-- Do automated pausing
		if Fader.AutoPause == true then
			local OldSound = Fader.OldSound
			if OldSound ~= nil then
				OldSound:Pause()
			end
			OldSound = nil
		end
	end
	
	-- Constructs a new TweenInfo from the properties in the fader.
	function Fader.GetTweenInfo()
		return TweenInfo.new(Fader.Duration, Fader.EaseStyle, Fader.EaseDirection)
	end
	
	-- Cancels the objects used to mark completion.
	-- This stops all animation.
	function Fader.DisconnectCompletion()
		Fader.Cancel()
		
		local WaitedSignal = Fader.Waited
		if WaitedSignal ~= nil then
			WaitedSignal.Disconnect(FadedOutAll)
			WaitedSignal.Disconnect(OnAnimationReverse)
			WaitedSignal.Disconnect(OnWaitComplete)
		end
		
		WaitedSignal = nil
		StopTweens()
	end
	
	-- Cancels fade completion by reversing the direction
	-- of the fade. This makes it fade back to the
	-- old sound.
	function Fader.CancelAnimation()
		-- Disconnect completion stuff
		Fader.DisconnectCompletion()
		
		-- Do reverse animation
		local OldSound, NewSound = GetSounds()
		
		local Info = Fader.GetTweenInfo()
		if OldSound ~= nil then
			OldTween = TweenService:Create(OldSound, Info, {Volume = Fader.OldVolume})
			OldTween:Play()
		end
		
		if NewSound ~= nil then
			NewTween = TweenService:Create(NewSound, Info, {Volume = 0})
			NewTween:Play()
		end
		
		Fader.Waited.Connect(OnAnimationReverse)
		
		Fader.Wait()
	end
	
	-- Starts the fade from the old sound to the new sound.
	-- Argument 1 is a number that overrides the destination volume
	-- of the NewSound.
	function Fader.StartAnimation()
		Fader.DisconnectCompletion()
		
		-- Store volumes, then do animation
		local TargetVolume = Fader.TargetVolume
		local OldSound, NewSound = GetSounds()

		local Info = Fader.GetTweenInfo()
		if OldSound ~= nil then
			print("fade old sound")
			Fader.OldVolume = OldSound.Volume
			OldTween = TweenService:Create(OldSound, Info, {Volume = 0})
			OldTween:Play()
		end

		if NewSound ~= nil then
			print("fade new sound")
			
			local NewVolume = TargetVolume or NewSound.Volume
			Fader.NewVolume = NewVolume
			
			-- Start from 0% volume, then resume (to not affect TimePosition)
			NewSound.Volume = 0
			if Fader.AutoPlay == true then
				NewSound:Resume()
			end
			
			NewTween = TweenService:Create(NewSound, Info, {Volume = NewVolume})
			NewTween:Play()
		end
		
		-- Completion is marked when the .Waited signal fires.
		Fader.Waited.Connect(OnWaitComplete)
		
		Fader.Wait()
	end
	
	-- Fades out all sounds stored in the object table.
	function Fader.FadeOutAll()
		Fader.DisconnectCompletion()
		
		local OldSound, NewSound = GetSounds()
		
		if OldSound ~= nil and NewSound ~= nil then
			-- Store volumes and fade out all sounds
			Fader.OldVolume = OldSound.Volume
			Fader.NewVolume = NewSound.Volume
			
			local Info = Fader.GetTweenInfo()
			local VolumeTable = {Volume = 0}
			
			OldTween = TweenService:Create(OldSound, Info, VolumeTable)
			NewTween = TweenService:Create(NewSound, Info, VolumeTable)
			
			Fader.Waited.Connect(FadedOutAll)
			
			Fader.Wait()
		end
	end
	
	Fader.AddDisposalListener(function()
		Fader.DisconnectCompletion()
	end)
	
	return Fader
end

return SoundFader]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ebe</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX97F9769518E44708B45FE423DA20034C">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">OldBGMPlayer</string>
						<string name="ScriptGuid">{FA4FCB74-5AC0-432F-8A8C-EC2DFA418A96}</string>
						<ProtectedString name="Source"><![CDATA[-- Provides an object that is used to play background music.

-- This is the successor of the old MusicPlayer. This includes support
-- for a set music url and the usage of music zones.

-- Thanks to Jukereise for the concept of the music zones
-- (Meaning music zones are in the form of models)

-- THIS VERSION IS SUPER BUGGY AND SHOULD NOT BE USED
-- Use the revamped version instead

-- By udev2192

local RunService = game:GetService("RunService")
local MarketplaceService = game:GetService("MarketplaceService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local Adapters = RepModules:WaitForChild("Adapters")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Hitbox = require(Adapters:WaitForChild("Hitbox"))
local InstCollector = require(Adapters:WaitForChild("InstanceCollector"))

local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))
local TimeWaiter = require(UtilRepModules:WaitForChild("TimeWaiter"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local SoundFader = require(script.Parent:WaitForChild("SoundFader"))

local MusicPlayer = {}

-- The default BGM url.
MusicPlayer.DefaultURL = ""

-- The search keyword of a music zone.
MusicPlayer.MUSIC_ZONE_KEYWORD = "^_MusicZone"

-- The name of the sound instance in a music zone.
MusicPlayer.SOUND_NAME = "Sound"

-- The name of the parts folder instance in a music zone.
MusicPlayer.PARTS_FOLDER_NAME = "Parts"

-- Where to look for music zones.
MusicPlayer.MusicZoneLocation = workspace:WaitForChild("Areas")

-- Music modes that are used to determine the behavior
-- that triggers music playback.
MusicPlayer.MusicMode = {
	-- Play by using a set sound URL
	ByURL = 0,

	-- Play by using sound URLs from music zones.
	ByMusicZone = 1
}

-- Gets the sound information by asset id.
local function GetInfoByURL(Id)
	local Success, Result = pcall(function()
		return MarketplaceService:GetProductInfo(Id)
	end)

	if Success == true then
		return Result
	else
		return ""
	end
end

local function IsPart(Part)
	return Util.IsInstance(Part) and Part:IsA("BasePart")
end

local function IsSoundLoaded(Sound)
	return Sound.IsLoaded == true and Sound.TimeLength > 0
end

local function IsSoundURL(URL)
	return URL ~= nil and typeof(URL) == "string" and URL ~= ""
end

local function FadeSound(Sound, Vol, Dur)
	assert(typeof(Sound) == "Instance" and Sound:IsA("Sound"), "Argument 1 must be a sound instance.")

	return Util.Tween(Sound, TweenInfo.new(Dur, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Volume = Vol})
end

local function IsMusicZone(Inst)
	return Util.IsInstance(Inst) and (string.match(Inst.Name, MusicPlayer.MUSIC_ZONE_KEYWORD) ~= nil)
end

local HitStatus = Hitbox.HitStatus
Hitbox = nil

-- Constructs a new sound fader object that fades
-- from the old sound to the new sound over the
-- provided duration.
--function MusicPlayer.CreateFader(OldSound, NewSound, FadeTime)
--	local Fader = TimeWaiter.New()
	
--	local OldTween = nil
--	local NewTween = nil
	
--	-- Reverses the fade direction to go back to the old sound.
--	function Fader.Cancel()
		
--	end
	
--	-- Starts the fading
--	function Fader.Start()
		
--	end
	
--	-- Fades out both sounds.
--	function Fader.FadeOut()
		
--	end
--end

function MusicPlayer.New()
	local Obj = Object.New("ClientMusicPlayer")
	local AssetInfo = {} -- Asset info override table
	local CurrentMusicZones = {}
	local SoundVolumes = {} -- Music zone sound volumes
	local TimePositions = {} -- Music zone starting time positions
	local ZoneParts = {} -- Music zone BaseParts
	local CurrentHitbox = nil
	local CurrentMusicZone = nil
	local FadingInSound = nil
	local FinishedFading = true
	
	local IsFadingIn = false -- If the current fader is fading to a new BGM
	
	local CurrentFader = nil -- The current sound fader
	local ZoneCollector = nil

	Obj.SoundInstance = nil
	Obj.IsLoaded = false

	-- By default, the name of the sound asset
	-- that was just loaded.
	Obj.AssetInfo = ""

	-- The length of the music transition in seconds.
	Obj.FadeTime = 1

	-- If the audio plays the new URL as soon as it's changed
	Obj.Autoplay = true

	-- Waits for the currently fading sounds to stop fading.
	-- Returns if the fade completed.
	local function WaitForSoundFade(SoundToFadeIn, FadeTime)
		FadingInSound = SoundToFadeIn

		local Elapsed = 0

		while FadingInSound == SoundToFadeIn do
			Elapsed += RunService.Heartbeat:Wait()

			if Elapsed > FadeTime then
				FadingInSound = nil
				return true
			end
		end
		
		FadingInSound = nil

		return false
	end

	local function UpdateInfoInternally(URL)
		local SetInfo = AssetInfo[URL]
		if SetInfo ~= nil then
			-- Return the set asset information
			-- since it's been defined already
			Obj.AssetInfo = SetInfo
			return SetInfo
		else
			SetInfo = nil

			-- Find the id in the URL string, if needed
			-- Conversion to a number is needed because
			-- MarketplaceService:GetProductInfo()
			-- only accepts asset IDs.
			if typeof(URL) == "string" then
				URL = string.split(URL, "://")[2]
				if URL ~= nil then
					URL = tonumber(URL)
				end
			end

			-- Request the info
			if typeof(URL) == "number" then
				local Info = GetInfoByURL(URL or 0)
				Obj.AssetInfo = Info
				Object.FireCallback(Obj.AssetInfoChanged, Info)
				return Info
			end
		end
	end
	
	-- Fade completion listener.
	local function OnFadeComplete()
		if CurrentFader ~= nil then
			CurrentFader.Dispose()
			print("Disposing current fader from completion")
		end
	end
	
	-- Toggles the fader completion listener that
	-- disposes the fader itself.
	local function ToggleFaderWaitListener(IsListening)
		if CurrentFader ~= nil then
			local WaitSignal = CurrentFader.Waited

			if IsListening == true then
				WaitSignal.Connect(OnFadeComplete)
			else
				WaitSignal.Disconnect(OnFadeComplete)
			end
		end
	end
	
	-- Toggles the music fading.
	local function ToggleFader(IsFading, FadeTime, OldSound, NewSound)
		if IsFading == true then
			IsFadingIn = true
			
			CurrentFader = SoundFader.New(FadeTime)
			CurrentFader.OldSound = OldSound
			CurrentFader.NewSound = NewSound
			
			ToggleFaderWaitListener(true)
			CurrentFader.StartAnimation()
		else
			IsFadingIn = false
			
			if CurrentFader ~= nil then
				ToggleFaderWaitListener(true)
				CurrentFader.CancelAnimation()
			end
		end
	end

	-- Fades out the old sound instance
	local function FadeOutSound(DestroyOldSound, SoundToFadeIn)
		local OldSound = Obj.SoundInstance
		local FadeTime = Obj.FadeTime or 1

		if OldSound ~= nil then
			coroutine.wrap(function()
				local IsTweenCompleted = false
				if FadeTime > 0 then
					local Tween = FadeSound(OldSound, 0, FadeTime)
					
					local Elapsed = 0
					while SoundToFadeIn == FadingInSound do
						Elapsed += RunService.Heartbeat:Wait()
						
						if Elapsed > FadeTime then
							IsTweenCompleted = true
							break
						end
					end
					
					Tween:Destroy()
				end

				if DestroyOldSound == true then
					OldSound:Destroy()
				else
					if IsTweenCompleted == true then
						print("pause sound")
						OldSound:Pause()
					end
				end
				OldSound = nil
			end)()
		end
	end

	-- Fades to a new sound by URL
	-- If URL is nil, the sound will fade out and stop
	local function FadeToURL(URL, IsDestroyingOld)
		local OldSound = Obj.SoundInstance

		if Obj.FadeTime > 0 then
			FinishedFading = false

			if IsSoundURL(URL) == true then
				local NewSound = Instance.new("Sound")
				Obj.SoundInstance = NewSound
				NewSound.SoundId = URL
				NewSound.Volume = 0
				NewSound.Looped = true
				NewSound.Parent = script
				
				-- Fade out the old sound
				--FadeOutSound(IsDestroyingOld)

				-- Fade in the new sound once it loads
				coroutine.wrap(function()
					if NewSound.IsLoaded == false then
						NewSound.Loaded:Wait()
					end

					if IsSoundLoaded(NewSound) then
						-- Update asset information
						coroutine.wrap(UpdateInfoInternally)(URL)

						-- Fade in
						local FadeTime = Obj.FadeTime or 1
						ToggleFader(true, FadeTime, OldSound, NewSound)
						

						NewSound:Play()
						local Tween = FadeSound(NewSound, Obj.Volume, FadeTime)

						local CompletedFade = WaitForSoundFade(NewSound, FadeTime)
						Tween:Destroy()
						Tween = nil

						if CompletedFade == true then
							FinishedFading = true
							
							print("fade completion true")
						else
							print("fade completion false")

							-- Fade out the sound if the fade didn't complete.
							ToggleFader(false)
							
							--FadeSound(NewSound, 0, FadeTime)

							--NewSound:Pause()
							if IsDestroyingOld == true then
								NewSound:Destroy()
							end
						end
					else
						NewSound:Destroy()
						warn("Failed to load sound: " .. URL)
					end

					NewSound = nil
				end)()
			else
				Obj.SoundInstance = nil
				FadeOutSound(IsDestroyingOld)
			end

			FinishedFading = true

			--if FinishedFading == true then

			--end
		else
			-- Immediately switch
			if IsSoundURL(URL) == true then
				local Sound = Obj.SoundInstance
				if Sound == nil then
					Sound = Instance.new("Sound")
				end
				Sound.SoundId = URL
				Sound.Looped = true
				Sound.Volume = Obj.Volume
				Sound.Parent = script
				Sound:Play()

				Obj.SoundInstance = Sound
			else
				local Sound = Obj.SoundInstance
				if Sound ~= nil then
					Sound:Destroy()
					Sound = nil
				end
				Obj.SoundInstance = nil
			end
		end
	end

	-- Fades to a song by music zone.
	local function FadeToMusicZone(Zone)
		--if FinishedFading == true then
		FinishedFading = false

		FadingInSound = nil

		print("a")
		if Zone ~= nil then
			local OldSound = Obj.SoundInstance
			local FadeTime = Obj.FadeTime or 1

			local FadeInTween = nil

			-- Get the sound instance that is fading in.
			local SoundToFadeIn = Zone:FindFirstChild(MusicPlayer.SOUND_NAME or "Sound")

			print("b", Zone, SoundToFadeIn)
			if SoundToFadeIn ~= nil then
				print("c")
				Obj.SoundInstance = SoundToFadeIn
				FadingInSound = SoundToFadeIn
				
				local SoundPos = SoundToFadeIn.TimePosition
				local TargetTimePos = TimePositions[SoundToFadeIn] or SoundPos
				TimePositions[SoundToFadeIn] = TargetTimePos
				
				-- Get the starting properties of the sound				
				local SoundVolume = SoundToFadeIn.Volume
				local TargetVolume = SoundVolumes[SoundToFadeIn] or SoundVolume
				SoundVolumes[SoundToFadeIn] = TargetVolume

				local StartingVolume = 0
				local StartingTimePos = 0
				if FinishedFading == true then
					StartingVolume = TargetVolume
					StartingTimePos = TargetTimePos
				else
					print("finish fading false", SoundVolume)
					StartingVolume = SoundVolume
					StartingTimePos = SoundPos
				end
				FinishedFading = false

				SoundToFadeIn.Volume = StartingVolume
				SoundToFadeIn.TimePosition = StartingTimePos
				
				-- Fade the new sound in
				if SoundToFadeIn.IsPlaying == false then
					SoundToFadeIn:Resume()
				end
				ToggleFader(true, FadeTime, OldSound, SoundToFadeIn)
				local IsCompleted = WaitForSoundFade(SoundToFadeIn, FadeTime)
				if IsCompleted == false then
					-- Fade back
					ToggleFader(false)
				end
				
				--FadeInTween = FadeSound(FadingInSound, TargetVolume, FadeTime)
			end

			local function DestroyFadeIn()
				if FadeInTween ~= nil then
					FadeInTween:Destroy()
					FadeInTween = nil
				end
			end

			if OldSound ~= nil then
				if true then
					print("reached old sound logic, returning")
					return
				end
				
				-- Fade out the old sound
				-- (Fade it back in if its zone is re-entered)
				local Elapsed = 0
				--local FadeOutTween = FadeSound(OldSound, 0, FadeTime)

				local CompletedFade = WaitForSoundFade(SoundToFadeIn, FadeTime)

				-- Stop tweening
				DestroyFadeIn()

				if FadeOutTween ~= nil then
					FadeOutTween:Destroy()
					FadeOutTween = nil
				end

				-- If the music transition completed, reset the old sound instance
				if CompletedFade == true then
					Obj.SoundInstance = SoundToFadeIn

					local TimePos = TimePositions[OldSound]
					local SoundVolume = SoundVolumes[OldSound]

					OldSound:Stop()

					if TimePos ~= nil then
						OldSound.TimePosition = TimePos
					end

					if SoundVolume ~= nil then
						OldSound.Volume = SoundVolume
					end
					
					FadingInSound = nil
					
					print("completed sound fade")

					-- Reset debounce values
					CurrentMusicZone = nil
					FinishedFading = true
				else
					-- Fade back
					Obj.SoundInstance = OldSound
					FinishedFading = false
					ToggleFader(false)
					--FadeToMusicZone(Zone)
				end
			else
				task.wait(FadeTime)
				DestroyFadeIn()
				FinishedFading = true
			end
		else
			FadingInSound = nil
			FinishedFading = true
			FadeToURL(Util.FormatAssetId(Obj.MainURL))
			FinishedFading = false
		end
		--end
	end

	-- Hitbox change listener.
	local function OnHitChange(Part, HitResult)
		if IsPart(Part) == true then
			HitResult = HitResult.Status

			-- Take the next action by hit result
			-- (Music zones are by part parent)
			local ZoneModel = Part.Parent.Parent
			local IsChanging = false

			if HitResult == HitStatus.CompletelyInside then
				-- Add music zone
				if IsMusicZone(ZoneModel) == true then
					IsChanging = true
					table.insert(CurrentMusicZones, ZoneModel)
				end
			elseif HitResult == HitStatus.NotTouching then
				-- Remove music zone
				local Index = table.find(CurrentMusicZones, ZoneModel)
				if Index ~= nil then
					IsChanging = true
					table.remove(CurrentMusicZones, Index)
				end
			end

			-- Fade to the music zone at the end of the list
			if CurrentMusicZones ~= nil then
				if IsChanging == true then
					local NextZoneModel = CurrentMusicZones[#CurrentMusicZones]

					CurrentMusicZone = NextZoneModel
					print("fading to", NextZoneModel)
					FadeToMusicZone(NextZoneModel)

					-- Set as the current music zone for debouncing
					if NextZoneModel ~= CurrentMusicZone then
						CurrentMusicZone = NextZoneModel
					end
				end
			else
				CurrentMusicZone = nil
				FadeOutSound()
			end
		end
	end

	-- Sets if the specified model music zone has
	-- its parts binded to the hitbox
	local function SetZoneConnected(Zone, IsConnected)
		local Hitbox = CurrentHitbox

		if Hitbox ~= nil then
			if IsConnected == true then
				if IsMusicZone(Zone) == true then
					SetZoneConnected(Zone, false)

					-- Reconnect the parts to the hitbox.
					local Parts = Zone:WaitForChild(MusicPlayer.PARTS_FOLDER_NAME or "Parts")
					if Parts ~= nil then
						Parts = Parts:GetChildren()

						ZoneParts[Zone] = Parts
						for i, v in pairs(Parts) do
							if IsPart(v) == true then
								Hitbox.ConnectPart(v)
							end
						end
					end
				end
			else
				local Parts = ZoneParts[Zone]

				if Parts ~= nil then
					for i, v in pairs(Parts) do
						Hitbox.DisconnectPart(v)
					end
				end
			end
		end
	end

	-- Sets if the music zone instance collector is being used
	local function SetInstancesCollected(IsCollecting)
		if IsCollecting == true then
			SetInstancesCollected(false)

			local ZoneLocation = MusicPlayer.MusicZoneLocation
			if ZoneLocation ~= nil then
				ZoneCollector = InstCollector.New(MusicPlayer.MUSIC_ZONE_KEYWORD)

				-- Reconnect events.
				ZoneCollector.InstanceRemoved = function(Inst)
					SetZoneConnected(Inst, false)
				end

				ZoneCollector.InstanceFound = function(Inst)
					SetZoneConnected(Inst, true)
				end

				-- Start the collection.
				ZoneCollector.AdaptInstance(ZoneLocation)
			end
		else
			if ZoneCollector ~= nil then
				ZoneCollector.Dispose()
				ZoneCollector = nil
			end
		end
	end
	
	-- Checks if a sound is currently fading.
	function Obj.IsFading()
		return FinishedFading == false
	end

	-- Stores a URL's asset information. That information
	-- is then used by Obj.GetSoundInfo().
	function Obj.SetAssetInfo(URL, Info)
		AssetInfo[URL] = Info
	end


	-- Binds a Hitbox to be used by the MusicZone handler.
	function Obj.BindHitbox(Hitbox)
		if Hitbox ~= nil then
			CurrentHitbox = Hitbox

			Hitbox.HitStatusChanged.Connect(OnHitChange)
		else
			if CurrentHitbox ~= nil then
				CurrentHitbox.HitStatusChanged.Disconnect(OnHitChange)
				CurrentHitbox = nil
			end
		end
	end

	-- Gets the sound info of the currently loaded sound.
	-- This yields the current thread.
	function Obj.GetSoundInfo()
		local Sound = Obj.SoundInstance
		if Sound ~= nil then
			return UpdateInfoInternally(Sound.SoundId)
		else
			return ""
		end
	end

	-- Re(-starts) the BGM playback.
	function Obj.Play()
		FadeToURL(Obj.SoundURL)
	end

	-- Fades out the BGM playback
	function Obj.Stop()
		FadeToURL(nil)
	end

	Obj.SetProperty("Volume", 1, function(vol)
		local Sound = Obj.SoundInstance
		if Sound ~= nil then
			Sound.Volume = vol
		end
		Sound = nil
	end)

	-- The sound URL used to play the background music.
	-- Also used if the hitbox isn't in any music zone.
	Obj.SetProperty("MainURL", MusicPlayer.DefaultURL, function(URL)
		if Obj.Autoplay == true then
			FadeToURL(Util.FormatAssetId(URL), true)
		end
		--coroutine.wrap(UpdateInfoInternally)(URL)
	end)

	-- The music mode used.
	Obj.SetProperty("MusicMode", MusicPlayer.MusicMode.ByURL, function(Mode)
		local MusicMode = MusicPlayer.MusicMode

		if Mode == MusicMode.ByURL then
			-- Disconnect the music zone collector
			SetInstancesCollected(false)

			-- Disconnect music zones
			for i, v in pairs(ZoneParts) do
				SetZoneConnected(i, false)
			end

			-- Fade back to the main url
			FadeToURL(Obj.MainURL)
		elseif Mode == MusicMode.ByMusicZone then
			-- Connect the music zone collector
			SetInstancesCollected(true)
		end
	end)

	-- Fires when the asset info loaded into the BGM object changes.
	Obj.AssetInfoChanged = nil
	
	-- Pause sound instance on disposal
	Obj.Disposal = function()
		Obj.SoundInstance:Pause()
	end

	return Obj
end

return MusicPlayer]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ebf</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX398FE46F1E4D46A49B2C31CEB194FA9A">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">SoundFaderToNotUse</string>
						<string name="ScriptGuid">{ADDE4E02-9813-4BCF-9DFC-78A81B032896}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Utility class for fading from one sound to another.
The fade can be cancelled.

By udev2192
]]--

local RunService = game:GetService("RunService")

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))

local SoundFader = {}
SoundFader.__index = SoundFader
SoundFader.ClassName = script.Name

local function AssertNumber(Obj, ArgNum)
	assert(typeof(Obj) == "number", "Argument", ArgNum, "must be a number")
end

local function LerpValue(a, b, t)
	return a + (b - a) * t
end

--[[
Lerps the volume between two sounds to a destination volume.

Params:
FadeParams <table> - A table of fading parameters which include:
	OldSound <Sound> - The sound instance to fade from.
	NewSound <Sound> - The sound instance to fade to.
	OldSoundVolume <number> - The volume to fade the old sound away from.
	NewSoundVolume <number> - The volume to fade the new sound to.
	Time <number> - The percentage of the fade (from 0-1).
]]--
function SoundFader.Lerp(FadeParams)
	local Time = math.clamp(FadeParams.Time, 0, 1)
	local OldSound = FadeParams.OldSound
	local NewSound = FadeParams.NewSound
	
	if OldSound ~= nil then
		OldSound.Volume = LerpValue(FadeParams.OldSoundVolume, 0, Time)
	end
	if NewSound ~= nil then
		NewSound.Volume = LerpValue(0, FadeParams.NewSoundVolume, Time)
	end
end

function SoundFader.New()
	local Fader = Object.New(SoundFader.ClassName)
	
	--[[
	Store fading in a queue in case another sound is
	queued for transition while a fade is in progress.
	
	If the fade is requested to be reversed, the sound
	that fades back in will be at the end of the list.
	]]--
	local FadeOutQueue = {}
	
	local IsFading = false
	local IsReversing = false
	local FadeRunner
	
	--[[
	<boolean>: Whether or not the fade transition
			   can be cancelled.
	]]--
	Fader.CanReverse = true
	
	--[[
	<number>: A number of reference to the original volume of the sound
			  that is fading out.
	]]--
	Fader.OldSoundVolume = 1
	
	--[[
	<number>: The target volume to fade to.
	]]--
	Fader.TargetVolume = 1
	
	--[[
	<number>: How long the total fade transition time is.
	]]--
	Fader.TransitionTime = 3
	
	--[[
	<number>: Current fade transition time (from 0-1).
	]]--
	Fader.CurrentTime = 0
	
	--[[
	<Sound>: The current sound instance that is faded in.
	]]--
	Fader.CurrentSound = nil
	
	local function DisconnectLastRunner()
		if FadeRunner ~= nil then
			FadeRunner:Disconnect()
			FadeRunner = nil
		end
	end
	
	--[[
	Stops the current fading transition immediately.
	]]--
	function Fader.Stop()
		DisconnectLastRunner()
		
		IsFading = false
		IsReversing = false
		
		print("stop fade")
	end
	
	--[[
	Starts the fade transition.
	]]--
	local function FadeToNew()
		print("fade")
		
		--local Elapsed = 0
		DisconnectLastRunner()

		FadeRunner = RunService.Heartbeat:Connect(function(Delta)
			local Time
			if IsFading == true then
				Time = Fader.CurrentTime + Delta
			elseif IsReversing == true then
				Time = Fader.CurrentTime - Delta
			end
			
			Time = math.clamp(Time / Fader.TransitionTime, 0, 1)
			local TargetVolume = Fader.TargetVolume

			Fader.CurrentTime = Time
			
			-- Loop through all fading out sounds to fade those out
			-- and fade the new one in.
			local OldSoundVolume = Fader.OldSoundVolume or TargetVolume
			for i, v in pairs(FadeOutQueue) do
				v.Volume = LerpValue(OldSoundVolume, 0, Time)
				print(v.Volume)
			end
			
			local SoundToFadeTo = Fader.CurrentSound
			if SoundToFadeTo ~= nil then
				SoundToFadeTo.Volume = LerpValue(0, TargetVolume, Time)
				print(TargetVolume, ":", SoundToFadeTo.Volume)
			end

			-- Stop and notify once complete
			if Time >= 1 then
				Fader.Stop()

				if SoundToFadeTo ~= nil then
					SoundToFadeTo.Volume = TargetVolume
				end
				Fader.Completed.Fire(FadeOutQueue, SoundToFadeTo)
			elseif Time <= 0 then
				Fader.Stop()
				
				Fader.ReverseCompleted.Fire(FadeOutQueue, SoundToFadeTo)
			else
				return
			end
			
			-- Remove sounds that are fading out from the queue,
			-- then silence them (if the runner got stopped)
			for i, v in pairs(FadeOutQueue) do
				table.remove(FadeOutQueue, i)
				
				v.Volume = 0
			end
		end)
	end
	
	--[[
	Reverses the fade transition if currently being faded.
	]]--
	function Fader.Reverse()
		-- Fade whatever is at the end of the queue back
		-- by removing it from the queue
		-- This is because whatever is at the last index
		-- is the sound most recently trying to fade out
		local Index = #FadeOutQueue
		if Index > 0 then
			-- Set the current sound to whatever
			-- is being reversed back in
			local ReverseSound = table.remove(FadeOutQueue, Index)
			if ReverseSound ~= nil then
				IsReversing = true
			end
			Fader.CurrentSound = ReverseSound
			print(ReverseSound:GetAttribute("Attribution"))
		end
		Index = nil
		
		IsFading = false
	end
	
	--[[
	Fades to the provided sound.
	
	Params:
	Sound <Sound> - The sound instance to fade to.
	]]--
	function Fader.Switch(Sound)
		-- If the sound specified is the one most
		-- recently fading out, and if permitted
		-- to do so, just reverse the fade.
		if Fader.CanReverse == true and Sound ~= nil then
			local FadingOutSound = FadeOutQueue[#FadeOutQueue]
			if Sound == FadingOutSound then
				Fader.Reverse()

				return
			end

			FadingOutSound = nil
		end
		
		-- Schedule the previous sound for fading out
		local CurrentSound = Fader.CurrentSound
		if CurrentSound ~= nil then
			table.insert(FadeOutQueue, CurrentSound)
		end
		CurrentSound = nil
		
		-- Fade in the new sound
		IsReversing = false
		IsFading = true
		
		Fader.CurrentTime = 0
		Fader.CurrentSound = Sound
		FadeToNew()
	end
	
	--[[
	Fires when the fade transition has completed.
	
	Params:
	OldSounds <array> - The sounds that were faded out.
	NewSound - The sound that faded in.
	]]--
	Fader.Completed = Signal.New()
	
	--[[
	Fires when the fade transition has been
	fully cancelled through a reverse fade.
	
	Params:
	OldSounds <array> - The sound that faded back in.
	NewSound - The sound that was cancelled.
	]]--
	Fader.ReverseCompleted = Signal.New()
	
	Fader.OnDisposal = function()
		Fader.Stop()
		
		Fader.Completed.DisconnectAll()
		Fader.ReverseCompleted.DisconnectAll()
	end
	
	return Fader
end

return SoundFader]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ec0</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX1DC0666E3B124B4FBCBB80F7F8B3DF9F">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">SoundFader</string>
						<string name="ScriptGuid">{01F839A2-2166-414B-B6E6-5D228332E289}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Utility class for fading from one sound to another.
The fade can be cancelled.

By udev2192
]]--

local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local RepModules = game:GetService("ReplicatedStorage"):WaitForChild("Modules")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))
local Util = require(UtilRepModules:WaitForChild("Utility"))
local TweenGroup = require(UtilRepModules:WaitForChild("TweenGroup"))

local SoundFader = {}
SoundFader.__index = SoundFader
SoundFader.ClassName = script.Name

local function AssertNumber(Obj, ArgNum)
	assert(typeof(Obj) == "number", "Argument", ArgNum, "must be a number")
end

local function LerpValue(a, b, t)
	return a + (b - a) * t
end

--[[
Lerps the volume between two sounds to a destination volume.

Params:
FadeParams <table> - A table of fading parameters which include:
	OldSound <Sound> - The sound instance to fade from.
	NewSound <Sound> - The sound instance to fade to.
	OldSoundVolume <number> - The volume to fade the old sound away from.
	NewSoundVolume <number> - The volume to fade the new sound to.
	Time <number> - The percentage of the fade (from 0-1).
]]--
function SoundFader.Lerp(FadeParams)
	local Time = math.clamp(FadeParams.Time, 0, 1)
	local OldSound = FadeParams.OldSound
	local NewSound = FadeParams.NewSound
	
	if OldSound ~= nil then
		OldSound.Volume = LerpValue(FadeParams.OldSoundVolume, 0, Time)
	end
	if NewSound ~= nil then
		NewSound.Volume = LerpValue(0, FadeParams.NewSoundVolume, Time)
	end
end

function SoundFader.New()
	local Fader = Object.New(SoundFader.ClassName)
	
	--[[
	Store fading in a queue in case another sound is
	queued for transition while a fade is in progress.
	
	If the fade is requested to be reversed, the sound
	that fades back in will be at the end of the list.
	]]--
	--local FadeOutQueue = {}
	--local OldSoundTweens = {}
	
	-- make sure to fix the music fade out bug with this
	local FadeOutTweens = TweenGroup.New()
	
	--local IsFading = false
	--local IsReversing = false
	--local FadeRunner
	local NewSoundTween
	
	--[[
	<boolean>: Whether or not the fade transition
			   can be cancelled.
	]]--
	Fader.CanReverse = true
	
	--[[
	<number>: A number of reference to the original volume of the sound
			  that is fading out.
	]]--
	Fader.OldSoundVolume = 1
	
	--[[
	<number>: The target volume to fade to.
	]]--
	--Fader.TargetVolume = 1
	
	--[[
	<number>: How long the total fade transition time is.
	]]--
	Fader.SetProperty("TransitionTime", 1, function(Time)
		Fader.TweeningInfo = TweenInfo.new(Time, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
	end)
	
	--[[
	<number>: Current fade transition time (from 0-1).
	]]--
	--Fader.CurrentTime = 0
	
	--[[
	<Sound>: The current sound instance that is faded in.
	]]--
	Fader.CurrentSound = nil
	
	--Fader.TweeningInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
	
	--local function DisconnectLastRunner()
	--	if FadeRunner ~= nil then
	--		FadeRunner:Disconnect()
	--		FadeRunner = nil
	--	end
	--end
	
	--local function StopOldSoundTweens()
	--	for i, v in pairs(OldSoundTweens) do
	--		v:Pause()
	--		v:Destroy()
	--	end
	--	OldSoundTweens = {}
	--end
	
	local function StopNewSoundTween()
		if NewSoundTween ~= nil then
			NewSoundTween:Pause()
			NewSoundTween:Destroy()
			NewSoundTween = nil
		end
	end
	
	--[[
	Stops the current fading transition immediately.
	]]--
	function Fader.Stop()
		StopNewSoundTween()
		FadeOutTweens.KillAll()
	end
	
	--[[
	Starts the fade transition.
	]]--
	--local function FadeToNew(NewSound, IsReverse)	
	--	--local OldSound = Fader.CurrentSound
	--	local CurrentlyFading = NewSound
	--	Fader.CurrentSound = NewSound
	--	Fader.SoundChanged.Fire(NewSound)

	--	local AnimInfo = Fader.TweeningInfo
		
	--	-- Fade in all the old sounds, then fade in the new one
	--	StopOldSoundTweens()
	--	for i, v in pairs(FadeOutQueue) do
	--		table.insert(OldSoundTweens, Util.Tween(v, AnimInfo, {Volume = 0}))
	--	end
		
	--	StopNewSoundTween()
	--	if NewSound then
	--		NewSoundTween = Util.Tween(NewSound, AnimInfo, {Volume = Fader.TargetVolume})
	--	end	
		
	--	-- Wait until the tweening is done or until interrupted
	--	local Elapsed = 0
	--	local FadeTime = AnimInfo.Time
		
	--	local IsInterrupted
	--	while true do
	--		Elapsed += RunService.Heartbeat:Wait()
			
	--		if CurrentlyFading ~= Fader.CurrentSound then
	--			IsInterrupted = true
	--			StopOldSoundTweens()
				
	--			if NewSoundTween then
	--				NewSoundTween:Destroy()
	--				NewSoundTween = nil
	--			end
				
	--			--print("interrupted")
				
	--			break
	--		elseif Elapsed > FadeTime then
	--			IsInterrupted = false
				
	--			break
	--		end
	--	end
		
	--	-- Fire the interrupted event if the tweening was interrupted.
	--	-- Otherwise, fire the corresponding completed event.
	--	if IsInterrupted == true then
	--		Fader.Interrupted.Fire(FadeOutQueue, NewSound)
	--	else
	--		if IsReverse == true then
	--			Fader.ReverseCompleted.Fire(FadeOutQueue, NewSound)
	--		else
	--			Fader.Completed.Fire(FadeOutQueue, NewSound)
	--		end
			
	--		-- Since it's now safe to do so, clear the fade out queue.
	--		StopOldSoundTweens()
	--		FadeOutQueue = {}
	--	end
	--end
	
	--[[
	Reverses the fade transition if currently being faded.
	]]--
	--function Fader.Reverse()
	--	-- Fade whatever is at the end of the queue back
	--	-- by removing it from the queue
	--	-- This is because whatever is at the last index
	--	-- is the sound most recently trying to fade out
	--	local Index = #FadeOutQueue
	--	if Index > 0 then
	--		-- Set the current sound to whatever
	--		-- is being reversed back in
	--		local ReverseSound = table.remove(FadeOutQueue, Index)
	--		if ReverseSound ~= nil then
	--			IsReversing = true
				
	--			-- Add the sound that was trying to fade in originally
	--			-- to the fade out queue, then reverse fade
	--			local CurrentSound = Fader.CurrentSound
	--			if CurrentSound ~= nil then
	--				table.insert(FadeOutQueue, CurrentSound)
	--			end
	--			CurrentSound = nil
				
	--			FadeToNew(ReverseSound, true)
	--		end
	--	end
	--	Index = nil
		
	--	IsFading = false
	--end
	
	--[[
	Fades to the provided sound.
	
	Params:
	Sound <Sound> - The sound instance to fade to.
	]]--
	function Fader.Switch(Sound: Sound?, TargetVolume: number)
		-- If the sound specified is the one most
		-- recently fading out, and if permitted
		-- to do so, just reverse the fade.
		--if Fader.CanReverse == true and Sound ~= nil then
		--	local FadingOutSound = FadeOutQueue[#FadeOutQueue]
		--	if Sound == FadingOutSound then
		--		Fader.Reverse()

		--		return
		--	end

		--	FadingOutSound = nil
		--end
		
		-- Schedule the previous sound for fading out
		--local CurrentSound = Fader.CurrentSound
		--if CurrentSound ~= nil then
		--	table.insert(FadeOutQueue, CurrentSound)
		--end
		--CurrentSound = nil
		
		-- Fade in the new sound
		--IsReversing = false
		--IsFading = true
		
		-- If the new sound is being faded out,
		-- stop that tween
		if Sound then
			FadeOutTweens.Kill(Sound)
		end
		
		--Fader.CurrentTime = 0
		--FadeToNew(Sound, false)
		
		StopNewSoundTween()
		local TweeningInfo = Fader.TweeningInfo
		
		-- Fade out the old
		local OldSound = Fader.CurrentSound
		if OldSound then
			FadeOutTweens.Play(OldSound, TweeningInfo, {Volume = 0}, OldSound, function()
				Fader.SoundFadedOut.Fire(OldSound)
			end)
		end
		
		-- Fade in the new
		Fader.CurrentSound = Sound
		Fader.SoundChanged.Fire(Sound)
		
		if Sound then
			NewSoundTween = TweenService:Create(Sound, TweeningInfo, {Volume = TargetVolume})
			NewSoundTween:Play()
		end
	end
	
	--[[
	Fires when the fade transition has been interrupted.
	
	Params:
	OldSounds <array> - The sounds that tried to fade out.
	NewSound - The sound that tried to fade in.
	]]--
	--Fader.Interrupted = Signal.New()
	
	--[[
	Fires when a sound has been faded out
	
	Params:
	OldSounds <Sound> - The sound that was faded out.
	]]--
	Fader.SoundFadedOut = Signal.New()
	
	--[[
	Fires when the fade transition has completed.
	
	Params:
	OldSounds <array> - The sounds that were faded out.
	NewSound - The sound that faded in.
	]]--
	--Fader.Completed = Signal.New()
	
	--[[
	Fires when the fade transition has been
	fully cancelled through a reverse fade.
	
	Params:
	OldSounds <array> - The sound that faded back in.
	NewSound - The sound that was cancelled.
	]]--
	--Fader.ReverseCompleted = Signal.New()
	
	--[[
	Fires when the primary sound instance has changed.
	
	Params:
	NewSound <Sound> - The new primary sound instance
	]]--
	Fader.SoundChanged = Signal.New()
	
	Fader.OnDisposal = function()
		Fader.Stop()
		
		--Fader.Interrupted.DisconnectAll()
		--Fader.Completed.DisconnectAll()
		--Fader.ReverseCompleted.DisconnectAll()
		Fader.SoundFadedOut.DisconnectAll()
		Fader.SoundChanged.DisconnectAll()
	end
	
	return Fader
end

return SoundFader]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ec1</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0E55DD218F4143A4B9A048C5240A9FCE">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">BGMPlayerButBad</string>
						<string name="ScriptGuid">{87E6894A-48E4-41F8-B549-43E54DC4A7A8}</string>
						<ProtectedString name="Source"><![CDATA[-- Provides an object that is used to play background music.

-- This is the successor of the old MusicPlayer. This includes support
-- for a set music url and the usage of music zones.

-- Thanks to Jukereise for the concept of the music zones
-- (Meaning music zones are in the form of models)

-- This version revampes the coding from the last version of the BGM player
-- because it got way too messy

-- By udev2192

local RunService = game:GetService("RunService")
local MarketplaceService = game:GetService("MarketplaceService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local Adapters = RepModules:WaitForChild("Adapters")
local UtilRepModules = RepModules:WaitForChild("Utils")

local Hitbox = require(Adapters:WaitForChild("Hitbox"))
local InstCollector = require(Adapters:WaitForChild("InstanceCollector"))

local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))
local TimeWaiter = require(UtilRepModules:WaitForChild("TimeWaiter"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local SoundFader = require(script.Parent:WaitForChild("SoundFader"))

local MusicPlayer = {}

-- The default BGM url.
MusicPlayer.DefaultURL = ""

-- The search keyword of a music zone.
MusicPlayer.MUSIC_ZONE_KEYWORD = "^_MusicZone"

-- The name of the sound instance in a music zone.
MusicPlayer.SOUND_NAME = "Sound"

-- The name of the parts folder instance in a music zone.
MusicPlayer.PARTS_FOLDER_NAME = "Parts"

-- The name of the "attribution" sound attribute to use when citing sounds.
MusicPlayer.ATTRIBUTION_INDEX = "Attribution"

MusicPlayer.START_TIME_ATTRIBUTE = "StartTime"
MusicPlayer.TARGET_VOLUME_ATTRIBUTE = "TargetVolume"

-- Where to look for music zones.
MusicPlayer.MusicZoneLocation = workspace:WaitForChild("Areas")

-- Music modes that are used to determine the behavior
-- that triggers music playback.
MusicPlayer.MusicMode = {
	-- Play by using a set sound URL
	ByURL = 0,

	-- Play by using sound URLs from music zones.
	ByMusicZone = 1
}

-- Gets the sound information by asset id.
local function GetInfoById(Id)
	local Success, Result = pcall(function()
		return MarketplaceService:GetProductInfo(Id)
	end)

	if Success == true then
		return Result
	else
		return ""
	end
end

local function IsPart(Part)
	return Util.IsInstance(Part) and Part:IsA("BasePart")
end

local function IsSoundLoaded(Sound)
	return Sound.IsLoaded == true and Sound.TimeLength > 0
end

local function IsSoundURL(URL)
	return URL ~= nil and typeof(URL) == "string" and URL ~= ""
end

local function FadeSound(Sound, Vol, Dur)
	assert(typeof(Sound) == "Instance" and Sound:IsA("Sound"), "Argument 1 must be a sound instance.")

	return Util.Tween(Sound, TweenInfo.new(Dur, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Volume = Vol})
end

local function IsMusicZone(Inst)
	return Util.IsInstance(Inst) and (string.match(Inst.Name, MusicPlayer.MUSIC_ZONE_KEYWORD) ~= nil)
end

local HitStatus = Hitbox.HitStatus
Hitbox = nil

-- Constructs a new sound fader object that fades
-- from the old sound to the new sound over the
-- provided duration.
--function MusicPlayer.CreateFader(OldSound, NewSound, FadeTime)
--	local Fader = TimeWaiter.New()

--	local OldTween = nil
--	local NewTween = nil

--	-- Reverses the fade direction to go back to the old sound.
--	function Fader.Cancel()

--	end

--	-- Starts the fading
--	function Fader.Start()

--	end

--	-- Fades out both sounds.
--	function Fader.FadeOut()

--	end
--end

--[[
Gets a sound instance's attribution.

Params:
Sound <Sound> - The sound instance to retrieve
				the attribution from.
]]--
function MusicPlayer.GetAttributionBySound(Sound)
	assert(Sound ~= nil, "Argument 1 is missing.")
	
	-- See if there's an "Attribution" attribute on
	-- the sound instance
	local AttributionAttr = Sound:GetAttribute(MusicPlayer.ATTRIBUTION_INDEX)
	if AttributionAttr ~= nil then
		return tostring(AttributionAttr)
	end

	-- If all else fails, find the id in the URL string, if needed
	-- Conversion to a number is needed because
	-- MarketplaceService:GetProductInfo()
	-- only accepts asset IDs.
	local Url = Sound.SoundId
	if typeof(Url) == "string" then
		Url = string.split(Url, "://")[2]
		if Url ~= nil then
			Url = tonumber(Url)
			return GetInfoById(Url)
		end
	end
	
	return nil
end

function MusicPlayer.New()
	local Obj = Object.New("ClientMusicPlayer")
	local AssetInfo = {} -- Asset info override table
	local CurrentMusicZones = {}

	local SoundVolumes = {} -- Sound instance volumes
	local TimePositions = {} -- Sound instance time positions

	local ZoneParts = {} -- Music zone BaseParts
	local CurrentHitbox
	local CurrentMusicZone

	local FadingInSound
	local FadingOutSound

	local FinishedFading = true
	
	-- If the current fader is fading to a new BGM
	local IsFadingIn = false
	
	-- If the current fader will do a reverse animation.
	-- If the next Obj.SoundInstance will be the FadingOutSound,
	-- this will be set to true so that the cancel animation
	-- can be played.
	local IsReverseFading = false

	local CurrentFader = SoundFader.New() -- The current sound fader
	local ZoneCollector
	
	-- The volume of the previous sound
	local PreviousVolume

	Obj.SoundInstance = nil
	Obj.IsLoaded = false

	-- By default, the name of the sound asset
	-- that was just loaded.
	Obj.AssetInfo = ""

	-- The length of the music transition in seconds.
	Obj.FadeTime = 1

	-- If the audio plays the new URL as soon as it's changed
	Obj.Autoplay = true
	
	-- If the fading allows for an animation that
	-- reverses the sound change when the old sound
	-- is trying to be played while it's being
	-- faded out.
	Obj.AllowReversing = true

	-- The most recent method of music playback.
	Obj.LastMusicMode = MusicPlayer.MusicMode.ByURL
	
	-- The currently playing sound URL

	-- Waits for the currently fading sounds to stop fading.
	-- Returns if the fade completed.
	local function WaitForSoundFade(SoundToFadeIn, FadeTime)
		FadingInSound = SoundToFadeIn

		local Elapsed = 0

		while FadingInSound == SoundToFadeIn do
			Elapsed += RunService.Heartbeat:Wait()

			if Elapsed > FadeTime then
				FadingInSound = nil
				return true
			end
		end

		FadingInSound = nil

		return false
	end

	local function UpdateInfoInternally(Sound)
		local Info = AssetInfo[Sound.SoundId]
		
		if Info == nil then
			-- Request the info through other methods
			-- if not overriden
			Info = MusicPlayer.GetAttributionBySound(Sound)
		end
		Info = Info or ""
		
		Obj.AssetInfo = Info
		Object.FireCallback(Obj.AssetInfoChanged, Info)
		return Info
	end

	-- Fade completion listener.
	--local function OnFadeComplete()
	--	if CurrentFader ~= nil then
	--		CurrentFader.Dispose()
	--		print("Disposing current fader from completion")
	--	end
	--end

	-- Toggles the fader completion listener that
	-- disposes the fader itself.
	local function ToggleFaderWaitListener(IsListening)
		if CurrentFader ~= nil then
			local WaitSignal = CurrentFader.Waited

			if IsListening == true then
				WaitSignal.Connect(OnFadeComplete)
			else
				WaitSignal.Disconnect(OnFadeComplete)
			end
		end
	end

	-- Toggles the music fading.
	local function ToggleFader(IsFading, FadeTime, OldSound, NewSound)
		if IsFading == true then
			IsFadingIn = true

			CurrentFader = SoundFader.New(FadeTime)
			CurrentFader.OldSound = OldSound
			CurrentFader.NewSound = NewSound

			ToggleFaderWaitListener(true)
			CurrentFader.StartAnimation()
		else
			IsFadingIn = false

			if CurrentFader ~= nil then
				ToggleFaderWaitListener(true)
				CurrentFader.CancelAnimation()
			end
		end
	end

	-- Fades out the old sound instance
	local function FadeOutSound(DestroyOldSound, SoundToFadeIn)
		local OldSound = Obj.SoundInstance
		local FadeTime = Obj.FadeTime or 1

		if OldSound ~= nil then
			coroutine.wrap(function()
				local IsTweenCompleted = false
				if FadeTime > 0 then
					local Tween = FadeSound(OldSound, 0, FadeTime)

					local Elapsed = 0
					while SoundToFadeIn == FadingInSound do
						Elapsed += RunService.Heartbeat:Wait()

						if Elapsed > FadeTime then
							IsTweenCompleted = true
							break
						end
					end

					Tween:Destroy()
				end

				if DestroyOldSound == true then
					OldSound:Destroy()
				else
					if IsTweenCompleted == true then
						print("pause sound")
						OldSound:Pause()
					end
				end
				OldSound = nil
			end)()
		end
	end

	-- Disposes the current sound fader.
	local function DisposeSoundFader()
		if CurrentFader ~= nil then
			CurrentFader.Dispose()
		end
		CurrentFader = nil
	end
	
	-- Listener for sound fade completion.
	-- Pause old bgm playback only on fade completion to ensure
	-- that reversing it mid-way is possible
	local function OnFadeComplete(OldSounds)
		for i, OldSound in pairs(OldSounds) do
			OldSound:Pause()

			--OldSound.TimePosition = TimePositions[OldSound] or 0
			--OldSound.Volume = SoundVolumes[OldSound] or 0

			--print("Stopped at volume", OldSound.Volume)

			TimePositions[OldSound] = nil
			SoundVolumes[OldSound] = nil
		end
	end
	
	CurrentFader.ReverseCompleted.Connect(OnFadeComplete)
	CurrentFader.Completed.Connect(OnFadeComplete)

	-- Fades to a new sound instance.
	-- If no sound instances are provided, the music fades out.
	-- This function returns the old sound instance for convenience
	function Obj.FadeToSound(NewSound, DestroyOldSound)
		local OldSound = Obj.SoundInstance
		
		-- If the new sound is the fading-out sound, set IsReverseFading
		-- to true so the cancel animation can be played (if enabled).
		-- Otherwise, proceed to switching
		if Obj.AllowReversing == true and FadingOutSound ~= nil and NewSound == FadingOutSound then
			print("reverse fade")
			FadingInSound = nil
			FadingOutSound = nil
			IsReverseFading = true
		else
			-- Destroys the old sound if told
			local function DestroyOld()
				if OldSound ~= nil and DestroyOldSound == true then
					OldSound:Destroy()
				end
			end

			-- Resets the old sound properties
			local function ResetOld()
				if OldSound ~= nil then
					OldSound:Pause()

					OldSound.TimePosition = TimePositions[OldSound] or 0
					OldSound.Volume = SoundVolumes[OldSound] or 0
					
					print(OldSound.Volume)

					TimePositions[OldSound] = nil
					SoundVolumes[OldSound] = nil
				end
			end

			if NewSound ~= nil then
				-- Update the sound instance if the new sound doesn't match
				-- the one currently playing
				local URL = NewSound.SoundId
				if URL ~= Obj.CurrentSoundId then
					Obj.CurrentSoundId = URL

					-- Update sound instance
					Obj.SoundInstance = NewSound

					-- Update song citation
					coroutine.wrap(UpdateInfoInternally)(NewSound)

					-- Initialize music transition
					local FadeTime = Obj.FadeTime or 1
					
					local TargetVolume = tonumber(NewSound:GetAttribute(MusicPlayer.TARGET_VOLUME_ATTRIBUTE) or 1) or 1
											* (Obj.MasterVolume or 1)
					local StartTime = tonumber(NewSound:GetAttribute(MusicPlayer.START_TIME_ATTRIBUTE) or 0) or 0

					if FadeTime > 0 then
						
						
						--DisposeSoundFader()

						-- Store the sound's information
						-- (only if the sound info doesn't exist currently)
						
						
						-- Fade to the new sound
						CurrentFader.TransitionTime = FadeTime
						CurrentFader.OldSoundVolume = PreviousVolume or TargetVolume
						CurrentFader.TargetVolume = TargetVolume
						
						PreviousVolume = TargetVolume
						
						NewSound.Volume = 0
						--NewSound.TimePosition = StartTime
						NewSound:Resume()
						CurrentFader.Switch(NewSound)

						---- Fade to the new sound instance
						----CurrentFader = SoundFader.New(FadeTime)
						----print(OldSound and OldSound.SoundId, NewSound and NewSound.SoundId)
						----CurrentFader.OldSound = OldSound
						----CurrentFader.NewSound = NewSound
						
						---- Turn off auto-pause/play because it interferes witht the
						---- reverse logic (implement later lol)
						----CurrentFader.AutoPause = false
						----CurrentFader.AutoPlay = false
						
						--CurrentFader.TargetVolume = TargetVolume * (Obj.MasterVolume or 1)
						
						--IsReverseFading = false
						--CurrentFader.StartAnimation()

						--print("Target volume:", TargetVolume)

						---- Wait for fading to be completed or interrupted
						--local IsCompleted = false
						--local Elapsed = 0

						---- Set fade debounce values
						--FadingOutSound = OldSound
						--FadingInSound = NewSound

						---- Wait until the fade completes or a reverse fade
						---- is requested to cancel the animation
						--while IsReverseFading == false and OldSound == FadingOutSound and NewSound == FadingInSound do
						--	Elapsed += RunService.Heartbeat:Wait()

						--	if Elapsed > FadeTime then
						--		IsCompleted = true
						--		break
						--	end
						--end
						
						---- If reversing is disabled, automatically
						---- mark completion so that it gets paused
						---- and/or destroyed no matter what.
						--if Obj.AllowReversing == true then
						--	IsCompleted = true
						--end

						---- Reset the old sound instance and forget the desired volume
						---- and starting time position if fading completed, otherwise,
						---- reverse the fading so it goes back to the old sound
						--if OldSound ~= nil then
						--	if IsCompleted == true then
						--		-- Reset the old sound
						--		ResetOld()
						--		DestroyOld()

						--		FadingOutSound, FadingInSound = nil, nil
						--		print("fade completed")
						--	elseif IsReverseFading == true then
						--		IsReverseFading = false -- Mark false because the cancel animation is starting
						--		CurrentFader.OldVolume = SoundVolumes[OldSound] or 0.5
						--		CurrentFader.CancelAnimation()
						--	end
						--end
					else
						-- Immediately switch
						if OldSound ~= nil then
							OldSound:Pause()
							--TimePositions[OldSound] = nil
						end

						--TimePositions[NewSound] = NewSound.TimePosition
						NewSound.Volume = TargetVolume
						NewSound.TimePosition = StartTime
						NewSound:Resume()
						Obj.SoundInstance = NewSound

						ResetOld()
						DestroyOld()
					end
				end
			else
				print("no sound")
				if OldSound ~= nil then
					Obj.SoundInstance = nil
					Obj.CurrentSoundId = ""

					ResetOld()
					DestroyOld()
				end
			end
		end

		return OldSound
	end

	-- Fades to a new sound by URL
	-- If URL is nil, the sound will fade out and stop
	function Obj.FadeToURL(URL, DestroyOldSound)
		Obj.LastMusicMode = MusicPlayer.MusicMode.ByURL
		
		local NewSound = nil
		if URL ~= nil and URL ~= "" then
			NewSound = Instance.new("Sound")
			NewSound.SoundId = Util.FormatAssetId(URL)
			NewSound.Volume = Obj.URLVolume or 1
			NewSound.Looped = true
			NewSound.TimePosition = 0
			NewSound.Parent = script

			-- Wait for the new sound to load
			if NewSound.IsLoaded == false then
				NewSound.Loaded:Wait()
			end
		end
		
		-- Set to destroy the old sound automatically if the
		-- last music mode was by URL
		local DestroysLastSound = false
		if DestroyOldSound == false then
			if Obj.LastMusicMode == MusicPlayer.MusicMode.ByURL then
				DestroysLastSound = true
			end
		end

		-- If there's a new sound and it loaded, play it
		local OldSound = nil
		if NewSound ~= nil and IsSoundLoaded(NewSound) == true then
			OldSound = Obj.FadeToSound(NewSound, DestroysLastSound)
		end
	end

	--local function Obj.FadeToURL(URL, IsDestroyingOld)
	--	local OldSound = Obj.SoundInstance

	--	if Obj.FadeTime > 0 then
	--		FinishedFading = false

	--		if IsSoundURL(URL) == true then
	--			local NewSound = Instance.new("Sound")
	--			Obj.SoundInstance = NewSound
	--			NewSound.SoundId = URL
	--			NewSound.Volume = 0
	--			NewSound.Looped = true
	--			NewSound.Parent = script

	--			-- Fade out the old sound
	--			--FadeOutSound(IsDestroyingOld)

	--			-- Fade in the new sound once it loads
	--			coroutine.wrap(function()
	--				if NewSound.IsLoaded == false then
	--					NewSound.Loaded:Wait()
	--				end

	--				if IsSoundLoaded(NewSound) then
	--					-- Update asset information
	--					coroutine.wrap(UpdateInfoInternally)(URL)

	--					-- Fade in
	--					local FadeTime = Obj.FadeTime or 1
	--					ToggleFader(true, FadeTime, OldSound, NewSound)


	--					NewSound:Play()
	--					local Tween = FadeSound(NewSound, Obj.Volume, FadeTime)

	--					local CompletedFade = WaitForSoundFade(NewSound, FadeTime)
	--					Tween:Destroy()
	--					Tween = nil

	--					if CompletedFade == true then
	--						FinishedFading = true

	--						print("fade completion true")
	--					else
	--						print("fade completion false")

	--						-- Fade out the sound if the fade didn't complete.
	--						ToggleFader(false)

	--						--FadeSound(NewSound, 0, FadeTime)

	--						--NewSound:Pause()
	--						if IsDestroyingOld == true then
	--							NewSound:Destroy()
	--						end
	--					end
	--				else
	--					NewSound:Destroy()
	--					warn("Failed to load sound: " .. URL)
	--				end

	--				NewSound = nil
	--			end)()
	--		else
	--			Obj.SoundInstance = nil
	--			FadeOutSound(IsDestroyingOld)
	--		end

	--		FinishedFading = true

	--		--if FinishedFading == true then

	--		--end
	--	else
	--		-- Immediately switch
	--		if IsSoundURL(URL) == true then
	--			local Sound = Obj.SoundInstance
	--			if Sound == nil then
	--				Sound = Instance.new("Sound")
	--			end
	--			Sound.SoundId = URL
	--			Sound.Looped = true
	--			Sound.Volume = Obj.Volume
	--			Sound.Parent = script
	--			Sound:Play()

	--			Obj.SoundInstance = Sound
	--		else
	--			local Sound = Obj.SoundInstance
	--			if Sound ~= nil then
	--				Sound:Destroy()
	--				Sound = nil
	--			end
	--			Obj.SoundInstance = nil
	--		end
	--	end
	--end
	
	-- Fades to the primary sound or sound URL.
	local function FadeToPrimarySound()
		local Sound = Obj.MainSound

		if Sound ~= nil then
			Obj.FadeToSound(Sound)
		else
			Obj.FadeToURL(Obj.SoundURL)
		end

		Sound = nil
	end

	-- Fades to a song by music zone.
	local function FadeToMusicZone(Zone)
		if Zone ~= nil then
			-- Find the sound object in the music zone model
			-- then use it
			local Sound = Zone:FindFirstChild(MusicPlayer.SOUND_NAME)

			if Sound ~= nil then
				Obj.LastMusicMode = MusicPlayer.MusicMode.ByMusicZone
				Obj.FadeToSound(Sound)
			end
		else
			coroutine.wrap(FadeToPrimarySound)()
		end
	end

	--local function FadeToMusicZone(Zone)
	--	--if FinishedFading == true then
	--	FinishedFading = false

	--	FadingInSound = nil

	--	print("a")
	--	if Zone ~= nil then
	--		local OldSound = Obj.SoundInstance
	--		local FadeTime = Obj.FadeTime or 1

	--		local FadeInTween = nil

	--		-- Get the sound instance that is fading in.
	--		local SoundToFadeIn = Zone:FindFirstChild(MusicPlayer.SOUND_NAME or "Sound")

	--		print("b", Zone, SoundToFadeIn)
	--		if SoundToFadeIn ~= nil then
	--			print("c")
	--			Obj.SoundInstance = SoundToFadeIn
	--			FadingInSound = SoundToFadeIn

	--			local SoundPos = SoundToFadeIn.TimePosition
	--			local TargetTimePos = TimePositions[SoundToFadeIn] or SoundPos
	--			TimePositions[SoundToFadeIn] = TargetTimePos

	--			-- Get the starting properties of the sound				
	--			local SoundVolume = SoundToFadeIn.Volume
	--			local TargetVolume = SoundVolumes[SoundToFadeIn] or SoundVolume
	--			SoundVolumes[SoundToFadeIn] = TargetVolume

	--			local StartingVolume = 0
	--			local StartingTimePos = 0
	--			if FinishedFading == true then
	--				StartingVolume = TargetVolume
	--				StartingTimePos = TargetTimePos
	--			else
	--				print("finish fading false", SoundVolume)
	--				StartingVolume = SoundVolume
	--				StartingTimePos = SoundPos
	--			end
	--			FinishedFading = false

	--			SoundToFadeIn.Volume = StartingVolume
	--			SoundToFadeIn.TimePosition = StartingTimePos

	--			-- Fade the new sound in
	--			if SoundToFadeIn.IsPlaying == false then
	--				SoundToFadeIn:Resume()
	--			end
	--			ToggleFader(true, FadeTime, OldSound, SoundToFadeIn)
	--			local IsCompleted = WaitForSoundFade(SoundToFadeIn, FadeTime)
	--			if IsCompleted == false then
	--				-- Fade back
	--				ToggleFader(false)
	--			end

	--			--FadeInTween = FadeSound(FadingInSound, TargetVolume, FadeTime)
	--		end

	--		local function DestroyFadeIn()
	--			if FadeInTween ~= nil then
	--				FadeInTween:Destroy()
	--				FadeInTween = nil
	--			end
	--		end

	--		if OldSound ~= nil then
	--			if true then
	--				print("reached old sound logic, returning")
	--				return
	--			end

	--			-- Fade out the old sound
	--			-- (Fade it back in if its zone is re-entered)
	--			local Elapsed = 0
	--			--local FadeOutTween = FadeSound(OldSound, 0, FadeTime)

	--			local CompletedFade = WaitForSoundFade(SoundToFadeIn, FadeTime)

	--			-- Stop tweening
	--			DestroyFadeIn()

	--			if FadeOutTween ~= nil then
	--				FadeOutTween:Destroy()
	--				FadeOutTween = nil
	--			end

	--			-- If the music transition completed, reset the old sound instance
	--			if CompletedFade == true then
	--				Obj.SoundInstance = SoundToFadeIn

	--				local TimePos = TimePositions[OldSound]
	--				local SoundVolume = SoundVolumes[OldSound]

	--				OldSound:Stop()

	--				if TimePos ~= nil then
	--					OldSound.TimePosition = TimePos
	--				end

	--				if SoundVolume ~= nil then
	--					OldSound.Volume = SoundVolume
	--				end

	--				FadingInSound = nil

	--				print("completed sound fade")

	--				-- Reset debounce values
	--				CurrentMusicZone = nil
	--				FinishedFading = true
	--			else
	--				-- Fade back
	--				Obj.SoundInstance = OldSound
	--				FinishedFading = false
	--				ToggleFader(false)
	--				--FadeToMusicZone(Zone)
	--			end
	--		else
	--			task.wait(FadeTime)
	--			DestroyFadeIn()
	--			FinishedFading = true
	--		end
	--	else
	--		FadingInSound = nil
	--		FinishedFading = true
	--		Obj.FadeToURL(Util.FormatAssetId(Obj.MainURL))
	--		FinishedFading = false
	--	end
	--	--end
	--end
	
	-- Removes a music zone from its storage array.
	-- Returns true if the zone was successfully unlisted.
	local function UnlistMusicZone(ZoneModel)
		-- Remove music zone
		local Index = table.find(CurrentMusicZones, ZoneModel)
		if Index ~= nil then
			table.remove(CurrentMusicZones, Index)
			return true
		end
		
		return false
	end

	-- Hitbox change listener.
	local function OnHitChange(Part, HitResult)
		if IsPart(Part) == true then
			HitResult = HitResult.Status

			-- Take the next action by hit result
			-- (Music zones are by part parent)
			local ZoneModel = Part.Parent.Parent
			local IsChanging = false

			if HitResult == HitStatus.CompletelyInside then
				-- Add music zone
				if IsMusicZone(ZoneModel) == true then
					IsChanging = true
					
					-- Unlist before relisting, to prevent certain problems
					-- with code sync
					UnlistMusicZone(ZoneModel)
					table.insert(CurrentMusicZones, ZoneModel)
				end
			elseif HitResult == HitStatus.NotTouching then
				IsChanging = UnlistMusicZone(ZoneModel)
			end

			-- Fade to the music zone at the end of the list
			if CurrentMusicZones ~= nil then
				if IsChanging == true then
					local NextZoneModel = CurrentMusicZones[#CurrentMusicZones]

					--CurrentMusicZone = NextZoneModel
					print("fading to", NextZoneModel)
					FadeToMusicZone(NextZoneModel)

					-- Set as the current music zone for debouncing
					--if NextZoneModel ~= CurrentMusicZone then
					CurrentMusicZone = NextZoneModel
					--end
				end
			else
				CurrentMusicZone = nil
				FadeOutSound()
			end
		end
	end

	-- Sets if the specified model music zone has
	-- its parts binded to the hitbox
	local function SetZoneConnected(Zone, IsConnected)
		local Hitbox = CurrentHitbox

		if Hitbox ~= nil then
			if IsConnected == true then
				if IsMusicZone(Zone) == true then
					SetZoneConnected(Zone, false)

					-- Reconnect the parts to the hitbox.
					local Parts = Zone:WaitForChild(MusicPlayer.PARTS_FOLDER_NAME or "Parts")
					if Parts ~= nil then
						Parts = Parts:GetChildren()

						ZoneParts[Zone] = Parts
						for i, v in pairs(Parts) do
							if IsPart(v) == true then
								Hitbox.ConnectPart(v)
							end
						end
					end
				end
			else
				local Parts = ZoneParts[Zone]

				if Parts ~= nil then
					for i, v in pairs(Parts) do
						Hitbox.DisconnectPart(v)
					end
				end
			end
		end
	end

	-- Sets if the music zone instance collector is being used
	local function SetInstancesCollected(IsCollecting)
		if IsCollecting == true then
			SetInstancesCollected(false)

			local ZoneLocation = MusicPlayer.MusicZoneLocation
			if ZoneLocation ~= nil then
				ZoneCollector = InstCollector.New(MusicPlayer.MUSIC_ZONE_KEYWORD)

				-- Reconnect events.
				ZoneCollector.InstanceRemoved = function(Inst)
					SetZoneConnected(Inst, false)
				end

				ZoneCollector.InstanceFound = function(Inst)
					SetZoneConnected(Inst, true)
				end

				-- Start the collection.
				ZoneCollector.AdaptInstance(ZoneLocation)
			end
		else
			if ZoneCollector ~= nil then
				ZoneCollector.Dispose()
				ZoneCollector = nil
			end
		end
	end

	-- Checks if a sound is currently fading.
	function Obj.IsFading()
		return FinishedFading == false
	end

	-- Stores a URL's asset information. That information
	-- is then used by Obj.GetSoundInfo().
	function Obj.SetAssetInfo(URL, Info)
		AssetInfo[URL] = Info
	end


	-- Binds a Hitbox to be used by the MusicZone handler.
	function Obj.BindHitbox(Hitbox)
		if Hitbox ~= nil then
			CurrentHitbox = Hitbox

			Hitbox.HitStatusChanged.Connect(OnHitChange)
		else
			if CurrentHitbox ~= nil then
				CurrentHitbox.HitStatusChanged.Disconnect(OnHitChange)
				CurrentHitbox = nil
			end
		end
	end

	-- Gets the sound info of the currently loaded sound.
	-- This yields the current thread.
	function Obj.GetSoundInfo()
		local Sound = Obj.SoundInstance
		if Sound ~= nil then
			return UpdateInfoInternally(Sound.SoundId)
		else
			return ""
		end
	end

	-- Re(-starts) the BGM playback.
	function Obj.Play()
		FadeToPrimarySound()
	end

	-- Fades out the BGM playback
	function Obj.Stop()
		Obj.FadeToSound(nil)
	end

	-- The volume used when the music is played by URL.
	Obj.SetProperty("URLVolume", 1, function(vol)
		local Sound = Obj.SoundInstance
		if Sound ~= nil then
			Sound.Volume = vol
		end
		Sound = nil
	end)
	
	-- The master volume of the BGM player.
	-- This multiplies the currently playing sound's
	-- volume so:
	-- (0 = muted, 1 = full volume)
	Obj.SetProperty("MasterVolume", 1, function(Vol)
		local Sound = Obj.SoundInstance
		
		if Sound ~= nil then
			local OriginalVolume = SoundVolumes[Sound]
			if OriginalVolume ~= nil then
				
				-- Disconnection of sound completion is needed to
				-- interrupt tweens.
				if CurrentFader ~= nil then
					CurrentFader.DisconnectCompletion()
				end
				
				Sound.Volume = OriginalVolume * Vol
			end
		end
	end)
	
	-- The primary sound instance to play the background music.
	-- Also used if the hitbox isn't in any music zone.
	Obj.SetProperty("MainSound", MusicPlayer.DefaultURL, function(Sound)
		if Obj.Autoplay == true then
			coroutine.wrap(Obj.FadeToSound)(Sound)
		end
	end)

	-- The sound URL used to play the background music.
	-- Used as a backup if MainSound isn't provided.
	-- Also used if the hitbox isn't in any music zone.
	Obj.SetProperty("MainURL", MusicPlayer.DefaultURL, function(URL)
		if Obj.Autoplay == true then
			coroutine.wrap(Obj.FadeToURL)(Util.FormatAssetId(URL), true)
		end
		--coroutine.wrap(UpdateInfoInternally)(URL)
	end)

	-- If the music zones will be in use
	Obj.SetProperty("UsesMusicZones", false, function(UsingMusicZones)
		local MusicMode = MusicPlayer.MusicMode

		if UsingMusicZones == false then
			-- Disconnect the music zone collector
			SetInstancesCollected(false)

			-- Disconnect music zones
			for i, v in pairs(ZoneParts) do
				SetZoneConnected(i, false)
			end

			-- Fade back to the main url
			coroutine.wrap(Obj.FadeToURL)(Obj.MainURL)
		elseif UsingMusicZones == true then
			-- Connect the music zone collector
			SetInstancesCollected(true)
		end
	end)

	-- Fires when the asset info loaded into the BGM object changes.
	Obj.AssetInfoChanged = nil

	-- Pause sound instance on disposal
	Obj.OnDisposal = function()
		Obj.FadeToSound(nil)
		task.wait(Obj.FadeTime or 1)
		SoundFader.Dispose()
	end

	return Obj
end

return MusicPlayer]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018ec2</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX900FA7271F5C41D291C9A1B8EDAA2A23">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">MusicPlayer</string>
						<string name="ScriptGuid">{B208CC7F-E5C0-43B7-AEFD-2C2323A26E4B}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Provides an object that is used to play background music.

This is the successor of the old MusicPlayer. This includes support
for a set music url and the usage of music zones.
The code is also much more clean than the last.

Thanks to Jukereise for the concept of the music zones
(Meaning music zones are in the form of models)

This version revamps the coding from the last version of the BGM player
because it got way too messy

By udev2192
]]--

local CollectionService = game:GetService("CollectionService")
local MarketplaceService = game:GetService("MarketplaceService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local RepModules = ReplicatedStorage:WaitForChild("Modules")
local Adapters = RepModules:WaitForChild("Adapters")
local UtilRepModules = RepModules:WaitForChild("Utils")

local BaseInteractive = require(
	RepModules
	:WaitForChild("MapHandles")
	:WaitForChild("Interactives")
	:WaitForChild("BaseInteractive")
)

local Hitbox = require(Adapters:WaitForChild("Hitbox"))
local InstCollector = require(Adapters:WaitForChild("InstanceCollector"))

local Object = require(UtilRepModules:WaitForChild("Object"))
local Signal = require(UtilRepModules:WaitForChild("Signal"))
local Util = require(UtilRepModules:WaitForChild("Utility"))

local SoundFader = require(script.Parent:WaitForChild("SoundFader"))

local MusicPlayer = {}

-- The default BGM url.
MusicPlayer.DefaultURL = ""

-- The search keyword of a music zone.
MusicPlayer.MUSIC_ZONE_KEYWORD = "^_MusicZone"

-- The name of the sound instance in a music zone.
MusicPlayer.SOUND_NAME = "Sound"

-- The name of the parts folder instance in a music zone.
MusicPlayer.PARTS_FOLDER_NAME = "Parts"

-- The name of the "attribution" sound attribute to use when citing sounds.
MusicPlayer.ATTRIBUTION_INDEX = "Attribution"

MusicPlayer.START_TIME_ATTRIBUTE = "StartTime"
MusicPlayer.TARGET_VOLUME_ATTRIBUTE = "TargetVolume"
MusicPlayer.PRIORITY_ATTRIBUTE = "Priority"

MusicPlayer.URL_SOUND_COLLECTION = "MusicPlayer_SoundsPlayedByUrlCollection"

MusicPlayer.LoadingAttribution = "[Loading]"

-- Where to look for music zones.
MusicPlayer.MusicZoneLocation = workspace --:WaitForChild("Areas")

-- Music modes that are used to determine the behavior
-- that triggers music playback.
MusicPlayer.MusicMode = {
	-- Play by using a set sound URL
	ByURL = 0,

	-- Play by using a sound instance
	BySound = 1,

	-- Play by using sound URLs from music zones.
	ByMusicZone = 2
}

MusicPlayer.DefaultMasterVolume = 1

-- Gets the sound information by asset id.
local function GetInfoById(Id)
	local Success, Result = pcall(function()
		return MarketplaceService:GetProductInfo(Id)
	end)

	if Success == true then
		return Result.Name
	else
		return ""
	end
end

local function IsPart(Part)
	return Util.IsInstance(Part) and Part:IsA("BasePart")
end

function MusicPlayer.IsSoundLoaded(Sound)
	return Sound.IsLoaded == true and Sound.TimeLength > 0
end

local function IsSoundURL(URL)
	return URL ~= nil and typeof(URL) == "string" and URL ~= ""
end

local function FadeSound(Sound, Vol, Dur)
	assert(typeof(Sound) == "Instance" and Sound:IsA("Sound"), "Argument 1 must be a sound instance.")

	return Util.Tween(Sound, TweenInfo.new(Dur, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Volume = Vol})
end

local function IsMusicZone(Inst)
	return Util.IsInstance(Inst) and (string.match(Inst.Name, MusicPlayer.MUSIC_ZONE_KEYWORD) ~= nil)
end

local function GetSoundAttributionProperty(Sound)
	return Sound:GetAttribute(MusicPlayer.ATTRIBUTION_INDEX)
end

local HitStatus = Hitbox.HitStatus
Hitbox = nil

--[[
Gets a sound instance's attribution.

Params:
Sound <Sound> - The sound instance to retrieve
				the attribution from.
]]--
function MusicPlayer.GetAttributionBySound(Sound)
	assert(Sound ~= nil, "Argument 1 is missing.")

	-- See if there's an "Attribution" attribute on
	-- the sound instance
	local AttributionAttr = GetSoundAttributionProperty(Sound)
	if AttributionAttr ~= nil then
		return tostring(AttributionAttr)
	end

	-- If all else fails, find the id in the URL string, if needed
	-- Conversion to a number is needed because
	-- MarketplaceService:GetProductInfo()
	-- only accepts asset IDs.
	local Url = Sound.SoundId
	if typeof(Url) == "string" then
		Url = string.split(Url, "://")[2]
		if Url ~= nil then
			Url = tonumber(Url)
			return GetInfoById(Url)
		end
	end

	return nil
end

function MusicPlayer.GetTargetVolume(Sound: Sound): number
	return tonumber(Sound:GetAttribute(MusicPlayer.TARGET_VOLUME_ATTRIBUTE) or 1)
	--return ((
	--	tonumber(Sound:GetAttribute(MusicPlayer.TARGET_VOLUME_ATTRIBUTE) or 1) or 1)
	--		or SoundVolumes[Sound])
end

function MusicPlayer.New()
	-- Subclass the sound fader for the sake of memory usage
	local Obj = SoundFader.New()

	local AssetInfo = {} -- Asset info override table
	local CurrentMusicZones = {}

	local SoundVolumes = {} -- Sound instance volumes
	local TimePositions = {} -- Sound instance time positions

	local ZoneParts = {} -- Music zone BaseParts

	local CurrentHitbox
	local CurrentMusicZone
	local ZoneCollector
	local ZoneEntryRunner

	-- The volume of the previous sound
	local PreviousVolume

	-- By default, the name of the sound asset
	-- that was just loaded.
	Obj.AssetInfo = ""

	-- If the audio plays the new URL as soon as it's changed
	Obj.Autoplay = true

	--[[
	<boolean> - If attributions are saved when they're loaded.
	]]--
	Obj.SaveAttributions = true

	--[[
	<BasePart> - The part to detect music zone entry with
	]]--
	Obj.MusicZoneHitbox = nil

	-- The most recent method of music playback.
	Obj.LastMusicMode = MusicPlayer.MusicMode.ByURL
	
	local SoundGroup: SoundGroup = Util.CreateInstance("SoundGroup", {
		Volume = Obj.DefaultMasterVolume,
		Name = "MusicGroup",
	})

	local function ChangeAttribution(Info)
		Obj.AssetInfo = Info
		Obj.AttributionChanged.Fire(Info)
	end

	local function UpdateInfoInternally(Sound)
		local Info
		local SoundId
		
		if Sound then
			SoundId = Sound.SoundId
			
			if SoundId then
				Info = AssetInfo[SoundId]

				if Info == nil then
					-- Indicate that the info is being requested
					-- Only do this if not overriden because the
					-- info may not be available instantly
					if GetSoundAttributionProperty(Sound) == nil then
						ChangeAttribution(MusicPlayer.LoadingAttribution)
					end

					-- Request the info through other methods
					-- if not overriden
					Info = MusicPlayer.GetAttributionBySound(Sound)

					-- Save the attribution if permitted
					if Obj.SaveAttributions == true and Info ~= nil and Info ~= "" then
						Obj.SetAssetInfo(SoundId, Info)
					end
				end
			end
		end
		
		Info = Info or ""

		-- Indicate changes
		if SoundId == nil or SoundId == Obj.CurrentSoundId then
			ChangeAttribution(Info)
		end

		return Info
	end

	local function ResetSound(Sound)
		Sound:Pause()

		Sound.TimePosition = TimePositions[Sound] or 0
		Sound.Volume = SoundVolumes[Sound] or 0

		TimePositions[Sound] = nil
		SoundVolumes[Sound] = nil

		-- If the sound was played using FadeToURL, it will most likely
		-- need to be garbage collected
		local UrlTag = MusicPlayer.URL_SOUND_COLLECTION
		if CollectionService:HasTag(Sound, UrlTag) then
			CollectionService:RemoveTag(Sound, UrlTag)
			Sound:Destroy()
		end
	end

	--[[
	Listener for sound fade completion.
	
	Pause old bgm playback only on fade completion to ensure
	that reversing it mid-way is possible
	
	If a song is faded out, the sound properties are reset here
	]]--
	--local function ResetOldSounds(OldSounds)
	--	for i, Sound in pairs(OldSounds) do
	--		if Sound ~= Obj.CurrentSound then
	--			ResetSound(Sound)
	--		end
	--	end
	--end

	--Obj.ReverseCompleted.Connect(ResetOldSounds)
	--Obj.Completed.Connect(ResetOldSounds)
	local FadeOutConnection: Signal.SignalConnection = Obj.SoundFadedOut.Connect(ResetSound)

	-- Fades to a new sound instance.
	-- If no sound instances are provided, the music fades out.
	-- This function returns the old sound instance for convenience
	function Obj.FadeToSound(NewSound, DestroyOldSound)
		local OldSound = Obj.CurrentSound

		if NewSound ~= OldSound then
			-- Update the sound instance if the new sound doesn't match
			-- the one currently playing
			local URL = NewSound and NewSound.SoundId
			if URL and URL ~= Obj.CurrentSoundId then
				Obj.CurrentSoundId = URL

				-- Update song citation
				coroutine.wrap(UpdateInfoInternally)(NewSound)

				-- Initialize music transition
				local FadeTime = Obj.TransitionTime or 1

				-- Get initial sound info
				local TargetVolume = MusicPlayer.GetTargetVolume(NewSound)
				local StartTime = 
					tonumber(NewSound:GetAttribute(MusicPlayer.START_TIME_ATTRIBUTE) or 0)
					or TimePositions[NewSound]
					or 0

				--local IsPaused = SoundVolumes[NewSound] == nil

				-- Store initial sound info for later use
				--SoundVolumes[NewSound] = TargetVolume
				--TimePositions[NewSound] = StartTime

				-- Fade to the new sound
				PreviousVolume = TargetVolume

				if NewSound.IsPlaying == false then
					NewSound.Volume = 0
					NewSound.TimePosition = StartTime
					NewSound.SoundGroup = SoundGroup
					NewSound:Resume()
				end

				-- Obj.CurrentSound is set here
				--Obj.TargetVolume = TargetVolume
				Obj.Switch(NewSound, TargetVolume)

				-- Destroy the old sound(s) if needed
				if OldSound and DestroyOldSound then
					task.spawn(function()
						if FadeTime > 0 then
							task.wait(FadeTime)
						end

						OldSound:Destroy()
					end)
				end
			else
				Obj.Switch(nil)
				Obj.CurrentSoundId = ""
			end
		end

		return OldSound
	end

	-- Fades to a new sound by URL
	-- If URL is nil, the sound will fade out and stop
	function Obj.FadeToURL(URL, DestroyOldSound)
		local CurrentSound = Obj.CurrentSound

		if CurrentSound then
			if URL ~= CurrentSound.SoundId then
				Obj.LastMusicMode = MusicPlayer.MusicMode.ByURL

				local NewSound
				if URL ~= nil and URL ~= "" then
					local TargetVolume = (Obj.URLVolume or 1)

					NewSound = Instance.new("Sound")
					NewSound.SoundId = Util.FormatAssetId(URL)
					NewSound.Volume = TargetVolume 
					NewSound.Looped = true
					NewSound.TimePosition = 0

					NewSound:SetAttribute(MusicPlayer.TARGET_VOLUME_ATTRIBUTE, TargetVolume)
					NewSound:SetAttribute(MusicPlayer.START_TIME_ATTRIBUTE, 0)

					CollectionService:AddTag(NewSound, MusicPlayer.URL_SOUND_COLLECTION)
					NewSound.Parent = script

					-- Wait for the new sound to load
					-- (don't because it sounds weird)
					--if NewSound.IsLoaded == false then
					--	NewSound.Loaded:Wait()
					--end
				end

				-- Set to destroy the old sound automatically if the
				-- last music mode was by URL
				local DestroysLastSound = false
				if DestroyOldSound == false then
					if Obj.LastMusicMode == MusicPlayer.MusicMode.ByURL then
						DestroysLastSound = true
					end
				end

				-- If there's a new sound and it loaded, play it
				if NewSound then
					Obj.FadeToSound(NewSound, DestroysLastSound)
				end
			end
		end
	end

	-- Fades to the primary sound or sound URL.
	local function FadeToPrimarySound()
		local Sound = Obj.MainSound

		if Sound ~= nil then
			Obj.LastMusicMode = MusicPlayer.MusicMode.BySound
			Obj.FadeToSound(Sound)
		else
			Obj.FadeToURL(Obj.SoundURL)
		end

		Sound = nil
	end

	-- Fades to a song by music zone.
	local function FadeToMusicZone(Zone)
		if Zone ~= nil then
			-- Find the sound object in the music zone model
			-- then use it
			local Sound = Zone:FindFirstChild(MusicPlayer.SOUND_NAME)

			if Sound ~= nil then
				Obj.LastMusicMode = MusicPlayer.MusicMode.ByMusicZone
				Obj.FadeToSound(Sound)
			end
		else
			coroutine.wrap(FadeToPrimarySound)()
		end
	end

	--[[
	Rescans music zone entry
	]]--
	function Obj.RescanMusicZones()
		local MusicZoneHitbox = Obj.MusicZoneHitbox
		local PriorityAttribute = MusicPlayer.PRIORITY_ATTRIBUTE

		if MusicZoneHitbox then
			local CurrentHitPos: Vector3 = MusicZoneHitbox.Position
			MusicZoneHitbox = nil
			
			-- Sounds of the entered music zones
			local EnteredSounds = {}
			
			-- The highest priority among the entered zones
			local HighestPriority: number = 0
			
			local SelectedSound

			-- Get the entered music zones
			-- We shouldn't have to check for any duplicates
			-- cause of the break statement in the loop
			for i, v in pairs(CurrentMusicZones) do
				local Sound = v:FindFirstChildOfClass("Sound")
				
				if Sound then
					local Parts = v:FindFirstChild("Parts")

					if Parts then
						for i2, v2 in pairs(Parts:GetChildren()) do
							if v2:IsA("BasePart") then
								if BaseInteractive.IsPointInside(CurrentHitPos, v2) then
									table.insert(EnteredSounds, Sound)
									break
								end
							end
						end
					end
				end
			end
			
			if #EnteredSounds > 0 then
				-- Use the sound with the highest priority
				for i, v in pairs(EnteredSounds) do
					local Priority = v:GetAttribute(PriorityAttribute) or 0

					if Priority >= HighestPriority then
						HighestPriority = Priority
						SelectedSound = v
					end
				end
				
				-- Play the sound
				Obj.FadeToSound(SelectedSound)
			else
				FadeToPrimarySound()
			end
		end
	end

	local function ListMusicZone(ZoneModel)
		if table.find(CurrentMusicZones, ZoneModel) == nil then
			table.insert(CurrentMusicZones, ZoneModel)
		end
	end

	-- Removes a music zone from its storage array.
	-- Returns true if the zone was successfully unlisted.
	local function UnlistMusicZone(ZoneModel)
		-- Remove music zone
		local Index = table.find(CurrentMusicZones, ZoneModel)
		if Index ~= nil then
			table.remove(CurrentMusicZones, Index)
			return true
		end

		return false
	end

	-- Hitbox change listener.
	--local function OnHitChange(Part, HitResult)
	--	if IsPart(Part) == true then
	--		HitResult = HitResult.Status

	--		-- Take the next action by hit result
	--		-- (Music zones are by part parent)
	--		local ZoneModel = Part.Parent.Parent
	--		local IsChanging = false

	--		if HitResult == HitStatus.CompletelyInside then
	--			-- Add music zone
	--			if IsMusicZone(ZoneModel) == true then
	--				IsChanging = true

	--				-- Unlist before relisting, to prevent certain problems
	--				-- with code sync
	--				UnlistMusicZone(ZoneModel)
	--				table.insert(CurrentMusicZones, ZoneModel)
	--			end
	--		elseif HitResult == HitStatus.NotTouching then
	--			IsChanging = UnlistMusicZone(ZoneModel)
	--		end

	--		-- Fade to the music zone at the end of the list
	--		if CurrentMusicZones ~= nil then
	--			if IsChanging == true then
	--				local NextZoneModel = CurrentMusicZones[#CurrentMusicZones]

	--				FadeToMusicZone(NextZoneModel)

	--				-- Set as the current music zone for debouncing
	--				CurrentMusicZone = NextZoneModel
	--			end
	--		else
	--			CurrentMusicZone = nil
	--			Obj.FadeToSound(nil)
	--		end
	--	end
	--end

	-- Sets if the specified model music zone has
	-- its parts binded to the hitbox
	--local function SetZoneConnected(Zone, IsConnected)
	--	local Hitbox = CurrentHitbox

	--	if Hitbox ~= nil then
	--		if IsConnected == true then
	--			if IsMusicZone(Zone) == true then
	--				SetZoneConnected(Zone, false)

	--				-- Reconnect the parts to the hitbox.
	--				local Parts = Zone:WaitForChild(MusicPlayer.PARTS_FOLDER_NAME or "Parts")
	--				if Parts ~= nil then
	--					Parts = Parts:GetChildren()

	--					ZoneParts[Zone] = Parts
	--					for i, v in pairs(Parts) do
	--						if IsPart(v) == true then
	--							Hitbox.ConnectPart(v)
	--						end
	--					end
	--				end
	--			end
	--		else
	--			local Parts = ZoneParts[Zone]

	--			if Parts ~= nil then
	--				for i, v in pairs(Parts) do
	--					Hitbox.DisconnectPart(v)
	--				end
	--			end
	--		end
	--	end
	--end

	-- Sets if the music zone instance collector is being used
	local function SetInstancesCollected(IsCollecting)
		if IsCollecting == true then
			SetInstancesCollected(false)

			local ZoneLocation = MusicPlayer.MusicZoneLocation
			if ZoneLocation ~= nil then
				ZoneCollector = InstCollector.New(MusicPlayer.MUSIC_ZONE_KEYWORD)

				-- Reconnect events.
				ZoneCollector.InstanceRemoved = function(Inst)
					--SetZoneConnected(Inst, false)
					UnlistMusicZone(Inst)
				end

				ZoneCollector.InstanceFound = function(Inst)
					--SetZoneConnected(Inst, true)
					ListMusicZone(Inst)
				end

				-- Start the collection.
				ZoneCollector.AdaptInstance(ZoneLocation)
			end
		else
			if ZoneCollector ~= nil then
				ZoneCollector.Dispose()
				ZoneCollector = nil
			end
		end
	end

	-- Stores a URL's asset information. That information
	-- is then used by Obj.GetSoundInfo().
	function Obj.SetAssetInfo(URL, Info)
		AssetInfo[URL] = Info
	end


	-- Binds a Hitbox to be used by the MusicZone handler.
	--function Obj.BindHitbox(Hitbox)
	--	if Hitbox ~= nil then
	--		CurrentHitbox = Hitbox

	--		Hitbox.HitStatusChanged.Connect(OnHitChange)
	--	else
	--		if CurrentHitbox ~= nil then
	--			CurrentHitbox.HitStatusChanged.Disconnect(OnHitChange)
	--			CurrentHitbox = nil
	--		end
	--	end
	--end

	-- Gets the sound info of the currently loaded sound.
	-- This yields the current thread.
	function Obj.GetSoundInfo()
		local Sound = Obj.CurrentSound
		if Sound ~= nil then
			return UpdateInfoInternally(Sound)
		else
			return ""
		end
	end

	-- Re(-starts) the main BGM playback.
	function Obj.Restart()
		FadeToPrimarySound()
	end

	-- Fades out the main BGM playback
	function Obj.StopMain()
		Obj.FadeToSound(nil)
	end

	-- The volume used when the music is played by URL.
	Obj.SetProperty("URLVolume", 1, function(vol)
		local Sound = Obj.CurrentSound
		if Sound ~= nil then
			Sound.Volume = vol
		end
		Sound = nil
	end)

	-- The master volume of the BGM player.
	-- This multiplies the currently playing sound's
	-- volume so:
	-- (0 = muted, 1 = full volume)
	-- make this use a sound group later for stability reasons
	-- (right now, there's the music mute bug which make transitions a bit weird)
	Obj.SetProperty("MasterVolume", MusicPlayer.DefaultMasterVolume, function(Vol)
		SoundGroup.Volume = Vol
	end)
	
	--[[
	<SoundGroup> - A reference to the current music sound group
	]]--
	Obj.SoundGroup = SoundGroup

	-- The primary sound instance to play the background music.
	-- Also used if the hitbox isn't in any music zone.
	Obj.SetProperty("MainSound", nil, function(Sound)
		if Obj.Autoplay == true then
			Obj.LastMusicMode = MusicPlayer.MusicMode.BySound
			coroutine.wrap(Obj.FadeToSound)(Sound)
		end
	end)

	-- The sound URL used to play the background music.
	-- Used as a backup if MainSound isn't provided.
	-- Also used if the hitbox isn't in any music zone.
	Obj.SetProperty("MainURL", MusicPlayer.DefaultURL, function(URL)
		if Obj.Autoplay == true then
			coroutine.wrap(Obj.FadeToURL)(Util.FormatAssetId(URL), true)
		end
	end)
	
	--[[
	<boolean> - Whether or not music zones will have their sounds played,
				regardless of whether or not they're found
	]]--
	Obj.SetProperty("PlayMusicZones", false, function(PlayingMusicZones)
		if PlayingMusicZones then
			-- Start applying the music zones
			if ZoneEntryRunner == nil then
				ZoneEntryRunner = RunService.Heartbeat:Connect(Obj.RescanMusicZones)
			end
		else
			-- Disconnect entry runner
			if ZoneEntryRunner then
				ZoneEntryRunner:Disconnect()
				ZoneEntryRunner = nil
			end
			
			-- Fade back to the main sound
			task.spawn(FadeToPrimarySound)
		end
	end)

	--[[
	<boolean> - Whether or not music zones will be searched for
	]]--
	Obj.SetProperty("FindMusicZones", false, function(FindingMusicZones)
		--local MusicMode = MusicPlayer.MusicMode

		if FindingMusicZones == false then
			-- Disconnect the music zone collector
			SetInstancesCollected(false)

			-- Disconnect music zones
			--for i, v in pairs(ZoneParts) do
			--	SetZoneConnected(i, false)
			--end
			CurrentMusicZones = {}
			--coroutine.wrap(Obj.FadeToURL)(Obj.MainURL)
		elseif FindingMusicZones == true then
			-- Connect the music zone collector
			SetInstancesCollected(true)
		end
	end)

	--[[
	Fires when the sound info loaded into the BGM object changes.
	
	Params:
	Attribution <string> - The asset info/attribution.
	]]--
	Obj.AttributionChanged = Signal.New()

	-- Pause sound instance on disposal
	Obj.AddDisposalListener(function()
		Obj.AttributionChanged.DisconnectAll()
		--Obj.ReverseCompleted.Disconnect(ResetOldSounds)
		--Obj.Completed.Disconnect(ResetOldSounds)
		FadeOutConnection.Disconnect()
		FadeOutConnection = nil
		--Obj.BindHitbox(nil)

		Obj.UsesMusicZones = false
		Obj.MainURL = ""

		local CurrentSound = Obj.CurrentSound
		if CurrentSound ~= nil then
			ResetSound(CurrentSound)
		end
		CurrentSound = nil
	end)
	
	SoundGroup.Parent = script

	return Obj
end

return MusicPlayer]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">5fbd84e54a3c24510251c3ab00599f23</UniqueId>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX048DF98892C4464DB547921069A5B965">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">WinPlaces</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b64b1</UniqueId>
			</Properties>
			<Item class="Model" referent="RBXC30FA3CB2AA84A3D8A2507C88EB0BD10">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<token name="LevelOfDetail">0</token>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">Default</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6517</UniqueId>
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>0</X>
							<Y>658.5</Y>
							<Z>288</Z>
							<R00>-1</R00>
							<R01>0</R01>
							<R02>-8.74227766e-08</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>8.74227766e-08</R20>
							<R21>0</R21>
							<R22>-1</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Folder" referent="RBXD189A5775C4247919FCFE3307FF57897">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Misc</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b71e4</UniqueId>
					</Properties>
					<Item class="Model" referent="RBX62349F607A9348D0B86997C13F69C94A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<token name="LevelOfDetail">0</token>
							<CoordinateFrame name="ModelMeshCFrame">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
							<Vector3 name="ModelMeshSize">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="ModelStreamingMode">0</token>
							<string name="Name">Stand</string>
							<bool name="NeedsPivotMigration">false</bool>
							<Ref name="PrimaryPart">null</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6518</UniqueId>
							<OptionalCoordinateFrame name="WorldPivotData">
								<CFrame>
									<X>0</X>
									<Y>663.500366</Y>
									<Z>288</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CFrame>
							</OptionalCoordinateFrame>
						</Properties>
						<Item class="Part" referent="RBX7D2C16EDB81441C4B1B99DB32404DC92">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>663.500366</Y>
									<Z>288</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6531</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>28</X>
									<Y>2</Y>
									<Z>28</Z>
								</Vector3>
							</Properties>
							<Item class="ParticleEmitter" referent="RBXE27751C06FEB495E8EBBA0FD7D88C960">
								<Properties>
									<Vector3 name="Acceleration">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="Brightness">1</float>
									<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
									<float name="Drag">0</float>
									<token name="EmissionDirection">1</token>
									<bool name="Enabled">false</bool>
									<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
									<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
									<token name="FlipbookLayout">0</token>
									<token name="FlipbookMode">0</token>
									<bool name="FlipbookStartRandom">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<NumberRange name="Lifetime">5 10 </NumberRange>
									<float name="LightEmission">1</float>
									<float name="LightInfluence">0</float>
									<bool name="LockedToPart">false</bool>
									<string name="Name">ParticleEmitter</string>
									<token name="Orientation">0</token>
									<float name="Rate">10</float>
									<NumberRange name="RotSpeed">0 0 </NumberRange>
									<NumberRange name="Rotation">0 0 </NumberRange>
									<token name="Shape">0</token>
									<token name="ShapeInOut">0</token>
									<float name="ShapePartial">1</float>
									<token name="ShapeStyle">0</token>
									<NumberSequence name="Size">0 0.05 0 1 0.05 0 </NumberSequence>
									<int64 name="SourceAssetId">-1</int64>
									<NumberRange name="Speed">1 1 </NumberRange>
									<Vector2 name="SpreadAngle">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>rbxasset://textures/particles/sparkles_main.dds</url></Content>
									<float name="TimeScale">1</float>
									<NumberSequence name="Transparency">0 0 0 1 1 0 </NumberSequence>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65a0</UniqueId>
									<float name="VelocityInheritance">0</float>
									<float name="ZOffset">0</float>
								</Properties>
							</Item>
						</Item>
						<Item class="Part" referent="RBX0CE84C49F4614BDC8D3009F523D40596">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>1.18020751e-06</X>
									<Y>665</Y>
									<Z>301.5</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6532</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>28</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX4EF44E1045534017951D9996AA9FDAC0">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-13.5</X>
									<Y>665</Y>
									<Z>288</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6533</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>26</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX1D89CB0E588C464AA5EF812FA8C0E13A">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>13.5</X>
									<Y>665</Y>
									<Z>288</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6534</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>26</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX448B0CF540AD4418875C850479A6DED0">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-1.18020751e-06</X>
									<Y>665</Y>
									<Z>274.5</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6535</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>28</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Model" referent="RBXFBAC36C09996430EAEFC553C31B46452">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">ImageFrame</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6519</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-8.00000095</X>
										<Y>665</Y>
										<Z>279.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="WedgePart" referent="RBXFD4581DC25A04E3AB8EF3590C5466EA1">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-10.500001</X>
										<Y>665</Y>
										<Z>281.5</Z>
										<R00>-0</R00>
										<R01>-1</R01>
										<R02>-8.74227766e-08</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>8.74227766e-08</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65a6</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXA6F6ABE50A4343BCA3AED9A9A6051513">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-8.00000095</X>
										<Y>665</Y>
										<Z>281.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6536</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>4</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX0E9B4ACCE5414C77AEC6DADFAE898E49">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-5.50000048</X>
										<Y>665</Y>
										<Z>281.5</Z>
										<R00>-0</R00>
										<R01>8.74227766e-08</R01>
										<R02>-1</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>1</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65a7</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX5B8BD14CE8A545AEBA058D167D4F3EB3">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-5.50000095</X>
										<Y>665</Y>
										<Z>279.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6537</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>3</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX86FF6B0D17814D35BF7D7C499D6A69FE">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-5.50000095</X>
										<Y>665</Y>
										<Z>277.5</Z>
										<R00>-0</R00>
										<R01>1</R01>
										<R02>8.74227766e-08</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>-0</R12>
										<R20>0</R20>
										<R21>-8.74227766e-08</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65a8</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXE0365C60A69E4B0DAE492B636DDF1930">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-8.00000095</X>
										<Y>665</Y>
										<Z>277.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6538</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>4</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX2604FBE7BE6B48C586C156E576270425">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-10.500001</X>
										<Y>665</Y>
										<Z>277.5</Z>
										<R00>-0</R00>
										<R01>-8.74227766e-08</R01>
										<R02>1</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>-1</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65a9</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX4F45DEBCA4AB47F48E68768CABFB8A00">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-10.500001</X>
										<Y>665</Y>
										<Z>279.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6539</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>3</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX2255EDB10060424290ED4C6FCDAC972A">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-8.00000095</X>
										<Y>664.75</Y>
										<Z>279.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4279970357</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">ImagePart</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b653a</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>3</X>
										<Y>0.5</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
								<Item class="SurfaceGui" referent="RBX4B4C33C72B6E4035984FE5732411FD48">
									<Properties>
										<bool name="Active">true</bool>
										<Ref name="Adornee">null</Ref>
										<bool name="AlwaysOnTop">false</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<float name="Brightness">1</float>
										<Vector2 name="CanvasSize">
											<X>800</X>
											<Y>600</Y>
										</Vector2>
										<bool name="ClipsDescendants">true</bool>
										<bool name="Enabled">true</bool>
										<token name="Face">1</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LightInfluence">1</float>
										<string name="Name">SurfaceGui</string>
										<float name="PixelsPerStud">50</float>
										<bool name="ResetOnSpawn">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<token name="SizingMode">1</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="ToolPunchThroughDistance">0</float>
										<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65a1</UniqueId>
										<token name="ZIndexBehavior">1</token>
										<float name="ZOffset">0</float>
									</Properties>
									<Item class="ImageLabel" referent="RBXA6D6982D9C4C4DF3BB7CD71C676EFF06">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0.5</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">
												<R>0.105882362</R>
												<G>0.164705887</G>
												<B>0.207843155</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">1</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<Content name="Image"><url>http://www.roblox.com/asset/?id=6409850727</url></Content>
											<Color3 name="ImageColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<int name="LayoutOrder">0</int>
											<string name="Name">ImageLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.5</XS>
												<XO>0</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<token name="ResampleMode">0</token>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<token name="ScaleType">4</token>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<float name="SliceScale">1</float>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UDim2 name="TileSize">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6514</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="WedgePart" referent="RBX5933B829FE79499C915F130DAE768A8A">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-8.49999905</X>
									<Y>665</Y>
									<Z>298.5</Z>
									<R00>-8.74227766e-08</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>-8.74227766e-08</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Wedge</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65aa</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Model" referent="RBX7332FD5655F247ACB400D3055EF689D7">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">ImageFrame</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b651a</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-6</X>
										<Y>665</Y>
										<Z>288.5</Z>
										<R00>-0.923879564</R00>
										<R01>0</R01>
										<R02>0.382683367</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-0.382683367</R20>
										<R21>0</R21>
										<R22>-0.923879564</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="WedgePart" referent="RBX921E9AC1789F4E039CA8264ED87E3392">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-9.07507324</X>
										<Y>665</Y>
										<Z>289.391052</Z>
										<R00>-0</R00>
										<R01>-0.923879564</R01>
										<R02>0.382683367</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>-0.382683367</R21>
										<R22>-0.923879564</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65ab</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX79EA4338E0BC41A5830CE253DD2C686C">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-6.76538086</X>
										<Y>665</Y>
										<Z>290.347748</Z>
										<R00>-0.923879564</R00>
										<R01>0</R01>
										<R02>0.382683367</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-0.382683367</R20>
										<R21>0</R21>
										<R22>-0.923879564</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b653b</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>4</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX4BD899E1FBD24E188C477BF004132572">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-4.455688</X>
										<Y>665</Y>
										<Z>291.304443</Z>
										<R00>-0</R00>
										<R01>-0.382683367</R01>
										<R02>-0.923879564</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0.923879564</R21>
										<R22>-0.382683367</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65ac</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXB02DECE787AB43E98B1715104D668424">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-3.69030738</X>
										<Y>665</Y>
										<Z>289.456696</Z>
										<R00>-0.923879564</R00>
										<R01>0</R01>
										<R02>0.382683367</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-0.382683367</R20>
										<R21>0</R21>
										<R22>-0.923879564</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b653c</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>3</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX8CB457D72D604FD5A5D395BD3E04765B">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.92495728</X>
										<Y>665</Y>
										<Z>287.608948</Z>
										<R00>-0</R00>
										<R01>0.923879564</R01>
										<R02>-0.382683367</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0.382683367</R21>
										<R22>0.923879564</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65ad</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXDB384EF8A1524FB4856A24DD3017024E">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-5.23464966</X>
										<Y>665</Y>
										<Z>286.652252</Z>
										<R00>-0.923879564</R00>
										<R01>0</R01>
										<R02>0.382683367</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-0.382683367</R20>
										<R21>0</R21>
										<R22>-0.923879564</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b653d</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>4</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBXE8831C27B65147648990B327BBE24D61">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-7.54434204</X>
										<Y>665</Y>
										<Z>285.695557</Z>
										<R00>-0</R00>
										<R01>0.382683367</R01>
										<R02>0.923879564</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>-0.923879564</R21>
										<R22>0.382683367</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65ae</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXDF1B33E829EF46319B3C58950990E671">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-8.3097229</X>
										<Y>665</Y>
										<Z>287.543274</Z>
										<R00>-0.923879564</R00>
										<R01>0</R01>
										<R02>0.382683367</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-0.382683367</R20>
										<R21>0</R21>
										<R22>-0.923879564</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b653e</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>3</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX6755BB1852E6407A86EDE04770DBFD30">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-6</X>
										<Y>664.75</Y>
										<Z>288.5</Z>
										<R00>0.382683367</R00>
										<R01>0</R01>
										<R02>0.923879564</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-0.923879564</R20>
										<R21>0</R21>
										<R22>0.382683367</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4279970357</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">ImagePart</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b653f</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>3</X>
										<Y>0.5</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
								<Item class="SurfaceGui" referent="RBXA2AEA2EEB37E4A6888ADADC0C4D10830">
									<Properties>
										<bool name="Active">true</bool>
										<Ref name="Adornee">null</Ref>
										<bool name="AlwaysOnTop">false</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<float name="Brightness">1</float>
										<Vector2 name="CanvasSize">
											<X>800</X>
											<Y>600</Y>
										</Vector2>
										<bool name="ClipsDescendants">true</bool>
										<bool name="Enabled">true</bool>
										<token name="Face">1</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LightInfluence">1</float>
										<string name="Name">SurfaceGui</string>
										<float name="PixelsPerStud">50</float>
										<bool name="ResetOnSpawn">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<token name="SizingMode">1</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="ToolPunchThroughDistance">0</float>
										<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65a2</UniqueId>
										<token name="ZIndexBehavior">1</token>
										<float name="ZOffset">0</float>
									</Properties>
									<Item class="ImageLabel" referent="RBX79C6C20EB03E490D86CC86C2C1C3F0FB">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0.5</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">
												<R>0.105882362</R>
												<G>0.164705887</G>
												<B>0.207843155</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">1</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<Content name="Image"><url>rbxassetid://6401417348</url></Content>
											<Color3 name="ImageColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<int name="LayoutOrder">0</int>
											<string name="Name">ImageLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.5</XS>
												<XO>0</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<token name="ResampleMode">0</token>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<token name="ScaleType">4</token>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<float name="SliceScale">1</float>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UDim2 name="TileSize">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6515</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Model" referent="RBX35D7EFDF9DF74E588E92708838D11EA7">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">ImageFrame</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b651b</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>6</X>
										<Y>665</Y>
										<Z>288.5</Z>
										<R00>-0.923879445</R00>
										<R01>0</R01>
										<R02>-0.382683545</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0.382683545</R20>
										<R21>0</R21>
										<R22>-0.923879445</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="WedgePart" referent="RBX9B81DB51E08E4368AD979AD4494ED048">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>4.45568895</X>
										<Y>665</Y>
										<Z>291.304443</Z>
										<R00>-0</R00>
										<R01>-0.923879445</R01>
										<R02>-0.382683545</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0.382683545</R21>
										<R22>-0.923879445</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65af</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX4BF94782DBA849BE8C55DDC1E26D4654">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>6.76538086</X>
										<Y>665</Y>
										<Z>290.347748</Z>
										<R00>-0.923879445</R00>
										<R01>0</R01>
										<R02>-0.382683545</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0.382683545</R20>
										<R21>0</R21>
										<R22>-0.923879445</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6540</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>4</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX07CF5ED231C54CC692C1F7C9F40474F6">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>9.07507324</X>
										<Y>665</Y>
										<Z>289.391022</Z>
										<R00>-0</R00>
										<R01>0.382683545</R01>
										<R02>-0.923879445</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0.923879445</R21>
										<R22>0.382683545</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65b0</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXE280B91032A1406AAC8B3686AAF455B8">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>8.30969238</X>
										<Y>665</Y>
										<Z>287.543304</Z>
										<R00>-0.923879445</R00>
										<R01>0</R01>
										<R02>-0.382683545</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0.382683545</R20>
										<R21>0</R21>
										<R22>-0.923879445</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6541</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>3</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX1A38F6EC81F74963A090EC89AE793447">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>7.54434204</X>
										<Y>665</Y>
										<Z>285.695526</Z>
										<R00>-0</R00>
										<R01>0.923879445</R01>
										<R02>0.382683545</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>-0.382683545</R21>
										<R22>0.923879445</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65b1</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX7859512DF5514A7AB5BE297C960E04A7">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>5.23464966</X>
										<Y>665</Y>
										<Z>286.652252</Z>
										<R00>-0.923879445</R00>
										<R01>0</R01>
										<R02>-0.382683545</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0.382683545</R20>
										<R21>0</R21>
										<R22>-0.923879445</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6542</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>4</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX7C312EE528D04C0BA1B84EB637F8EC40">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.92495728</X>
										<Y>665</Y>
										<Z>287.608948</Z>
										<R00>-0</R00>
										<R01>-0.382683545</R01>
										<R02>0.923879445</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>-0.923879445</R21>
										<R22>-0.382683545</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65b2</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX6746C8CEC58642D68ED3F273D09C5FF1">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>3.69030786</X>
										<Y>665</Y>
										<Z>289.456696</Z>
										<R00>-0.923879445</R00>
										<R01>0</R01>
										<R02>-0.382683545</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0.382683545</R20>
										<R21>0</R21>
										<R22>-0.923879445</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6543</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>3</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX537C2B85BDAC4A4E8E82BF513370ABCA">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>6</X>
										<Y>664.75</Y>
										<Z>288.5</Z>
										<R00>-0.382683545</R00>
										<R01>0</R01>
										<R02>0.923879445</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-0.923879445</R20>
										<R21>0</R21>
										<R22>-0.382683545</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4279970357</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">ImagePart</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6544</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>3</X>
										<Y>0.5</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
								<Item class="SurfaceGui" referent="RBX197BCC9B47444364A1FC516531CC7D8C">
									<Properties>
										<bool name="Active">true</bool>
										<Ref name="Adornee">null</Ref>
										<bool name="AlwaysOnTop">false</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<float name="Brightness">1</float>
										<Vector2 name="CanvasSize">
											<X>800</X>
											<Y>600</Y>
										</Vector2>
										<bool name="ClipsDescendants">true</bool>
										<bool name="Enabled">true</bool>
										<token name="Face">1</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LightInfluence">1</float>
										<string name="Name">SurfaceGui</string>
										<float name="PixelsPerStud">50</float>
										<bool name="ResetOnSpawn">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<token name="SizingMode">1</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="ToolPunchThroughDistance">0</float>
										<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65a3</UniqueId>
										<token name="ZIndexBehavior">1</token>
										<float name="ZOffset">0</float>
									</Properties>
									<Item class="ImageLabel" referent="RBX2B47CD75B2A34D60A6ABB4E6708547CA">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0.5</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">
												<R>0.105882362</R>
												<G>0.164705887</G>
												<B>0.207843155</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">1</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<Content name="Image"><url>http://www.roblox.com/asset/?id=6409850556</url></Content>
											<Color3 name="ImageColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<int name="LayoutOrder">0</int>
											<string name="Name">ImageLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.5</XS>
												<XO>0</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<token name="ResampleMode">0</token>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<token name="ScaleType">4</token>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<float name="SliceScale">1</float>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UDim2 name="TileSize">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6516</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Model" referent="RBXDDE6F73E04224A1CAC55DAE464ED9B7D">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b651c</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>13.5</X>
										<Y>667</Y>
										<Z>288</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBX5BFE747DDE17402E8030CA68BF76347C">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.5</X>
										<Y>667</Y>
										<Z>288</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">288</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6545</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX789543D6E0CD492EA919F61B9B001514">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.5</X>
										<Y>666.5</Y>
										<Z>290.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6546</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBXC6AFD8D2BC624893B025C627E0B355A9">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.5</X>
										<Y>668</Y>
										<Z>290.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65b3</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX29C1CF4E1E64431897FA63D839E10F2A">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.5</X>
										<Y>668</Y>
										<Z>285.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65b4</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX7E85A0A50AF64CB18DC0120FE49F4456">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.500001</X>
										<Y>666.5</Y>
										<Z>296</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65b5</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>10</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX69418FA303F04723A711B95941D322EA">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.499999</X>
										<Y>666.5</Y>
										<Z>280</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65b6</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>10</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXC57C3EE978D84254BBF85D1142308090">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.5</X>
										<Y>668</Y>
										<Z>288</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6547</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX4638ACD94F474F61A1A1A079408EE956">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.5</X>
										<Y>666.5</Y>
										<Z>285.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6548</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX0A2210A5A7F741E89262B2FF2DECB117">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.5</X>
										<Y>666</Y>
										<Z>288</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">288</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6549</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBX6AC6E495224448D2885385A7446CF16F">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b651d</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>1.18020751e-06</X>
										<Y>667</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBX4766E3E35F6F4FA8A659723C541143F7">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>1.18020751e-06</X>
										<Y>667</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">288</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b654a</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX703C8E7D5D8F4DF980E18FA810268C64">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.49999881</X>
										<Y>666.5</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b654b</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBXC8CFAD4CC9AB4629816107DF49ED5749">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.49999881</X>
										<Y>668</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65b7</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX237AC29F39C5422398E6C09C1A2CCA90">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.50000119</X>
										<Y>668</Y>
										<Z>301.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65b8</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX0AE2077EFECE42B780A3BCD9CA63D4D9">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-7.99999905</X>
										<Y>666.5</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65b9</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>10</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX0CD47E5B09B2431CA3570F068D5076D1">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>8.00000095</X>
										<Y>666.5</Y>
										<Z>301.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65ba</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>10</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXC43D2B246A084B2FB79E524AB3597809">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>1.18020751e-06</X>
										<Y>668</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b654c</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXB0D60114983F4DDBA1853E4C9EAC8635">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.50000119</X>
										<Y>666.5</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b654d</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX70475A4996184F7CBA760B5F0EF07861">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>1.18020751e-06</X>
										<Y>666</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">288</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b654e</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBX8720C573935B423EB43A9D8483BEE9F3">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b651e</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-1.18020751e-06</X>
										<Y>667</Y>
										<Z>274.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBX9D64CD756BFE4E7E8989D6DFBE285C93">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-1.18020751e-06</X>
										<Y>667</Y>
										<Z>274.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">288</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b654f</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX66D1C6270C694A0C940FFE08D6E2585C">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000119</X>
										<Y>666.5</Y>
										<Z>274.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6550</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX4737619070DE4899837CE496578ED3A3">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000119</X>
										<Y>668</Y>
										<Z>274.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65bb</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX5DD15C38918C497FA0019748E9EC6E54">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999881</X>
										<Y>668</Y>
										<Z>274.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65bc</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX94BBE5CC0AB1443DA7C3E515D7B68810">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-8.00000095</X>
										<Y>666.5</Y>
										<Z>274.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65bd</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>10</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX2EE700D943774FAFA7802619E78337DB">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>7.99999905</X>
										<Y>666.5</Y>
										<Z>274.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65be</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>10</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXA07B266C3977417EABFEEBDD669D381D">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-1.18020751e-06</X>
										<Y>668</Y>
										<Z>274.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6551</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXC5656EBACCF24D5D97826F8F256B7278">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999881</X>
										<Y>666.5</Y>
										<Z>274.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6552</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXAB2B4D14F2F94C08B96F7E8B4639F3CD">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-1.18020751e-06</X>
										<Y>666</Y>
										<Z>274.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">288</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6553</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBXFF67BBE1944640F8B3AB82608398AAF2">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b651f</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-13.5</X>
										<Y>667</Y>
										<Z>288</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBX2F575F78B4E442B792852E34234BACB0">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.5</X>
										<Y>667</Y>
										<Z>288</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">288</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6554</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX3B0211193CFC44CE907B7C8A66C2635B">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.5</X>
										<Y>666.5</Y>
										<Z>290.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6555</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX1840C62001BF40B7BA33B95863A39A99">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.5</X>
										<Y>668</Y>
										<Z>290.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65bf</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX6E6A075AE30A4175B046228BA23CA855">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.5</X>
										<Y>668</Y>
										<Z>285.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65c0</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX1FBAB48BFB7D450093C1699C7B4FC8FA">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.499999</X>
										<Y>666.5</Y>
										<Z>296</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65c1</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>10</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX837727D11E3A4B3D91C4A36951E87C5B">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.500001</X>
										<Y>666.5</Y>
										<Z>280</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65c2</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>10</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX771C7A69E2A24AD19F465BDE8C7776B8">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.5</X>
										<Y>668</Y>
										<Z>288</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6556</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXB25CA136EC0E4848B1789D107AF0BF20">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.5</X>
										<Y>666.5</Y>
										<Z>285.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6557</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXBD8241E260644235B51146B9B6F8196F">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.5</X>
										<Y>666</Y>
										<Z>288</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">288</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6558</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBXC02FB703737841BDA246EA1BFF1588DA">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6520</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>13.500001</X>
										<Y>680.5</Y>
										<Z>301.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBX53D7AA6DFBF942A38A801A01277F173B">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.500001</X>
										<Y>692.5</Y>
										<Z>301.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4286626779</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6559</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX71D2F7DA408D4D0DB87D00B47BA7D3A5">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.500001</X>
										<Y>686.5</Y>
										<Z>301.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4289832959</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b655a</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXA236B9EECCA642CAAA599F0613EE1479">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.500001</X>
										<Y>680.5</Y>
										<Z>301.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4290019583</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b655b</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX4341F542D3E843538759D04228DEBCCC">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.500001</X>
										<Y>674.5</Y>
										<Z>301.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b655c</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXB4F38C3605BD4D918D6AE4EF04427064">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.500001</X>
										<Y>668.5</Y>
										<Z>301.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b655d</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="CornerWedgePart" referent="RBX4B647FDCA9864301A30362ED13AA2F97">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.500001</X>
										<Y>697</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4286626779</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">CornerWedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b650a</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<Vector3 name="size">
										<X>1</X>
										<Y>3</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBX5BE8A5403F1B4EFBB110B1ACADEEEEC0">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">PartTemplate</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6521</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>7.49999905</X>
										<Y>665</Y>
										<Z>276.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="CornerWedgePart" referent="RBXD32E98ACD19A4619946F177DA0E87FAB">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>3.49999905</X>
										<Y>665</Y>
										<Z>276.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">CornerWedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b650b</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX4909B393672A41508B75DD14A4AF30D9">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>5.49999905</X>
										<Y>665</Y>
										<Z>276.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65c3</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX0B2DA94E40DA4D38B0664D555FC443BC">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>7.49999905</X>
										<Y>665</Y>
										<Z>276.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b655e</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">0</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXC837F9420B0245D78342B033C156CD57">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>9.49999905</X>
										<Y>665</Y>
										<Z>276.5</Z>
										<R00>0</R00>
										<R01>1</R01>
										<R02>-8.74227766e-08</R02>
										<R10>1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>-8.74227766e-08</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b655f</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">2</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXF6D4EC0AE084465B827650AA90384352">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>11.499999</X>
										<Y>665</Y>
										<Z>276.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6560</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBXBF008A074D8C4AFCA9461AF2E1AFABA4">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6522</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>13.499999</X>
										<Y>680.5</Y>
										<Z>274.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBXEF90D4D41BDD4D46807586D3FA61A01C">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.499999</X>
										<Y>692.5</Y>
										<Z>274.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4286626779</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6561</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXDD60F988045B4397B82F45A4A8A78F6A">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.499999</X>
										<Y>686.5</Y>
										<Z>274.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4289832959</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6562</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX50500245217E45DFB5A9D1D4C42C9BC6">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.499999</X>
										<Y>680.5</Y>
										<Z>274.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4290019583</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6563</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX1BF2F97953844B0C99E36CB8BFDDE8E8">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.499999</X>
										<Y>674.5</Y>
										<Z>274.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6564</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX38A5DE8962C149B6912F3046F5204D8D">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.499999</X>
										<Y>668.5</Y>
										<Z>274.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6565</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="CornerWedgePart" referent="RBX8D92F9CD69824BC690ECC990D595FFEC">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>13.499999</X>
										<Y>697</Y>
										<Z>274.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4286626779</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">CornerWedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b650c</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<Vector3 name="size">
										<X>1</X>
										<Y>3</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBXB25199B0E4844C95929A7C9D3DBA554F">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6523</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-13.500001</X>
										<Y>680.5</Y>
										<Z>274.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBXD6CD9D99DB1547F18F2DAC856906B8E0">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.500001</X>
										<Y>692.5</Y>
										<Z>274.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4286626779</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6566</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXD142D6DADE3A411991D8FF4B37E6FA2C">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.500001</X>
										<Y>686.5</Y>
										<Z>274.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4289832959</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6567</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX698E1132711148B2A77595DD66402DE8">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.500001</X>
										<Y>680.5</Y>
										<Z>274.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4290019583</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6568</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXCFF5916AA9F94C11BF6AF1B6AD999665">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.500001</X>
										<Y>674.5</Y>
										<Z>274.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6569</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX2E0733F2E6BA4B14BDE998644E64CB4F">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.500001</X>
										<Y>668.5</Y>
										<Z>274.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b656a</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="CornerWedgePart" referent="RBXE2859D6FE71C48CA9FB5A43CB11C5F80">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.500001</X>
										<Y>697</Y>
										<Z>274.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4286626779</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">CornerWedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b650d</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<Vector3 name="size">
										<X>1</X>
										<Y>3</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBX38A211A7A176438ABF97F8A7C351C3F5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6524</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-13.499999</X>
										<Y>680.5</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBX508F814BF82D44C89034FEE4B1F73EDA">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.499999</X>
										<Y>692.5</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4286626779</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b656b</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX4BEEAEFC634A408DB55ED4189C22C2C4">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.499999</X>
										<Y>686.5</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4289832959</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b656c</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX598F970F60BD41DDA14EE252A39EB148">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.499999</X>
										<Y>680.5</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4290019583</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b656d</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXD9004630DABE4535854B0174DBA19AC0">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.499999</X>
										<Y>674.5</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b656e</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX789AC0ADAE434DA48007497689E34CEC">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.499999</X>
										<Y>668.5</Y>
										<Z>301.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b656f</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>6</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="CornerWedgePart" referent="RBXCF67B931B34342C08AD80E239B405CD3">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-13.499999</X>
										<Y>697</Y>
										<Z>301.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4286626779</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">CornerWedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b650e</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<Vector3 name="size">
										<X>1</X>
										<Y>3</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBX370149ECB62D4A6CA21E0BE815DF8DBE">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6525</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>2.49999952</X>
										<Y>669.5</Y>
										<Z>283.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBXE1417751050D441691F45AE1F38B1FE6">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999952</X>
										<Y>673</Y>
										<Z>283.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.800000012</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6570</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX3646F9F49A0B4C77BFB39F72577D14FC">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999952</X>
										<Y>672</Y>
										<Z>283.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.699999988</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6571</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXE3C85258098947D9A4910BEA0A839320">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999952</X>
										<Y>671</Y>
										<Z>283.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.600000024</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6572</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX27DE7D0C34DA4C9BA8ADD35F3B78D196">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999952</X>
										<Y>670</Y>
										<Z>283.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.5</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6573</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXC1B8AA217C1D4CA3B638EFB5A49984B2">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999952</X>
										<Y>669</Y>
										<Z>283.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.449999988</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6574</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXC4DFF107C8BE44C18813AB7234B4D64E">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999952</X>
										<Y>668</Y>
										<Z>283.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.300000012</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6575</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX9C4BC5726DFB440E95ACE6AE0BD5CA4B">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999952</X>
										<Y>667</Y>
										<Z>283.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.200000003</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6576</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX78583DE3FB634F9C8B39FC885BF2AE3F">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999952</X>
										<Y>666</Y>
										<Z>283.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.100000001</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6577</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="CornerWedgePart" referent="RBXBACC0CED39724321BB31E9ADA8188188">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999952</X>
										<Y>674.5</Y>
										<Z>283.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">CornerWedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.800000012</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b650f</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Part" referent="RBX2D19AF15A4444679B5ABF81FD99D59EA">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>2.49999928</X>
									<Y>665</Y>
									<Z>281</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6578</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>4</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX5D4CB20E9B854487830FF8480904867E">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-2.50000072</X>
									<Y>665</Y>
									<Z>281</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6579</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>4</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX89CE8CC5EA594222B404F6FC6DECF969">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-8.30516399e-07</X>
									<Y>665</Y>
									<Z>278.5</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b657a</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXCE500F7C7AF443A1A552BE588C3B83F3">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-3.93402502e-07</X>
									<Y>665</Y>
									<Z>283.5</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b657b</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Model" referent="RBX4123909D1DF946C7834C41E7DCFE43CD">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6526</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-2.50000048</X>
										<Y>669.5</Y>
										<Z>283.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBXD7C47CFA9F664DD7863F8D27A72C8C62">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000048</X>
										<Y>673</Y>
										<Z>283.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.800000012</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b657c</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXCF2CFBFCE8D8441EB98EF2BC1AA0C7C5">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000048</X>
										<Y>672</Y>
										<Z>283.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.699999988</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b657d</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX9D9B2F0F39DD494FA5CEAE6123506D95">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000048</X>
										<Y>671</Y>
										<Z>283.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.600000024</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b657e</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX608920E554AA4010B7AF733DEF202D74">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000048</X>
										<Y>670</Y>
										<Z>283.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.5</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b657f</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX3EAA4FB853774F719FC9050C03CC4864">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000048</X>
										<Y>669</Y>
										<Z>283.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.449999988</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6580</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXE323F58FEB3842A78F1BDDF3EBEDFE6A">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000048</X>
										<Y>668</Y>
										<Z>283.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.300000012</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6581</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXDC8D389F32974C729E8D027FB3B7B355">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000048</X>
										<Y>667</Y>
										<Z>283.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.200000003</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6582</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX1391147290224B6986C076A976C990A9">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000048</X>
										<Y>666</Y>
										<Z>283.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.100000001</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6583</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="CornerWedgePart" referent="RBX98D31FA9E3E1401AB2683CDD8A212DD7">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000048</X>
										<Y>674.5</Y>
										<Z>283.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">CornerWedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.800000012</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6510</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBX7996B5FC601440EA85A131430CAEEB86">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6527</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-2.50000072</X>
										<Y>669.5</Y>
										<Z>278.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBX7EFE43AE71264C1C805B029A107068F8">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000072</X>
										<Y>673</Y>
										<Z>278.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.800000012</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6584</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXF2A667ADE5154C4A9F06AAA003D1F7C8">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000072</X>
										<Y>672</Y>
										<Z>278.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.699999988</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6585</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX9A4184CAE38C498E8908FFE8383E7464">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000072</X>
										<Y>671</Y>
										<Z>278.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.600000024</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6586</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX57D597FD0E444AD8BE58695054E246F5">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000072</X>
										<Y>670</Y>
										<Z>278.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.5</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6587</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX287F53824FA443F19F56B1876CA4A878">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000072</X>
										<Y>669</Y>
										<Z>278.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.449999988</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6588</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX18034FE8621846B893A07266AB3DFC97">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000072</X>
										<Y>668</Y>
										<Z>278.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.300000012</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6589</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX8584733C7D57486FB6045B71259DF000">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000072</X>
										<Y>667</Y>
										<Z>278.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.200000003</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b658a</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXED51AA949E954ACEBAFAF0D6802485BF">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000072</X>
										<Y>666</Y>
										<Z>278.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.100000001</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b658b</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="CornerWedgePart" referent="RBX7CF7DB7749D1473785F7487E6EBCD147">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.50000072</X>
										<Y>674.5</Y>
										<Z>278.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">CornerWedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.800000012</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6511</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBXB3AD5580D03943B2BC792803E7A22B95">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6528</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>2.49999928</X>
										<Y>669.5</Y>
										<Z>278.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBX0AB70FEB255F46B3AE5A987280BE8015">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999928</X>
										<Y>673</Y>
										<Z>278.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.800000012</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b658c</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXB28D4D022552498F82E38F9266F8D90A">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999928</X>
										<Y>672</Y>
										<Z>278.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.699999988</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b658d</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX40E954BA47DC455B9C112A7A3C281C04">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999928</X>
										<Y>671</Y>
										<Z>278.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.600000024</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b658e</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXF4286EF48E6D4D3EB9EEFA7A340E56F0">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999928</X>
										<Y>670</Y>
										<Z>278.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.5</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b658f</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX229F14235C564594AAD942586FC77147">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999928</X>
										<Y>669</Y>
										<Z>278.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.449999988</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6590</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX8838256CB42C43D5A72E0A481F9D1948">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999928</X>
										<Y>668</Y>
										<Z>278.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.300000012</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6591</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXD94CED0672374818ACB37E5DB921C389">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999928</X>
										<Y>667</Y>
										<Z>278.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.200000003</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6592</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXF4667E03CAB144DEA2682A5FCD0845A3">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999928</X>
										<Y>666</Y>
										<Z>278.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.100000001</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6593</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="CornerWedgePart" referent="RBX52DED5D0B00D49CAA48A00A287F7CE5B">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.49999928</X>
										<Y>674.5</Y>
										<Z>278.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">CornerWedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.800000012</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6512</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<Vector3 name="size">
										<X>1</X>
										<Y>2</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Part" referent="RBXCF3579FF8A8C45B6AD130724007696EA">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-3.49999952</X>
									<Y>671</Y>
									<Z>294.5</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6594</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>13</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXBC90980B9C5C4E5584BABF232866B8DC">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>3.50000048</X>
									<Y>671</Y>
									<Z>294.5</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6595</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>13</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="WedgePart" referent="RBX13D66C68555A418AB4B45B6D49F3EAB2">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>3.50000048</X>
									<Y>678</Y>
									<Z>294.5</Z>
									<R00>8.74227766e-08</R00>
									<R01>0</R01>
									<R02>-1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>1</R20>
									<R21>0</R21>
									<R22>8.74227766e-08</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Wedge</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65c4</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="WedgePart" referent="RBX58F465DA6F8A4A9682B03BE082F15499">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>-3.49999952</X>
									<Y>678</Y>
									<Z>294.5</Z>
									<R00>-8.74227766e-08</R00>
									<R01>0</R01>
									<R02>1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>-8.74227766e-08</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Wedge</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65c5</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX2268F54BE94544FAADD565D2EEA43FF7">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>5.68248026e-07</X>
									<Y>678</Y>
									<Z>294.5</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6596</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX0A2300F55B3C44F596C5B43FAF057D2E">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>5.68248026e-07</X>
									<Y>673</Y>
									<Z>294.5</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>-8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>8.74227766e-08</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6597</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX5FE82F59A92140A9ACD4E322C4394F39">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>5.68248026e-07</X>
									<Y>675.5</Y>
									<Z>294.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>8.74227766e-08</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>-8.74227766e-08</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">false</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">288</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0.699999988</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6598</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">1</token>
								<Vector3 name="size">
									<X>6</X>
									<Y>4</Y>
									<Z>0.5</Z>
								</Vector3>
							</Properties>
							<Item class="SurfaceGui" referent="RBX95A57699CC934F4ABB74F5985C503215">
								<Properties>
									<bool name="Active">true</bool>
									<Ref name="Adornee">null</Ref>
									<bool name="AlwaysOnTop">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<float name="Brightness">5</float>
									<Vector2 name="CanvasSize">
										<X>800</X>
										<Y>600</Y>
									</Vector2>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Enabled">true</bool>
									<token name="Face">5</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LightInfluence">0</float>
									<string name="Name">WinMessage</string>
									<float name="PixelsPerStud">50</float>
									<bool name="ResetOnSpawn">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<token name="SizingMode">1</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="ToolPunchThroughDistance">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65a4</UniqueId>
									<token name="ZIndexBehavior">1</token>
									<float name="ZOffset">0</float>
								</Properties>
								<Item class="TextLabel" referent="RBX7C81B45583724E7EB3E832A6936D3F3E">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
											<Weight>400</Weight>
											<Style>Normal</Style>
											<CachedFaceId><url>rbxasset://fonts/GothamSSm-Book.otf</url></CachedFaceId>
										</Font>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<int name="MaxVisibleGraphemes">-1</int>
										<string name="Name">TextLabel</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<bool name="RichText">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>0.800000012</XS>
											<XO>0</XO>
											<YS>0.800000012</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">Congrats on beating the obby! Touch the green pad to go back. Enjoy the view!</string>
										<Color3 name="TextColor3">
											<R>0.407843173</R>
											<G>0.290196091</G>
											<B>1</B>
										</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">28</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65a5</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Model" referent="RBX218031E443354BB198A9820591D6E50B">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6529</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>3.50000048</X>
										<Y>665</Y>
										<Z>294.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="WedgePart" referent="RBX9B671BD425F54163B53C40AC8379FECD">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>3.50000048</X>
										<Y>665</Y>
										<Z>293.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65c6</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBXFB3ECAE70FD440AE910F493E4B998832">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>4.50000048</X>
										<Y>665</Y>
										<Z>294.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65c7</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX06FF8F9A8F874D5EB475B9233B091E97">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>2.50000048</X>
										<Y>665</Y>
										<Z>294.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65c8</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX942E74555BB248B8BB5F17B5EC0BFB5C">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>3.50000072</X>
										<Y>665</Y>
										<Z>295.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65c9</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBXD41F2AB2DB0444EF9CE64D93142C0234">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b652a</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-3.49999952</X>
										<Y>665</Y>
										<Z>294.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="WedgePart" referent="RBXC56A53CD335F43569D40C2DC7CE84394">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-3.49999952</X>
										<Y>665</Y>
										<Z>293.5</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-8.74227766e-08</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65ca</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX34F2F395647A4682980C8F0EFD40E217">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-2.49999952</X>
										<Y>665</Y>
										<Z>294.5</Z>
										<R00>8.74227766e-08</R00>
										<R01>0</R01>
										<R02>-1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>1</R20>
										<R21>0</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65cb</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX2197F93AEAEE4F50BD374BC214DEDE1E">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-4.49999952</X>
										<Y>665</Y>
										<Z>294.5</Z>
										<R00>-8.74227766e-08</R00>
										<R01>0</R01>
										<R02>1</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>-1</R20>
										<R21>0</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65cc</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBXD9475D7C6E2545E6930A3EB2E0CFF62F">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-3.49999928</X>
										<Y>665</Y>
										<Z>295.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65cd</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="WedgePart" referent="RBX02C1E2D34C25433D9FA7DD09C4D4A8E4">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">3</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">3</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>8.50000095</X>
									<Y>665</Y>
									<Z>298.5</Z>
									<R00>8.74227766e-08</R00>
									<R01>0</R01>
									<R02>-1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>1</R20>
									<R21>0</R21>
									<R22>8.74227766e-08</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">3</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">3</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">256</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Wedge</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0.300000012</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">3</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">3</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65ce</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<Vector3 name="size">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Model" referent="RBX88FC469A1BF345768A20D65414230371">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Model</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b652b</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>8.74227794e-07</X>
										<Y>665</Y>
										<Z>298</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="WedgePart" referent="RBXD06BEE2ED9634549898555B89D5A9B6F">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-1.49999905</X>
										<Y>665</Y>
										<Z>299.5</Z>
										<R00>-0</R00>
										<R01>-1</R01>
										<R02>-8.74227766e-08</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>8.74227766e-08</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65cf</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX76FEEB2B06BD4146A91FBE77CBD959F7">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>1.00536192e-06</X>
										<Y>665</Y>
										<Z>299.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6599</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>2</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX924394E0D32C448BA5DC7BC15047E82B">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>1.50000095</X>
										<Y>665</Y>
										<Z>299.5</Z>
										<R00>-0</R00>
										<R01>8.74227766e-08</R01>
										<R02>-1</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>1</R21>
										<R22>8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65d0</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX08E14106CBB74D0E98448E311AD9A988">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>1.50000083</X>
										<Y>665</Y>
										<Z>298</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b659a</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>2</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBXCD5831D080054F8DAA3BF1B3B06EBC41">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>1.50000072</X>
										<Y>665</Y>
										<Z>296.5</Z>
										<R00>-0</R00>
										<R01>1</R01>
										<R02>8.74227766e-08</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>-0</R12>
										<R20>0</R20>
										<R21>-8.74227766e-08</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65d1</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXB72A4E2839B74A18BD988F4227EDCD7D">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>7.43093608e-07</X>
										<Y>665</Y>
										<Z>296.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b659b</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>2</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX290860DF519A43B8AE907205BC1E642F">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-1.49999928</X>
										<Y>665</Y>
										<Z>296.5</Z>
										<R00>-0</R00>
										<R01>-8.74227766e-08</R01>
										<R02>1</R02>
										<R10>-1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>-1</R21>
										<R22>-8.74227766e-08</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65d2</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXF437C7F680EF4CB0A8827D399B909231">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-1.49999917</X>
										<Y>665</Y>
										<Z>298</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>-8.74227766e-08</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>8.74227766e-08</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b659c</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>2</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Model" referent="RBX928E551AB1E546D1B515B279AB826FDD">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">PartTemplate</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b652c</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>7.49999952</X>
										<Y>665</Y>
										<Z>280.5</Z>
										<R00>-0.707106709</R00>
										<R01>0</R01>
										<R02>-0.707106829</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0.707106829</R20>
										<R21>0</R21>
										<R22>-0.707106709</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="CornerWedgePart" referent="RBXE4503BC36BBE49AA97B557AB20AD37A3">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>4.67156935</X>
										<Y>665</Y>
										<Z>283.32843</Z>
										<R00>-0.707106709</R00>
										<R01>0</R01>
										<R02>-0.707106829</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0.707106829</R20>
										<R21>0</R21>
										<R22>-0.707106709</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">CornerWedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6513</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="WedgePart" referent="RBX3A5CA68874B34D93A02177E8B4C27612">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>6.08578444</X>
										<Y>665</Y>
										<Z>281.914215</Z>
										<R00>0.707106829</R00>
										<R01>0</R01>
										<R02>-0.707106709</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0.707106709</R20>
										<R21>0</R21>
										<R22>0.707106829</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Wedge</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65d3</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX82682C5660934B9D9D4CF8D62C2F4569">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>7.49999952</X>
										<Y>665</Y>
										<Z>280.5</Z>
										<R00>-0.707106709</R00>
										<R01>0</R01>
										<R02>-0.707106829</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0.707106829</R20>
										<R21>0</R21>
										<R22>-0.707106709</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b659d</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">0</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXF2DA6643D0A34461A2111767043BF449">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>8.91421413</X>
										<Y>665</Y>
										<Z>279.085785</Z>
										<R00>0</R00>
										<R01>0.707106709</R01>
										<R02>-0.707106829</R02>
										<R10>1</R10>
										<R11>0</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>-0.707106829</R21>
										<R22>-0.707106709</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b659e</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">2</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX5B99426D45494BD8B7E1C36961B5B61D">
								<Properties>
									<bool name="Anchored">true</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>10.3284292</X>
										<Y>665</Y>
										<Z>277.67157</Z>
										<R00>-0.707106709</R00>
										<R01>0</R01>
										<R02>-0.707106829</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0.707106829</R20>
										<R21>0</R21>
										<R22>-0.707106709</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4282193285</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.300000012</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b659f</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Part" referent="RBX084B476C3409400D8BC20BE9DE0B8EEF">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>0</X>
								<Y>659.500366</Y>
								<Z>288</Z>
								<R00>-0.707106709</R00>
								<R01>0</R01>
								<R02>-0.707106829</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0.707106829</R20>
								<R21>0</R21>
								<R22>-0.707106709</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4290019583</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">HolderThing</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.300000012</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b652e</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>12</X>
								<Y>2</Y>
								<Z>12</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBXEE586F2AD2EB465F8C7D693C6AFB9E63">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>0</X>
								<Y>661.500366</Y>
								<Z>288</Z>
								<R00>-0.923879445</R00>
								<R01>0</R01>
								<R02>-0.382683545</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0.382683545</R20>
								<R21>0</R21>
								<R22>-0.923879445</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">HolderThing</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.300000012</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b652d</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>20</X>
								<Y>2</Y>
								<Z>20</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX9D85F33FE98A4215BAF9003B78B66292">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>3.05175781e-05</X>
								<Y>656.500366</Y>
								<Z>288</Z>
								<R00>-0.382683307</R00>
								<R01>0</R01>
								<R02>-0.923879564</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0.923879564</R20>
								<R21>0</R21>
								<R22>-0.382683307</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4289832959</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">HolderThing</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.300000012</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b652f</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>4</X>
								<Y>4</Y>
								<Z>4</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX53C5C6EE63864EBE9EE44609117A356D">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>3.05175781e-05</X>
								<Y>637.500366</Y>
								<Z>288</Z>
								<R00>1.47027407e-07</R00>
								<R01>0</R01>
								<R02>-0.999999881</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0.999999881</R20>
								<R21>0</R21>
								<R22>1.47027407e-07</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4286626779</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">HolderThing</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.300000012</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b6530</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>2</X>
								<Y>34</Y>
								<Z>2</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="WedgePart" referent="RBX2AD9F729B4B8419EA2DFEAAEC2F7ACE0">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">3</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">3</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>0</X>
								<Y>619.5</Y>
								<Z>288</Z>
								<R00>-1</R00>
								<R01>-0</R01>
								<R02>8.74227766e-08</R02>
								<R10>0</R10>
								<R11>-1</R11>
								<R12>0</R12>
								<R20>8.74227766e-08</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4286626779</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">3</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">3</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">HolderThing</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.300000012</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">3</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b65d4</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<Vector3 name="size">
								<X>2</X>
								<Y>2</Y>
								<Z>2</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBXB84495931B754EDB93931599EB6564D1">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">3</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">3</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-5.1856432e-07</X>
							<Y>664.5</Y>
							<Z>281</Z>
							<R00>-1</R00>
							<R01>0</R01>
							<R02>-8.74227766e-08</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>8.74227766e-08</R20>
							<R21>0</R21>
							<R22>-1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4284622289</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">3</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">3</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">288</token>
						<string name="MaterialVariantSerialized"></string>
						<string name="Name">Spawn</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0.300000012</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">3</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b75e9</UniqueId>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>4</X>
							<Y>1</Y>
							<Z>4</Z>
						</Vector3>
					</Properties>
					<Item class="ParticleEmitter" referent="RBX94C617690E7F430BB7E5EAC884502D50">
						<Properties>
							<Vector3 name="Acceleration">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="AttributesSerialize">AQAAAA4AAABTaG93T25TaW11bGF0ZQMB</BinaryString>
							<float name="Brightness">2</float>
							<ColorSequence name="Color">0 0.384314 0.145098 0.819608 0 1 0.384314 0.145098 0.819608 0 </ColorSequence>
							<float name="Drag">0</float>
							<token name="EmissionDirection">1</token>
							<bool name="Enabled">true</bool>
							<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
							<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
							<token name="FlipbookLayout">0</token>
							<token name="FlipbookMode">0</token>
							<bool name="FlipbookStartRandom">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<NumberRange name="Lifetime">5 10 </NumberRange>
							<float name="LightEmission">1</float>
							<float name="LightInfluence">0</float>
							<bool name="LockedToPart">false</bool>
							<string name="Name">ParticleEmitter</string>
							<token name="Orientation">0</token>
							<float name="Rate">5</float>
							<NumberRange name="RotSpeed">0 0 </NumberRange>
							<NumberRange name="Rotation">0 0 </NumberRange>
							<token name="Shape">0</token>
							<token name="ShapeInOut">0</token>
							<float name="ShapePartial">1</float>
							<token name="ShapeStyle">0</token>
							<NumberSequence name="Size">0 0.05 0 1 0 0 </NumberSequence>
							<int64 name="SourceAssetId">-1</int64>
							<NumberRange name="Speed">1 1 </NumberRange>
							<Vector2 name="SpreadAngle">
								<X>15</X>
								<Y>15</Y>
							</Vector2>
							<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
							<BinaryString name="Tags"></BinaryString>
							<Content name="Texture"><url>rbxasset://textures/particles/sparkles_main.dds</url></Content>
							<float name="TimeScale">1</float>
							<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
							<UniqueId name="UniqueId">78aa06c01e61697f027658b4000cc0dd</UniqueId>
							<float name="VelocityInheritance">0</float>
							<float name="ZOffset">0</float>
						</Properties>
					</Item>
					<Item class="PointLight" referent="RBX360120085B2D494189FD607C825BF9B4">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="Brightness">10</float>
							<Color3 name="Color">
								<R>0.384313732</R>
								<G>0.145098045</G>
								<B>0.819607854</B>
							</Color3>
							<bool name="Enabled">true</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">PointLight</string>
							<float name="Range">6</float>
							<bool name="Shadows">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">78aa06c01e61697f027658b4000cc2c4</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX12DDBEC71F294E70A21BDEBC82D9C8A8">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">3</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">3</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-4.3114153e-07</X>
							<Y>664.5</Y>
							<Z>298</Z>
							<R00>-1</R00>
							<R01>0</R01>
							<R02>-8.74227766e-08</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>8.74227766e-08</R20>
							<R21>0</R21>
							<R22>-1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">3</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">3</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">288</token>
						<string name="MaterialVariantSerialized"></string>
						<string name="Name">Exit</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0.300000012</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">3</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b7f2a</UniqueId>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>2</X>
							<Y>1</Y>
							<Z>2</Z>
						</Vector3>
					</Properties>
					<Item class="Attachment" referent="RBX961114E6A140429393653CF028C0ABCC">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<CoordinateFrame name="CFrame">
								<X>0</X>
								<Y>2</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Attachment1</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b97fd</UniqueId>
							<bool name="Visible">false</bool>
						</Properties>
					</Item>
					<Item class="Attachment" referent="RBXF739856360D6481491659736D4653FD6">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<CoordinateFrame name="CFrame">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Attachment0</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b97fe</UniqueId>
							<bool name="Visible">false</bool>
						</Properties>
					</Item>
					<Item class="Beam" referent="RBX92ED4A57B0FF49C3BC8E9377DB3DE863">
						<Properties>
							<Ref name="Attachment0">RBXF739856360D6481491659736D4653FD6</Ref>
							<Ref name="Attachment1">RBX961114E6A140429393653CF028C0ABCC</Ref>
							<BinaryString name="AttributesSerialize">AQAAAA4AAABTaG93T25TaW11bGF0ZQMB</BinaryString>
							<float name="Brightness">2</float>
							<ColorSequence name="Color">0 0 1 0 0 1 0 1 0 0 </ColorSequence>
							<float name="CurveSize0">0</float>
							<float name="CurveSize1">0</float>
							<bool name="Enabled">true</bool>
							<bool name="FaceCamera">true</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LightEmission">1</float>
							<float name="LightInfluence">0</float>
							<string name="Name">Beam</string>
							<int name="Segments">10</int>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="Texture"><null></null></Content>
							<float name="TextureLength">1</float>
							<token name="TextureMode">0</token>
							<float name="TextureSpeed">1</float>
							<NumberSequence name="Transparency">0 0 0 1 1 0 </NumberSequence>
							<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b97fc</UniqueId>
							<float name="Width0">1</float>
							<float name="Width1">3</float>
							<float name="ZOffset">0</float>
						</Properties>
					</Item>
					<Item class="ParticleEmitter" referent="RBX8D34DFD5F4914DE4A85480999215D957">
						<Properties>
							<Vector3 name="Acceleration">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="AttributesSerialize">AQAAAA4AAABTaG93T25TaW11bGF0ZQMB</BinaryString>
							<float name="Brightness">2</float>
							<ColorSequence name="Color">0 0 1 0 0 1 0 1 0 0 </ColorSequence>
							<float name="Drag">0</float>
							<token name="EmissionDirection">1</token>
							<bool name="Enabled">true</bool>
							<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
							<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
							<token name="FlipbookLayout">0</token>
							<token name="FlipbookMode">0</token>
							<bool name="FlipbookStartRandom">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<NumberRange name="Lifetime">5 10 </NumberRange>
							<float name="LightEmission">1</float>
							<float name="LightInfluence">0</float>
							<bool name="LockedToPart">false</bool>
							<string name="Name">ParticleEmitter</string>
							<token name="Orientation">0</token>
							<float name="Rate">5</float>
							<NumberRange name="RotSpeed">0 0 </NumberRange>
							<NumberRange name="Rotation">0 0 </NumberRange>
							<token name="Shape">0</token>
							<token name="ShapeInOut">0</token>
							<float name="ShapePartial">1</float>
							<token name="ShapeStyle">0</token>
							<NumberSequence name="Size">0 0.05 0 1 0 0 </NumberSequence>
							<int64 name="SourceAssetId">-1</int64>
							<NumberRange name="Speed">1 1 </NumberRange>
							<Vector2 name="SpreadAngle">
								<X>15</X>
								<Y>15</Y>
							</Vector2>
							<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
							<BinaryString name="Tags"></BinaryString>
							<Content name="Texture"><url>rbxasset://textures/particles/sparkles_main.dds</url></Content>
							<float name="TimeScale">1</float>
							<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
							<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b97ff</UniqueId>
							<float name="VelocityInheritance">0</float>
							<float name="ZOffset">0</float>
						</Properties>
					</Item>
					<Item class="PointLight" referent="RBX4DBAC014CF08415EBEA6315A4E90F291">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="Brightness">10</float>
							<Color3 name="Color">
								<R>0</R>
								<G>1</G>
								<B>0</B>
							</Color3>
							<bool name="Enabled">true</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">PointLight</string>
							<float name="Range">4</float>
							<bool name="Shadows">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">78aa06c01e61697f027658b4000ba4f7</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX6D5BEEAD8D2B415D8063FD88C178BBE8">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Interactives</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b8a84</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX91EFE96468BC4F6A83B89568C47F9462">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Launcher</string>
						<string name="ScriptGuid">{95CD26EA-39CA-40A9-9709-F91EF23228ED}</string>
						<ProtectedString name="Source"><![CDATA[--[[
Map implemented subclass of "MapLauncher"
]]--

return require(
	game:GetService("ReplicatedStorage")
	:WaitForChild("Modules")
	:WaitForChild("MapHandles")
	:WaitForChild("DefaultWinLauncher")
)]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">78aa06c01e61697f027658b4000b8b35</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX2CD30191445C4A5BB90D4EAADF43F24B">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">DefaultLighting</string>
						<string name="ScriptGuid">{2BA1CD90-73E6-44DB-9E6F-097609CAC3A4}</string>
						<ProtectedString name="Source"><![CDATA[return {
	Properties = {
		ClockTime = 0
	}
}]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">78aa06c01e61697f027658b4000ce154</UniqueId>
					</Properties>
				</Item>
				<Item class="Sound" referent="RBX116CFC366CA54CC5BAFE98C441AF027F">
					<Properties>
						<BinaryString name="AttributesSerialize"><![CDATA[BAAAAAsAAABBdHRyaWJ1dGlvbgIaAAAAQnVybiAtIERKIEhZQlJJRCAtIERlamEgVnUIAAAA
UHJpb3JpdHkFAAAAAAkAAABTdGFydFRpbWUFAAAAAAwAAABUYXJnZXRWb2x1bWUGAAAAAAAA
8D8=]]></BinaryString>
						<float name="EmitterSize">10</float>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<NumberRange name="LoopRegion">0 60000 </NumberRange>
						<bool name="Looped">true</bool>
						<string name="Name">WinMusic</string>
						<bool name="PlayOnRemove">false</bool>
						<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
						<bool name="PlaybackRegionsEnabled">false</bool>
						<float name="PlaybackSpeed">1</float>
						<bool name="Playing">false</bool>
						<token name="RollOffMode">0</token>
						<Ref name="SoundGroup">null</Ref>
						<Content name="SoundId"><url>rbxassetid://1837001614</url></Content>
						<int64 name="SourceAssetId">1837001614</int64>
						<BinaryString name="Tags"></BinaryString>
						<double name="TimePosition">0</double>
						<UniqueId name="UniqueId">1a48727e5cdfb5c302a5e0d0000bb79d</UniqueId>
						<float name="Volume">0.5</float>
						<float name="xmlRead_MaxDistance_3">10000</float>
					</Properties>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="LuaWebService" referent="RBXF4ABC4A05A0E44388999D6DAB34E481A">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182e3</UniqueId>
		</Properties>
	</Item>
	<Item class="ProcessInstancePhysicsService" referent="RBX5F3F185767D24515A9FC58D7094D4A3B">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ProcessInstancePhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000182e7</UniqueId>
		</Properties>
	</Item>
	<Item class="LanguageService" referent="RBX08C674FDFF1A435CBE4C7BAF75BD2709">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LanguageService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000188f2</UniqueId>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBXF4C3D99D53E74EA59125CA187D113297">
		<Properties>
			<Color3 name="Ambient">
				<R>0.274509817</R>
				<G>0.274509817</G>
				<B>0.274509817</B>
			</Color3>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<float name="Brightness">3</float>
			<Color3 name="ColorShift_Bottom">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<Color3 name="ColorShift_Top">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<float name="EnvironmentDiffuseScale">1</float>
			<float name="EnvironmentSpecularScale">1</float>
			<float name="ExposureCompensation">0</float>
			<Color3 name="FogColor">
				<R>0.752941251</R>
				<G>0.752941251</G>
				<B>0.752941251</B>
			</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">0</float>
			<bool name="GlobalShadows">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">
				<R>0.274509817</R>
				<G>0.274509817</G>
				<B>0.274509817</B>
			</Color3>
			<bool name="Outlines">false</bool>
			<float name="ShadowSoftness">0.200000003</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<token name="Technology">1</token>
			<string name="TimeOfDay">14:30:00</string>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018302</UniqueId>
		</Properties>
	</Item>
	<Item class="LodDataService" referent="RBXA04F07A169EF4EA39BF6D11E4E28E09F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">616d7e113bd3ed1901b711b10001a101</UniqueId>
		</Properties>
	</Item>
	<Item class="DataStoreService" referent="RBX63EE4CF8E9D44A4F91ABBF3E0AC51E37">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutomaticRetry">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LegacyNamingScheme">false</bool>
			<string name="Name">DataStoreService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000018856</UniqueId>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBX11F2C34CF31F4EB7BB87EA9E96F9711E">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="HttpEnabled">true</bool>
			<string name="Name">HttpService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd20000188e5</UniqueId>
		</Properties>
	</Item>
	<Item class="ProximityPromptService" referent="RBX7359DC017EE8486D9A11BBD247B32AC4">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="Enabled">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxPromptsVisible">16</int>
			<string name="Name">ProximityPromptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd200001912d</UniqueId>
		</Properties>
	</Item>
	<Item class="Teams" referent="RBX5B64CC910B7E4383AED87F82DC9E05D0">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Teams</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000019249</UniqueId>
		</Properties>
	</Item>
	<Item class="TestService" referent="RBXA429313BDA9341478AD391FE9335B717">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoRuns">true</bool>
			<string name="Description"></string>
			<bool name="ExecuteWithStudioRun">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="Is30FpsThrottleEnabled">true</bool>
			<bool name="IsPhysicsEnvironmentalThrottled">true</bool>
			<bool name="IsSleepAllowed">true</bool>
			<string name="Name">TestService</string>
			<int name="NumberOfPlayers">0</int>
			<double name="SimulateSecondsLag">0</double>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<double name="Timeout">10</double>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd200001924b</UniqueId>
		</Properties>
	</Item>
	<Item class="VirtualInputManager" referent="RBX598AD1F6387143B78B5A6ACE0046D42F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VirtualInputManager</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0ee705e8faf759c20180fd2000019272</UniqueId>
		</Properties>
	</Item>
	<SharedStrings>
		<SharedString md5="yuZpQdnvvUBOTYh1jqZ2cA=="></SharedString>
	</SharedStrings>
</roblox>